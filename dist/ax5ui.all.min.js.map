{"version":3,"sources":["ax5ui.all.min.js","ax5-core.js","ax5-def.js","ax5-error-msg.js","ax5-polyfill.js","ax5-ui.js","mustache.js","ax5dialog.js","ax5dialog-tmpl.js","ax5mask.js","ax5mask-tmpl.js","ax5toast.js","ax5toast-tmpl.js","ax5modal.js","ax5modal-tmpl.js","ax5calendar.js","ax5calendar-tmpl.js","ax5picker.js","ax5ui-picker-tmpl.js","ax5formatter.js","ax5formatter-formatter.js","ax5menu.js","ax5menu-tmpl.js","ax5select.js","ax5select-tmpl.js","ax5grid.js","ax5grid-body.js","ax5grid-collector.js","ax5grid-data.js","ax5grid-excel.js","ax5grid-formatter.js","ax5grid-header.js","ax5grid-inline-editor.js","ax5grid-page.js","ax5grid-scroller.js","ax5grid-tmpl.js","ax5grid-util.js","ax5media-viewer.js","ax5media-viewer-tmpl.js","ax5uploader.js","ax5uploader-tmpl.js","ax5combobox.js","ax5combobox-tmpl.js","ax5combobox-util.js","ax5layout.js","ax5binder.js","ax5autocomplete.js","ax5autocomplete-tmpl.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","info","U","root","this","win","doc","document","reIsJson","documentElement","reMs","reSnakeCase","reCamelCase","reDot","reInt","reNotNum","reMoneySplit","RegExp","reAmp","reEq","reClassNameSplit","ax5","guid","getGuid","urlUtil","url","urls","href","location","param","search","referrer","pathname","hostname","port","split","replace","hashdata","last","baseUrl","left","getError","className","errorCode","methodName","errorMsg","msg","version","onerror","console","error","toArray","arguments","join","eventKeys","BACKSPACE","TAB","RETURN","ESC","LEFT","UP","RIGHT","DOWN","DELETE","HOME","END","PAGEUP","PAGEDOWN","INSERT","SPACE","weekNames","label","browser","ua","mobile","browserName","match","browserVersion","navigator","userAgent","toLowerCase","name","exec","indexOf","isBrowser","window","wheelEnm","test","supportTouch","maxTouchPoints","msMaxTouchPoints","supportFileApi","FileReader","File","FileList","Blob","each","O","_fn","isNothing","key","i","l","length","isObj","undefined","call","map","fnResult","results","isObject","push","isFunction","sum","defaultValue","tokenValue","isArray","avg","reduce","tokenItem","reduceRight","filter","k","toJson","jsonString","util","jsonObjectBody","value","isString","isNumber","isUndefined","parseJson","str","force","Function","e","getType","typeName","nodeType","_toString","isWindow","isElement","isNodelist","isDate","Date","isNaN","valueOf","isDateFormat","result","date","mm","substr","dd","getMonth","getDate","first","keys","Object","item","setCookie","cn","cv","exdays","opts","expire","setDate","cookie","escape","toUTCString","path","domain","secure","getCookie","cname","ca","c","charAt","substring","unescape","alert","pos","right","lastIndexOf","camelCase","all","letter","toUpperCase","snakeCase","number","cond","pair","isMinus","Number","returnValue","Math","round","abs","floor","ceil","val","txtNumber","arrNumber","nUnit","myByte","Array","slice","merge","second","j","p","v","encode","s","encodeURIComponent","decode","decodeURIComponent","apply","localDate","yy","hh","mi","ss","utcD","localD","UTC","getUTCHours","getTimezoneOffset","setUTCHours","d","aDateTime","aTimes","aTime","aDate","va","ISO_8601","ISO_8601_FULL","parseFloat","_d","mxdd","DyMilli","setTime","getTime","getFullYear","parseInt","daysOfMonth","processor","firstDayOfMonth","lastDayOfMonth","nY","nM","nD","nH","nMM","nS","nDW","fStr","getUTCFullYear","setDigit","getHours","getMinutes","getSeconds","getDay","yre","regY","$1","mre","regM","dre","regD","hre","regH","mire","regMI","sre","regS","dwre","regDW","dday","getDayTime","diffnum","thisYearMemoryDay","memoryDay","today","weeksOfMonth","myDate","year","month","count","y","m","num","padder","radix","toString","times","findParentNode","_target","parentNode","tagName","toLocaleLowerCase","klasss","hasClass","a","getAttribute","cssNumber","re","found","unit","css","returns","valSplited","forEach","trim","vSplited","stopEvent","event","cancelBubble","stopPropagation","preventDefault","deepCopy","r","jQuery","extend","escapeHtml","unescapeHtml","string","_string","ax5string","format","args","concat","_pos","selectRange","textRange","selectAll","el","range","offset","arr","moveStart","collapse","moveEnd","start","end","text","selectNodeContents","setStart","node","setEnd","firstChild","rangeType","selection","get","body","createTextRange","moveToElementText","getSelection","createRange","select","focus","removeAllRanges","addRange","debounce","func","wait","immediately","timeout","removeTimeout","debounced","clearTimeout","setTimeout","bind","cancel","module","exports","def","501","401","402","460","461","re_trim","hwp","hasOwnProperty","hdeb","propertyIsEnumerable","de","del","TypeError","prop","fun","t","len","thisp","o","nop","self","bound","querySelectorAll","querySelector","createStyleSheet","style","selector","maxCount","resultSet","addRule","currentStyle","foo","removeRule","Infinity","String","JSON","parse","sJSON","stringify","f","vContent","splice","documentMode","_splice","_slice","begin","size","cloned","max","upTo","min","con","method","empty","dummy","properties","methods","pop","webkitMatchMedia","mozMatchMedia","oMatchMedia","msMatchMedia","matchMedia","getElementsByTagName","styleMedia","media","createElement","script","type","id","insertBefore","getComputedStyle","matchMedium","styleSheet","cssText","textContent","width","matches","addListener","localMatchMedia","hasMediaQueries","isListening","timeoutID","queries","handleChange","evt","il","mql","listeners","jl","index","listener","addEventListener","removeListener","ui","axUi","config","setConfig","cfg","callInit","init","log","bindWindowResize","callBack","resize","bindWindowResize__","main","addClass","cls","classStore","factory","arg","initInstance","instance","instanceId","initPrototype","superClass","wrapper","global","mustache","object","typeStr","escapeRegExp","hasProperty","propName","testRegExp","regExpTest","isWhitespace","nonSpaceRe","entityMap","parseTemplate","template","tags","stripSpace","hasTag","nonSpace","spaces","tokens","compileTags","tagsToCompile","spaceRe","Error","openingTagRe","closingTagRe","closingCurlyRe","sections","chr","token","openSection","scanner","Scanner","eos","scanUntil","valueLength","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","tail","Context","view","parentContext","cache",".","@each","@key","@value","parent","Writer","objectToString","&","<",">","\"","'","/","lookup","names","context","lookupHit","clearCache","render","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","defaultWriter","to_html","send","DIALOG","UI","ax5dialog","clickEventName","theme","title","lang","ok","animateTime","activeDialog","onStateChanged","that","getContent","dialogId","data","input","btns","_crlf","tmpl","open","callback","box","append","height","position","top","zIndex","dialogType","find","on","btnOnClick","onKeyup","align","state","dialogConfig","innerHeight","innerWidth","target","srcElement","btnTarget","emptyKey","oi","onClick","close","doNotCallback","keyCode","tryCount","confirm","prompt","_option","unbind","remove","dialog_instance","dialog","dialogDisplay","columnKeys","tmplName","MASK","ax5mask","maskContent","status","getBodyTmpl","templateName","setBody","content","options","maskConfig","$mask","_cfg","$target","maskId","outerWidth","outerHeight","_$target","_delay","_this2","_close","removeClass","fadeOut","_this3","pullRequest","mask_instance","mask","defaultMask","TOAST","ax5toast","toastSeq","toastSeqClear","icon","closeIcon","displayTime","containerPosition","toastContainer","queue","toastId","toastBox","containerId","prepend","toastType","btn_target","styles","toast_instance","toast","toastDisplay","MODAL","ax5modal","ENM","mousedown","mousemove","mouseup","getMousePosition","mouseObj","changedTouches","clientX","clientY","margin","minimizePosition","closeToEsc","disableDrag","activeModal","watingModal","$","modalId","header","fullScreen","iframe","iframeLoadingMsg","absolute","attr","action","hide","show","submit","onkeyup","isFullScreen","isButton","mousePosition","moveModal","alignProcessor","top-left","top-right","bottom-left","bottom-right","center-middle","modalZIndex","modalOffset","modalBox","windowBox","getResizerPosition","__dx","__dy","minX","maxX","minY","maxY","scrollLeft","scrollTop","resizer","resizerBg","off","setModalPosition","removeAttr","modalConfig","$iframe","iframeObject","idoc","contentDocument","contentWindow","children","innerHTML","CollectGarbage","minimized","minimize","originalHeight","maximize","setModalConfig","_config","_fullScreen","headerHeight","modal_instance","modal","CALENDAR","ax5calendar","selectableCount","selectionMap","selectableMap","markerMap","printedDay","startOfWeek","mode","dateFormat","displayDate","dimensions","controlHeight","controlButtonWidth","colHeadHeight","itemPadding","yearHeading","monthHeading","yearTmpl","months","dayTmpl","multipleSelect","selectMode","defaultMarkerTheme","defaultPeriodTheme","getFrame","controlCSS","controlButtonCSS","setDisplay","yy1","yy2","control","monthTmpl","html","yearFirst","changeMode","printDay","nowDate","loopDate","_k","dotDate","monthStratDate","_today","tableStartDate","day","add","thisMonth","itemStyles","frameWidth","frameHeight","list","n","thisDate","return","_date","row","col","isStartOfWeek","thisDataLabel","classNames","selectable","onclick","printMonth","tableStartMonth","nMonth","colHeadLabel","_month","isStartOfRow","thisMonthLabel","printYear","tableStartYear","nYear","_year","thisYear","thisYearLabel","removed","dt","dateElement","move","applyMarkerMap","applySelectionMap","applyPeriodMap","periodMap","clearPeriodMap","control-display","setSelection","setSelectable","marker","setMarker","changeDate","isPrint","from","to","isApply","setPeriod","fromLabel","toLabel","period","calendar_instance","calendar","frameTmpl","PICKER","ax5picker","picker","date_leftArrow","date_yearTmpl","date_monthTmpl","date_rightArrow","activePicker","activePickerQueueIndex","openTimer","closeTimer","bindPickerTarget","pickerEvent","queIdx","click","pickerType","@fn","_input","inputLength","contentWidth","contentMargin","secure-num","keyboard","numpad","formatter","ax5formatter","alignPicker","_alignPicker","pickerDirection","$window","$body","positionMargin","dim","pickerDim","winWidth","winHeight","direction","positionCSS","activePickerArrow","onBodyClick","onBtnClick","onBodyKeyup","getQueIdx","boundID","pickerConfig","setContentValue","multipleInputProcessor","_item","_inputIndex","_val","diffDay","prevInputValue","nextInputValue","values","pickerCalendar","ax5uiInstance","inputIndex","disableChangeTrigger","trigger","pickerContent","calendarConfig","idx","dValue","itemId","po","numArray","x","random","specialArray","fn","btnWrapStyle","btnTheme","btnStyle","specialBtnTheme","act","keyArray","shiftValue","getKeyBoard","isShiftKey","keyValue","keyLabel","specialBtnWrapStyle","specialBtnStyle","$this","toggleShift","picker_instance","defaultConfig","pickerTmpl","FORMATTER","setSelectionRange","selectionStart","selectionEnd","formatterEvent","optIdx","$input","keydown","isStop","enterableKeyCodes","which","metaKey","ctrlKey","shiftKey","keyup","elemFocusPosition","beforeValue","newValue","selectionLength","elem","pattern","getPatternValue","blur","_force","removeData","bindFormatterTarget","matched","patternArgument","getEnterableKeyCodes","formatterConfig","formatting","formatter_instance","ctrlKeys","18","8","17","46","40","35","187","27","36","45","37","189","34","33","13","39","16","9","38","91","numKeys","48","49","50","51","52","53","54","55","56","57","96","97","98","99","100","101","102","103","104","105","pattern_money","_opts","188","eType","regExpPattern","maxRound","pattern_number","190","pattern_date","191","matchedPattern","inspectValue","inspect","Y","TODAY","M","D","dLen","h","b","nval","pattern_time","186","pattern_bizno","pattern_phone","regExpPattern3","pattern_credit","pattern_custom","money","time","bizno","phone","credit","custom","MENU","ax5menu","iconWidth","acceleratorWidth","menuBodyPadding","items","itemClickAndClose","menuBar","appEventAttach","active","menuId","clickItem","onLoad","popup","opt","depth","activeMenu","icons","divide","childOpt","_items","_activeMenu","@parent","element","check","setValue","checkbox","checked","radio","$document","wh","ww","w","getOption","pageY","updateTheme","filteringItem","attach","popUpChildMenu","openedIndex","opened","clickParentMenu","getCheckValue","checkItems","collectItem","menu_instance","menu","tmplMenubar","SELECT","ax5select","noSelected","noOptions","loading","multipleLabel","optionValue","optionText","optionSelected","activeSelectOptionGroup","activeSelectQueueIndex","waitOptionsCallback","keyUpTimer","xvar","onChange","alignSelectDisplay","$display","$select","minWidth","min-width","reset","line-height","alignSelectOptionGroup","newTop","clickEl","gindex","multiple","optionFocusIndex","$option","getLabel","labels","selected","optgroup","syncLabel","$displayLabel","focusWord","searchWord","indexedOptions","@findex","optionsSort","sort","focusMove","findex","_focusIndex","_prevFocusIndex","focusOptionEl","optionGroupScrollContainer","optionSelectedIndex","optionItemLength","focusOptionElHeight","optionGroupScrollContainerHeight","optionGroupScrollContainerScrollTop","focusOptionElTop","bindSelectTarget","focusWordCall","$displayInput","selectEvent","clear","keyUp","keyDown","selectChange","syncSelectOptions","tabIndex","formSize","setSelected","elementOptions","newOptions","focusIndex","OIndex","OO","OOIndex","option","selectConfig","onExpand","optionsMap","_O","_OIndex","focusTop","selectedOptionEl","waitOptions","stop","animate","update","getSelected","clearSelected","nn","optionIndex","internal","onClose","enable","disable","select_instance","optionGroupTmpl","selectTmpl","optionsTmpl","GRID","ax5grid","frozenColumnIndex","frozenRowIndex","showLineNumber","showRowSelector","columnMinWidth","lineNumberColumnWidth","rowSelectorColumnWidth","sortable","remoteSort","columnHeight","columnPadding","columnBorderWidth","grouping","rightSum","footSum","page","display","navigationItemCount","scroller","barMinSize","trackPadding","modified","deleted","disableSelection","bodyTrHeight","scrollContentWidth","scrollContentHeight","columns","colGroup","footSumColumns","bodyGrouping","selectedDataIndexs","deletedList","sortInfo","focusedColumn","selectedColumn","isInlineEditing","inlineEditing","headerTable","leftHeaderData","headerData","rightHeaderData","bodyRowTable","leftBodyRowData","bodyRowData","rightBodyRowData","bodyRowMap","bodyGroupingTable","leftBodyGroupingData","bodyGroupingData","rightBodyGroupingData","footSumTable","leftFootSumData","footSumData","needToPaintSum","initGrid","container","hidden","panel","aside-header","left-header","header-scroll","right-header","top-aside-body","top-left-body","top-body","top-body-scroll","top-right-body","aside-body","aside-body-scroll","left-body","left-body-scroll","body-scroll","right-body","right-body-scroll","bottom-aside-body","bottom-left-body","bottom-body","bottom-body-scroll","bottom-right-body","livePanelKeys","vertical","vertical-bar","horizontal","horizontal-bar","corner","navigation","form","clipboard","initColumns","_columns","makeHeaderTable","makeBodyRowTable","makeBodyRowMap","rows","colGroupMap","rl","cl","cols","colIndex","onResetColumns","resetColGroupWidth","initFootSum","initBodyGroup","alignGrid","repaint","computedWidth","CT_WIDTH","totalWidth","autoWidthColgroupIndexs","_width","_footSum","makeFootSumTable","_grouping","by","makeBodyGroupingTable","kl","orderBy","seq","fixed","sortFixed","_isFirst","verticalScrollerWidth","horizontalScrollerHeight","CT_HEIGHT","CT_INNER_WIDTH","CT_INNER_HEIGHT","asidePanelWidth","frozenPanelWidth","endIndex","rightPanelWidth","frozenRowHeight","footSumHeight","pageHeight","totalColGroupWidth","bodyWidth","bodyHeight","panelDisplayProcess","vPosition","hPosition","containerType","isHide","scrollerDisplayProcess","scrollerWidth","scrollerHeight","sortColumns","_sortInfo","initData","clearGroupingData","onDataChanged","grid","isPickerClick","focused","originalEvent","copySelect","KEY_UP","moveFocus","KEY_DOWN","KEY_LEFT","KEY_RIGHT","KEY_HOME","KEY_END","INLINE_EDIT","_e","inlineEdit","activeEditLength","columnKey","_act","_data","copysuccess","_rowIndex","_colIndex","_dindex","$clipBoard","copyTextArray","copyText","_di","_column","dindex","rowIndex","originalColumn","__isGrouping","innerText","execCommand","setData","set","navigationUpdate","scrollTo","getList","_type","setHeight","_height","offsetParent","addRow","_row","_options","removeRow","updateRow","repaintRow","deleteRow","_key","_value","repaintCell","_panelName","_rows","__dindex","__key","__value","addColumn","_cindex","removeColumn","updateColumn","setColumnWidth","columnResizerIndex","getColumnSortInfo","setColumnSort","applySortStatus","_selectObject","selectedClear","clearSelect","updateRowState","updateRowStateAll","exportExcel","_fileName","table","getExcelString","excel","_this4","selectedIndex","grid_instance","columnSelect","focusClear","panelName","column","editKey","colspan","selectedRange","deActive","trl","_panels","columnSelector","cell","_states","si","cellChecked","_state","targetClick","default","editor","getValue","trueValue","falseValue","editorConfig","rowSelector","internalCall","lineNumber","touchmoved","resetFrozenColumn","dividedBodyRowObj","divideTableByFrozenColumnIndex","asideBodyRowData","dataTable","rowspan","_col","columnAttr","leftData","rightData","dividedBodyGroupingObj","asideBodyGroupingData","dividedFootSumObj","getFieldValue","_list","_index","_returnPlainText","tagsToReplace","_editor","inlineEditor","editMode","disabled","getHtml","tag","getGroupingValue","_label","__groupingList","groupBy","__groupingBy","getSumFieldValue","_reset","paintStartRowIndex","dataRowCount","isFirstPaint","bodyAlign","paintRowCount","repaintBody","_elTargetKey","_colGroup","_bodyRow","_groupRow","_scrollConfig","_elTarget","SS","cgi","cgl","di","dl","tri","ci","cellHeight","colAlign","isScrolled","isGroupingRow","rowTable","_focusedColumn","_selectedColumn","attrs","tdCSS_class","styleClass","_cellHeight","lineHeight","multiLine","repaintSum","isFootSum","scrollConfig","asideColGroup","leftHeaderColGroup","headerColGroup","statusUpdate","_newValue","updateCell","updateWith","updateColumnKey","findPanelByColumnIndex","updateWithCell","replaceGroupTr","replaceTr","noRepaint","_position","UD","_dy","moveResult","while_i","nPanelInfo","LR","_dx","isScrollPanel","containerPanelName","$column","newLeft","INDEX","_initValue","useReturnToSave","originalValue","initValue","__editor","$inlineEditorCell","$inlineEditor","_msg","editorValue","CANCEL","__clear","bindedAx5ui","getBody","getSum","listLength","returnList","appendIndex","dataRealRowCount","groupingKeys","compareString","gi","gl","appendRow","ari","appendRowItem","ki","lastIndex","getRealPathForDataItem","_selected","sortInfoArray","getKeyValue","order","_a_val","_b_val","_a","_b","base64","btoa","uri","getExcelTmpl","tableToExcel","fileName","output","tables","worksheet","ti","isChrome","isSafari","isIE","msSaveOrOpenBlob","blob1","blankWindow","write","anchor","appendChild","download","removeChild","export","columnResizerEvent","_columnResizer","$columnResizer","columnResizerPositionLeft","gridTargetOffsetLeft","resizeRange","__da","columnResizerLived","toggleSort","dividedHeaderObj","asideHeaderData","headerAlign","repaintHeader","tableWidth","trCSS_class","_SS","enableFilter","resizerHeight","resizerLeft","AS","sortOrder","multiSort","getHeader","edit_text","_root","_columnKey","_$parent","$el","bindUI","_$el","edit_money","edit_number","edit_date","edit_select","eConfig","edit_checkbox","marginTop","onclickPageMove","_pageNo","currentPage","selectPage","prev","pageNo","next","totalPages","hasPage","pageSize","totalElements","firstIcon","prevIcon","nextIcon","lastIcon","startI","endI","fromRowIndex","toRowIndex","convertScrollPosition","_var","_content_height","_panel_height","_scroller_height","_vertical_scroller_height","verticalScrollBarHeight","_content_width","_panel_width","_scroller_width","_horizontal_scroller_width","horizontalScrollBarWidth","convertScrollBarPosition","_top","scrollPositon","_left","scrollBarMover","track","bar","moveout_timer","trackOffset","barBox","trackBox","getScrollerPosition","barOffset","scrollContentMover","wheel","delta","_body_scroll_position","_top_is_end","_left_is_end","getContentPosition","__x_da","__y_da","E","detail","deltaY","wheelDelta","deltaX","page_navigation","page_status","_table","_frozenColumnIndex","tempTable_l","tempTable_r","colStartIndex","colEndIndex","leftCol","rightCol","pageX","maekRows","parentField","field","selfMakeRow","__columns","_footSumColumns","footSumRow","addC","_bodyGroupingColumns","_containerPanelName","_isScrollPanel","_dataPath","_path","MEDIAVIEWER","ax5mediaViewer","src","poster","viewer","prevHandle","nextHandle","ratio","elementType","thumbnail","getSelectedIndex","selecteIndex","alignMediaList","thumbnailWidth","containerWidth","parentLeft","parentWidth","swipeMedia","getSwipePosition","__time","viewerWidth","nextIndex","viewer-holder","viewer-loading","list-holder","list-prev-handle","list-table","list-next-handle","$img","_img","mediaThumbnailWidth","mediaThumbnailHeight","mediaView","image","img","Image","onload","video","setMediaList","mediaViewer_instance","mediaViewer","frame","UPLOADER","ax5uploader","upload","abort","uploadedBox","uploadedName","uploadedPath","downloadPath","previewPath","accept","manualUpload","progressBox","defaultBtns","uploadedFiles","$inputContainer","$inputFile","$inputFileForm","$fileSelector","$dropZone","$uploadedBox","__uploading","selectedFiles","selectedFilesTotal","__loaded","bound_onStateChanged","bound_onSelectFile","_evt","files","dataTransfer","bound_openProgressBox","bound_alignLayout","bound_bindEvent","cellType","uploadedItemIndex","parents","fileIndex","contains","dropZone","ondragover","ondragout","ondrop","_TF","bound_alignProgressBox","_alignProgressBox","$progressBox","progressBoxDirection","$progressBoxArrow","viewport","$progressUpload","$progressAbort","bound_closeProgressBox","bound_startUpload","html5","uploadFile","shift","bound_uploadComplete","formData","FormData","xhr","XMLHttpRequest","res","response","debug","onuploaderror","bound_uploaded","onprogress","bound_updateProgressBar","loaded","total","load","filesTotal","$progressBar","lengthComputable","bound_repaintUploadedBox","onuploaded","onuploadComplete","bound_attachFileTag","bound_cancelUpload","validateSelectedFiles","setUploadedFiles","_files","removeFile","removeFileAll","selectFile","uploader_instance","uploader","uploadProgress","inputFile","inputFileForm","upoadedBox","byte","COMBOBOX","ax5combobox","removeIcon","activecomboboxOptionGroup","activecomboboxQueueIndex","alignComboboxDisplay","displayTableHeightAdjust","displayTableHeight","$displayTable","alignComboboxOptionGroup","setOptionSelect","hasSelected","printLabel","$displayLabelInput","before","focusLabel","clearLabel","blurLabel","onSearch","syncComboboxOptions","regExp","@gindex","@index","setValueType","addOptions","addedOption","noStateChange","bindComboboxTarget","debouncedFocusWord","comboboxEvent","disableCtrlKeys","comboboxConfig","_boundID","_values","setText","_text","getSelectedOption","combobox","combobox_instance","optionGroup","comboboxDisplay","formSelect","formSelectOptions","nodeTypeProcessor","1","editable","textNode","3","ax5layout","splitter","autoResize","alignLayoutAll","parentQueIdx","alignLayout","getDockPanelOuterSize","__width","__height","getPixel","parentSize","beforeSetCSS","panelIndex","splitPanel","asteriskLength","setCSS","$splitter","bottom","targetDimension","dockPanel","center","minHeight","withoutAsteriskSize","windowResize","prevPosition","offsetEnd","offsetStart","layoutProcessor","dock-panel","split-panel","orientation","childResize","childQueIdxs","layout","onResize","resizeSplitter","splitterOffset","splitterBox","maxWidth","maxHeight","prevPanel","nextPanel","prePanelMinHeight","nextPanelMinHeight","prePanelMinWidth","nextPanelMinWidth","resizerType","setPanelSize","tab-panel","tabControl","activePanelIndex","tabPanel","onOpenTab","activePanel","getTabLabesTmpl","bindLayoutTarget","applyLayout","panelInfo","dock","ELIndex","hasActivePanel","hooksResizeLayout","childQueIdx","UIConfig","resizeLayoutPanel","resizeOption","resetLayoutPanel","tabOpen","layout_instance","ax5binder","model","view_target","change_trigger","click_trigger","update_trigger","get_type","get_mix_path","dataPath","item_path","get_real_path","setModel","_binding","obj_type","this_type","_this","set_els_value","__ADDED__","fragdom","bind_event_tmpl","change","repeat_path","remove_item","__DELETED__","print_tmpl","childAdd","child_path","child_item","childRemove","child_index","childUpdate","childSet","onUpdate","isupdate","dom","repeat_idx","hasItem","new_value","origin_value","value_type","setAllow","jquery","tagname","tk","ix","callChange","vi","option_matched","AXSelect","bindSelectSetValue","sync_model","isInit","isPlainObject","@i","item_index","mix_path","validate","errors","is_validate","is_error","AUTOCOMPLETE","ax5autocomplete","activeautocompleteOptionGroup","activeautocompleteQueueIndex","alignAutocompleteDisplay","alignAutocompleteOptionGroup","nindex","collect_options","removeSelectedIndex","newSelectedArray","pushOk","appendOk","bindAutocompleteTarget","autocompleteEvent","removeIndex","inputValue","autocompleteConfig","autocomplete","autocomplete_instance","autocompleteDisplay"],"mappings":"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","file":"ax5ui.all.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n    'use strict';\n\n    // root of function\n\n    var root = this,\n        win = this;\n    var doc = win ? win.document : null,\n        docElem = win ? win.document.documentElement : null;\n    var reIsJson = /^([\"'](\\\\.|[^\"\\\\\\n\\r])*?[\"']|[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t])+?$/,\n        reMs = /^-ms-/,\n        reSnakeCase = /[\\-_]([\\da-z])/gi,\n        reCamelCase = /([A-Z])/g,\n        reDot = /\\./,\n        reInt = /[-|+]?[\\D]/gi,\n        reNotNum = /\\D/gi,\n        reMoneySplit = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n        reAmp = /&/g,\n        reEq = /=/,\n        reClassNameSplit = /[ ]+/g,\n\n\n    /** @namespace {Object} ax5 */\n    ax5 = {},\n        info,\n        U,\n        dom;\n\n    /**\n     * guid\n     * @member {Number} ax5.guid\n     */\n    ax5.guid = 1;\n    /**\n     * ax5.guid를 구하고 증가시킵니다.\n     * @method ax5.getGuid\n     * @returns {Number} guid\n     */\n    ax5.getGuid = function () {\n        return ax5.guid++;\n    };\n\n    /**\n     * 상수모음\n     * @namespace ax5.info\n     */\n    ax5.info = info = function () {\n        /**\n         * ax5 version\n         * @member {String} ax5.info.version\n         */\n        var version = \"1.3.66\";\n\n        /**\n         * ax5 library path\n         * @member {String} ax5.info.baseUrl\n         */\n        var baseUrl = \"\";\n\n        /**\n         * ax5 에러 출력메세지 사용자 재 정의\n         * @member {Object} ax5.info.onerror\n         * @examples\n         * ```\n         * ax5.info.onerror = function(){\n        *  console.log(arguments);\n        * }\n         * ```\n         */\n        var onerror = function onerror() {\n            console.error(U.toArray(arguments).join(\":\"));\n        };\n\n        /**\n         * event keyCodes\n         * @member {Object} ax5.info.eventKeys\n         * @example\n         * ```\n         * {\n        * \tBACKSPACE: 8, TAB: 9,\n        * \tRETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n        * \tHOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n        * }\n         * ```\n         */\n        var eventKeys = {\n            BACKSPACE: 8, TAB: 9,\n            RETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n            HOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n        };\n\n        /**\n         * week names\n         * @member {Object[]} weekNames\n         * @member {string} weekNames[].label\n         *\n         * @example\n         * ```\n         * [\n         *  {label: \"SUN\"},{label: \"MON\"},{label: \"TUE\"},{label: \"WED\"},{label: \"THU\"},{label: \"FRI\"},{label: \"SAT\"}\n         * ]\n         * console.log( weekNames[0] );\n         * console.log( ax5.info.weekNames[(new Date()).getDay()].label )\n         * ```\n         */\n        var weekNames = [{ label: \"SUN\" }, { label: \"MON\" }, { label: \"TUE\" }, { label: \"WED\" }, { label: \"THU\" }, { label: \"FRI\" }, { label: \"SAT\" }];\n\n        /**\n         * 사용자 브라우저 식별용 오브젝트\n         * @member {Object} ax5.info.browser\n         * @example\n         * ```\n         * console.log( ax5.info.browser );\n         * //Object {name: \"chrome\", version: \"39.0.2171.71\", mobile: false}\n         * ```\n         */\n        var browser = function (ua, mobile, browserName, match, browser, browserVersion) {\n            if (!win || !win.navigator) return {};\n\n            ua = navigator.userAgent.toLowerCase(), mobile = ua.search(/mobile/g) != -1, browserName, match, browser, browserVersion;\n\n            if (ua.search(/iphone/g) != -1) {\n                return { name: \"iphone\", version: 0, mobile: true };\n            } else if (ua.search(/ipad/g) != -1) {\n                return { name: \"ipad\", version: 0, mobile: true };\n            } else if (ua.search(/android/g) != -1) {\n                match = /(android)[ \\/]([\\w.]+)/.exec(ua) || [];\n                browserVersion = match[2] || \"0\";\n                return { name: \"android\", version: browserVersion, mobile: mobile };\n            } else {\n                browserName = \"\";\n                match = /(opr)[ \\/]([\\w.]+)/.exec(ua) || /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n                browser = match[1] || \"\";\n                browserVersion = match[2] || \"0\";\n\n                if (browser == \"msie\") browser = \"ie\";\n                return {\n                    name: browser,\n                    version: browserVersion,\n                    mobile: mobile\n                };\n            }\n            ua = null, mobile = null, browserName = null, match = null, browser = null, browserVersion = null;\n        }();\n\n        /**\n         * 브라우저 여부\n         * @member {Boolean} ax5.info.isBrowser\n         */\n        var isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && win.document);\n\n        /**\n         * 브라우저에 따른 마우스 휠 이벤트이름\n         * @member {Object} ax5.info.wheelEnm\n         */\n        var wheelEnm = win && /Firefox/i.test(navigator.userAgent) ? \"DOMMouseScroll\" : \"mousewheel\";\n\n        /**\n         * 첫번째 자리수 동사 - (필요한것이 없을때 : 4, 실행오류 : 5)\n         * 두번째 자리수 목적어 - 문자열 0, 숫자 1, 배열 2, 오브젝트 3, 함수 4, DOM 5, 파일 6, 기타 7\n         * 세번째 자리수 옵션\n         * @member {Object} ax5.info.errorMsg\n         */\n        var errorMsg = {};\n\n        /**\n         * 현재 페이지의 Url 정보를 리턴합니다.\n         * @method ax5.info.urlUtil\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.util.toJson( ax5.info.urlUtil() ) );\n         * {\n        *\t\"baseUrl\": \"http://ax5:2018\",\n        *\t\"href\": \"http://ax5:2018/samples/index.html?a=1&b=1#abc\",\n        *\t\"param\": \"a=1&b=1\",\n        *\t\"referrer\": \"\",\n        *\t\"pathname\": \"/samples/index.html\",\n        *\t\"hostname\": \"ax5\",\n        *\t\"port\": \"2018\",\n        *\t\"url\": \"http://ax5:2018/samples/index.html\",\n        *\t\"hashdata\": \"abc\"\n        * }\n         * ```\n         */\n        function urlUtil(url, urls) {\n            url = {\n                href: win.location.href,\n                param: win.location.search,\n                referrer: doc.referrer,\n                pathname: win.location.pathname,\n                hostname: win.location.hostname,\n                port: win.location.port\n            }, urls = url.href.split(/[\\?#]/);\n            url.param = url.param.replace(\"?\", \"\");\n            url.url = urls[0];\n            if (url.href.search(\"#\") > -1) {\n                url.hashdata = U.last(urls);\n            }\n            urls = null;\n            url.baseUrl = U.left(url.href, \"?\").replace(url.pathname, \"\");\n            return url;\n        }\n\n        /**\n         * ax5-error-msg.js 에 정의된 ax5 error를 반환합니다.\n         * @method ax5.info.getError\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.info.getError(\"single-uploader\", \"460\", \"upload\") );\n         *\n         * if(!this.selectedFile){\n        *      if (cfg.onEvent) {\n        *      \tvar that = {\n        *      \t\taction: \"error\",\n        *      \t\terror: ax5.info.getError(\"single-uploader\", \"460\", \"upload\")\n        *      \t};\n        *      \tcfg.onEvent.call(that, that);\n        *      }\n        *      return this;\n        * }\n         * ```\n         */\n        function getError(className, errorCode, methodName) {\n            if (info.errorMsg && info.errorMsg[className]) {\n                return {\n                    className: className,\n                    errorCode: errorCode,\n                    methodName: methodName,\n                    msg: info.errorMsg[className][errorCode]\n                };\n            } else {\n                return { className: className, errorCode: errorCode, methodName: methodName };\n            }\n        }\n\n        /**\n         * 브라우져의 터치 기능 유무를 확인합니다.\n         * @method ax5.info.supportTouch\n         * @returns {boolean}\n         * @example\n         * ```\n         * var chkFlag = ax5.info.supportTouch;\n         */\n        var supportTouch = win ? 'ontouchstart' in win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 : false;\n\n        var supportFileApi = win ? win.FileReader && win.File && win.FileList && win.Blob : false;\n\n        return {\n            errorMsg: errorMsg,\n            version: version,\n            baseUrl: baseUrl,\n            onerror: onerror,\n            eventKeys: eventKeys,\n            weekNames: weekNames,\n            browser: browser,\n            isBrowser: isBrowser,\n            supportTouch: supportTouch,\n            supportFileApi: supportFileApi,\n            wheelEnm: wheelEnm,\n            urlUtil: urlUtil,\n            getError: getError\n        };\n    }();\n\n    /**\n     * Refer to this by {@link ax5}.\n     * @namespace ax5.util\n     */\n    ax5['util'] = U = function () {\n        var _toString = Object.prototype.toString;\n\n        /**\n         * Object나 Array의 아이템으로 사용자 함수를 호출합니다.\n         * @method ax5.util.each\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * axf.each([0,1,2], function(){\n        * \t// with this\n        * });\n         * axf.each({a:1, b:2}, function(){\n        * \t// with this\n        * });\n         * ```\n         */\n        function each(O, _fn) {\n            if (isNothing(O)) return [];\n            var key,\n                i = 0,\n                l = O.length,\n                isObj = l === undefined || typeof O === \"function\";\n            if (isObj) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\") if (_fn.call(O[key], key, O[key]) === false) break;\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") if (_fn.call(O[i], i, O[i++]) === false) break;\n                }\n            }\n            return O;\n        }\n\n        // In addition to using the http://underscorejs.org : map, reduce, reduceRight, find\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값으로 이루어진 새로운 배열을 만듭니다.\n         * @method ax5.util.map\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4];\n         * var myObject = {a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n        *    fn: function(abcdd){\n        *        return abcdd;\n        *    }\n        * };\n         *\n         * var _arr = ax5.util.map( myArray,  function(index, I){\n        *    return index+1;\n        * });\n         * console.log(_arr);\n         * // [1, 2, 3, 4, 5]\n         *\n         * var _arr = ax5.util.map( myObject,  function(k, v){\n        *    return v * 2;\n        * });\n         * console.log(_arr);\n         * // [2, 4, NaN, NaN]\n         * ```\n         */\n        function map(O, _fn) {\n            if (isNothing(O)) return [];\n            var key,\n                i = 0,\n                l = O.length,\n                results = [],\n                fnResult;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[key], key, O[key])) === false) break;else results.push(fnResult);\n                    }\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[i], i, O[i++])) === false) break;else results.push(fnResult);\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값이 참인 아이템의 위치나 키값을 반환합니다.\n         * @method ax5.util.search\n         * @param {Object|Array} O\n         * @param {Function|String|Number} _fn - 함수 또는 값\n         * @returns {Number|String}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4,5,6];\n         * var myObject = {a:\"123\",\"b\":\"123\",c:123};\n         *\n         * ax5.util.search(myArray,  function(){\n        *    return this > 3;\n        * });\n         * // 4\n         * ax5.util.search(myObject,  function(k, v){\n        *    return v === 123;\n        * });\n         * // \"c\"\n         * ax5.util.search([1,2,3,4], 3);\n         * // 2\n         * ax5.util.search([1,2], 4);\n         * // -1\n         * ax5.util.search([\"name\",\"value\"], \"value\");\n         * // 1\n         * ax5.util.search([\"name\",\"value\"], \"values\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value2\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value\");\n         * // \"k2\"\n         * ```\n         */\n        function search(O, _fn) {\n            if (isNothing(O)) return -1;\n            var key,\n                i = 0,\n                l = O.length;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\" && isFunction(_fn) && _fn.call(O[key], key, O[key])) {\n                        return key;\n                        break;\n                    } else if (O[key] == _fn) {\n                        return key;\n                        break;\n                    }\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\" && isFunction(_fn) && _fn.call(O[i], i, O[i])) {\n                        return i;\n                        break;\n                    } else if (O[i] == _fn) {\n                        return i;\n                        break;\n                    }\n                    i++;\n                }\n            }\n            return -1;\n        }\n\n        /**\n         * @method ax5.util.sum\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.sum(arr, function () {\n         *  if(this.name == \"122\") {\n         *      return this.value;\n         *  }\n         * });\n         * console.log(rs); // 19\n         *\n         * console.log(ax5.util.sum(arr, 10, function () {\n         *   return this.value;\n         * }));\n         * // 40\n         * ```\n         */\n        function sum(O, defaultValue, _fn) {\n            var i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            } else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            } else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * @method ax5.util.avg\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.avg(arr, function () {\n         *      return this.value;\n         * });\n         *\n         * console.log(rs); // 10\n         * ```\n         */\n        function avg(O, defaultValue, _fn) {\n            var i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            } else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            } else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * 배열의 왼쪽에서 오른쪽으로 연산을 진행하는데 수행한 결과가 왼쪽 값으로 반영되어 최종 왼쪽 값을 반환합니다.\n         * @method ax5.util.reduce\n         * @param {Array|Object} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduce( aarray, function(p, n){\n        *   return p * n;\n        * });\n         * console.log(result, aarray);\n         * // 120 [5, 4, 3, 2, 1]\n         *\n         * ax5.util.reduce({a:1, b:2}, function(p, n){\n        *    return parseInt(p|0) + parseInt(n);\n        * });\n         * // 3\n         * ```\n         */\n        function reduce(O, _fn) {\n            var i, l, tokenItem;\n            if (isArray(O)) {\n                i = 0, l = O.length, tokenItem = O[i];\n                for (; i < l - 1;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenItem = _fn.call(root, tokenItem, O[++i])) === false) break;\n                    }\n                }\n                return tokenItem;\n            } else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenItem = _fn.call(root, tokenItem, O[i])) === false) break;\n                    }\n                }\n                return tokenItem;\n            } else {\n                console.error(\"argument error : ax5.util.reduce - use Array or Object\");\n                return null;\n            }\n        }\n\n        /**\n         * 배열의 오른쪽에서 왼쪽으로 연산을 진행하는데 수행한 결과가 오른쪽 값으로 반영되어 최종 오른쪽 값을 반환합니다.\n         * @method ax5.util.reduceRight\n         * @param {Array} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduceRight( aarray, function(p, n){\n        *    console.log( n );\n        *    return p * n;\n        * });\n         * console.log(result, aarray);\n         * 120 [5, 4, 3, 2, 1]\n         * ```\n         */\n        function reduceRight(O, _fn) {\n            var i = O.length - 1,\n                tokenItem = O[i];\n            for (; i > 0;) {\n                if (typeof O[i] != \"undefined\") {\n                    if ((tokenItem = _fn.call(root, tokenItem, O[--i])) === false) break;\n                }\n            }\n            return tokenItem;\n        }\n\n        /**\n         * 배열또는 오브젝트의 각 아이템을 인자로 하는 사용자 함수의 결과가 참인 아이템들의 배열을 반환합니다.\n         * @method ax5.util.filter\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.filter( aarray, function(){\n        *    return this % 2;\n        * });\n         * console.log(result);\n         * // [5, 3, 1]\n         *\n         * var filObject = {a:1, s:\"string\", oa:{pickup:true, name:\"AXISJ\"}, os:{pickup:true, name:\"AX5\"}};\n         * result = ax5.util.filter( filObject, function(){\n        * \treturn this.pickup;\n        * });\n         * console.log( ax5.util.toJson(result) );\n         * // [{\"pickup\": , \"name\": \"AXISJ\"}, {\"pickup\": , \"name\": \"AX5\"}]\n         * ```\n         */\n        function filter(O, _fn) {\n            if (isNothing(O)) return [];\n            var k,\n                i = 0,\n                l = O.length,\n                results = [],\n                fnResult;\n            if (isObject(O)) {\n                for (k in O) {\n                    if (typeof O[k] != \"undefined\") {\n                        if (fnResult = _fn.call(O[k], k, O[k])) results.push(O[k]);\n                    }\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (fnResult = _fn.call(O[i], i, O[i])) results.push(O[i]);\n                        i++;\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * Object를 JSONString 으로 반환합니다.\n         * @method ax5.util.toJson\n         * @param {Object|Array} O\n         * @returns {String} JSON\n         * @example\n         * ```js\n         * var ax = ax5.util;\n         * var myObject = {\n        *    a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n        *    fn: function(abcdd){\n        *        return abcdd;\n        *    }\n        * };\n         * console.log( ax.toJson(myObject) );\n         * ```\n         */\n        function toJson(O) {\n            var jsonString = \"\";\n            if (ax5.util.isArray(O)) {\n                var i = 0,\n                    l = O.length;\n                jsonString += \"[\";\n                for (; i < l; i++) {\n                    if (i > 0) jsonString += \",\";\n                    jsonString += toJson(O[i]);\n                }\n                jsonString += \"]\";\n            } else if (ax5.util.isObject(O)) {\n                jsonString += \"{\";\n                var jsonObjectBody = [];\n                each(O, function (key, value) {\n                    jsonObjectBody.push('\"' + key + '\": ' + toJson(value));\n                });\n                jsonString += jsonObjectBody.join(\", \");\n                jsonString += \"}\";\n            } else if (ax5.util.isString(O)) {\n                jsonString = '\"' + O + '\"';\n            } else if (ax5.util.isNumber(O)) {\n                jsonString = O;\n            } else if (ax5.util.isUndefined(O)) {\n                jsonString = \"undefined\";\n            } else if (ax5.util.isFunction(O)) {\n                jsonString = '\"{Function}\"';\n            } else {\n                jsonString = O;\n            }\n            return jsonString;\n        }\n\n        /**\n         * 관용의 JSON Parser\n         * @method ax5.util.parseJson\n         * @param {String} JSONString\n         * @param {Boolean} [force] - 강제 적용 여부 (json 문자열 검사를 무시하고 오브젝트 변환을 시도합니다.)\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log(ax5.util.parseJson('{\"a\":1}'));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':'b'}\"));\n         * // Object {a: 1, b: \"b\"}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':function(){return 1;}}\", true));\n         * // Object {a: 1, b: function}\n         * console.log(ax5.util.parseJson(\"{a:1}\"));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"[1,2,3]\"));\n         * // [1, 2, 3]\n         * console.log(ax5.util.parseJson(\"['1','2','3']\"));\n         * // [\"1\", \"2\", \"3\"]\n         * console.log(ax5.util.parseJson(\"[{'a':'99'},'2','3']\"));\n         * // [Object, \"2\", \"3\"]\n         * ```\n         */\n        function parseJson(str, force) {\n            if (force || reIsJson.test(str)) {\n                try {\n                    return new Function('', 'return ' + str)();\n                } catch (e) {\n                    return { error: 500, msg: 'syntax error' };\n                }\n            } else {\n                return { error: 500, msg: 'syntax error' };\n            }\n        }\n\n        /**\n         * 인자의 타입을 반환합니다.\n         * @method ax5.util.getType\n         * @param {Object|Array|String|Number|Element|Etc} O\n         * @returns {String} window|element|object|array|function|string|number|undefined|nodelist\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * var a = 11;\n         * var b = \"11\";\n         * console.log( axf.getType(a) );\n         * console.log( axf.getType(b) );\n         * ```\n         */\n        function getType(O) {\n            var typeName;\n            if (O != null && O == O.window) {\n                typeName = \"window\";\n            } else if (!!(O && O.nodeType == 1)) {\n                typeName = \"element\";\n            } else if (!!(O && O.nodeType == 11)) {\n                typeName = \"fragment\";\n            } else if (O === null) {\n                typeName = \"null\";\n            } else if (typeof O === \"undefined\") {\n                typeName = \"undefined\";\n            } else if (_toString.call(O) == \"[object Object]\") {\n                typeName = \"object\";\n            } else if (_toString.call(O) == \"[object Array]\") {\n                typeName = \"array\";\n            } else if (_toString.call(O) == \"[object String]\") {\n                typeName = \"string\";\n            } else if (_toString.call(O) == \"[object Number]\") {\n                typeName = \"number\";\n            } else if (_toString.call(O) == \"[object NodeList]\") {\n                typeName = \"nodelist\";\n            } else if (typeof O === \"function\") {\n                typeName = \"function\";\n            }\n            return typeName;\n        }\n\n        /**\n         * 오브젝트가 window 인지 판단합니다.\n         * @method ax5.util.isWindow\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isWindow(O) {\n            return O != null && O == O.window;\n        }\n\n        /**\n         * 오브젝트가 HTML 엘리먼트여부인지 판단합니다.\n         * @method ax5.util.isElement\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isElement(O) {\n            return !!(O && (O.nodeType == 1 || O.nodeType == 11));\n        }\n\n        /**\n         * 오브젝트가 Object인지 판단합니다.\n         * @method ax5.util.isObject\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isObject(O) {\n            return _toString.call(O) == \"[object Object]\";\n        }\n\n        /**\n         * 오브젝트가 Array인지 판단합니다.\n         * @method ax5.util.isArray\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isArray(O) {\n            return _toString.call(O) == \"[object Array]\";\n        }\n\n        /**\n         * 오브젝트가 Function인지 판단합니다.\n         * @method ax5.util.isFunction\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isFunction(O) {\n            return typeof O === \"function\";\n        }\n\n        /**\n         * 오브젝트가 String인지 판단합니다.\n         * @method ax5.util.isString\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isString(O) {\n            return _toString.call(O) == \"[object String]\";\n        }\n\n        /**\n         * 오브젝트가 Number인지 판단합니다.\n         * @method ax5.util.isNumber\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNumber(O) {\n            return _toString.call(O) == \"[object Number]\";\n        }\n\n        /**\n         * 오브젝트가 NodeList인지 판단합니다.\n         * @method ax5.util.isNodelist\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNodelist(O) {\n            return !!(_toString.call(O) == \"[object NodeList]\" || typeof O !== \"undefined\" && O && O[0] && O[0].nodeType == 1);\n        }\n\n        /**\n         * 오브젝트가 undefined인지 판단합니다.\n         * @method ax5.util.isUndefined\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isUndefined(O) {\n            return typeof O === \"undefined\";\n        }\n\n        /**\n         * 오브젝트가 undefined이거나 null이거나 빈값인지 판단합니다.\n         * @method ax5.util.isNothing\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNothing(O) {\n            return typeof O === \"undefined\" || O === null || O === \"\";\n        }\n\n        /**\n         * 오브젝트가 날자값인지 판단합니다.\n         * @method ax5.util.isDate\n         * @param {Date} O\n         * @returns {Boolean}\n         * @example\n         * ```js\n         * ax5.util.isDate('2016-09-30');\n         * // false\n         * ax5.util.isDate( new Date('2016-09-30') );\n         * // true\n         * ```\n         */\n        function isDate(O) {\n            return O instanceof Date && !isNaN(O.valueOf());\n        }\n\n        function isDateFormat(O) {\n            var result = false;\n            if (!O) {} else if (O instanceof Date && !isNaN(O.valueOf())) {\n                result = true;\n            } else {\n                if (O.length > 7) {\n                    if (date(O) instanceof Date) {\n                        return true;\n                    }\n                }\n                O = O.replace(/\\D/g, '');\n                if (O.length > 7) {\n                    var mm = O.substr(4, 2),\n                        dd = O.substr(6, 2);\n                    O = date(O);\n                    if (O.getMonth() == mm - 1 && O.getDate() == dd) {\n                        result = true;\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * 오브젝트의 첫번째 아이템을 반환합니다.\n         * @method ax5.util.first\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.first({a:1, b:2});\n         * // Object {a: 1}\n         * ax5.util.first([1,2,3,4]);\n         * // 1\n         * ```\n         */\n        function first(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[0]] = O[keys[0]];\n                return item;\n            } else if (isArray(O)) {\n                return O[0];\n            } else {\n                console.error(\"ax5.util.object.first\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 오브젝트의 마지막 아이템을 반환합니다.\n         * @method ax5.util.last\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.last({a:1, b:2});\n         * // Object {b: 2}\n         * ax5.util.last([1,2,3,4]);\n         * // 4\n         * ```\n         */\n        function last(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[keys.length - 1]] = O[keys[keys.length - 1]];\n                return item;\n            } else if (isArray(O)) {\n                return O[O.length - 1];\n            } else {\n                console.error(\"ax5.util.object.last\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 쿠키를 설정합니다.\n         * @method ax5.util.setCookie\n         * @param {String} cname - 쿠키이름\n         * @param {String} cvalue - 쿠키값\n         * @param {Number} [exdays] - 쿠키 유지일수\n         * @param {Object} [opts] - path, domain 설정 옵션\n         * @example\n         * ```js\n         * ax5.util.setCookie(\"jslib\", \"AX5\");\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3);\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3, {path:\"/\", domain:\".axisj.com\"});\n         * ```\n         */\n        function setCookie(cn, cv, exdays, opts) {\n            var expire;\n            if (typeof exdays === \"number\") {\n                expire = new Date();\n                expire.setDate(expire.getDate() + exdays);\n            }\n            opts = opts || {};\n            return doc.cookie = [escape(cn), '=', escape(cv), expire ? \"; expires=\" + expire.toUTCString() : \"\", // use expires attribute, max-age is not supported by IE\n            opts.path ? \"; path=\" + opts.path : \"\", opts.domain ? \"; domain=\" + opts.domain : \"\", opts.secure ? \"; secure\" : \"\"].join(\"\");\n        }\n\n        /**\n         * 쿠키를 가져옵니다.\n         * @method ax5.util.getCookie\n         * @param {String} cname\n         * @returns {String} cookie value\n         * @example\n         * ```js\n         * ax5.util.getCookie(\"jslib\");\n         * ```\n         */\n        function getCookie(cname) {\n            var name = cname + \"=\";\n            var ca = doc.cookie.split(';'),\n                i = 0,\n                l = ca.length;\n            for (; i < l; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') {\n                    c = c.substring(1);\n                }if (c.indexOf(name) != -1) return unescape(c.substring(name.length, c.length));\n            }\n            return \"\";\n        }\n\n        /**\n         * jsonString 으로 alert 합니다.\n         * @method ax5.util.alert\n         * @param {Object|Array|String|Number} O\n         * @returns {Object|Array|String|Number} O\n         * @example ```js\n         * ax5.util.alert({a:1,b:2});\n         * ax5.util.alert(\"정말?\");\n         * ```\n         */\n        function alert(O) {\n            win.alert(toJson(O));\n            return O;\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.left\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.left(\"abcd.efd\", 3);\n         * // abc\n         * ax5.util.left(\"abcd.efd\", \".\");\n         * // abcd\n         * ```\n         */\n        function left(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            if (isString(pos)) {\n                return str.indexOf(pos) > -1 ? str.substr(0, str.indexOf(pos)) : \"\";\n            } else if (isNumber(pos)) {\n                return str.substr(0, pos);\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.right\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.right(\"abcd.efd\", 3);\n         * // efd\n         * ax5.util.right(\"abcd.efd\", \".\");\n         * // efd\n         * ```\n         */\n        function right(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            str = '' + str;\n            if (isString(pos)) {\n                return str.lastIndexOf(pos) > -1 ? str.substr(str.lastIndexOf(pos) + 1) : \"\";\n            } else if (isNumber(pos)) {\n                return str.substr(str.length - pos);\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         * css형 문자열이나 특수문자가 포함된 문자열을 카멜케이스로 바꾸어 반환합니다.\n         * @method ax5.util.camelCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.camelCase(\"inner-width\");\n         * ax5.util.camelCase(\"innerWidth\");\n         * // innerWidth\n         * ```\n         */\n        function camelCase(str) {\n            return str.replace(reMs, \"ms-\").replace(reSnakeCase, function (all, letter) {\n                return letter.toUpperCase();\n            });\n        }\n\n        /**\n         * css형 문자열이나 카멜케이스문자열을 스네이크 케이스 문자열로 바꾸어 반환합니다.\n         * @method ax5.util.snakeCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.snakeCase(\"innerWidth\");\n         * ax5.util.snakeCase(\"inner-Width\");\n         * ax5.util.snakeCase(\"innerWidth\");\n         * // inner-width\n         * ```\n         */\n        function snakeCase(str) {\n            return camelCase(str).replace(reCamelCase, function (all, letter) {\n                return \"-\" + letter.toLowerCase();\n            });\n        }\n\n        /**\n         * 문자열에서 -. 을 제외한 모든 문자열을 제거하고 숫자로 반환합니다. 옵션에 따라 원하는 형식의 숫자로 변환 할 수 도 있습니다.\n         * @method ax5.util.number\n         * @param {String|Number} str\n         * @param {Object} cond - 옵션\n         * @returns {String|Number}\n         * @example\n         * ```js\n         * var cond = {\n        * \tround: {Number|Boolean} - 반올림할 자릿수,\n        * \tmoney: {Boolean} - 통화,\n        * \tabs: {Boolean} - 절대값,\n        * \tbyte: {Boolean} - 바이트\n        * }\n         *\n         * console.log(ax5.util.number(123456789.678, {round:1}));\n         * console.log(ax5.util.number(123456789.678, {round:1, money:true}));\n         * console.log(ax5.util.number(123456789.678, {round:2, byte:true}));\n         * console.log(ax5.util.number(-123456789.8888, {abs:true, round:2, money:true}));\n         * console.log(ax5.util.number(\"A-1234~~56789.8~888PX\", {abs:true, round:2, money:true}));\n         *\n         * //123456789.7\n         * //123,456,789.7\n         * //117.7MB\n         * //123,456,789.89\n         * //123,456,789.89\n         * ```\n         */\n        function number(str, cond) {\n            var result,\n                pair = ('' + str).split(reDot),\n                isMinus = Number(pair[0]) < 0 || pair[0] == \"-0\",\n                returnValue = 0.0;\n            pair[0] = pair[0].replace(reInt, \"\");\n            if (pair[1]) {\n                pair[1] = pair[1].replace(reNotNum, \"\");\n                returnValue = Number(pair[0] + \".\" + pair[1]) || 0;\n            } else {\n                returnValue = Number(pair[0]) || 0;\n            }\n            result = isMinus ? -returnValue : returnValue;\n\n            each(cond, function (k, c) {\n                if (k == \"round\") {\n                    if (isNumber(c)) {\n                        if (c < 0) {\n                            result = +(Math.round(result + \"e-\" + Math.abs(c)) + \"e+\" + Math.abs(c));\n                        } else {\n                            result = +(Math.round(result + \"e+\" + c) + \"e-\" + c);\n                        }\n                    } else {\n                        result = Math.round(result);\n                    }\n                }\n                if (k == \"floor\") {\n                    result = Math.floor(result);\n                }\n                if (k == \"ceil\") {\n                    result = Math.ceil(result);\n                } else if (k == \"money\") {\n                    result = function (val) {\n                        var txtNumber = '' + val;\n                        if (isNaN(txtNumber) || txtNumber == \"\") {\n                            return \"\";\n                        } else {\n                            var arrNumber = txtNumber.split('.');\n                            arrNumber[0] += '.';\n                            do {\n                                arrNumber[0] = arrNumber[0].replace(reMoneySplit, '$1,$2');\n                            } while (reMoneySplit.test(arrNumber[0]));\n                            if (arrNumber.length > 1) {\n                                return arrNumber.join('');\n                            } else {\n                                return arrNumber[0].split('.')[0];\n                            }\n                        }\n                    }(result);\n                } else if (k == \"abs\") {\n                    result = Math.abs(Number(result));\n                } else if (k == \"byte\") {\n                    result = function (val) {\n                        val = Number(result);\n                        var nUnit = \"KB\";\n                        var myByte = val / 1024;\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"MB\";\n                            myByte = myByte / 1024;\n                        }\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"GB\";\n                            myByte = myByte / 1024;\n                        }\n                        return number(myByte, { round: 1 }) + nUnit;\n                    }(result);\n                }\n            });\n\n            return result;\n        }\n\n        /**\n         * 배열 비슷한 오브젝트를 배열로 변환해줍니다.\n         * @method ax5.util.toArray\n         * @param {Object|Elements|Arguments} O\n         * @returns {Array}\n         * @example\n         * ```js\n         * ax5.util.toArray(arguments);\n         * //\n         * ```\n         */\n        function toArray(O) {\n            if (typeof O.length != \"undefined\") return Array.prototype.slice.call(O);\n            return [];\n        }\n\n        /**\n         * 첫번째 인자에 두번째 인자 아이템을 합쳐줍니다. concat과 같은 역할을 하지만. 인자가 Array타입이 아니어도 됩니다.\n         * @method ax5.util.merge\n         * @param {Array|ArrayLike} first\n         * @param {Array|ArrayLike} second\n         * @returns {Array} first\n         * @example\n         * ```\n         *\n         * ```\n         */\n        function merge(first, second) {\n            var l = second.length,\n                i = first.length,\n                j = 0;\n\n            if (typeof l === \"number\") {\n                for (; j < l; j++) {\n                    first[i++] = second[j];\n                }\n            } else {\n                while (second[j] !== undefined) {\n                    first[i++] = second[j++];\n                }\n            }\n\n            first.length = i;\n\n            return first;\n        }\n\n        /**\n         * 오브젝트를 파라미터형식으로 또는 파라미터를 오브젝트 형식으로 변환합니다.\n         * @method ax5.util.param\n         * @param {Object|Array|String} O\n         * @param {String} [cond] - param|object\n         * @returns {Object|String}\n         * @example\n         * ```\n         * ax5.util.param({a:1,b:'1232'}, \"param\");\n         * ax5.util.param(\"a=1&b=1232\", \"param\");\n         * // \"a=1&b=1232\"\n         * ax5.util.param(\"a=1&b=1232\");\n         * // {a: \"1\", b: \"1232\"}\n         * ```\n         */\n        function param(O, cond) {\n            var p;\n            if (isString(O) && typeof cond !== \"undefined\" && cond == \"param\") {\n                return O;\n            } else if (isString(O) && typeof cond !== \"undefined\" && cond == \"object\" || isString(O) && typeof cond === \"undefined\") {\n                p = {};\n                each(O.split(reAmp), function () {\n                    var item = this.split(reEq);\n                    if (!p[item[0]]) p[item[0]] = item[1];else {\n                        if (isString(p[item[0]])) p[item[0]] = [p[item[0]]];\n                        p[item[0]].push(item[1]);\n                    }\n                });\n                return p;\n            } else {\n                p = [];\n                each(O, function (k, v) {\n                    p.push(k + \"=\" + escape(v));\n                });\n                return p.join('&');\n            }\n        }\n\n        function encode(s) {\n            return encodeURIComponent(s);\n        }\n\n        function decode(s) {\n            return decodeURIComponent(s);\n        }\n\n        function error() {\n            ax5.info.onerror.apply(this, arguments);\n        }\n\n        function localDate(yy, mm, dd, hh, mi, ss) {\n            var utcD, localD;\n            localD = new Date();\n            if (typeof hh === \"undefined\") hh = 23;\n            if (typeof mi === \"undefined\") mi = 59;\n            utcD = new Date(Date.UTC(yy, mm, dd || 1, hh, mi, ss || 0));\n\n            if (mm == 0 && dd == 1 && utcD.getUTCHours() + utcD.getTimezoneOffset() / 60 < 0) {\n                utcD.setUTCHours(0);\n            } else {\n                utcD.setUTCHours(utcD.getUTCHours() + utcD.getTimezoneOffset() / 60);\n            }\n            return utcD;\n        }\n\n        /**\n         * 날짜 형식의 문자열이나 Date객체를 조건에 맞게 처리 한 후 원하는 return 값으로 반환합니다.\n         * @method ax5.util.date\n         * @param {String|Date} d\n         * @param {Object} cond\n         * @returns {Date|String}\n         * @example\n         * ```js\n         * ax5.util.date('2013-01-01'); // Tue Jan 01 2013 23:59:00 GMT+0900 (KST)\n         * ax5.util.date((new Date()), {add:{d:10}, return:'yyyy/MM/dd'}); // \"2015/07/01\"\n         * ax5.util.date('1919-03-01', {add:{d:10}, return:'yyyy/MM/dd hh:mm:ss'}); // \"1919/03/11 23:59:00\"\n         * ```\n         */\n        function date(d, cond) {\n            var yy, mm, dd, hh, mi, aDateTime, aTimes, aTime, aDate, utcD, localD, va;\n            var ISO_8601 = /^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$/i;\n            var ISO_8601_FULL = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\n\n            if (isString(d)) {\n                if (d.length == 0) {\n                    d = new Date();\n                } else if (d.length > 15) {\n                    if (ISO_8601_FULL.test(d) || ISO_8601.test(d)) {\n                        d = new Date(d);\n                    } else {\n                        aDateTime = d.split(/ /g), aTimes, aTime, aDate = aDateTime[0].split(/\\D/g), yy = aDate[0];\n                        mm = parseFloat(aDate[1]);\n                        dd = parseFloat(aDate[2]);\n                        aTime = aDateTime[1] || \"09:00\";\n                        aTimes = aTime.substring(0, 5).split(\":\");\n                        hh = parseFloat(aTimes[0]);\n                        mi = parseFloat(aTimes[1]);\n                        if (right(aTime, 2) === \"AM\" || right(aTime, 2) === \"PM\") hh += 12;\n                        d = localDate(yy, mm - 1, dd, hh, mi);\n                    }\n                } else if (d.length == 14) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)), number(va.substr(8, 2)), number(va.substr(10, 2)), number(va.substr(12, 2)));\n                } else if (d.length > 7) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)));\n                } else if (d.length > 4) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                } else if (d.length > 2) {\n                    va = d.replace(/\\D/g, \"\");\n                    return localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                } else {\n                    d = new Date();\n                }\n            }\n\n            if (typeof cond === \"undefined\") {\n                return d;\n            } else {\n\n                if (\"add\" in cond) {\n                    d = function (_d, opts) {\n                        var yy,\n                            mm,\n                            dd,\n                            mxdd,\n                            DyMilli = 1000 * 60 * 60 * 24;\n\n                        if (typeof opts[\"d\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + opts[\"d\"] * DyMilli);\n                        } else if (typeof opts[\"m\"] !== \"undefined\") {\n                            yy = _d.getFullYear();\n                            mm = _d.getMonth();\n                            dd = _d.getDate();\n                            yy = yy + parseInt(opts[\"m\"] / 12);\n                            mm += opts[\"m\"] % 12;\n                            mxdd = daysOfMonth(yy, mm);\n                            if (mxdd < dd) dd = mxdd;\n                            _d = new Date(yy, mm, dd, 12);\n                        } else if (typeof opts[\"y\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + opts[\"y\"] * 365 * DyMilli);\n                        }\n                        return _d;\n                    }(new Date(d), cond[\"add\"]);\n                }\n\n                if (\"set\" in cond) {\n                    d = function (_d, opts) {\n                        var yy,\n                            mm,\n                            dd,\n                            processor = {\n                            \"firstDayOfMonth\": function firstDayOfMonth(date) {\n                                yy = date.getFullYear();\n                                mm = date.getMonth();\n                                dd = 1;\n                                return new Date(yy, mm, dd, 12);\n                            },\n                            \"lastDayOfMonth\": function lastDayOfMonth(date) {\n                                yy = date.getFullYear();\n                                mm = date.getMonth();\n                                dd = daysOfMonth(yy, mm);\n                                return new Date(yy, mm, dd, 12);\n                            }\n                        };\n                        if (opts in processor) {\n                            return processor[opts](_d);\n                        } else {\n                            return _d;\n                        }\n                    }(new Date(d), cond[\"set\"]);\n                }\n\n                if (\"return\" in cond) {\n                    return function () {\n                        var fStr = cond[\"return\"],\n                            nY,\n                            nM,\n                            nD,\n                            nH,\n                            nMM,\n                            nS,\n                            nDW;\n\n                        nY = d.getUTCFullYear();\n                        nM = setDigit(d.getMonth() + 1, 2);\n                        nD = setDigit(d.getDate(), 2);\n                        nH = setDigit(d.getHours(), 2);\n                        nMM = setDigit(d.getMinutes(), 2);\n                        nS = setDigit(d.getSeconds(), 2);\n                        nDW = d.getDay();\n\n                        var yre = /[^y]*(yyyy)[^y]*/gi;\n                        yre.exec(fStr);\n                        var regY = RegExp.$1;\n                        var mre = /[^m]*(MM)[^m]*/g;\n                        mre.exec(fStr);\n                        var regM = RegExp.$1;\n                        var dre = /[^d]*(dd)[^d]*/gi;\n                        dre.exec(fStr);\n                        var regD = RegExp.$1;\n                        var hre = /[^h]*(hh)[^h]*/gi;\n                        hre.exec(fStr);\n                        var regH = RegExp.$1;\n                        var mire = /[^m]*(mm)[^i]*/g;\n                        mire.exec(fStr);\n                        var regMI = RegExp.$1;\n                        var sre = /[^s]*(ss)[^s]*/gi;\n                        sre.exec(fStr);\n                        var regS = RegExp.$1;\n                        var dwre = /[^d]*(dw)[^w]*/gi;\n                        dwre.exec(fStr);\n                        var regDW = RegExp.$1;\n\n                        if (regY === \"yyyy\") {\n                            fStr = fStr.replace(regY, right(nY, regY.length));\n                        }\n                        if (regM === \"MM\") {\n                            if (regM.length == 1) nM = d.getMonth() + 1;\n                            fStr = fStr.replace(regM, nM);\n                        }\n                        if (regD === \"dd\") {\n                            if (regD.length == 1) nD = d.getDate();\n                            fStr = fStr.replace(regD, nD);\n                        }\n                        if (regH === \"hh\") {\n                            fStr = fStr.replace(regH, nH);\n                        }\n                        if (regMI === \"mm\") {\n                            fStr = fStr.replace(regMI, nMM);\n                        }\n                        if (regS === \"ss\") {\n                            fStr = fStr.replace(regS, nS);\n                        }\n                        if (regDW == \"dw\") {\n                            fStr = fStr.replace(regDW, info.weekNames[nDW].label);\n                        }\n                        return fStr;\n                    }();\n                } else {\n                    return d;\n                }\n            }\n        }\n\n        /**\n         * 인자인 날짜가 오늘부터 몇일전인지 반환합니다. 또는 인자인 날짜가 가까운 미래에 몇일 후인지 반환합니다.\n         * @method ax5.util.dday\n         * @param {String|Data} d\n         * @param {Object} cond\n         * @returns {Number}\n         * @example\n         * ```js\n         * ax5.util.dday('2016-01-29');\n         * // 1\n         * ax5.util.dday('2016-01-29', {today:'2016-01-28'});\n         * // 1\n         * ax5.util.dday('1977-03-29', {today:'2016-01-28', age:true});\n         * // 39\n         * ```\n         */\n        function dday(d, cond) {\n            var memoryDay = date(d),\n                DyMilli = 1000 * 60 * 60 * 24,\n                today = new Date(),\n                diffnum,\n                thisYearMemoryDay;\n\n            function getDayTime(_d) {\n                return Math.floor(_d.getTime() / DyMilli) * DyMilli;\n            }\n\n            if (typeof cond === \"undefined\") {\n                diffnum = number((getDayTime(memoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                return diffnum;\n            } else {\n                diffnum = number((getDayTime(memoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                if (cond[\"today\"]) {\n                    today = date(cond.today);\n                    diffnum = number((getDayTime(memoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                }\n                if (cond[\"thisYear\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = number((getDayTime(thisYearMemoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                    if (diffnum < 0) {\n                        thisYearMemoryDay = new Date(today.getFullYear() + 1, memoryDay.getMonth(), memoryDay.getDate());\n                        diffnum = number((getDayTime(thisYearMemoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                    }\n                }\n                if (cond[\"age\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = thisYearMemoryDay.getFullYear() - memoryDay.getFullYear();\n                }\n\n                return diffnum;\n            }\n        }\n\n        /**\n         * 인자인 날짜가 몇년 몇월의 몇번째 주차인지 반환합니다.\n         * @method ax5.util.weeksOfMonth\n         * @param {String|Data} d\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.weeksOfMonth(\"2015-10-01\"); // {year: 2015, month: 10, count: 1}\n         * ax5.util.weeksOfMonth(\"2015-09-19\"); // {year: 2015, month: 9, count: 3}\n         * ```\n         */\n        function weeksOfMonth(d) {\n            var myDate = date(d);\n            return {\n                year: myDate.getFullYear(),\n                month: myDate.getMonth() + 1,\n                count: parseInt(myDate.getDate() / 7 + 1)\n            };\n        }\n\n        /**\n         * 년월에 맞는 날자수를 반환합니다.\n         * (new Date()).getMonth() 기준으로 월값을 보냅니다. \"2월\" 인경우 \"1\" 을 넘기게 됩니다.\n         * @method ax5.util.daysOfMonth\n         * @param {Number} y\n         * @param {Number} m\n         * @returns {Number}\n         * @examples\n         * ```js\n         * ax5.util.daysOfMonth(2015, 11); // 31\n         * ax5.util.daysOfMonth(2015, 1); // 28\n         * ```\n         */\n        function daysOfMonth(y, m) {\n            if (m == 3 || m == 5 || m == 8 || m == 10) {\n                return 30;\n            } else if (m == 1) {\n                return y % 4 == 0 && y % 100 != 0 || y % 400 == 0 ? 29 : 28;\n            } else {\n                return 31;\n            }\n        }\n\n        /**\n         * 원하는 횟수 만큼 자릿수 맞춤 문자열을 포함한 문자열을 반환합니다.\n         * 문자열 길이보다 작은값을 보내면 무시됩니다.\n         * @method ax5.util.setDigit\n         * @param {String|Number} num\n         * @param {Number} length\n         * @param {String} [padder=0]\n         * @param {Number} [radix]\n         * @returns {String}\n         * @example\n         * ```\n         * ax5.util.setDigit(2016, 6)\n         * // \"002016\"\n         * ax5.util.setDigit(2016, 2)\n         * // \"2016\"\n         * ```\n         */\n        function setDigit(num, length, padder, radix) {\n            var s = num.toString(radix || 10);\n            return times(padder || '0', length - s.length) + s;\n        }\n\n        /**\n         * 문자열을 지정된 수만큼 반복 합니다.\n         * @param {String} s\n         * @param {Number} count\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.times(2016, 2)\n         * //\"20162016\"\n         * ```\n         */\n        function times(s, count) {\n            return count < 1 ? '' : new Array(count + 1).join(s);\n        }\n\n        /**\n         * 타겟엘리먼트의 부모 엘리멘트 트리에서 원하는 조건의 엘리먼트를 얻습니다.\n         * @method ax5.util.findParentNode\n         * @param {Element} _target - target element\n         * @param {Object|Function} cond - 원하는 element를 찾을 조건\n         * @returns {Element}\n         * @example\n         * ```\n         * // cond 속성정의\n         * var cond = {\n        * \ttagname: {String} - 태그명 (ex. a, div, span..),\n        * \tclazz: {String} - 클래스명\n        * \t[, 그 외 찾고 싶은 attribute명들]\n        * };\n         * console.log(\n         * console.log(\n         *    ax5.util.findParentNode(e.target, {tagname:\"a\", clazz:\"ax-menu-handel\", \"data-custom-attr\":\"attr_value\"})\n         * );\n         * // cond 함수로 처리하기\n         * jQuery('#id').bind(\"click.app_expand\", function(e){\n        * \tvar target = ax5.util.findParentNode(e.target, function(target){\n        * \t\tif($(target).hasClass(\"aside\")){\n        * \t\t\treturn true;\n        * \t\t}\n        * \t\telse{\n        * \t\t\treturn true;\n        * \t\t}\n        * \t});\n        * \t//client-aside\n        * \tif(target.id !== \"client-aside\"){\n        * \t\t// some action\n        * \t}\n        * });\n         * ```\n         */\n\n        function findParentNode(_target, cond) {\n            if (_target) {\n                while (function () {\n                    var result = true;\n                    if (typeof cond === \"undefined\") {\n                        _target = _target.parentNode ? _target.parentNode : false;\n                    } else if (isFunction(cond)) {\n                        result = cond(_target);\n                    } else if (isObject(cond)) {\n                        for (var k in cond) {\n                            if (k === \"tagname\") {\n                                if (_target.tagName.toLocaleLowerCase() != cond[k]) {\n                                    result = false;\n                                    break;\n                                }\n                            } else if (k === \"clazz\" || k === \"class_name\") {\n                                if (\"className\" in _target) {\n                                    var klasss = _target.className.split(reClassNameSplit);\n                                    var hasClass = false;\n                                    for (var a = 0; a < klasss.length; a++) {\n                                        if (klasss[a] == cond[k]) {\n                                            hasClass = true;\n                                            break;\n                                        }\n                                    }\n                                    result = hasClass;\n                                } else {\n                                    result = false;\n                                    break;\n                                }\n                            } else {\n                                // 그외 속성값들.\n                                if (_target.getAttribute) {\n                                    if (_target.getAttribute(k) != cond[k]) {\n                                        result = false;\n                                        break;\n                                    }\n                                } else {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return !result;\n                }()) {\n                    if (_target.parentNode && _target.parentNode.parentNode) {\n                        _target = _target.parentNode;\n                    } else {\n                        _target = false;\n                        break;\n                    }\n                }\n            }\n            return _target;\n        }\n\n        /**\n         * @method ax5.util.cssNumber\n         * @param {String|Number} val\n         * @returns {String}\n         * @example\n         * ```\n         * console.log(ax5.util.cssNumber(\"100px\"))\n         * console.log(ax5.util.cssNumber(\"100%\"))\n         * console.log(ax5.util.cssNumber(\"100\"))\n         * console.log(ax5.util.cssNumber(100))\n         * console.log(ax5.util.cssNumber(\"!!100@#\"))\n         * ```\n         */\n        function cssNumber(val) {\n            var re = /\\D?(\\d+)([a-zA-Z%]*)/i,\n                found = ('' + val).match(re),\n                unit = found[2] || \"px\";\n\n            return found[1] + unit;\n        }\n\n        /**\n         * css string 및 object 를 넘기면 object 및 string 으로 변환되어 리턴됩니다.\n         * @method ax5.util.css\n         * @param {Object|String} val - CSS String or CSS Object\n         * @returns {String|Object}\n         * @example\n         * ```\n         * console.log(ax5.util.css({background: \"#ccc\", padding: \"50px\", width: \"100px\"}));\n         * //\"background:#ccc;padding:50px;width:100px;\"\n         * console.log(ax5.util.css('width:100px;padding: 50px; background: #ccc'));\n         * // object {width: \"100px\", padding: \"50px\", background: \"#ccc\"}\n         * ```\n         */\n        function css(val) {\n            var returns;\n            if (isObject(val)) {\n                returns = '';\n                for (var k in val) {\n                    returns += k + ':' + val[k] + ';';\n                }\n                return returns;\n            } else if (isString(val)) {\n                returns = {};\n                var valSplited = val.split(/[ ]*;[ ]*/g);\n                valSplited.forEach(function (v) {\n                    if ((v = v.trim()) !== \"\") {\n                        var vSplited = v.split(/[ ]*:[ ]*/g);\n                        returns[vSplited[0]] = vSplited[1];\n                    }\n                });\n                return returns;\n            }\n        }\n\n        /**\n         * @method ax5.util.stopEvent\n         * @param {Event} e\n         * @example\n         * ```\n         * ax5.util.stopEvent(e);\n         * ```\n         */\n        function stopEvent(e) {\n            // 이벤트 중지 구문\n            if (!e) var e = window.event;\n\n            //e.cancelBubble is supported by IE -\n            // this will kill the bubbling process.\n            e.cancelBubble = true;\n            e.returnValue = false;\n\n            //e.stopPropagation works only in Firefox.\n            if (e.stopPropagation) e.stopPropagation();\n            if (e.preventDefault) e.preventDefault();\n\n            return false;\n            // 이벤트 중지 구문 끝\n        }\n\n        /**\n         * @method ax5.util.selectRange\n         * @param {Element} el\n         * @param {Element} offset\n         * @example\n         * ```\n         * ax5.util.selectRange($(\"#select-test-0\")); // selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"selectAll\"); //selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"start\"); // focus on start\n         * ax5.util.selectRange($(\"#select-test-0\"), \"end\"); // focus on end\n         * ax5.util.selectRange($(\"#select-test-0\"), [1, 5]); // select 1~5\n         * ```\n         */\n        var selectRange = function () {\n            var processor = {\n                'textRange': {\n                    'selectAll': function selectAll(el, range, offset) {},\n                    'arr': function arr(el, range, offset) {\n                        range.moveStart(\"character\", offset[0]); // todo ie node select 체크필요\n                        range.collapse();\n                        range.moveEnd(\"character\", offset[1]);\n                    },\n                    'start': function start(el, range, offset) {\n                        range.moveStart(\"character\", 0);\n                        range.collapse();\n                    },\n                    'end': function end(el, range, offset) {\n                        range.moveStart(\"character\", range.text.length);\n                        range.collapse();\n                    }\n                },\n                'range': {\n                    'selectAll': function selectAll(el, range, offset) {\n                        range.selectNodeContents(el);\n                    },\n                    'arr': function arr(el, range, offset) {\n                        if (isObject(offset[0])) {\n                            range.setStart(offset[0].node, offset[0].offset);\n                            range.setEnd(offset[1].node, offset[1].offset);\n                        } else {\n                            range.setStart(el.firstChild, offset[0]);\n                            range.setEnd(el.firstChild, offset[1]);\n                        }\n                    },\n                    'start': function start(el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(true);\n                    },\n                    'end': function end(el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(false);\n                    }\n                }\n            };\n            return function (el, offset) {\n                var range, rangeType, selection;\n\n                if (el instanceof jQuery) {\n                    el = el.get(0);\n                }\n                if (!el) return;\n\n                // 레인지 타입 선택\n                if (doc.body.createTextRange) {\n                    range = document.body.createTextRange();\n                    range.moveToElementText(el);\n                    rangeType = \"textRange\";\n                } else if (window.getSelection) {\n                    selection = window.getSelection();\n                    range = document.createRange();\n                    rangeType = \"range\";\n                }\n\n                // range 적용\n                if (typeof offset == \"undefined\") {\n                    processor[rangeType].selectAll.call(this, el, range, offset);\n                } else if (isArray(offset)) {\n                    processor[rangeType].arr.call(this, el, range, offset);\n                } else {\n                    for (var key in processor[rangeType]) {\n                        if (offset == key) {\n                            processor[rangeType][key].call(this, el, range, offset);\n                            break;\n                        }\n                    }\n                }\n\n                // 포커스 및 셀렉트\n                if (doc.body.createTextRange) {\n                    range.select();\n                    el.focus();\n                } else if (window.getSelection) {\n                    el.focus();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n            };\n        }();\n\n        /**\n         * 지정한 시간을 지연시켜 함수를 실행합니다.\n         * @method ax5.util.debounce\n         * @param {Function} func\n         * @param {Number} wait\n         * @param {Boolean} immediately\n         * @returns {debounced}\n         * @example\n         * ```js\n         * var debounceFn = ax5.util.debounce(function( val ) { console.log(val); }, 300);\n         * $(document.body).click(function(){\n         *  debounceFn(new Date());\n         * });\n         * ```\n         */\n        var debounce = function debounce(func, wait, immediately) {\n            var timeout, removeTimeout;\n            var debounced = function debounced() {\n                var args = toArray(arguments);\n\n                if (removeTimeout) clearTimeout(removeTimeout);\n                if (timeout) {\n                    // 두번째 호출\n                    if (timeout) clearTimeout(timeout);\n                    timeout = setTimeout(function (args) {\n                        func.apply(this, args);\n                    }.bind(this, args), wait);\n                } else {\n                    // 첫 호출\n                    timeout = setTimeout(function (args) {\n                        func.apply(this, args);\n                    }.bind(this, args), immediately ? 0 : wait);\n                }\n                removeTimeout = setTimeout(function () {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }, wait);\n            };\n            debounced.cancel = function () {\n                clearTimeout(timeout);\n                clearTimeout(removeTimeout);\n                timeout = null;\n            };\n\n            return debounced;\n        };\n\n        /**\n         * @method ax5.util.deepCopy\n         * @param {Object} obj\n         * @returns {Object}\n         * @example\n         * ```js\n         * var obj = [\n         *  {name:\"A\", child:[{name:\"a-1\"}]},\n         *  {name:\"B\", child:[{name:\"b-1\"}], callBack: function(){ console.log('callBack'); }}\n         * ];\n         * var copiedObj = ax5.util.deepCopy(obj)\n         * ```\n         */\n        function deepCopy(obj) {\n            var r, l;\n            if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object') {\n                if (U.isArray(obj)) {\n                    l = obj.length;\n                    r = new Array(l);\n                    for (var i = 0; i < l; i++) {\n                        r[i] = deepCopy(obj[i]);\n                    }\n                    return r;\n                } else {\n                    return jQuery.extend({}, obj);\n                }\n            }\n            return obj;\n        }\n\n        /**\n         * HTML 문자열을 escape 처리합니다.\n         * \"&lt;\" represents the < sign.\n         * \"&gt;\" represents the > sign.\n         * \"&amp;\" represents the & sign.\n         * \"&quot; represents the \" mark.\n         * [Character entity references](https://www.w3.org/TR/html401/charset.html#h-5.3)\n         * @method ax5.util.escapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.escapeHtml('HTML <span>string</span> & \"escape\"')\n         * //\"HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;\"\n         * ```\n         */\n        function escapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/[\\<\\>\\&\\\"]/gm, function (match) {\n                switch (match) {\n                    case \"<\":\n                        return \"&lt;\";\n                    case \">\":\n                        return \"&gt;\";\n                    case \"&\":\n                        return \"&amp;\";\n                    case \"\\\"\":\n                        return \"&quot;\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * HTML 문자열을 unescape 처리합니다.\n         * escapeHtml를 참고하세요.\n         * @method ax5.util.unescapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.unescapeHtml('HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;')\n         * //\"HTML <span>string</span> & \"escape\"\"\n         * ```\n         */\n        function unescapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/(&lt;)|(&gt;)|(&amp;)|(&quot;)/gm, function (match) {\n                switch (match) {\n                    case \"&lt;\":\n                        return \"<\";\n                    case \"&gt;\":\n                        return \">\";\n                    case \"&amp;\":\n                        return \"&\";\n                    case \"&quot;\":\n                        return \"\\\"\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * @method ax5.util.string\n         * @param {String} tmpl\n         * @param {*} args\n         * @return {ax5string}\n         * @example\n         * ```js\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format(\"ASP\", \"ASP.NET\");\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format([\"ASP\", \"ASP.NET\"]);\n         * ax5.util.stinrg(\"{0} counts\").format(100);\n         * ```\n         */\n        function string(_string) {\n            function ax5string(_string) {\n                this.value = _string;\n                this.toString = function () {\n                    return this.value;\n                };\n                /**\n                 * @method ax5.util.string.format\n                 * @returns {*}\n                 */\n                this.format = function () {\n                    var args = [];\n                    for (var i = 0, l = arguments.length; i < l; i++) {\n                        args = args.concat(arguments[i]);\n                    }\n                    return this.value.replace(/{(\\d+)}/g, function (match, number) {\n                        return typeof args[number] != 'undefined' ? args[number] : match;\n                    });\n                };\n                /**\n                 * @method ax5.util.string.escape\n                 * @returns {*}\n                 */\n                this.escape = function () {\n                    return escapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.unescape\n                 * @returns {*}\n                 */\n                this.unescape = function () {\n                    return unescapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.encode\n                 * @returns {*}\n                 */\n                this.encode = function () {\n                    return encode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.decode\n                 * @returns {*}\n                 */\n                this.decode = function () {\n                    return decode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.left\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.left = function (_pos) {\n                    return left(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.right\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.right = function (_pos) {\n                    return right(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.camelCase\n                 * @returns {*}\n                 */\n                this.camelCase = function () {\n                    return camelCase(this.value);\n                };\n                /**\n                 * @method ax5.util.string.snakeCase\n                 * @returns {*}\n                 */\n                this.snakeCase = function () {\n                    return snakeCase(this.value);\n                };\n            }\n            return new ax5string(_string);\n        }\n\n        return {\n            alert: alert,\n            each: each,\n            map: map,\n            search: search,\n            reduce: reduce,\n            reduceRight: reduceRight,\n            filter: filter,\n            sum: sum,\n            avg: avg,\n            toJson: toJson,\n            parseJson: parseJson,\n            first: first,\n            last: last,\n            deepCopy: deepCopy,\n\n            left: left,\n            right: right,\n            getType: getType,\n            isWindow: isWindow,\n            isElement: isElement,\n            isObject: isObject,\n            isArray: isArray,\n            isFunction: isFunction,\n            isString: isString,\n            isNumber: isNumber,\n            isNodelist: isNodelist,\n            isUndefined: isUndefined,\n            isNothing: isNothing,\n            setCookie: setCookie,\n            getCookie: getCookie,\n            camelCase: camelCase,\n            snakeCase: snakeCase,\n            number: number,\n            toArray: toArray,\n            merge: merge,\n            param: param,\n            error: error,\n            date: date,\n            dday: dday,\n            daysOfMonth: daysOfMonth,\n            weeksOfMonth: weeksOfMonth,\n            setDigit: setDigit,\n            times: times,\n            findParentNode: findParentNode,\n            cssNumber: cssNumber,\n            css: css,\n            isDate: isDate,\n            isDateFormat: isDateFormat,\n            stopEvent: stopEvent,\n            selectRange: selectRange,\n            debounce: debounce,\n            escapeHtml: escapeHtml,\n            unescapeHtml: unescapeHtml,\n\n            string: string\n        };\n    }();\n\n    if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === \"object\" && _typeof(module.exports) === \"object\") {\n        module.exports = ax5;\n    } else {\n        root.ax5 = function () {\n            return ax5;\n        }(); // ax5.ui에 연결\n    }\n}).call(typeof window !== \"undefined\" ? window : undefined);\n\nax5.def = {};\nax5.info.errorMsg[\"ax5dialog\"] = {\n    \"501\": \"Duplicate call error\"\n};\n\nax5.info.errorMsg[\"ax5picker\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find content key\"\n};\n\nax5.info.errorMsg[\"single-uploader\"] = {\n    \"460\": \"There are no files to be uploaded.\",\n    \"461\": \"There is no uploaded files.\"\n};\n\nax5.info.errorMsg[\"ax5calendar\"] = {\n    \"401\": \"Can not find target element\"\n};\n\nax5.info.errorMsg[\"ax5formatter\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find pattern\"\n};\n\nax5.info.errorMsg[\"ax5menu\"] = {\n    \"501\": \"Can not find menu item\"\n};\n\nax5.info.errorMsg[\"ax5select\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};\n\nax5.info.errorMsg[\"ax5combobox\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};\n// 필수 Ployfill 확장 구문\n(function () {\n    'use strict';\n\n    var root = this,\n        re_trim = /^\\s*|\\s*$/g;\n\n    // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n    if (!Object.keys) {\n        Object.keys = function () {\n            var hwp = Object.prototype.hasOwnProperty,\n                hdeb = !{ toString: null }.propertyIsEnumerable('toString'),\n                de = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'],\n                del = de.length;\n\n            return function (obj) {\n                if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' && (typeof obj !== 'function' || obj === null)) throw new TypeError('type err');\n                var r = [],\n                    prop,\n                    i;\n                for (prop in obj) {\n                    if (hwp.call(obj, prop)) r.push(prop);\n                }if (hdeb) {\n                    for (i = 0; i < del; i++) {\n                        if (hwp.call(obj, de[i])) r.push(de[i]);\n                    }\n                }\n                return r;\n            };\n        }();\n    }\n\n    // ES5 15.4.4.18 Array.prototype.forEach ( callbackfn [ , thisArg ] )\n    // From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\n    if (!Array.prototype.forEach) {\n        Array.prototype.forEach = function (fun /*, thisp */) {\n            if (this === void 0 || this === null) {\n                throw TypeError();\n            }\n            var t = Object(this);\n            var len = t.length >>> 0;\n            if (typeof fun !== \"function\") {\n                throw TypeError();\n            }\n            var thisp = arguments[1],\n                i;\n            for (i = 0; i < len; i++) {\n                if (i in t) {\n                    fun.call(thisp, t[i], i, t);\n                }\n            }\n        };\n    }\n\n    // ES5 15.3.4.5 Function.prototype.bind ( thisArg [, arg1 [, arg2, ... ]] )\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (o) {\n            if (typeof this !== 'function') {\n                throw TypeError(\"function\");\n            }\n            var slice = [].slice,\n                args = slice.call(arguments, 1),\n                self = this,\n                bound = function bound() {\n                return self.apply(this instanceof nop ? this : o, args.concat(slice.call(arguments)));\n            };\n\n            function nop() {}\n\n            nop.prototype = self.prototype;\n            bound.prototype = new nop();\n            return bound;\n        };\n    }\n\n    /*global document */\n    /**\n     * define document.querySelector & document.querySelectorAll for IE7\n     *\n     * A not very fast but small hack. The approach is taken from\n     * http://weblogs.asp.net/bleroy/archive/2009/08/31/queryselectorall-on-old-ie-versions-something-that-doesn-t-work.aspx\n     *\n     */\n    (function () {\n        if (document.querySelectorAll || document.querySelector) {\n            return;\n        }\n        if (!document.createStyleSheet) return;\n        var style = document.createStyleSheet(),\n            select = function select(selector, maxCount) {\n            var all = document.all,\n                l = all.length,\n                i,\n                resultSet = [];\n\n            style.addRule(selector, \"foo:bar\");\n            for (i = 0; i < l; i += 1) {\n                if (all[i].currentStyle.foo === \"bar\") {\n                    resultSet.push(all[i]);\n                    if (resultSet.length > maxCount) {\n                        break;\n                    }\n                }\n            }\n            style.removeRule(0);\n            return resultSet;\n        };\n\n        document.querySelectorAll = function (selector) {\n            return select(selector, Infinity);\n        };\n        document.querySelector = function (selector) {\n            return select(selector, 1)[0] || null;\n        };\n    })();\n\n    if (!String.prototype.trim) {\n        (function () {\n            String.prototype.trim = function () {\n                return this.replace(re_trim, '');\n            };\n        })();\n    }\n\n    if (!window.JSON) {\n        window.JSON = {\n            parse: function parse(sJSON) {\n                return new Function('', 'return ' + sJSON)();\n            },\n            stringify: function () {\n                var r = /[\"]/g,\n                    _f;\n                return _f = function f(vContent) {\n                    var result, i, j;\n                    switch (result = typeof vContent === 'undefined' ? 'undefined' : _typeof(vContent)) {\n                        case 'string':\n                            return '\"' + vContent.replace(r, '\\\\\"') + '\"';\n                        case 'number':\n                        case 'boolean':\n                            return vContent.toString();\n                        case 'undefined':\n                            return 'undefined';\n                        case 'function':\n                            return '\"\"';\n                        case 'object':\n                            if (!vContent) return 'null';\n                            result = '';\n                            if (vContent.splice) {\n                                for (i = 0, j = vContent.length; i < j; i++) {\n                                    result += ',' + _f(vContent[i]);\n                                }return '[' + result.substr(1) + ']';\n                            } else {\n                                for (i in vContent) {\n                                    if (vContent.hasOwnProperty(i) && vContent[i] !== undefined && typeof vContent[i] != 'function') result += ',\"' + i + '\":' + _f(vContent[i]);\n                                }return '{' + result.substr(1) + '}';\n                            }\n                    }\n                };\n            }()\n        };\n    }\n\n    // splice ie8 <= polyfill\n    (function () {\n        if (!document.documentMode || document.documentMode >= 9) return false;\n        var _splice = Array.prototype.splice;\n        Array.prototype.splice = function () {\n            var args = Array.prototype.slice.call(arguments);\n            if (typeof args[1] === \"undefined\") args[1] = this.length - args[0];\n            return _splice.apply(this, args);\n        };\n    })();\n\n    /**\n     * Shim for \"fixing\" IE's lack of support (IE < 9) for applying slice\n     * on host objects like NamedNodeMap, NodeList, and HTMLCollection\n     * (technically, since host objects have been implementation-dependent,\n     * at least before ES6, IE hasn't needed to work this way).\n     * Also works on strings, fixes IE < 9 to allow an explicit undefined\n     * for the 2nd argument (as in Firefox), and prevents errors when\n     * called on other DOM objects.\n     */\n    (function () {\n        'use strict';\n\n        var _slice = Array.prototype.slice;\n\n        try {\n            // Can't be used with DOM elements in IE < 9\n            _slice.call(document.documentElement);\n        } catch (e) {\n            // Fails in IE < 9\n            // This will work for genuine arrays, array-like objects,\n            // NamedNodeMap (attributes, entities, notations),\n            // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),\n            // and will not fail on other DOM objects (as do DOM elements in IE < 9)\n            Array.prototype.slice = function (begin, end) {\n                // IE < 9 gets unhappy with an undefined end argument\n                end = typeof end !== 'undefined' ? end : this.length;\n\n                // For native Array objects, we use the native slice function\n                if (Object.prototype.toString.call(this) === '[object Array]') {\n                    return _slice.call(this, begin, end);\n                }\n\n                // For array like object we handle it ourselves.\n                var i,\n                    cloned = [],\n                    size,\n                    len = this.length;\n\n                // Handle negative value for \"begin\"\n                var start = begin || 0;\n                start = start >= 0 ? start : Math.max(0, len + start);\n\n                // Handle negative value for \"end\"\n                var upTo = typeof end == 'number' ? Math.min(end, len) : len;\n                if (end < 0) {\n                    upTo = len + end;\n                }\n\n                // Actual expected size of the slice\n                size = upTo - start;\n\n                if (size > 0) {\n                    cloned = new Array(size);\n                    if (this.charAt) {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this.charAt(start + i);\n                        }\n                    } else {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this[start + i];\n                        }\n                    }\n                }\n\n                return cloned;\n            };\n        }\n    })();\n\n    // Console-polyfill. MIT license. https://github.com/paulmillr/console-polyfill\n    // Make it safe to do console.log() always.\n    (function (con) {\n        var prop, method;\n        var empty = {};\n        var dummy = function dummy() {};\n        var properties = 'memory'.split(',');\n        var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' + 'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' + 'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n        while (prop = properties.pop()) {\n            con[prop] = con[prop] || empty;\n        }while (method = methods.pop()) {\n            con[method] = con[method] || dummy;\n        }\n    })(window.console || {}); // Using `this` for web workers.\n\n\n    // Modernizr style test\n    if (!(window.webkitMatchMedia || window.mozMatchMedia || window.oMatchMedia || window.msMatchMedia || window.matchMedia)) {\n        var root = document.getElementsByTagName('html')[0];\n        root.className += ' no-matchmedia';\n    }\n\n    /*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */\n    window.matchMedia || (window.matchMedia = function () {\n        \"use strict\";\n\n        // For browsers that support matchMedium api such as IE 9 and webkit\n\n        var styleMedia = window.styleMedia || window.media;\n\n        // For those that don't support matchMedium\n        if (!styleMedia) {\n            var style = document.createElement('style'),\n                script = document.getElementsByTagName('script')[0],\n                info = null;\n\n            style.type = 'text/css';\n            style.id = 'matchmediajs-test';\n\n            script.parentNode.insertBefore(style, script);\n\n            // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n            info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n            styleMedia = {\n                matchMedium: function matchMedium(media) {\n                    var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n                    // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                    if (style.styleSheet) {\n                        style.styleSheet.cssText = text;\n                    } else {\n                        style.textContent = text;\n                    }\n\n                    // Test if media query is true or false\n                    return info.width === '1px';\n                }\n            };\n        }\n\n        return function (media) {\n            return {\n                matches: styleMedia.matchMedium(media || 'all'),\n                media: media || 'all'\n            };\n        };\n    }());\n\n    /*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */\n    (function () {\n        // Bail out for browsers that have addListener support\n        if (window.matchMedia && window.matchMedia('all').addListener) {\n            return false;\n        }\n\n        var localMatchMedia = window.matchMedia,\n            hasMediaQueries = localMatchMedia('only all').matches,\n            isListening = false,\n            timeoutID = 0,\n            // setTimeout for debouncing 'handleChange'\n        queries = [],\n            // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n        handleChange = function handleChange(evt) {\n            // Debounce\n            clearTimeout(timeoutID);\n\n            timeoutID = setTimeout(function () {\n                for (var i = 0, il = queries.length; i < il; i++) {\n                    var mql = queries[i].mql,\n                        listeners = queries[i].listeners || [],\n                        matches = localMatchMedia(mql.media).matches;\n\n                    // Update mql.matches value and call listeners\n                    // Fire listeners only if transitioning to or from matched state\n                    if (matches !== mql.matches) {\n                        mql.matches = matches;\n\n                        for (var j = 0, jl = listeners.length; j < jl; j++) {\n                            listeners[j].call(window, mql);\n                        }\n                    }\n                }\n            }, 30);\n        };\n\n        window.matchMedia = function (media) {\n            var mql = localMatchMedia(media),\n                listeners = [],\n                index = 0;\n\n            mql.addListener = function (listener) {\n                // Changes would not occur to css media type so return now (Affects IE <= 8)\n                if (!hasMediaQueries) {\n                    return;\n                }\n\n                // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n                // There should only ever be 1 resize listener running for performance\n                if (!isListening) {\n                    isListening = true;\n                    window.addEventListener('resize', handleChange, true);\n                }\n\n                // Push object only if it has not been pushed already\n                if (index === 0) {\n                    index = queries.push({\n                        mql: mql,\n                        listeners: listeners\n                    });\n                }\n\n                listeners.push(listener);\n            };\n\n            mql.removeListener = function (listener) {\n                for (var i = 0, il = listeners.length; i < il; i++) {\n                    if (listeners[i] === listener) {\n                        listeners.splice(i, 1);\n                    }\n                }\n            };\n\n            return mql;\n        };\n    })();\n\n    // extend innerWidth ..\n    var html = document.getElementsByTagName('html')[0];\n    var body = document.getElementsByTagName('body')[0];\n\n    /*\n    if (!window.innerWidth) window.innerWidth = html.clientWidth;\n    if (!window.innerHeight) window.innerHeight = html.clientHeight;\n    if (!window.scrollX) window.scrollX = window.pageXOffset || html.scrollLeft;\n    if (!window.scrollY) window.scrollY = window.pageYOffset || html.scrollTop;\n    */\n}).call(window);\n/**\n * Refer to this by {@link ax5}.\n * @namespace ax5.ui\n */\n\n/**\n * @class ax5.ui.root\n * @classdesc ax5 ui class\n * @author tom@axisj.com\n * @example\n * ```\n * var myui = new ax5.ui.root();\n * ```\n */\nax5.ui = function () {\n\n    function axUi() {\n        this.config = {};\n        this.name = \"root\";\n\n        /**\n         * 클래스의 속성 정의 메소드 속성 확장후에 내부에 init 함수를 호출합니다.\n         * @method ax5.ui.root.setConfig\n         * @param {Object} config - 클래스 속성값\n         * @param {Boolean} [callInit=true] - init 함수 호출 여부\n         * @returns {ax5.ui.axUi}\n         * @example\n         * ```\n         * var myui = new ax5.ui.root();\n         * myui.setConfig({\n        * \tid:\"abcd\"\n        * });\n         * ```\n         */\n        this.setConfig = function (cfg, callInit) {\n            jQuery.extend(true, this.config, cfg);\n            if (typeof callInit == \"undefined\" || callInit === true) {\n                this.init();\n            }\n            return this;\n        };\n        this.init = function () {\n            console.log(this.config);\n        };\n\n        this.bindWindowResize = function (callBack) {\n            setTimeout(function () {\n                jQuery(window).resize(function () {\n                    if (this.bindWindowResize__) clearTimeout(this.bindWindowResize__);\n                    this.bindWindowResize__ = setTimeout(function () {\n                        callBack.call(this);\n                    }.bind(this), 10);\n                }.bind(this));\n            }.bind(this), 100);\n        };\n\n        this.stopEvent = function (e) {\n            if (e.preventDefault) e.preventDefault();\n            if (e.stopPropagation) e.stopPropagation();\n            e.cancelBubble = true;\n            return false;\n        };\n\n        this.toString = function () {\n            return this.name + '@' + this.version;\n        };\n\n        // instance init\n        this.main = function () {}.apply(this, arguments);\n    }\n\n    /**\n     * @method ax5.ui.addClass\n     * @param {Object} config\n     * @param {String} config.className - name of Class\n     * @param {String} [config.version=\"\"] - version of Class\n     * @param {Object} [config.classStore=ax5.ui] - 클래스가 저장될 경로\n     * @param {Function} [config.superClass=ax5.ui.root]\n     * @param {Function} cls - Class Function\n     */\n    function addClass(config, cls) {\n        if (!config || !config.className) throw 'invalid call';\n        var classStore = config.classStore ? config.classStore : ax5.ui;\n        if (!classStore) throw 'invalid classStore';\n\n        // make ui definition variable\n        ax5.def[config.className] = {\n            version: config.version\n        };\n\n        var factory = function factory(cls, arg) {\n            switch (arg.length) {\n                case 0:\n                    return new cls();\n                    break;\n                case 1:\n                    return new cls(arg[0]);\n                    break;\n                case 2:\n                    return new cls(arg[0], arg[1]);\n                    break;\n                case 3:\n                    return new cls(arg[0], arg[1], arg[2]);\n                    break;\n            }\n        };\n        var initInstance = function initInstance(name, version, instance) {\n            instance.name = name;\n            instance.version = version;\n            instance.instanceId = ax5.getGuid();\n            return instance;\n        };\n        var initPrototype = function initPrototype(cls) {\n            var superClass = config.superClass ? config.superClass : ax5.ui.root;\n            if (!ax5.util.isFunction(superClass)) throw 'invalid superClass';\n            superClass.call(this); // 부모호출\n            cls.prototype = new superClass(); // 상속\n        };\n        var wrapper = function wrapper() {\n            if (!this || !(this instanceof wrapper)) throw 'invalid call';\n            var instance = factory(cls, arguments);\n            return initInstance(config.className, config.version || \"\", instance);\n        };\n        initPrototype.call(this, cls);\n        classStore[config.className] = wrapper;\n    }\n\n    return {\n        root: axUi,\n        addClass: addClass\n    };\n}();\n\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n * https://github.com/thomasJang/mustache.js -- imporove some variables\n */\n\n(function defineMustache(global, factory) {\n\n    factory(global.mustache = {});\n})(window.ax5, function mustacheFactory(mustache) {\n\n    var objectToString = Object.prototype.toString;\n    var isArray = Array.isArray || function isArrayPolyfill(object) {\n        return objectToString.call(object) === '[object Array]';\n    };\n\n    function isFunction(object) {\n        return typeof object === 'function';\n    }\n\n    /**\n     * More correct typeof string handling array\n     * which normally returns typeof 'object'\n     */\n    function typeStr(obj) {\n        return isArray(obj) ? 'array' : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n    }\n\n    function escapeRegExp(string) {\n        return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    /**\n     * Null safe way of checking whether or not an object,\n     * including its prototype, has a given property\n     */\n    function hasProperty(obj, propName) {\n        return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && propName in obj;\n    }\n\n    // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n    // See https://github.com/janl/mustache.js/issues/189\n    var regExpTest = RegExp.prototype.test;\n\n    function testRegExp(re, string) {\n        return regExpTest.call(re, string);\n    }\n\n    var nonSpaceRe = /\\S/;\n\n    function isWhitespace(string) {\n        return !testRegExp(nonSpaceRe, string);\n    }\n\n    var entityMap = {\n        '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#39;', '/': '&#x2F;'\n    };\n\n    function escapeHtml(string) {\n        return String(string).replace(/[&<>\"'\\/]/g, function fromEntityMap(s) {\n            return entityMap[s];\n        });\n    }\n\n    var whiteRe = /\\s*/;\n    var spaceRe = /\\s+/;\n    var equalsRe = /\\s*=/;\n    var curlyRe = /\\s*\\}/;\n    var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n    /**\n     * Breaks up the given `template` string into a tree of tokens. If the `tags`\n     * argument is given here it must be an array with two string values: the\n     * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n     * course, the default is to use mustaches (i.e. mustache.tags).\n     *\n     * A token is an array with at least 4 elements. The first element is the\n     * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n     * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n     * all text that appears outside a symbol this element is \"text\".\n     *\n     * The second element of a token is its \"value\". For mustache tags this is\n     * whatever else was inside the tag besides the opening symbol. For text tokens\n     * this is the text itself.\n     *\n     * The third and fourth elements of the token are the start and end indices,\n     * respectively, of the token in the original template.\n     *\n     * Tokens that are the root node of a subtree contain two more elements: 1) an\n     * array of tokens in the subtree and 2) the index in the original template at\n     * which the closing tag for that section begins.\n     */\n    function parseTemplate(template, tags) {\n        if (!template) return [];\n\n        var sections = []; // Stack to hold section tokens\n        var tokens = []; // Buffer to hold the tokens\n        var spaces = []; // Indices of whitespace tokens on the current line\n        var hasTag = false; // Is there a {{tag}} on the current line?\n        var nonSpace = false; // Is there a non-space char on the current line?\n\n        // Strips all whitespace tokens array for the current line\n        // if there was a {{#tag}} on it and otherwise only space.\n        function stripSpace() {\n            if (hasTag && !nonSpace) {\n                while (spaces.length) {\n                    delete tokens[spaces.pop()];\n                }\n            } else {\n                spaces = [];\n            }\n\n            hasTag = false;\n            nonSpace = false;\n        }\n\n        var openingTagRe, closingTagRe, closingCurlyRe;\n\n        function compileTags(tagsToCompile) {\n            if (typeof tagsToCompile === 'string') tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n            if (!isArray(tagsToCompile) || tagsToCompile.length !== 2) throw new Error('Invalid tags: ' + tagsToCompile);\n\n            openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n            closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n            closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n        }\n\n        compileTags(tags || mustache.tags);\n\n        var scanner = new Scanner(template);\n\n        var start, type, value, chr, token, openSection;\n        while (!scanner.eos()) {\n            start = scanner.pos;\n\n            // Match any text between tags.\n            value = scanner.scanUntil(openingTagRe);\n\n            if (value) {\n                for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n                    chr = value.charAt(i);\n\n                    if (isWhitespace(chr)) {\n                        spaces.push(tokens.length);\n                    } else {\n                        nonSpace = true;\n                    }\n\n                    tokens.push(['text', chr, start, start + 1]);\n                    start += 1;\n\n                    // Check for whitespace on the current line.\n                    if (chr === '\\n') stripSpace();\n                }\n            }\n\n            // Match the opening tag.\n            if (!scanner.scan(openingTagRe)) break;\n\n            hasTag = true;\n\n            // Get the tag type.\n            type = scanner.scan(tagRe) || 'name';\n            scanner.scan(whiteRe);\n\n            // Get the tag value.\n            if (type === '=') {\n                value = scanner.scanUntil(equalsRe);\n                scanner.scan(equalsRe);\n                scanner.scanUntil(closingTagRe);\n            } else if (type === '{') {\n                value = scanner.scanUntil(closingCurlyRe);\n                scanner.scan(curlyRe);\n                scanner.scanUntil(closingTagRe);\n                type = '&';\n            } else {\n                value = scanner.scanUntil(closingTagRe);\n            }\n\n            // Match the closing tag.\n            if (!scanner.scan(closingTagRe)) throw new Error('Unclosed tag at ' + scanner.pos);\n\n            token = [type, value, start, scanner.pos];\n            tokens.push(token);\n\n            if (type === '#' || type === '^') {\n                sections.push(token);\n            } else if (type === '/') {\n                // Check section nesting.\n                openSection = sections.pop();\n\n                if (!openSection) throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n                if (openSection[1] !== value) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n            } else if (type === 'name' || type === '{' || type === '&') {\n                nonSpace = true;\n            } else if (type === '=') {\n                // Set the tags for the next time around.\n                compileTags(value);\n            }\n        }\n\n        // Make sure there are no open sections when we're done.\n        openSection = sections.pop();\n\n        if (openSection) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n        return nestTokens(squashTokens(tokens));\n    }\n\n    /**\n     * Combines the values of consecutive text tokens in the given `tokens` array\n     * to a single token.\n     */\n    function squashTokens(tokens) {\n        var squashedTokens = [];\n\n        var token, lastToken;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            if (token) {\n                if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n                    lastToken[1] += token[1];\n                    lastToken[3] = token[3];\n                } else {\n                    squashedTokens.push(token);\n                    lastToken = token;\n                }\n            }\n        }\n\n        return squashedTokens;\n    }\n\n    /**\n     * Forms the given array of `tokens` into a nested tree structure where\n     * tokens that represent a section have two additional items: 1) an array of\n     * all tokens that appear in that section and 2) the index in the original\n     * template that represents the end of that section.\n     */\n    function nestTokens(tokens) {\n        var nestedTokens = [];\n        var collector = nestedTokens;\n        var sections = [];\n\n        var token, section;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            switch (token[0]) {\n                case '#':\n                case '^':\n                    collector.push(token);\n                    sections.push(token);\n                    collector = token[4] = [];\n                    break;\n                case '/':\n                    section = sections.pop();\n                    section[5] = token[2];\n                    collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n                    break;\n                default:\n                    collector.push(token);\n            }\n        }\n\n        return nestedTokens;\n    }\n\n    /**\n     * A simple string scanner that is used by the template parser to find\n     * tokens in template strings.\n     */\n    function Scanner(string) {\n        this.string = string;\n        this.tail = string;\n        this.pos = 0;\n    }\n\n    /**\n     * Returns `true` if the tail is empty (end of string).\n     */\n    Scanner.prototype.eos = function eos() {\n        return this.tail === '';\n    };\n\n    /**\n     * Tries to match the given regular expression at the current position.\n     * Returns the matched text if it can match, the empty string otherwise.\n     */\n    Scanner.prototype.scan = function scan(re) {\n        var match = this.tail.match(re);\n\n        if (!match || match.index !== 0) return '';\n\n        var string = match[0];\n\n        this.tail = this.tail.substring(string.length);\n        this.pos += string.length;\n\n        return string;\n    };\n\n    /**\n     * Skips all text until the given regular expression can be matched. Returns\n     * the skipped string, which is the entire tail if no match can be made.\n     */\n    Scanner.prototype.scanUntil = function scanUntil(re) {\n        var index = this.tail.search(re),\n            match;\n\n        switch (index) {\n            case -1:\n                match = this.tail;\n                this.tail = '';\n                break;\n            case 0:\n                match = '';\n                break;\n            default:\n                match = this.tail.substring(0, index);\n                this.tail = this.tail.substring(index);\n        }\n\n        this.pos += match.length;\n\n        return match;\n    };\n\n    /**\n     * Represents a rendering context by wrapping a view object and\n     * maintaining a reference to the parent context.\n     */\n    function Context(view, parentContext) {\n        this.view = view;\n        this.cache = {\n            '.': this.view,\n            '@each': function each() {\n                var returns = [];\n                for (var k in this) {\n                    returns.push({ '@key': k, '@value': this[k] });\n                }\n                return returns;\n            }\n        };\n        this.parent = parentContext;\n    }\n\n    /**\n     * Creates a new context using the given view with this context\n     * as the parent.\n     */\n    Context.prototype.push = function push(view) {\n        return new Context(view, this);\n    };\n\n    /**\n     * Returns the value of the given name in this context, traversing\n     * up the context hierarchy if the value is absent in this context's view.\n     */\n    Context.prototype.lookup = function lookup(name) {\n        var cache = this.cache;\n\n        var value;\n        if (cache.hasOwnProperty(name)) {\n            value = cache[name];\n        } else {\n            var context = this,\n                names,\n                index,\n                lookupHit = false;\n\n            while (context) {\n                if (name.indexOf('.') > 0) {\n                    value = context.view;\n                    names = name.split('.');\n                    index = 0;\n\n                    /**\n                     * Using the dot notion path in `name`, we descend through the\n                     * nested objects.\n                     *\n                     * To be certain that the lookup has been successful, we have to\n                     * check if the last object in the path actually has the property\n                     * we are looking for. We store the result in `lookupHit`.\n                     *\n                     * This is specially necessary for when the value has been set to\n                     * `undefined` and we want to avoid looking up parent contexts.\n                     **/\n                    while (value != null && index < names.length) {\n                        if (index === names.length - 1) lookupHit = hasProperty(value, names[index]);\n\n                        value = value[names[index++]];\n                    }\n                } else {\n                    value = context.view[name];\n                    lookupHit = hasProperty(context.view, name);\n                }\n\n                if (lookupHit) break;\n\n                context = context.parent;\n            }\n\n            cache[name] = value;\n        }\n\n        if (isFunction(value)) value = value.call(this.view);\n\n        return value;\n    };\n\n    /**\n     * A Writer knows how to take a stream of tokens and render them to a\n     * string, given a context. It also maintains a cache of templates to\n     * avoid the need to parse the same template twice.\n     */\n    function Writer() {\n        this.cache = {};\n    }\n\n    /**\n     * Clears all cached templates in this writer.\n     */\n    Writer.prototype.clearCache = function clearCache() {\n        this.cache = {};\n    };\n\n    /**\n     * Parses and caches the given `template` and returns the array of tokens\n     * that is generated from the parse.\n     */\n    Writer.prototype.parse = function parse(template, tags) {\n        var cache = this.cache;\n        var tokens = cache[template];\n\n        if (tokens == null) tokens = cache[template] = parseTemplate(template, tags);\n\n        return tokens;\n    };\n\n    /**\n     * High-level method that is used to render the given `template` with\n     * the given `view`.\n     *\n     * The optional `partials` argument may be an object that contains the\n     * names and templates of partials that are used in the template. It may\n     * also be a function that is used to load partial templates on the fly\n     * that takes a single argument: the name of the partial.\n     */\n    Writer.prototype.render = function render(template, view, partials) {\n        var tokens = this.parse(template);\n        var context = view instanceof Context ? view : new Context(view);\n        return this.renderTokens(tokens, context, partials, template);\n    };\n\n    /**\n     * Low-level method that renders the given array of `tokens` using\n     * the given `context` and `partials`.\n     *\n     * Note: The `originalTemplate` is only ever used to extract the portion\n     * of the original template that was contained in a higher-order section.\n     * If the template doesn't use higher-order sections, this argument may\n     * be omitted.\n     */\n    Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate) {\n        var buffer = '';\n        var token, symbol, value;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            value = undefined;\n            token = tokens[i];\n            symbol = token[0];\n\n            if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);else if (symbol === '&') value = this.unescapedValue(token, context);else if (symbol === 'name') value = this.escapedValue(token, context);else if (symbol === 'text') value = this.rawValue(token);\n\n            if (value !== undefined) buffer += value;\n        }\n\n        return buffer;\n    };\n\n    Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n        var self = this;\n        var buffer = '';\n\n        var value = context.lookup(token[1]);\n\n        // This function is used to render an arbitrary template\n        // in the current context by higher-order sections.\n        function subRender(template) {\n            return self.render(template, context, partials);\n        }\n\n        if (!value) return;\n\n        if (isArray(value)) {\n            for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n                if (value[j]) {\n                    if (_typeof(value[j]) === 'object') {\n                        value[j]['@i'] = j;\n                        value[j]['@first'] = j === 0;\n                    }\n\n                    buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n                }\n            }\n        } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'string' || typeof value === 'number') {\n            buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        } else if (isFunction(value)) {\n            if (typeof originalTemplate !== 'string') throw new Error('Cannot use higher-order sections without the original template');\n\n            // Extract the portion of the original template that the section contains.\n            value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n            if (value != null) buffer += value;\n        } else {\n            buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n        return buffer;\n    };\n\n    Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n        var value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || isArray(value) && value.length === 0) return this.renderTokens(token[4], context, partials, originalTemplate);\n    };\n\n    Writer.prototype.renderPartial = function renderPartial(token, context, partials) {\n        if (!partials) return;\n\n        var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null) return this.renderTokens(this.parse(value), context, partials, value);\n    };\n\n    Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null) return value;\n    };\n\n    Writer.prototype.escapedValue = function escapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null) return mustache.escape(value);\n    };\n\n    Writer.prototype.rawValue = function rawValue(token) {\n        return token[1];\n    };\n\n    mustache.name = 'mustache.js';\n    mustache.version = '2.1.3';\n    mustache.tags = ['{{', '}}'];\n\n    // All high-level mustache.* functions use this writer.\n    var defaultWriter = new Writer();\n\n    /**\n     * Clears all cached templates in the default writer.\n     */\n    mustache.clearCache = function clearCache() {\n        return defaultWriter.clearCache();\n    };\n\n    /**\n     * Parses and caches the given template in the default writer and returns the\n     * array of tokens it contains. Doing this ahead of time avoids the need to\n     * parse templates on the fly as they are rendered.\n     */\n    mustache.parse = function parse(template, tags) {\n        return defaultWriter.parse(template, tags);\n    };\n\n    /**\n     * Renders the `template` with the given `view` and `partials` using the\n     * default writer.\n     */\n    mustache.render = function render(template, view, partials) {\n        if (typeof template !== 'string') {\n            throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n        }\n\n        return defaultWriter.render(template, view, partials);\n    };\n\n    // This is here for backwards compatibility with 0.4.x.,\n    /*eslint-disable */ // eslint wants camel cased function name\n    mustache.to_html = function to_html(template, view, partials, send) {\n        /*eslint-enable*/\n\n        var result = mustache.render(template, view, partials);\n\n        if (isFunction(send)) {\n            send(result);\n        } else {\n            return result;\n        }\n    };\n\n    // Export the escaping function so that the user may override it.\n    // See https://github.com/janl/mustache.js/issues/244\n    mustache.escape = escapeHtml;\n\n    // Export these mainly for testing, but also for advanced usage.\n    mustache.Scanner = Scanner;\n    mustache.Context = Context;\n    mustache.Writer = Writer;\n});\n// ax5.ui.dialog\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var DIALOG;\n\n    UI.addClass({\n        className: \"dialog\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5dialog\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var dialog = new ax5.ui.dialog();\n         * var mask = new ax5.ui.mask();\n         * dialog.setConfig({\n         *     zIndex: 5000,\n         *     onStateChanged: function () {\n         *         if (this.state === \"open\") {\n         *             mask.open();\n         *         }\n         *         else if (this.state === \"close\") {\n         *             mask.close();\n         *         }\n         *     }\n         * });\n         *\n         * dialog.alert({\n         *     theme: 'default',\n         *     title: 'Alert default',\n         *     msg: theme + ' color'\n         * }, function () {\n         *     console.log(this);\n         * });\n         * ```\n         */\n        var ax5dialog = function ax5dialog() {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-dialog-' + this.instanceId,\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                title: '',\n                msg: '',\n                lang: {\n                    \"ok\": \"ok\", \"cancel\": \"cancel\"\n                },\n                animateTime: 150\n            };\n            this.activeDialog = null;\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n                return true;\n            },\n\n            /**\n             * @method ax5dialog.getContent\n             * @param {String} dialogId\n             * @param {Object} opts\n             * @returns dialogDisplay\n             */\n            getContent = function getContent(dialogId, opts) {\n                var data = {\n                    dialogId: dialogId,\n                    title: opts.title || cfg.title || \"\",\n                    msg: (opts.msg || cfg.msg || \"\").replace(/\\n/g, \"<br/>\"),\n                    input: opts.input,\n                    btns: opts.btns,\n                    '_crlf': function _crlf() {\n                        return this.replace(/\\n/g, \"<br/>\");\n                    }\n                };\n\n                try {\n                    return DIALOG.tmpl.get.call(this, \"dialogDisplay\", data);\n                } finally {\n                    data = null;\n                }\n            },\n\n            /**\n             * @method ax5dialog.open\n             * @param {Object} opts\n             * @param callback\n             */\n            open = function open(opts, callback) {\n                var pos = {},\n                    box;\n\n                opts.id = opts.id || cfg.id;\n\n                box = {\n                    width: opts.width\n                };\n                jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                this.activeDialog = jQuery('#' + opts.id);\n                this.activeDialog.css({ width: box.width });\n\n                // dialog 높이 구하기 - 너비가 정해지면 높이가 변경 될 것.\n                opts.height = box.height = this.activeDialog.height();\n\n                //- position 정렬\n                if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n                    pos.top = jQuery(window).height() / 2 - box.height / 2;\n                    pos.left = jQuery(window).width() / 2 - box.width / 2;\n                } else {\n                    pos.left = opts.position.left || 0;\n                    pos.top = opts.position.top || 0;\n                }\n                if (cfg.zIndex) {\n                    pos[\"z-index\"] = cfg.zIndex;\n                }\n                this.activeDialog.css(pos);\n\n                // bind button event\n                if (opts.dialogType === \"prompt\") {\n                    this.activeDialog.find(\"[data-dialog-prompt]\").get(0).focus();\n                } else {\n                    this.activeDialog.find(\"[data-dialog-btn]\").get(0).focus();\n                }\n\n                this.activeDialog.find(\"[data-dialog-btn]\").on(cfg.clickEventName, function (e) {\n                    btnOnClick.call(this, e || window.event, opts, callback);\n                }.bind(this));\n\n                // bind key event\n                jQuery(window).bind(\"keydown.ax5dialog\", function (e) {\n                    onKeyup.call(this, e || window.event, opts, callback);\n                }.bind(this));\n\n                jQuery(window).bind(\"resize.ax5dialog\", function (e) {\n                    align.call(this, e || window.event);\n                }.bind(this));\n\n                onStateChanged.call(this, opts, {\n                    self: this,\n                    state: \"open\"\n                });\n\n                pos = null;\n                box = null;\n            },\n                align = function align(e) {\n                if (!this.activeDialog) return this;\n                var opts = self.dialogConfig,\n                    box = {\n                    width: opts.width,\n                    height: opts.height\n                };\n                //- position 정렬\n                if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n                    box.top = window.innerHeight / 2 - box.height / 2;\n                    box.left = window.innerWidth / 2 - box.width / 2;\n                } else {\n                    box.left = opts.position.left || 0;\n                    box.top = opts.position.top || 0;\n                }\n                if (box.left < 0) box.left = 0;\n                if (box.top < 0) box.top = 0;\n\n                this.activeDialog.css(box);\n\n                opts = null;\n                box = null;\n\n                return this;\n            },\n                btnOnClick = function btnOnClick(e, opts, callback, target, k) {\n                var that;\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-dialog-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    k = target.getAttribute(\"data-dialog-btn\");\n\n                    that = {\n                        self: this,\n                        key: k, value: opts.btns[k],\n                        dialogId: opts.id,\n                        btnTarget: target\n                    };\n                    if (opts.dialogType === \"prompt\") {\n                        var emptyKey = null;\n                        for (var oi in opts.input) {\n                            that[oi] = this.activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n                            if (that[oi] == \"\" || that[oi] == null) {\n                                emptyKey = oi;\n                                break;\n                            }\n                        }\n                    }\n                    if (opts.btns[k].onClick) {\n                        opts.btns[k].onClick.call(that, k);\n                    } else if (opts.dialogType === \"alert\") {\n                        if (callback) callback.call(that, k);\n                        this.close({ doNotCallback: true });\n                    } else if (opts.dialogType === \"confirm\") {\n                        if (callback) callback.call(that, k);\n                        this.close({ doNotCallback: true });\n                    } else if (opts.dialogType === \"prompt\") {\n                        if (k === 'ok') {\n                            if (emptyKey) {\n                                this.activeDialog.find('[data-dialog-prompt=\"' + emptyKey + '\"]').get(0).focus();\n                                return false;\n                            }\n                        }\n                        if (callback) callback.call(that, k);\n                        this.close({ doNotCallback: true });\n                    }\n                }\n\n                that = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            },\n                onKeyup = function onKeyup(e, opts, callback, target, k) {\n                var that,\n                    emptyKey = null;\n\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n                if (opts.dialogType === \"prompt\") {\n                    if (e.keyCode == ax5.info.eventKeys.RETURN) {\n                        that = {\n                            self: this,\n                            key: k, value: opts.btns[k],\n                            dialogId: opts.id,\n                            btnTarget: target\n                        };\n\n                        for (var oi in opts.input) {\n                            that[oi] = this.activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n                            if (that[oi] == \"\" || that[oi] == null) {\n                                emptyKey = oi;\n                                break;\n                            }\n                        }\n                        if (emptyKey) {\n                            that = null;\n                            emptyKey = null;\n                            return false;\n                        }\n                        if (callback) callback.call(that, k);\n                        this.close({ doNotCallback: true });\n                    }\n                }\n\n                that = null;\n                emptyKey = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            };\n\n            /**\n             * Preferences of dialog UI\n             * @method ax5dialog.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n\n                this.onStateChanged = cfg.onStateChanged;\n                // this.onLoad = cfg.onLoad;\n            };\n\n            /**\n             * open the dialog of alert type\n             * @method ax5dialog.alert\n             * @param {Object|String} [{theme, title, msg, btns}|msg] - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.alert({\n             *  title: 'app title',\n             *  msg: 'alert'\n             * }, function(){});\n             * ```\n             */\n            this.alert = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n\n                if (this.activeDialog) {\n                    // try one more\n                    if (!tryCount) {\n                        setTimeout(function () {\n                            this.alert(opts, callback, 1);\n                        }.bind(this), Number(cfg.animateTime) + 100);\n                    } else {\n                        console.log(ax5.info.getError(\"ax5dialog\", \"501\", \"alert\"));\n                    }\n                    return this;\n                }\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                opts.dialogType = \"alert\";\n                opts.theme = opts.theme || cfg.theme || \"\";\n                opts.callback = callback;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: { label: cfg.lang[\"ok\"], theme: opts.theme }\n                    };\n                }\n                open.call(this, opts, callback);\n\n                return this;\n            };\n\n            /**\n             * open the dialog of confirm type\n             * @method ax5dialog.confirm\n             * @param {Object|String} [{theme, title, msg, btns}|msg] - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.confirm({\n             *  title: 'app title',\n             *  msg: 'confirm'\n             * }, function(){});\n             * ```\n             */\n            this.confirm = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n\n                if (this.activeDialog) {\n                    // try one more\n                    if (!tryCount) {\n                        setTimeout(function () {\n                            this.confirm(opts, callback, 1);\n                        }.bind(this), Number(cfg.animateTime) + 100);\n                    } else {\n                        console.log(ax5.info.getError(\"ax5dialog\", \"501\", \"confirm\"));\n                    }\n                    return this;\n                }\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                opts.dialogType = \"confirm\";\n                opts.theme = opts.theme || cfg.theme || \"\";\n                opts.callback = callback;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: { label: cfg.lang[\"ok\"], theme: opts.theme },\n                        cancel: { label: cfg.lang[\"cancel\"] }\n                    };\n                }\n                open.call(this, opts, callback);\n\n                return this;\n            };\n\n            /**\n             * open the dialog of prompt type\n             * @method ax5dialog.prompt\n             * @param {Object|String} [{theme, title, msg, btns, input}|msg] - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.prompt({\n             *  title: 'app title',\n             *  msg: 'alert'\n             * }, function(){});\n             * ```\n             */\n            this.prompt = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n\n                if (this.activeDialog) {\n                    // try one more\n                    if (!tryCount) {\n                        setTimeout(function () {\n                            this.prompt(opts, callback, 1);\n                        }.bind(this), Number(cfg.animateTime) + 100);\n                    } else {\n                        console.log(ax5.info.getError(\"ax5dialog\", \"501\", \"prompt\"));\n                    }\n                    return this;\n                }\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n                opts.dialogType = \"prompt\";\n                opts.theme = opts.theme || cfg.theme || \"\";\n                opts.callback = callback;\n\n                if (typeof opts.input === \"undefined\") {\n                    opts.input = {\n                        value: { label: \"\" }\n                    };\n                }\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: { label: cfg.lang[\"ok\"], theme: opts.theme },\n                        cancel: { label: cfg.lang[\"cancel\"] }\n                    };\n                }\n                open.call(this, opts, callback);\n\n                return this;\n            };\n\n            /**\n             * close the dialog\n             * @method ax5dialog.close\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.close();\n             * ```\n             */\n            this.close = function (_option) {\n                var opts, that;\n                if (this.activeDialog) {\n                    opts = self.dialogConfig;\n                    this.activeDialog.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax5dialog\");\n                    jQuery(window).unbind(\"resize.ax5dialog\");\n\n                    setTimeout(function () {\n                        if (this.activeDialog) {\n                            this.activeDialog.remove();\n                            this.activeDialog = null;\n                        }\n\n                        that = {\n                            self: this,\n                            state: \"close\",\n                            dialogId: opts.id\n                        };\n\n                        if (opts.callback && (!_option || !_option.doNotCallback)) {\n                            opts.callback.call(that);\n                        }\n\n                        if (opts && opts.onStateChanged) {\n                            opts.onStateChanged.call(that, that);\n                        } else if (this.onStateChanged) {\n                            this.onStateChanged.call(that, that);\n                        }\n\n                        opts = null;\n                        that = null;\n                    }.bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.dialog_instance = UI.dialog_instance || [];\n                UI.dialog_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5dialog;\n    }());\n    DIALOG = ax5.ui.dialog;\n})();\n\n// ax5.ui.dialog.tmpl\n(function () {\n\n    var DIALOG = ax5.ui.dialog;\n\n    var dialogDisplay = function dialogDisplay(columnKeys) {\n        return ' \\n        <div id=\"{{dialogId}}\" data-ax5-ui=\"dialog\" class=\"ax5-ui-dialog {{theme}}\">\\n            <div class=\"ax-dialog-header\">\\n                {{{title}}}\\n            </div>\\n            <div class=\"ax-dialog-body\">\\n                <div class=\"ax-dialog-msg\">{{{msg}}}</div>\\n                \\n                {{#input}}\\n                <div class=\"ax-dialog-prompt\">\\n                    {{#@each}}\\n                    <div class=\"form-group\">\\n                    {{#@value.label}}\\n                    <label>{{#_crlf}}{{{.}}}{{/_crlf}}</label>\\n                    {{/@value.label}}\\n                    <input type=\"{{@value.type}}\" placeholder=\"{{@value.placeholder}}\" class=\"form-control {{@value.theme}}\" data-dialog-prompt=\"{{@key}}\" style=\"width:100%;\" value=\"{{@value.value}}\" />\\n                    {{#@value.help}}\\n                    <p class=\"help-block\">{{#_crlf}}{{.}}{{/_crlf}}</p>\\n                    {{/@value.help}}\\n                    </div>\\n                    {{/@each}}\\n                </div>\\n                {{/input}}\\n                \\n                <div class=\"ax-dialog-buttons\">\\n                    <div class=\"ax-button-wrap\">\\n                    {{#btns}}\\n                        {{#@each}}\\n                        <button type=\"button\" data-dialog-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{@value.label}}</button>\\n                        {{/@each}}\\n                    {{/btns}}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>  \\n        ';\n    };\n\n    DIALOG.tmpl = {\n        \"dialogDisplay\": dialogDisplay,\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(DIALOG.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.mask\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MASK;\n\n    UI.addClass({\n        className: \"mask\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5mask\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var customMask = function customMask() {\n         *     var cTmpl = '' +\n         *         '<div class=\"ax-mask\" id=\"{{maskId}}\" >' +\n         *         '    <div class=\"ax-mask-bg\" style=\"background-color:red !important;\"></div>' +\n         *         '    <div class=\"ax-mask-content\">' +\n         *         '        {{{body}}}' +\n         *         '    </div>' +\n         *         '</div>';\n         *     return cTmpl;\n         * };\n         * ax5.ui.mask.tmpl.customMask = customMask;\n         *\n         * var mask = new ax5.ui.mask();\n         *\n         * mask.open({\n         *     templateName: 'customMask',\n         *     content: 'custom MASK on target',\n         *     target: $(\"#user-content\").get(0),\n         *     onClick: function(){\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        var ax5mask = function ax5mask() {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: '',\n                target: jQuery(document.body).get(0),\n                animateTime: 250\n            };\n            this.maskContent = '';\n            this.status = \"off\";\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                opts = null;\n                that = null;\n                return true;\n            },\n                getBodyTmpl = function getBodyTmpl(data) {\n                if (typeof data.templateName === \"undefined\") data.templateName = \"defaultMask\";\n                return MASK.tmpl.get.call(this, data.templateName, data);\n            },\n                setBody = function setBody(content) {\n                this.maskContent = content;\n            };\n\n            /**\n             * Preferences of Mask UI\n             * @method ax5mask.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5mask}\n             * @example\n             * ```\n             * setConfig({\n             *      target : {Element|AX5 nodelist}, // 마스크 처리할 대상\n             *      content : {String}, // 마스크안에 들어가는 내용물\n             *      onStateChanged: function(){} // 마스크 상태변경 시 호출되는 함수 this.type으로 예외처리 가능\n             * }\n             * ```\n             */\n            this.init = function () {\n                // after setConfig();\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                if (this.config.content) setBody.call(this, this.config.content);\n            };\n\n            /**\n             * open mask\n             * target 을 주지 않으면 기본적으로 body 에 마스크가 적용되고 원하는 타겟을 지정해서 마스크를 씌울 수 있습니다.\n             * 기본 정의된 마스크 외에 사용자가 템플릿을 정의해서 마스크를 사용 가능합니다.\n             * @method ax5mask.open\n             * @param {Object} config\n             * @param {String} config\n             * @returns {ax5mask}\n             * @example\n             * ```js\n             * my_mask.open({\n             *     target: document.body,\n             *     content: \"<h1>Loading..</h1>\",\n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             *\n             * my_mask.open({\n             *     target: $(\"#mask-target\").get(0), // dom Element\n             *     content: \"<h1>Loading..</h1>\",\n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             *\n             *\n             * var customMask = function customMask() {\n             *     var cTmpl = '' +\n             *             '<div class=\"ax-mask\" id=\"{{maskId}}\" >' +\n             *             '    <div class=\"ax-mask-bg\" style=\"background-color:red   !important;\"></div>' +\n             *             '    <div class=\"ax-mask-content\">' +\n             *             '        {{{body}}}' +\n             *             '    </div>' +\n             *             '</div>';\n             *     return cTmpl;\n             * };\n             * ax5.ui.mask.tmpl.customMask = customMask;\n             *\n             * my_mask.open({\n             *     target: $(\"#mask-target\").get(0), // dom Element\n             *     content: \"<h1>Loading..</h1>\",\n             *     \n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             * ```\n             */\n            this.open = function (options) {\n\n                if (this.status === \"on\") this.close();\n                if (options && options.content) setBody.call(this, options.content);\n                if (options && typeof options.templateName === \"undefined\") options.templateName = \"defaultMask\";\n                self.maskConfig = {};\n\n                jQuery.extend(true, self.maskConfig, this.config, options);\n\n                var _cfg = self.maskConfig,\n                    target = _cfg.target,\n                    $target = jQuery(target),\n                    maskId = 'ax-mask-' + ax5.getGuid(),\n                    $mask,\n                    css = {},\n                    that = {},\n                    templateName = _cfg.templateName,\n\n                /*\n                 bodyTmpl = getBodyTmpl(),\n                 body = ax5.mustache.render(bodyTmpl, {\n                 theme: _cfg.theme,\n                 maskId: maskId,\n                 body: this.maskContent\n                 });\n                 */\n                body = getBodyTmpl({\n                    theme: _cfg.theme,\n                    maskId: maskId,\n                    body: this.maskContent,\n                    templateName: templateName\n                });\n\n                jQuery(document.body).append(body);\n\n                // 마스크의 타겟이 html body 가 아니라면\n                if (target && target !== jQuery(document.body).get(0)) {\n                    css = {\n                        position: _cfg.position || \"absolute\",\n                        left: $target.offset().left,\n                        top: $target.offset().top,\n                        width: $target.outerWidth(),\n                        height: $target.outerHeight()\n                    };\n\n                    if (typeof self.maskConfig.zIndex !== \"undefined\") {\n                        css[\"z-index\"] = self.maskConfig.zIndex;\n                    }\n                    $target.addClass(\"ax-masking\");\n\n                    // 마스크의 타겟이 html body가 아닌경우 window resize 이벤트를 추적하여 엘리먼트 마스크의 CSS 속성 변경\n                    jQuery(window).bind(\"resize.ax5mask-\" + this.instanceId, function (_$target) {\n                        this.align();\n                    }.bind(this));\n                }\n\n                this.$mask = $mask = jQuery(\"#\" + maskId);\n                this.$target = $target;\n                this.status = \"on\";\n                $mask.css(css);\n\n                if (_cfg.onClick) {\n                    $mask.on(\"click\", function (e) {\n                        that = {\n                            self: self,\n                            state: \"open\",\n                            type: \"click\"\n                        };\n                        self.maskConfig.onClick.call(that, that);\n                    });\n                }\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"open\"\n                });\n\n                options = null;\n                _cfg = null;\n                target = null;\n                $target = null;\n                maskId = null;\n                $mask = null;\n                css = null;\n                that = null;\n                templateName = null;\n                body = null;\n\n                return this;\n            };\n\n            /**\n             * close mask\n             * @method ax5mask.close\n             * @param {Number} [_delay=0]\n             * @returns {ax5mask}\n             * @example\n             * ```\n             * my_mask.close();\n             * ```\n             */\n            this.close = function (_delay) {\n                var _this2 = this;\n\n                if (this.$mask) {\n                    (function () {\n                        var _close = function _close() {\n                            this.status = \"off\";\n                            this.$mask.remove();\n                            this.$target.removeClass(\"ax-masking\");\n\n                            onStateChanged.call(this, null, {\n                                self: this,\n                                state: \"close\"\n                            });\n\n                            jQuery(window).unbind(\"resize.ax5mask-\" + this.instanceId);\n                        };\n\n                        if (_delay) {\n                            setTimeout(function () {\n                                _close.call(this);\n                            }.bind(_this2), _delay);\n                        } else {\n                            _close.call(_this2);\n                        }\n                    })();\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5mask.fadeOut\n             * @returns {ax5mask}\n             */\n            this.fadeOut = function () {\n                var _this3 = this;\n\n                if (this.$mask) {\n                    (function () {\n                        var _close = function _close() {\n                            this.status = \"off\";\n                            this.$mask.remove();\n                            this.$target.removeClass(\"ax-masking\");\n\n                            onStateChanged.call(this, null, {\n                                self: this,\n                                state: \"close\"\n                            });\n\n                            jQuery(window).unbind(\"resize.ax5mask-\" + this.instanceId);\n                        };\n\n                        _this3.$mask.addClass(\"fade-out\");\n                        setTimeout(function () {\n                            _close.call(this);\n                        }.bind(_this3), cfg.animateTime);\n                    })();\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5mask.align\n             * @returns {ax5mask}\n             */\n            this.align = function () {\n                if (this.maskConfig && this.maskConfig.target && this.maskConfig.target !== jQuery(document.body).get(0)) {\n                    try {\n                        var css = {\n                            position: this.maskConfig.position || \"absolute\",\n                            left: this.$target.offset().left,\n                            top: this.$target.offset().top,\n                            width: this.$target.outerWidth(),\n                            height: this.$target.outerHeight()\n                        };\n                        this.$mask.css(css);\n                    } catch (e) {}\n                }\n                return this;\n            };\n\n            this.pullRequest = function () {\n                console.log(\"test pullRequest01\");\n                console.log(\"test pullRequest02\");\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.mask_instance = UI.mask_instance || [];\n                UI.mask_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5mask;\n    }());\n    MASK = ax5.ui.mask;\n})();\n// ax5.ui.mask.tmpl\n(function () {\n\n    var MASK = ax5.ui.mask;\n\n    var defaultMask = function defaultMask(columnKeys) {\n        return '\\n            <div class=\"ax-mask {{theme}}\" id=\"{{maskId}}\">\\n                <div class=\"ax-mask-bg\"></div>\\n                <div class=\"ax-mask-content\">\\n                    <div class=\"ax-mask-body\">\\n                    {{{body}}}\\n                    </div>\\n                </div>\\n            </div>\\n        ';\n    };\n\n    MASK.tmpl = {\n        \"defaultMask\": defaultMask,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MASK.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.toast\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var TOAST;\n\n    UI.addClass({\n        className: \"toast\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5toast\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * ```js\n         * var toast = new ax5.ui.toast();\n         * toast.setConfig({\n         *     icon: '<i class=\"fa fa-bug\"></i>',\n         *     containerPosition: \"bottom-right\",\n         *     closeIcon: '<i class=\"fa fa-times\"></i>'\n         * });\n         *\n         * toast.onStateChanged = function(){\n         *     console.log(this);\n         * };\n         *\n         * toast.push({\n         *     icon: '<i class=\"fa fa-book\"></i>',\n         *     msg:\"999999\"\n         * });\n         *\n         * toast.push({\n         *     theme: theme,\n         *     msg: 'toast message'\n         * });\n         * ```\n         */\n        var ax5toast = function ax5toast() {\n            var self = this,\n                cfg,\n                toastSeq = 0,\n                toastSeqClear = null;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                icon: '',\n                closeIcon: '',\n                msg: '',\n                lang: {\n                    \"ok\": \"ok\", \"cancel\": \"cancel\"\n                },\n                displayTime: 3000,\n                animateTime: 250,\n                containerPosition: \"bottom-left\"\n            };\n            this.toastContainer = null;\n            this.queue = [];\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                opts = null;\n                that = null;\n                return true;\n            },\n\n            /**\n             * @method ax5toast.getContent\n             * @param {String} toastId\n             * @param {Object} opts\n             * @returns toastDisplay\n             * @example\n             * ```js\n             * ax5toast.getContent('ax5-toast-3-1', opts);\n             * ```\n             */\n            getContent = function getContent(toastId, opts) {\n\n                var data = {\n                    toastId: toastId,\n                    theme: opts.theme,\n                    icon: opts.icon,\n                    msg: (opts.msg || \"\").replace(/\\n/g, \"<br/>\"),\n                    btns: opts.btns,\n                    closeIcon: opts.closeIcon\n                };\n\n                try {\n                    return TOAST.tmpl.get.call(this, \"toastDisplay\", data);\n                } finally {\n                    toastId = null;\n                    data = null;\n                }\n            },\n\n            /**\n             * @method ax5toast.open\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            open = function open(opts, callBack) {\n                if (toastSeqClear) clearTimeout(toastSeqClear);\n\n                var toastBox,\n                    box = {\n                    width: opts.width\n                };\n\n                opts.id = 'ax5-toast-' + self.containerId + '-' + ++toastSeq;\n                if (jQuery('#' + opts.id).get(0)) return this;\n\n                if (U.left(cfg.containerPosition, '-') == 'bottom') {\n                    this.toastContainer.append(getContent(opts.id, opts));\n                } else {\n                    this.toastContainer.prepend(getContent(opts.id, opts));\n                }\n\n                toastBox = jQuery('#' + opts.id);\n                toastBox.css({ width: box.width });\n                opts.toastBox = toastBox;\n                this.queue.push(opts);\n\n                onStateChanged.call(this, opts, {\n                    self: this,\n                    state: \"open\",\n                    toastId: opts.id\n                });\n\n                if (opts.toastType === \"push\") {\n                    // 자동 제거 타이머 시작\n                    setTimeout(function () {\n                        this.close(opts, callBack);\n                    }.bind(this), cfg.displayTime);\n\n                    toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, function (e) {\n                        btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                    }.bind(this));\n                } else if (opts.toastType === \"confirm\") {\n                    toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, function (e) {\n                        btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                    }.bind(this));\n                }\n\n                box = null;\n            },\n                btnOnClick = function btnOnClick(e, opts, toastBox, callBack, target, k) {\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-ax-toast-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    k = target.getAttribute(\"data-ax-toast-btn\");\n\n                    var that = {\n                        key: k, value: opts.btns ? opts.btns[k] : k,\n                        toastId: opts.id,\n                        btn_target: target\n                    };\n\n                    if (opts.btns && opts.btns[k].onClick) {\n                        opts.btns[k].onClick.call(that, k);\n                    } else if (opts.toastType === \"push\") {\n                        if (callBack) callBack.call(that, k);\n                        this.close(opts, callBack);\n                    } else if (opts.toastType === \"confirm\") {\n                        if (callBack) callBack.call(that, k);\n                        this.close(opts, callBack);\n                    }\n                }\n\n                e = null;\n                opts = null;\n                toastBox = null;\n                callBack = null;\n                target = null;\n                k = null;\n            };\n\n            /**\n             * Preferences of toast UI\n             * @method ax5toast.set_config\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                // after set_config();\n                self.containerId = ax5.getGuid();\n                var styles = [];\n                if (cfg.zIndex) {\n                    styles.push(\"z-index:\" + cfg.zIndex);\n                }\n                jQuery(document.body).append('<div class=\"ax5-ui-toast-container ' + cfg.containerPosition + '\" data-toast-container=\"' + '' + self.containerId + '\" style=\"' + styles.join(\";\") + '\"></div>');\n                this.toastContainer = jQuery('[data-toast-container=\"' + self.containerId + '\"]');\n            };\n\n            /**\n             * @method ax5toast.push\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.push = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n                opts.toastType = \"push\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * @method ax5toast.confirm\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.confirm = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n                opts.toastType = \"confirm\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: { label: cfg.lang[\"ok\"], theme: opts.theme }\n                    };\n                }\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * close the toast\n             * @method ax5toast.close\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * my_toast.close();\n             * ```\n             */\n            this.close = function (opts, callBack) {\n                if (typeof opts === \"undefined\") {\n                    opts = U.last(this.queue);\n                }\n\n                var toastBox = opts.toastBox;\n                toastBox.addClass(opts.toastType == \"push\" ? \"removed\" : \"destroy\");\n                this.queue = U.filter(this.queue, function () {\n                    return opts.id != this.id;\n                });\n                setTimeout(function () {\n                    var that = {\n                        toastId: opts.id\n                    };\n\n                    toastBox.remove();\n                    if (callBack) callBack.call(that);\n\n                    that = {\n                        self: this,\n                        state: \"close\",\n                        toastId: opts.id\n                    };\n                    onStateChanged.call(this, opts, that);\n\n                    // 3초후에도 아무 일이 없다면 완전히 제거\n                    if (this.queue.length === 0) {\n                        if (toastSeqClear) clearTimeout(toastSeqClear);\n                        toastSeqClear = setTimeout(function () {\n                            /// console.log(\"try clear seq\");\n                            if (this.queue.length === 0) toastSeq = 0;\n                        }.bind(this), 3000);\n                    }\n\n                    that = null;\n                    opts = null;\n                    callBack = null;\n                    toastBox = null;\n                }.bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.toast_instance = UI.toast_instance || [];\n                UI.toast_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5toast;\n    }());\n    TOAST = ax5.ui.toast;\n})();\n// ax5.ui.toast.tmpl\n(function () {\n\n    var TOAST = ax5.ui.toast;\n\n    var toastDisplay = function toastDisplay(columnKeys) {\n        return '\\n        <div id=\"{{toastId}}\" data-ax5-ui=\"toast\" class=\"ax5-ui-toast {{theme}}\">\\n            {{#icon}}\\n            <div class=\"ax-toast-icon\">{{{.}}}</div>\\n            {{/icon}}\\n            <div class=\"ax-toast-body\">{{{msg}}}</div>\\n            {{#btns}}\\n            <div class=\"ax-toast-buttons\">\\n                <div class=\"ax-button-wrap\">\\n                    {{#@each}}\\n                    <button type=\"button\" data-ax-toast-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{{@value.label}}}</button>\\n                    {{/@each}}\\n                </div>\\n            </div>\\n            {{/btns}}\\n            {{^btns}}\\n                <a class=\"ax-toast-close\" data-ax-toast-btn=\"ok\">{{{closeIcon}}}</a>\\n            {{/btns}}\\n            <div style=\"clear:both;\"></div>\\n        </div>';\n    };\n\n    TOAST.tmpl = {\n        \"toastDisplay\": toastDisplay,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(TOAST.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.modal\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MODAL;\n\n    UI.addClass({\n        className: \"modal\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5modal\n         * @alias ax5.ui.modal\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var modal = new ax5.ui.modal({\n         *     iframeLoadingMsg: '<i class=\"fa fa-spinner fa-5x fa-spin\" aria-hidden=\"true\"></i>',\n         *     header: {\n         *         title: \"MODAL TITLE\",\n         *         btns: {\n         *             minimize: {\n         *                 label: '<i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.minimize();\n         *                 }\n         *             },\n         *             maximize: {\n         *                 label: '<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.maximize();\n         *                 }\n         *             },\n         *             close: {\n         *                 label: '<i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.close();\n         *                 }\n         *             }\n         *         }\n         *     }\n         * });\n         *\n         * modal.open({\n         *     width: 800,\n         *     height: 600,\n         *     fullScreen: function(){\n         *         return ($(window).width() < 600);\n         *     },\n         *     iframe: {\n         *         method: \"get\",\n         *         url: \"http://chequer-app:2017/html/login.html\",\n         *         param: \"callback=modalCallback\"\n         *     }\n         * });\n         * ```\n         */\n        var ax5modal = function ax5modal() {\n            var self = this,\n                cfg = void 0,\n                ENM = {\n                \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n                \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n                \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n            },\n                getMousePosition = function getMousePosition(e) {\n                var mouseObj = e;\n                if ('changedTouches' in e) {\n                    mouseObj = e.changedTouches[0];\n                }\n                return {\n                    clientX: mouseObj.clientX,\n                    clientY: mouseObj.clientY\n                };\n            };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-modal-' + this.instanceId,\n                position: {\n                    left: \"center\",\n                    top: \"middle\",\n                    margin: 10\n                },\n                minimizePosition: \"bottom-right\",\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                height: 400,\n                closeToEsc: true,\n                disableDrag: false,\n                animateTime: 250\n            };\n            this.activeModal = null;\n            this.watingModal = false;\n            this.$ = {}; // UI inside of the jQuery object store\n\n            cfg = this.config; // extended config copy cfg\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            },\n                getContent = function getContent(modalId, opts) {\n                var data = {\n                    modalId: modalId,\n                    theme: opts.theme,\n                    header: opts.header,\n                    fullScreen: opts.fullScreen ? \"fullscreen\" : \"\",\n                    styles: \"\",\n                    iframe: opts.iframe,\n                    iframeLoadingMsg: opts.iframeLoadingMsg\n                };\n\n                if (opts.zIndex) {\n                    data.styles += \"z-index:\" + opts.zIndex + \";\";\n                }\n                if (opts.absolute) {\n                    data.styles += \"position:absolute;\";\n                }\n\n                if (data.iframe && typeof data.iframe.param === \"string\") {\n                    data.iframe.param = ax5.util.param(data.iframe.param);\n                }\n\n                return MODAL.tmpl.get.call(this, \"content\", data, {});\n            },\n                open = function open(opts, callback) {\n                var that = void 0;\n                jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                this.activeModal = jQuery('#' + opts.id);\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.activeModal,\n                    \"header\": this.activeModal.find('[data-modal-els=\"header\"]'),\n                    \"body\": this.activeModal.find('[data-modal-els=\"body\"]')\n                };\n\n                if (opts.iframe) {\n                    this.$[\"iframe-wrap\"] = this.activeModal.find('[data-modal-els=\"iframe-wrap\"]');\n                    this.$[\"iframe\"] = this.activeModal.find('[data-modal-els=\"iframe\"]');\n                    this.$[\"iframe-form\"] = this.activeModal.find('[data-modal-els=\"iframe-form\"]');\n                    this.$[\"iframe-loading\"] = this.activeModal.find('[data-modal-els=\"iframe-loading\"]');\n                }\n\n                //- position 정렬\n                this.align();\n\n                that = {\n                    self: this,\n                    id: opts.id,\n                    theme: opts.theme,\n                    width: opts.width,\n                    height: opts.height,\n                    state: \"open\",\n                    $: this.$\n                };\n\n                if (opts.iframe) {\n                    this.$[\"iframe-wrap\"].css({ height: opts.height });\n                    this.$[\"iframe\"].css({ height: opts.height });\n\n                    // iframe content load\n                    this.$[\"iframe-form\"].attr({ \"method\": opts.iframe.method });\n                    this.$[\"iframe-form\"].attr({ \"target\": opts.id + \"-frame\" });\n                    this.$[\"iframe-form\"].attr({ \"action\": opts.iframe.url });\n                    this.$[\"iframe\"].on(\"load\", function () {\n                        that.state = \"load\";\n                        if (opts.iframeLoadingMsg) {\n                            this.$[\"iframe-loading\"].hide();\n                        }\n                        onStateChanged.call(this, opts, that);\n                    }.bind(this));\n                    if (!opts.iframeLoadingMsg) {\n                        this.$[\"iframe\"].show();\n                    }\n                    this.$[\"iframe-form\"].submit();\n                }\n\n                if (callback) callback.call(that);\n\n                if (!this.watingModal) {\n                    onStateChanged.call(this, opts, that);\n                }\n\n                // bind key event\n                if (opts.closeToEsc) {\n                    jQuery(window).bind(\"keydown.ax-modal\", function (e) {\n                        onkeyup.call(this, e || window.event);\n                    }.bind(this));\n                }\n                jQuery(window).bind(\"resize.ax-modal\", function (e) {\n                    this.align(null, e || window.event);\n                }.bind(this));\n\n                this.activeModal.find(\"[data-modal-header-btn]\").on(cfg.clickEventName, function (e) {\n                    btnOnClick.call(this, e || window.event, opts);\n                }.bind(this));\n\n                this.$.header.bind(ENM[\"mousedown\"], function (e) {\n                    if (opts.isFullScreen) return false;\n\n                    /// 이벤트 필터링 추가 : 버튼엘리먼트로 부터 발생된 이벤트이면 moveModal 시작하지 않도록 필터링\n                    var isButton = U.findParentNode(e.target, function (_target) {\n                        if (_target.getAttribute(\"data-modal-header-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (!isButton && opts.disableDrag != true) {\n                        self.mousePosition = getMousePosition(e);\n                        moveModal.on.call(self);\n                    }\n                }).bind(\"dragstart\", function (e) {\n                    U.stopEvent(e);\n                    return false;\n                });\n            },\n                btnOnClick = function btnOnClick(e, opts, callback, target, k) {\n                var that = void 0;\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-modal-header-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    k = target.getAttribute(\"data-modal-header-btn\");\n\n                    that = {\n                        self: this,\n                        key: k, value: opts.header.btns[k],\n                        dialogId: opts.id,\n                        btnTarget: target\n                    };\n\n                    if (opts.header.btns[k].onClick) {\n                        opts.header.btns[k].onClick.call(that, k);\n                    }\n                }\n\n                that = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            },\n                onkeyup = function onkeyup(e) {\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n            },\n                alignProcessor = {\n                \"top-left\": function topLeft() {\n                    this.align({ left: \"left\", top: \"top\" });\n                },\n                \"top-right\": function topRight() {\n                    this.align({ left: \"right\", top: \"top\" });\n                },\n                \"bottom-left\": function bottomLeft() {\n                    this.align({ left: \"left\", top: \"bottom\" });\n                },\n                \"bottom-right\": function bottomRight() {\n                    this.align({ left: \"right\", top: \"bottom\" });\n                },\n                \"center-middle\": function centerMiddle() {\n                    this.align({ left: \"center\", top: \"middle\" });\n                }\n            },\n                moveModal = {\n                \"on\": function on() {\n                    var modalZIndex = this.activeModal.css(\"z-index\"),\n                        modalOffset = this.activeModal.position(),\n                        modalBox = {\n                        width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                    },\n                        windowBox = {\n                        width: jQuery(window).width(),\n                        height: jQuery(window).height()\n                    },\n                        getResizerPosition = function getResizerPosition(e) {\n                        self.__dx = e.clientX - self.mousePosition.clientX;\n                        self.__dy = e.clientY - self.mousePosition.clientY;\n\n                        var minX = 0;\n                        var maxX = windowBox.width - modalBox.width;\n                        var minY = 0;\n                        var maxY = windowBox.height - modalBox.height;\n\n                        if (minX > modalOffset.left + self.__dx) {\n                            self.__dx = -modalOffset.left;\n                        } else if (maxX < modalOffset.left + self.__dx) {\n                            self.__dx = maxX - modalOffset.left;\n                        }\n\n                        if (minY > modalOffset.top + self.__dy) {\n                            self.__dy = -modalOffset.top;\n                        } else if (maxY < modalOffset.top + self.__dy) {\n                            self.__dy = maxY - modalOffset.top;\n                        }\n\n                        return {\n                            left: modalOffset.left + self.__dx + $(document).scrollLeft(),\n                            top: modalOffset.top + self.__dy + $(document).scrollTop()\n                        };\n                    };\n\n                    self.__dx = 0; // 변화량 X\n                    self.__dy = 0; // 변화량 Y\n\n                    if (!self.resizer) {\n                        // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                        self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                        self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                        self.resizerBg.css({ zIndex: modalZIndex });\n                        self.resizer.css({\n                            left: modalOffset.left,\n                            top: modalOffset.top,\n                            width: modalBox.width,\n                            height: modalBox.height,\n                            zIndex: modalZIndex + 1\n                        });\n                        jQuery(document.body).append(self.resizerBg).append(self.resizer);\n                        self.activeModal.addClass(\"draged\");\n                    }\n\n                    jQuery(document.body).bind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id, function (e) {\n                        self.resizer.css(getResizerPosition(e));\n                    }).bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                        moveModal.off.call(self);\n                    }).bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                        moveModal.off.call(self);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off() {\n                    var setModalPosition = function setModalPosition() {\n                        var box = this.activeModal.offset();\n                        box.left += this.__dx - $(document).scrollLeft();\n                        box.top += this.__dy - $(document).scrollTop();\n                        this.activeModal.css(box);\n                    };\n\n                    if (this.resizer) {\n                        this.activeModal.removeClass(\"draged\");\n                        this.resizer.remove();\n                        this.resizer = null;\n                        this.resizerBg.remove();\n                        this.resizerBg = null;\n                        setModalPosition.call(this);\n                        //this.align();\n                    }\n\n                    jQuery(document.body).unbind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id).unbind(ENM[\"mouseup\"] + \".ax5modal-\" + cfg.id).unbind(\"mouseleave.ax5modal-\" + cfg.id);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            };\n\n            /// private end\n\n            /**\n             * Preferences of modal UI\n             * @method ax5modal.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @param {Boolean} [config.absolute=false]\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * open the modal\n             * @method ax5modal.open\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.open();\n             * ```\n             */\n            this.open = function (opts, callback, tryCount) {\n                if (typeof tryCount === \"undefined\") tryCount = 0;\n                if (!this.activeModal) {\n                    opts = self.modalConfig = jQuery.extend(true, {}, cfg, opts);\n                    open.call(this, opts, callback);\n                    this.watingModal = false;\n                } else if (tryCount < 3) {\n                    // 3번까지 재 시도\n                    this.watingModal = true;\n                    setTimeout(function () {\n                        this.open(opts, callback, tryCount + 1);\n                    }.bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * close the modal\n             * @method ax5modal.close\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.close();\n             * ```\n             */\n            this.close = function (opts) {\n                if (this.activeModal) {\n                    opts = self.modalConfig;\n                    this.activeModal.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax-modal\");\n                    jQuery(window).unbind(\"resize.ax-modal\");\n\n                    setTimeout(function () {\n                        if (this.activeModal) {\n\n                            // 프레임 제거\n                            if (opts.iframe) {\n                                var $iframe = this.$[\"iframe\"]; // iframe jQuery Object\n                                if ($iframe) {\n                                    var iframeObject = $iframe.get(0),\n                                        idoc = iframeObject.contentDocument ? iframeObject.contentDocument : iframeObject.contentWindow.document;\n\n                                    try {\n                                        $(idoc.body).children().each(function () {\n                                            $(this).remove();\n                                        });\n                                    } catch (e) {}\n                                    idoc.innerHTML = \"\";\n                                    $iframe.attr('src', 'about:blank').remove();\n\n                                    // force garbarge collection for IE only\n                                    window.CollectGarbage && window.CollectGarbage();\n                                }\n                            }\n\n                            this.activeModal.remove();\n                            this.activeModal = null;\n                        }\n                        // 모달 오픈 대기중이면 닫기 상태 전달 안함.\n                        if (!this.watingModal) {\n                            onStateChanged.call(this, opts, {\n                                self: this,\n                                state: \"close\"\n                            });\n                        }\n                    }.bind(this), cfg.animateTime);\n                }\n\n                this.minimized = false; // hoksi\n\n                return this;\n            };\n\n            /**\n             * @method ax5modal.minimize\n             * @returns {ax5modal}\n             */\n            this.minimize = function () {\n\n                return function (minimizePosition) {\n\n                    if (this.minimized !== true) {\n\n                        var opts = self.modalConfig;\n                        if (typeof minimizePosition === \"undefined\") minimizePosition = cfg.minimizePosition;\n\n                        this.minimized = true;\n                        this.$.body.hide();\n                        self.modalConfig.originalHeight = opts.height;\n                        self.modalConfig.height = 0;\n                        alignProcessor[minimizePosition].call(this);\n\n                        onStateChanged.call(this, opts, {\n                            self: this,\n                            state: \"minimize\"\n                        });\n                    }\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5modal.maximize\n             * @returns {ax5modal}\n             */\n            this.maximize = function () {\n                var opts = self.modalConfig;\n                if (this.minimized) {\n                    this.minimized = false;\n                    this.$.body.show();\n                    self.modalConfig.height = self.modalConfig.originalHeight;\n                    self.modalConfig.originalHeight = undefined;\n\n                    this.align({ left: \"center\", top: \"middle\" });\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"restore\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * setCSS\n             * @method ax5modal.css\n             * @param {Object} css -\n             * @returns {ax5modal}\n             */\n            this.css = function (css) {\n                if (this.activeModal && !self.fullScreen) {\n                    this.activeModal.css(css);\n                    if (css.width) {\n                        self.modalConfig.width = this.activeModal.width();\n                    }\n                    if (css.height) {\n                        self.modalConfig.height = this.activeModal.height();\n                        if (this.$[\"iframe\"]) {\n                            this.$[\"iframe-wrap\"].css({ height: self.modalConfig.height });\n                            this.$[\"iframe\"].css({ height: self.modalConfig.height });\n                        }\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5modal.setModalConfig\n             * @param _config\n             * @returns {ax5.ui.ax5modal}\n             */\n            this.setModalConfig = function (_config) {\n                self.modalConfig = jQuery.extend({}, self.modalConfig, _config);\n                this.align();\n                return this;\n            };\n\n            /**\n             * @method ax5modal.align\n             * @param position\n             * @param e\n             * @returns {ax5modal}\n             */\n            this.align = function () {\n\n                return function (position, e) {\n                    if (!this.activeModal) return this;\n\n                    var opts = self.modalConfig,\n                        box = {\n                        width: opts.width,\n                        height: opts.height\n                    };\n\n                    var fullScreen = opts.isFullScreen = function (_fullScreen) {\n                        if (typeof _fullScreen === \"undefined\") {\n                            return false;\n                        } else if (U.isFunction(_fullScreen)) {\n                            return _fullScreen();\n                        }\n                    }(opts.fullScreen);\n\n                    if (fullScreen) {\n                        if (opts.header) this.$.header.show();\n                        box.width = jQuery(window).width();\n                        box.height = opts.height;\n                        box.left = 0;\n                        box.top = 0;\n                    } else {\n                        if (opts.header) this.$.header.show();\n                        if (position) {\n                            jQuery.extend(true, opts.position, position);\n                        }\n\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n\n                        //- position 정렬\n                        if (opts.position.left == \"left\") {\n                            box.left = opts.position.margin || 0;\n                        } else if (opts.position.left == \"right\") {\n                            // window.innerWidth;\n                            box.left = jQuery(window).width() - box.width - (opts.position.margin || 0);\n                        } else if (opts.position.left == \"center\") {\n                            box.left = jQuery(window).width() / 2 - box.width / 2;\n                        } else {\n                            box.left = opts.position.left || 0;\n                        }\n\n                        if (opts.position.top == \"top\") {\n                            box.top = opts.position.margin || 0;\n                        } else if (opts.position.top == \"bottom\") {\n                            box.top = jQuery(window).height() - box.height - (opts.position.margin || 0);\n                        } else if (opts.position.top == \"middle\") {\n                            box.top = jQuery(window).height() / 2 - box.height / 2;\n                        } else {\n                            box.top = opts.position.top || 0;\n                        }\n                        if (box.left < 0) box.left = 0;\n                        if (box.top < 0) box.top = 0;\n                    }\n\n                    this.activeModal.css(box);\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({ height: box.height - opts.headerHeight });\n                        this.$[\"iframe\"].css({ height: box.height - opts.headerHeight });\n                    }\n                    return this;\n                };\n            }();\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.modal_instance = UI.modal_instance || [];\n                UI.modal_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5modal;\n    }());\n\n    MODAL = ax5.ui.modal;\n})();\n\n// ax5.ui.modal.tmpl\n(function () {\n    var MODAL = ax5.ui.modal;\n\n    var content = function content() {\n        return ' \\n        <div id=\"{{modalId}}\" data-modal-els=\"root\" class=\"ax5modal {{theme}} {{fullscreen}}\" style=\"{{styles}}\">\\n            {{#header}}\\n            <div class=\"ax-modal-header\" data-modal-els=\"header\">\\n                {{{title}}}\\n                {{#btns}}\\n                    <div class=\"ax-modal-header-addon\">\\n                    {{#@each}}\\n                    <button tabindex=\"-1\" data-modal-header-btn=\"{{@key}}\" class=\"{{@value.theme}}\">{{{@value.label}}}</button>\\n                    {{/@each}}\\n                    </div>\\n                {{/btns}}\\n            </div>\\n            {{/header}}\\n            <div class=\"ax-modal-body\" data-modal-els=\"body\">\\n            {{#iframe}}\\n            \\n                <div data-modal-els=\"iframe-wrap\" style=\"-webkit-overflow-scrolling: touch; overflow: auto;position: relative;\">\\n                    <table data-modal-els=\"iframe-loading\" style=\"width:100%;height:100%;\"><tr><td style=\"text-align: center;vertical-align: middle\">{{{iframeLoadingMsg}}}</td></tr></table>\\n                    <iframe name=\"{{modalId}}-frame\" src=\"\" width=\"100%\" height=\"100%\" frameborder=\"0\" data-modal-els=\"iframe\" style=\"position: absolute;left:0;top:0;\"></iframe>\\n                </div>\\n                <form name=\"{{modalId}}-form\" data-modal-els=\"iframe-form\">\\n                <input type=\"hidden\" name=\"modalId\" value=\"{{modalId}}\" />\\n                {{#param}}\\n                {{#@each}}\\n                <input type=\"hidden\" name=\"{{@key}}\" value=\"{{@value}}\" />\\n                {{/@each}}\\n                {{/param}}\\n                </form>\\n            {{/iframe}}\\n            </div>\\n            <div class=\"ax-modal-body-mask\"></div>\\n        </div>\\n        ';\n    };\n\n    MODAL.tmpl = {\n        \"content\": content,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MODAL.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.calendar\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var CALENDAR;\n\n    UI.addClass({\n        className: \"calendar\",\n        version: \"1.3.66\"\n    }, function () {\n\n        /**\n         * @class ax5calendar\n         * @classdesc\n         * @author tom@axisj.com\n         * @logs\n         * 2014-06-21 tom : 시작\n         * @example\n         * ```js\n         * ax5.info.months = [\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\"];\n         * ax5.info.weekNames = [\n         *     {label: \"일\"},\n         *     {label: \"월\"},\n         *     {label: \"화\"},\n         *     {label: \"수\"},\n         *     {label: \"목\"},\n         *     {label: \"금\"},\n         *     {label: \"토\"}\n         * ];\n         *\n         * var myCalendar = new ax5.ui.calendar({\n         *     control: {\n         *         left: '≪',\n         *         yearTmpl: '%s',\n         *         monthTmpl: '%s',\n         *         right: '≫',\n         *         yearFirst: true\n         *     },\n         *\n         *     dimensions: {\n         *         itemPadding: 1,\n         *         height: 200\n         *     },\n         *\n         *         target: document.getElementById(\"calendar-target\"),\n         *         displayDate: (new Date()),\n         *         mode: \"day\",\n         *         selectMode: \"day\",\n         *\n         *         marker: (function () {\n         *             var marker = {};\n         *             marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: -1}})] = true;\n         *             marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: 0}})] = true;\n         *             marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: 1}})] = true;\n         *\n        *             return marker;\n         *         })(),\n         *         onClick: function () {\n         *             console.log(myCalendar.getSelection());\n         *         },\n         *         onStateChanged: function () {\n         *             console.log(this);\n         *         }\n         *         , multipleSelect: 2\n         *     });\n         * ```\n         */\n        var ax5calendar = function ax5calendar() {\n            var self = this,\n                cfg,\n                selectableCount = 1;\n\n            this.instanceId = ax5.getGuid();\n            this.target = null;\n            this.selection = [];\n            this.selectionMap = {};\n            this.selectableMap = {};\n            this.markerMap = {};\n            this.printedDay = {\n                start: \"\", end: \"\"\n            };\n            this.config = {\n                clickEventName: \"click\",\n                theme: 'default',\n                startOfWeek: 0,\n                mode: 'day', // day|month|year,\n                dateFormat: 'yyyy-MM-dd',\n                displayDate: new Date(),\n                animateTime: 100,\n                dimensions: {\n                    controlHeight: '40',\n                    controlButtonWidth: '40',\n                    colHeadHeight: '30',\n                    itemPadding: 2\n                },\n                lang: {\n                    yearHeading: \"Choose the year\",\n                    monthHeading: \"Choose the month\",\n                    yearTmpl: \"%s\",\n                    months: ax5.info.months || ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n                    dayTmpl: \"%s\"\n                },\n                multipleSelect: false,\n                selectMode: 'day',\n                defaultMarkerTheme: 'holiday',\n                defaultPeriodTheme: 'period'\n            };\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n            },\n                getFrame = function getFrame() {\n                var data = jQuery.extend(true, {}, cfg, {\n                    controlCSS: {},\n                    controlButtonCSS: {}\n                });\n\n                data.controlButtonCSS[\"height\"] = data.controlCSS[\"height\"] = U.cssNumber(cfg.dimensions.controlHeight);\n                data.controlButtonCSS[\"line-height\"] = data.controlCSS[\"line-height\"] = U.cssNumber(cfg.dimensions.controlHeight);\n                data.controlButtonCSS[\"width\"] = U.cssNumber(cfg.dimensions.controlHeight);\n\n                data.controlCSS = U.css(data.controlCSS);\n                data.controlButtonCSS = U.css(data.controlButtonCSS);\n\n                try {\n                    return CALENDAR.tmpl.get.call(this, \"frameTmpl\", data);\n                } finally {\n                    data = null;\n                }\n            },\n                setDisplay = function setDisplay() {\n                var myDate = U.date(cfg.displayDate),\n                    yy = \"\",\n                    mm = \"\",\n                    yy1,\n                    yy2;\n\n                if (cfg.control) {\n                    if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                        yy = cfg.control.yearTmpl ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n                        mm = cfg.control.monthTmpl ? cfg.control.monthTmpl.replace('%s', cfg.lang.months[myDate.getMonth()]) : cfg.lang.months[myDate.getMonth()];\n\n                        this.$[\"control-display\"].html(function () {\n                            if (cfg.control.yearFirst) {\n                                return '<span data-calendar-display=\"year\">' + yy + '</span>' + '<span data-calendar-display=\"month\">' + mm + '</span>';\n                            } else {\n                                return '<span data-calendar-display=\"month\">' + mm + '</span>' + '<span data-calendar-display=\"year\">' + yy + '</span>';\n                            }\n                        }());\n                    } else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                        yy = cfg.control.yearTmpl ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n                        this.$[\"control-display\"].html('<span data-calendar-display=\"year\">' + yy + '</span>');\n                    } else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                        yy1 = cfg.control.yearTmpl ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear() - 10) : myDate.getFullYear() - 10;\n                        yy2 = cfg.control.yearTmpl ? cfg.control.yearTmpl.replace('%s', Number(myDate.getFullYear()) + 9) : Number(myDate.getFullYear()) + 9;\n                        this.$[\"control-display\"].html(yy1 + ' ~ ' + yy2);\n                    }\n\n                    this.$[\"control-display\"].find('[data-calendar-display]').on(cfg.clickEventName, function (e) {\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-calendar-display\")) {\n                                return true;\n                            }\n                        }),\n                            mode;\n                        if (target) {\n                            mode = target.getAttribute(\"data-calendar-display\");\n                            this.changeMode(mode);\n                        }\n                        target = null;\n                        mode = null;\n                    }.bind(this));\n                }\n\n                myDate = null;\n                yy = null;\n                mm = null;\n                yy1 = null;\n                yy2 = null;\n                return this;\n            },\n                printDay = function printDay(nowDate) {\n                var dotDate = U.date(nowDate),\n                    monthStratDate = new Date(dotDate.getFullYear(), dotDate.getMonth(), 1, 12),\n                    _today = cfg.displayDate,\n                    tableStartDate = function () {\n                    var day = monthStratDate.getDay();\n                    if (day == 0) day = 7;\n                    day -= cfg.startOfWeek;\n\n                    try {\n                        return U.date(monthStratDate, { add: { d: -day } });\n                    } finally {\n                        day = null;\n                    }\n                }(),\n                    loopDate,\n                    thisMonth = dotDate.getMonth(),\n                    itemStyles = {},\n                    i,\n                    k,\n                    _k,\n                    frameWidth = this.$[\"body\"].width(),\n                    frameHeight = Math.floor(frameWidth * (6 / 7)),\n                    // 1week = 7days, 1month = 6weeks\n                data,\n                    tmpl;\n\n                if (cfg.dimensions.height) {\n                    frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                }\n\n                itemStyles['height'] = Math.floor(frameHeight / 6) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                itemStyles['line-height'] = itemStyles['height'];\n                itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                data = {\n                    weekNames: [].concat(ax5.info.weekNames),\n                    list: []\n                };\n\n                if (cfg.startOfWeek) {\n                    data.weekNames = data.weekNames.concat(data.weekNames.slice(0, cfg.startOfWeek)).splice(cfg.startOfWeek);\n                }\n\n                data.weekNames.forEach(function (n) {\n                    n.colHeadHeight = U.cssNumber(cfg.dimensions.colHeadHeight);\n                });\n\n                loopDate = tableStartDate;\n                i = 0;\n                while (i < 6) {\n                    k = 0;\n                    while (k < 7) {\n                        _k = (7 + (k - cfg.startOfWeek)) % 7;\n                        var thisDate = '' + U.date(loopDate, { \"return\": cfg.dateFormat }),\n                            _date = {\n                            'row': i,\n                            'col': k,\n                            isStartOfWeek: k == 0,\n                            thisDate: '' + thisDate,\n                            thisDataLabel: cfg.lang.dayTmpl.replace('%s', loopDate.getDate()),\n                            itemStyles: U.css(itemStyles),\n                            addClass: function () {\n\n                                var classNames = \"\";\n\n                                if (cfg.selectable) {\n                                    if (self.selectableMap[thisDate]) {\n                                        classNames += loopDate.getMonth() == thisMonth ? \" live\" : \"\";\n                                    } else {\n                                        classNames += \" disable\";\n                                    }\n                                } else {\n                                    if (loopDate.getMonth() == thisMonth) {\n                                        if (thisDate == U.date(_today, { \"return\": \"yyyyMMdd\" })) {\n                                            classNames += \" focus\";\n                                        } else {\n                                            classNames += \" live\";\n                                        }\n\n                                        if (loopDate.getDay() == 0) {\n                                            classNames += \" sunday\";\n                                        }\n                                        if (loopDate.getDay() == 6) {\n                                            classNames += \" saturday\";\n                                        }\n                                    }\n                                }\n\n                                return classNames;\n                            }() + ' ' + function () {\n                                return self.markerMap[thisDate] ? self.markerMap[thisDate].theme || cfg.defaultMarkerTheme : '';\n                            }() + ' ' + function () {\n                                return self.selectionMap[thisDate] ? \"selected-day\" : '';\n                            }()\n                        };\n                        data.list.push(_date);\n\n                        k++;\n                        loopDate = U.date(loopDate, { add: { d: 1 } });\n\n                        thisDate = null;\n                        _date = null;\n                    }\n                    i++;\n                }\n                tmpl = CALENDAR.tmpl.get.call(this, \"dayTmpl\", data);\n                this.$[\"body\"].html(tmpl);\n                this.$[\"body\"].find('[data-calendar-item-date]').on(cfg.clickEventName, function (e) {\n                    e = e || window.event;\n                    onclick.call(self, e, 'date');\n                    U.stopEvent(e);\n                });\n\n                this.printedDay = {\n                    start: tableStartDate, end: loopDate\n                };\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    action: \"printDay\",\n                    printedDay: this.printedDay\n                });\n                setDisplay.call(this);\n\n                dotDate = null;\n                monthStratDate = null;\n                _today = null;\n                tableStartDate = null;\n                loopDate = null;\n                thisMonth = null;\n                itemStyles = null;\n                i = null;\n                k = null;\n                frameWidth = null;\n                frameHeight = null;\n                data = null;\n                tmpl = null;\n            },\n                printMonth = function printMonth(nowDate) {\n                var dotDate = U.date(nowDate),\n                    nMonth = dotDate.getMonth(),\n                    itemStyles = {},\n                    i,\n                    k,\n                    m,\n                    tableStartMonth,\n                    frameWidth = this.$[\"body\"].width(),\n                    frameHeight = Math.floor(frameWidth * (6 / 7)),\n                    data,\n                    tmpl;\n\n                if (cfg.dimensions.height) {\n                    frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                }\n\n                itemStyles['height'] = Math.floor(frameHeight / 4) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                itemStyles['line-height'] = itemStyles['height'];\n                itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                data = {\n                    colHeadHeight: U.cssNumber(cfg.dimensions.colHeadHeight),\n                    colHeadLabel: cfg.lang.monthHeading,\n                    list: []\n                };\n\n                tableStartMonth = 0;\n                m = 0;\n                i = 0;\n                while (i < 4) {\n                    k = 0;\n                    while (k < 3) {\n                        var _month = {\n                            row: i,\n                            col: k,\n                            isStartOfRow: k == 0,\n                            thisMonth: dotDate.getFullYear() + '-' + U.setDigit(m + 1, 2) + '-' + U.setDigit(dotDate.getDate(), 2),\n                            thisMonthLabel: cfg.lang.months[m],\n                            itemStyles: U.css(itemStyles),\n                            addClass: function () {\n                                if (cfg.selectable) {\n                                    return self.selectableMap[m] ? 'live' : 'disable';\n                                } else {\n                                    return 'live';\n                                }\n                            }() + ' ' + function () {\n                                return m == nMonth ? \"focus\" : \"\";\n                            }() + ' ' + function () {\n                                return self.markerMap[m] ? self.markerMap[m].theme || cfg.defaultMarkerTheme : '';\n                            }()\n                        };\n                        data.list.push(_month);\n                        m++;\n                        k++;\n                        _month = null;\n                    }\n                    i++;\n                }\n                tmpl = CALENDAR.tmpl.get.call(this, \"monthTmpl\", data);\n                this.$[\"body\"].html(tmpl);\n                this.$[\"body\"].find('[data-calendar-item-month]').on(cfg.clickEventName, function (e) {\n                    e = e || window.event;\n                    onclick.call(self, e, 'month');\n                    U.stopEvent(e);\n                });\n\n                this.printedDay = {\n                    start: dotDate.getFullYear() + '-' + U.setDigit(tableStartMonth + 1, 2),\n                    end: dotDate.getFullYear() + '-' + U.setDigit(m, 2)\n                };\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    action: \"printMonth\",\n                    printedDay: this.printedDay\n                });\n                setDisplay.call(this);\n\n                dotDate = null;\n                nMonth = null;\n                itemStyles = null;\n                i = null;\n                k = null;\n                m = null;\n                tableStartMonth = null;\n                frameWidth = null;\n                frameHeight = null;\n                data = null;\n                tmpl = null;\n            },\n                printYear = function printYear(nowDate) {\n                var dotDate = U.date(nowDate),\n                    nYear = dotDate.getFullYear(),\n                    itemStyles = {},\n                    i,\n                    k,\n                    y,\n                    tableStartYear,\n                    frameWidth = this.$[\"body\"].width(),\n                    frameHeight = Math.floor(frameWidth * (6 / 7)),\n                    data,\n                    tmpl;\n\n                if (cfg.dimensions.height) {\n                    frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                }\n\n                itemStyles['height'] = Math.floor(frameHeight / 5) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                itemStyles['line-height'] = itemStyles['height'];\n                itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                data = {\n                    colHeadHeight: U.cssNumber(cfg.dimensions.colHeadHeight),\n                    colHeadLabel: cfg.lang.yearHeading,\n                    list: []\n                };\n\n                tableStartYear = nYear - 10;\n                y = nYear - 10;\n                i = 0;\n                while (i < 5) {\n                    k = 0;\n                    while (k < 4) {\n                        var _year = {\n                            row: i,\n                            col: k,\n                            isStartOfRow: k == 0,\n                            thisYear: y + '-' + U.setDigit(dotDate.getMonth() + 1, 2) + '-' + U.setDigit(dotDate.getDate(), 2),\n                            thisYearLabel: cfg.lang.yearTmpl.replace('%s', y),\n                            itemStyles: U.css(itemStyles),\n                            addClass: function () {\n                                if (cfg.selectable) {\n                                    return self.selectableMap[y] ? 'live' : 'disable';\n                                } else {\n                                    return 'live';\n                                }\n                            }() + ' ' + function () {\n                                return y == nYear ? \"focus\" : \"\";\n                            }() + ' ' + function () {\n                                return self.selectableMap[y] ? self.selectableMap[y].theme || cfg.defaultMarkerTheme : '';\n                            }()\n                        };\n                        data.list.push(_year);\n                        y++;\n                        k++;\n                        _year = null;\n                    }\n                    i++;\n                }\n                tmpl = CALENDAR.tmpl.get.call(this, \"yearTmpl\", data);\n                this.$[\"body\"].html(tmpl);\n                this.$[\"body\"].find('[data-calendar-item-year]').on(cfg.clickEventName, function (e) {\n                    e = e || window.event;\n                    onclick.call(this, e, 'year');\n                    U.stopEvent(e);\n                });\n\n                this.printedDay = {\n                    start: tableStartYear, end: y - 1\n                };\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    action: \"printYear\",\n                    printedDay: this.printedDay\n                });\n                setDisplay.call(this);\n\n                dotDate = null;\n                nYear = null;\n                itemStyles = null;\n                i = null;\n                k = null;\n                y = null;\n                tableStartYear = null;\n                frameWidth = null;\n                frameHeight = null;\n                data = null;\n                tmpl = null;\n            },\n                onclick = function onclick(e, mode, target, value) {\n                var removed, dt, selectable;\n\n                mode = mode || \"date\";\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-calendar-item-\" + mode)) {\n                        return true;\n                    }\n                });\n                if (target) {\n                    value = target.getAttribute(\"data-calendar-item-\" + mode);\n\n                    dt = U.date(value, { \"return\": cfg.dateFormat });\n                    selectable = true;\n                    selectableCount = cfg.multipleSelect ? U.isNumber(cfg.multipleSelect) ? cfg.multipleSelect : 2 : 1;\n\n                    if (cfg.selectable) {\n                        if (!self.selectableMap[dt]) selectable = false;\n                    }\n\n                    if (mode == \"date\") {\n                        if (selectable) {\n\n                            if (self.selection.length >= selectableCount) {\n                                removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                removed.forEach(function (d) {\n                                    self.$[\"body\"].find('[data-calendar-item-date=\"' + U.date(d, { \"return\": cfg.dateFormat }) + '\"]').removeClass(\"selected-day\");\n                                });\n                            }\n\n                            jQuery(target).addClass(\"selected-day\");\n                            self.selection.push(value);\n\n                            if (self.onClick) {\n                                self.onClick.call({\n                                    self: this, date: value, target: this.target, dateElement: target\n                                });\n                            }\n                        }\n                    } else if (mode == \"month\") {\n                        if (cfg.selectMode == \"month\") {\n                            if (selectable) {\n                                if (self.selection.length >= selectableCount) {\n                                    removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                    removed.forEach(function (d) {\n                                        self.$[\"body\"].find('[data-calendar-item-month=\"' + U.date(d, { \"return\": 'yyyy-MM-dd' }) + '\"]').removeClass(\"selected-month\");\n                                    });\n                                }\n\n                                jQuery(target).addClass(\"selected-month\");\n                                self.selection.push(value);\n\n                                if (self.onClick) {\n                                    self.onClick.call({\n                                        self: this, date: value, target: this.target, dateElement: target\n                                    });\n                                }\n                            }\n                        } else {\n                            self.changeMode(\"day\", value);\n                        }\n                    } else if (mode == \"year\") {\n                        if (cfg.selectMode == \"year\") {\n                            if (selectable) {\n                                if (self.selection.length >= selectableCount) {\n                                    removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                    removed.forEach(function (d) {\n                                        self.$[\"body\"].find('[data-calendar-item-year=\"' + U.date(d, { \"return\": 'yyyy-MM-dd' }) + '\"]').removeClass(\"selected-year\");\n                                    });\n                                }\n\n                                jQuery(target).addClass(\"selected-year\");\n                                self.selection.push(value);\n\n                                if (self.onClick) {\n                                    self.onClick.call({\n                                        self: this, date: value, target: this.target, dateElement: target\n                                    });\n                                }\n                            }\n                        } else {\n                            self.changeMode(\"month\", value);\n                        }\n                    }\n                }\n\n                mode = null;\n                target = null;\n                value = null;\n                removed = null;\n                dt = null;\n                selectable = null;\n            },\n                move = function move(e, target, value) {\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-calendar-move\")) {\n                        return true;\n                    }\n                });\n                if (target) {\n                    value = target.getAttribute(\"data-calendar-move\");\n                    if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                        if (value == \"left\") {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { m: -1 } });\n                        } else {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { m: 1 } });\n                        }\n                        printDay.call(this, cfg.displayDate);\n                    } else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                        if (value == \"left\") {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { y: -1 } });\n                        } else {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { y: 1 } });\n                        }\n                        printMonth.call(this, cfg.displayDate);\n                    } else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                        if (value == \"left\") {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { y: -10 } });\n                        } else {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { y: 10 } });\n                        }\n                        printYear.call(this, cfg.displayDate);\n                    }\n                }\n\n                target = null;\n                value = null;\n            },\n                applyMarkerMap = function applyMarkerMap() {\n                setTimeout(function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        for (var k in this.markerMap) {\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.markerMap[k].theme || cfg.defaultMarkerTheme);\n                        }\n                    }\n                }.bind(this));\n            },\n                applySelectionMap = function applySelectionMap() {\n                setTimeout(function () {\n                    for (var k in this.selectionMap) {\n                        this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(\"selected-day\");\n                    }\n                }.bind(this));\n            },\n                applyPeriodMap = function applyPeriodMap() {\n                setTimeout(function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        for (var k in this.periodMap) {\n                            if (this.periodMap[k].label) {\n                                this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").html(this.periodMap[k].label);\n                            }\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.periodMap[k].theme);\n                        }\n                    }\n                }.bind(this));\n            },\n                clearPeriodMap = function clearPeriodMap() {\n                if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                    for (var k in this.periodMap) {\n                        this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").empty();\n                        this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').removeClass(this.periodMap[k].theme);\n                    }\n                }\n            };\n\n            /**\n             * Preferences of calendar UI\n             * @method ax5calendar.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Element|nodelist} config.target\n             * @param {String} [config.mode=day|month|year]\n             * @param {Function} [config.onClick}\n             * @returns {ax5calendar}\n             * @example\n             * ```js\n             * var myCalendar = new ax5.ui.calendar();\n             * myCalendar.setConfig({\n             *  target: $(\"#target\"),\n             *  mode: \"day\"\n             * });\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                // after setConfig();\n\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5calendar\", \"401\", \"setConfig\"));\n                }\n                this.target = jQuery(cfg.target);\n\n                cfg.displayDate = U.date(cfg.displayDate);\n                this.target.html(getFrame.call(this));\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.target.find('[data-calendar-els=\"root\"]'),\n                    \"control\": this.target.find('[data-calendar-els=\"control\"]'),\n                    \"control-display\": this.target.find('[data-calendar-els=\"control-display\"]'),\n                    \"body\": this.target.find('[data-calendar-els=\"body\"]')\n                };\n\n                if (cfg.control) {\n                    this.$[\"root\"].on(cfg.clickEventName, '[data-calendar-move]', function (e) {\n                        move.call(this, e || window.event);\n                    }.bind(this));\n                }\n\n                // collect selectableMap\n                if (cfg.selection) {\n                    this.setSelection(cfg.selection, false);\n                }\n                // collect selectableMap\n                if (cfg.selectable) {\n                    this.setSelectable(cfg.selectable, false);\n                }\n                // collect markerMap\n                if (cfg.marker) {\n                    this.setMarker(cfg.marker, false);\n                }\n\n                setTimeout(function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        printDay.call(this, cfg.displayDate);\n                    } else if (cfg.mode === \"month\" || cfg.mode === \"m\") {\n                        printMonth.call(this, cfg.displayDate);\n                    } else if (cfg.mode === \"year\" || cfg.mode === \"y\") {\n                        printYear.call(this, cfg.displayDate);\n                    }\n                }.bind(this));\n            };\n\n            /**\n             * @method ax5calendar.changeMode\n             * @param {String} mode\n             * @param {String} changeDate\n             * @returns {ax5calendar}\n             */\n            this.changeMode = function (mode, changeDate) {\n                if (typeof changeDate != \"undefined\") cfg.displayDate = changeDate;\n                if (mode) cfg.mode = mode;\n\n                this.$[\"body\"].removeClass(\"fadein\").addClass(\"fadeout\");\n                setTimeout(function () {\n                    if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                        printDay.call(this, cfg.displayDate);\n                    } else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                        printMonth.call(this, cfg.displayDate);\n                    } else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                        printYear.call(this, cfg.displayDate);\n                    }\n                    this.$[\"body\"].removeClass(\"fadeout\").addClass(\"fadein\");\n                }.bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            /**\n             * @method ax5calendar.setSelection\n             * @param {Array} selection\n             * @returns {ax5calendar}\n             * @example\n             * ```\n             *\n             * ```\n             */\n            this.setSelection = function () {\n                self.selectionMap = {};\n                var processor = {\n                    'arr': function arr(v, map, count) {\n                        map = {};\n                        if (!U.isArray(v)) return map;\n                        self.selection = v = v.splice(0, count);\n                        v.forEach(function (n) {\n                            if (U.isDate(n)) n = U.date(n, { 'return': cfg.dateFormat });\n                            map[n] = true;\n                        });\n                        return map;\n                    }\n                };\n\n                return function (selection, isPrint) {\n                    var result = {};\n                    selectableCount = cfg.multipleSelect ? U.isNumber(cfg.multipleSelect) ? cfg.multipleSelect : 2 : 1;\n\n                    if (cfg.selection = selection) {\n                        if (U.isArray(selection)) {\n                            result = processor.arr(selection, {}, selectableCount);\n                        } else {\n                            return this;\n                        }\n                    }\n\n                    this.selectionMap = jQuery.extend({}, result);\n                    // 변경내용 적용하여 출력\n\n                    if (isPrint !== false) applySelectionMap.call(this);\n\n                    result = null;\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5calendar.getSelection\n             */\n            this.getSelection = function () {\n                return this.selection;\n            };\n\n            /**\n             * @method ax5calendar.setSelectable\n             */\n            this.setSelectable = function () {\n                self.selectableMap = {};\n                var processor = {\n                    'arr': function arr(v, map) {\n                        map = {};\n                        if (!U.isArray(v)) return map;\n                        v.forEach(function (n) {\n                            if (U.isDate(n)) n = U.date(n, { 'return': cfg.dateFormat });\n                            map[n] = true;\n                        });\n                        return map;\n                    },\n                    'obj': function obj(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (v.range) return map;\n                        for (var k in v) {\n                            map[k] = v[k];\n                        }\n                        return map;\n                    },\n                    'range': function range(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    map[U.date(d, { \"return\": cfg.dateFormat })] = true;\n                                }\n                            } else {\n                                for (var i = n.from; i <= n.to; i++) {\n                                    map[i] = true;\n                                }\n                            }\n                        });\n\n                        return map;\n                    }\n                };\n\n                return function (selectable, isPrint) {\n\n                    var key,\n                        result = {};\n\n                    if (cfg.selectable = selectable) {\n                        if (U.isArray(selectable)) {\n                            result = processor.arr(selectable);\n                        } else {\n                            for (key in processor) {\n                                if (selectable[key]) {\n                                    result = processor[key](selectable);\n                                    break;\n                                }\n                            }\n                            if (Object.keys(result).length === 0) {\n                                result = processor.obj(selectable);\n                            }\n                        }\n                    }\n\n                    this.selectableMap = result;\n                    // 변경내용 적용하여 출력\n                    if (isPrint !== false) this.changeMode();\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5calendar.setMarker\n             */\n            this.setMarker = function () {\n                self.markerMap = {};\n                var processor = {\n                    'obj': function obj(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (v.range) return map;\n                        for (var k in v) {\n                            map[k] = v[k];\n                        }\n\n                        v = null;\n                        return map;\n                    },\n                    'range': function range(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    map[U.date(d, { \"return\": cfg.dateFormat })] = { theme: n.theme, label: n.label };\n                                }\n                            } else {\n                                for (var i = n.from; i <= n.to; i++) {\n                                    map[i] = { theme: n.theme, label: n.label };\n                                }\n                            }\n                        });\n\n                        v = null;\n                        return map;\n                    }\n                };\n\n                return function (marker, isApply) {\n\n                    var key,\n                        result = {};\n\n                    if (cfg.marker = marker) {\n                        for (key in processor) {\n                            if (marker[key]) {\n                                result = processor[key](marker);\n                                break;\n                            }\n                        }\n                        if (Object.keys(result).length === 0) {\n                            result = processor.obj(marker);\n                        }\n                    }\n\n                    this.markerMap = result;\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) applyMarkerMap.call(this);\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5calendar.setPeriod\n             */\n            this.setPeriod = function () {\n                self.periodMap = {};\n\n                var processor = {\n                    'range': function range(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = new Date(U.date(n.from)); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    if (d.getTime() == U.date(n.from).getTime()) {\n                                        map[U.date(d, { \"return\": cfg.dateFormat })] = { theme: n.theme || cfg.defaultPeriodTheme, label: n.fromLabel };\n                                    } else if (d.getTime() == U.date(n.to).getTime()) {\n                                        map[U.date(d, { \"return\": cfg.dateFormat })] = { theme: n.theme || cfg.defaultPeriodTheme, label: n.toLabel };\n                                    } else {\n                                        map[U.date(d, { \"return\": cfg.dateFormat })] = { theme: n.theme || cfg.defaultPeriodTheme };\n                                    }\n                                }\n                            }\n                        });\n\n                        v = null;\n                        return map;\n                    }\n                };\n\n                return function (period, isApply) {\n\n                    var key,\n                        result = {};\n\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) {\n                        clearPeriodMap.call(this);\n                    }\n\n                    if (cfg.period = period) {\n                        result = processor.range(period);\n                    }\n\n                    this.periodMap = result;\n\n                    //console.log(this.periodMap);\n\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) {\n                        applyPeriodMap.call(this);\n                    }\n                    return this;\n                };\n            }();\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.calendar_instance = UI.calendar_instance || [];\n                UI.calendar_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5calendar;\n    }());\n    CALENDAR = ax5.ui.calendar;\n})();\n// ax5.ui.calendar.tmpl\n(function () {\n\n    var CALENDAR = ax5.ui.calendar;\n\n    var frameTmpl = function frameTmpl(columnKeys) {\n        return '\\n                <div class=\"ax5-ui-calendar {{theme}}\" data-calendar-els=\"root\" onselectstart=\"return false;\">\\n                    {{#control}}\\n                    <div class=\"calendar-control\" data-calendar-els=\"control\" style=\"{{controlCSS}}\">\\n                        <a class=\"date-move-left\" data-calendar-move=\"left\" style=\"{{controlButtonCSS}}\">{{{left}}}</a>\\n                        <div class=\"date-display\" data-calendar-els=\"control-display\" style=\"{{controlCSS}}\"></div>\\n                        <a class=\"date-move-right\" data-calendar-move=\"right\" style=\"{{controlButtonCSS}}\">{{{right}}}</a>\\n                    </div>\\n                    {{/control}}\\n                    <div class=\"calendar-body\" data-calendar-els=\"body\"></div>\\n                </div>\\n                ';\n    };\n    var dayTmpl = function dayTmpl(columnKeys) {\n        return '\\n                <table data-calendar-table=\"day\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\\n                    <thead>\\n                        <tr>\\n                        {{#weekNames}}\\n                            <td class=\"calendar-col-{{col}}\" style=\"height: {{colHeadHeight}}\">\\n                            {{label}}\\n                            </td>\\n                        {{/weekNames}}\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            {{#list}}    \\n                            {{#isStartOfWeek}}\\n                            {{^@first}}\\n                        </tr>\\n                        <tr>\\n                            {{/@first}}\\n                            {{/isStartOfWeek}}\\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\\n                                <a class=\"calendar-item-day {{addClass}}\" data-calendar-item-date=\"{{thisDate}}\">\\n                                    <span class=\"addon addon-header\"></span>\\n                                    {{thisDataLabel}}\\n                                    <span class=\"addon addon-footer\"></span>\\n                                </a>\\n                            </td>\\n                            {{/list}}\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                ';\n    };\n    var monthTmpl = function monthTmpl(columnKeys) {\n        return '\\n                <table data-calendar-table=\"month\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\\n                    <thead>\\n                        <tr>\\n                            <td class=\"calendar-col-0\" colspan=\"3\" style=\"height: {{colHeadHeight}}\">\\n                            {{colHeadLabel}}\\n                            </td>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            {{#list}}    \\n                            {{#isStartOfRow}}\\n                            {{^@first}}\\n                        </tr>\\n                        <tr>\\n                            {{/@first}}\\n                            {{/isStartOfRow}}\\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\\n                                <a class=\"calendar-item-month {{addClass}}\" data-calendar-item-month=\"{{thisMonth}}\">\\n                                    <span class=\"addon\"></span>\\n                                    {{thisMonthLabel}}\\n                                    <span class=\"lunar\"></span>\\n                                </a>\\n                            </td>\\n                            {{/list}}\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                ';\n    };\n    var yearTmpl = function yearTmpl(columnKeys) {\n        return '\\n                <table data-calendar-table=\"year\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\\n                    <thead>\\n                        <tr>\\n                            <td class=\"calendar-col-0\" colspan=\"4\" style=\"height: {{colHeadHeight}}\">\\n                            {{colHeadLabel}}\\n                            </td>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            {{#list}}    \\n                            {{#isStartOfRow}}\\n                            {{^@first}}\\n                        </tr>\\n                        <tr>\\n                            {{/@first}}\\n                            {{/isStartOfRow}}\\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\\n                                <a class=\"calendar-item-year {{addClass}}\" data-calendar-item-year=\"{{thisYear}}\">\\n                                    <span class=\"addon\"></span>\\n                                    {{thisYearLabel}}\\n                                    <span class=\"lunar\"></span>\\n                                </a>\\n                            </td>\\n                            {{/list}}\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                ';\n    };\n\n    CALENDAR.tmpl = {\n        \"frameTmpl\": frameTmpl,\n        \"dayTmpl\": dayTmpl,\n        \"monthTmpl\": monthTmpl,\n        \"yearTmpl\": yearTmpl,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(CALENDAR.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.picker\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var PICKER;\n\n    UI.addClass({\n        className: \"picker\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5picker\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * ax5.def.picker.date_leftArrow = '<i class=\"fa fa-chevron-left\"></i>';\n         * ax5.def.picker.date_yearTmpl = '%s';\n         * ax5.def.picker.date_monthTmpl = '%s';\n         * def.picker.date_rightArrow = '<i class=\"fa fa-chevron-right\"></i>';\n         *\n         * var picker = new ax5.ui.picker({\n         *     onStateChanged: function () {\n         *         console.log(this);\n         *     }\n         * });\n         *\n         * picker.bind({\n         *     target: $('[data-picker-date]'),\n         *     direction: \"auto\",\n         *     content: {\n         *         type: 'date',\n         *         formatter: {\n         *             pattern: 'date'\n         *         }\n         *     }\n         * });\n         * ```\n         */\n        var ax5picker = function ax5picker() {\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                title: '',\n                lang: {\n                    \"ok\": \"ok\",\n                    \"cancel\": \"cancel\"\n                },\n                animateTime: 100,\n                calendar: {\n                    multipleSelect: false,\n                    control: {\n                        left: ax5.def.picker.date_leftArrow || '&#x02190',\n                        yearTmpl: ax5.def.picker.date_yearTmpl || '%s',\n                        monthTmpl: ax5.def.picker.date_monthTmpl || '%s',\n                        right: ax5.def.picker.date_rightArrow || '&#x02192',\n                        yearFirst: true\n                    }\n                }\n            };\n            this.queue = [];\n            this.activePicker = null;\n            this.activePickerQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(item, that) {\n                if (item && item.onStateChanged) {\n                    item.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            },\n                bindPickerTarget = function () {\n\n                var pickerEvent = {\n                    'focus': function focus(queIdx, e) {\n                        this.open(queIdx);\n                    },\n                    'click': function click(queIdx, e) {\n                        this.open(queIdx);\n                    }\n                };\n\n                var pickerType = {\n                    '@fn': function fn(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                            inputLength: inputLength || 1\n                        };\n\n                        if (inputLength > 1) {\n                            config.btns = {\n                                ok: { label: cfg.lang[\"ok\"], theme: cfg.theme }\n                            };\n                        }\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'date': function date(queIdx, _input) {\n                        // 1. 이벤트 바인딩\n                        // 2. ui 준비\n\n                        var item = this.queue[queIdx],\n                            contentWidth = item.content ? item.content.width || 270 : 270,\n                            contentMargin = item.content ? item.content.margin || 5 : 5,\n                            inputLength = _input.length,\n                            config = {\n                            contentWidth: contentWidth * inputLength + (inputLength - 1) * contentMargin,\n                            content: { width: contentWidth, margin: contentMargin },\n                            inputLength: inputLength || 1\n                        };\n\n                        if (inputLength > 1 && !item.btns) {\n                            config.btns = {\n                                ok: { label: cfg.lang[\"ok\"], theme: cfg.theme }\n                            };\n                        }\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        contentWidth = null;\n                        contentMargin = null;\n                        config = null;\n                        inputLength = null;\n                    },\n                    'secure-num': function secureNum(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                            inputLength: inputLength || 1\n                        };\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'keyboard': function keyboard(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                            inputLength: inputLength || 1\n                        };\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'numpad': function numpad(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                            inputLength: inputLength || 1\n                        };\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    }\n                };\n\n                return function (queIdx) {\n                    var item = this.queue[queIdx],\n                        input;\n\n                    if (!item.content) {\n                        console.log(ax5.info.getError(\"ax5picker\", \"501\", \"bind\"));\n                        return this;\n                    }\n\n                    input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : item.$target.find('input[type]');\n\n                    // 함수타입\n                    if (U.isFunction(item.content)) {\n                        pickerType[\"@fn\"].call(this, queIdx, input);\n                    } else {\n                        for (var key in pickerType) {\n                            if (item.content.type == key) {\n                                pickerType[key].call(this, queIdx, input);\n                                break;\n                            }\n                        }\n                    }\n\n                    input.unbind('focus.ax5picker').unbind('click.ax5picker').bind('focus.ax5picker', pickerEvent.focus.bind(this, queIdx)).bind('click.ax5picker', pickerEvent.click.bind(this, queIdx));\n\n                    item.$target.find('.input-group-addon').unbind('click.ax5picker').bind('click.ax5picker', pickerEvent.click.bind(this, queIdx));\n\n                    if (item.content.formatter && ax5.ui.formatter) {\n                        input.ax5formatter(item.content.formatter);\n                    }\n\n                    input = null;\n                    item = null;\n                    queIdx = null;\n                    return this;\n                };\n            }(),\n                alignPicker = function alignPicker(append) {\n                if (!this.activePicker) return this;\n\n                var _alignPicker = function _alignPicker(item) {\n                    var $window = jQuery(window),\n                        $body = jQuery(document.body);\n                    var pos = {},\n                        positionMargin = 12,\n                        dim = {},\n                        pickerDim = {},\n                        pickerDirection;\n\n                    pos = item.$target.offset();\n                    dim = {\n                        width: item.$target.outerWidth(),\n                        height: item.$target.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), $body.width()),\n                        winHeight: Math.max($window.height(), $body.height()),\n                        width: this.activePicker.outerWidth(),\n                        height: this.activePicker.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n\n                    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = item.direction;\n                    }\n\n                    if (append) {\n                        this.activePicker.addClass(\"direction-\" + pickerDirection);\n                    }\n\n                    var positionCSS = function () {\n                        var css = { left: 0, top: 0 };\n                        switch (pickerDirection) {\n                            case \"top\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top + dim.height + positionMargin;\n                                break;\n                            case \"bottom\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top - pickerDim.height - positionMargin;\n                                break;\n                            case \"left\":\n                                css.left = pos.left + dim.width + positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                            case \"right\":\n                                css.left = pos.left - pickerDim.width - positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                        }\n                        return css;\n                    }();\n\n                    (function () {\n                        if (pickerDirection == \"top\" || pickerDirection == \"bottom\") {\n                            if (positionCSS.left < 0) {\n                                positionCSS.left = positionMargin;\n                                this.activePickerArrow.css({ left: pos.left + dim.width / 2 - positionCSS.left });\n                            } else if (positionCSS.left + pickerDim.width > pickerDim.winWidth) {\n                                positionCSS.left = pickerDim.winWidth - pickerDim.width - positionMargin;\n                                this.activePickerArrow.css({ left: pos.left + dim.width / 2 - positionCSS.left });\n                            }\n                        }\n                    }).call(this);\n\n                    this.activePicker.css(positionCSS);\n                };\n\n                var item = this.queue[this.activePickerQueueIndex];\n\n                this.activePicker.css({ top: -999 });\n\n                if (append) jQuery(document.body).append(this.activePicker);\n                setTimeout(function () {\n                    _alignPicker.call(this, item);\n                }.bind(this));\n            },\n                onBodyClick = function onBodyClick(e, target) {\n                if (!this.activePicker) return this;\n\n                var item = this.queue[this.activePickerQueueIndex];\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-picker-els\")) {\n                        return true;\n                    } else if (item.$target.get(0) == target) {\n                        return true;\n                    }\n                });\n                if (!target) {\n                    //console.log(\"i'm not picker\");\n                    this.close();\n                    return this;\n                }\n                //console.log(\"i'm picker\");\n                return this;\n            },\n                onBtnClick = function onBtnClick(e, target) {\n                // console.log('btn click');\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-picker-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    var item = this.queue[this.activePickerQueueIndex],\n                        k = target.getAttribute(\"data-picker-btn\");\n\n                    if (item.btns && item.btns[k].onClick) {\n                        var that = {\n                            key: k,\n                            value: item.btns[k],\n                            self: this,\n                            item: item\n                        };\n                        item.btns[k].onClick.call(that, k);\n                    } else {\n                        this.close();\n                    }\n                }\n            },\n                onBodyKeyup = function onBodyKeyup(e) {\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n            },\n                getQueIdx = function getQueIdx(boundID) {\n                if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-axpicker-id\");\n                }\n                if (!U.isString(boundID)) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"402\", \"getQueIdx\"));\n                    return;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            };\n            /// private end\n\n            /**\n             * Preferences of picker UI\n             * @method ax5picker.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5picker}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * bind picker UI\n             * @method ax5picker.bind\n             * @param {Object} item\n             * @param {Element} item.target\n             * @param {String} item.direction - top|left|right|bottom|auto\n             * @param {Number} item.contentWidth\n             * @param {Boolean} item.disableChangeTrigger\n             * @param {Function} item.onStateChanged\n             * @param {Object} item.btns\n             * @param {Object} item.content\n             * @param {Number} item.content.width\n             * @param {Number} item.content.margin\n             * @param {String} item.content.type\n             * @param {Object} item.content.config - binded UI config\n             * @param {Object} item.content.formatter\n             * @param {String} item.content.formatter.pattern\n             * @returns {ax5picker}\n             * @example\n             * ```js\n             * var picker = new ax5.ui.picker();\n             * $(document.body).ready(function () {\n             *   picker.bind({\n             *       target: $('[data-ax5picker=\"basic\"]'),\n             *       direction: \"top\",\n             *       content: {\n             *           width: 270,\n             *           margin: 10,\n             *           type: 'date',\n             *           config: {\n             *               control: {\n             *                   left: '<i class=\"fa fa-chevron-left\"></i>',\n             *                   yearTmpl: '%s',\n             *                   monthTmpl: '%s',\n             *                   right: '<i class=\"fa fa-chevron-right\"></i>'\n             *               },\n             *               lang: {\n             *                   yearTmpl: \"%s년\",\n             *                   months: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\n             *                   dayTmpl: \"%s\"\n             *               }\n             *           },\n             *           formatter: {\n             *               pattern: 'date'\n             *           }\n             *       },\n             *       onStateChanged: function () {\n             *\n             *       }\n             *   });\n             * });\n             * ```\n             */\n            this.bind = function (item) {\n                var pickerConfig = {},\n                    queIdx = void 0;\n\n                item = jQuery.extend(true, pickerConfig, cfg, item);\n\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"401\", \"bind\"));\n                    return this;\n                }\n                item.$target = jQuery(item.target);\n\n                if (!item.$target.get(0)) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                if (!item.id) item.id = item.$target.data(\"data-axpicker-id\");\n\n                if (!item.id) {\n                    item.id = 'ax5-picker-' + ax5.getGuid();\n                    item.$target.data(\"data-axpicker-id\", item.id);\n                }\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindPickerTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindPickerTarget.call(this, queIdx);\n                }\n\n                pickerConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * @method ax5picker.setContentValue\n             * @param {String} boundID\n             * @param {Number} inputIndex\n             * @param {String} val\n             * @returns {ax5picker} this\n             */\n            this.setContentValue = function () {\n\n                var multipleInputProcessor = {\n                    \"date\": function date(_item, _inputIndex, _val) {\n                        var values = [],\n                            diffDay,\n                            prevInputValue,\n                            nextInputValue;\n\n                        if (_item.$target.get(0).tagName.toUpperCase() !== \"INPUT\") {\n                            _item.$target.find('input[type]').each(function () {\n                                values.push(this.value);\n                            });\n                        }\n\n                        if (_inputIndex == 0) {\n                            if (values.length > 1 && values[1] !== \"\") {\n                                // 값 검증\n                                diffDay = ax5.util.dday(values[1], { today: values[0] });\n                                if (diffDay < 0) {\n                                    // 다음날짜 달력을 변경합니다.\n                                    nextInputValue = _val;\n                                } else {}\n                            } else {\n                                nextInputValue = _val;\n                            }\n\n                            if (nextInputValue) {\n                                _item.pickerCalendar[1].ax5uiInstance.setSelection([nextInputValue], false).changeMode(\"d\", nextInputValue);\n                                this.setContentValue(_item.id, 1, nextInputValue);\n                            }\n\n                            return _val;\n                        } else if (_inputIndex == 1) {\n                            if (values.length > 1) {\n                                // 값 검증\n                                diffDay = ax5.util.dday(values[1], { today: values[0] });\n                                if (diffDay < 0) {\n                                    // 다음날짜 달력을 변경합니다.\n                                    prevInputValue = values[1];\n                                }\n                            }\n\n                            if (prevInputValue) {\n                                _item.pickerCalendar[0].ax5uiInstance.setSelection([prevInputValue], false).changeMode(\"d\", prevInputValue);\n                                this.setContentValue(_item.id, 0, prevInputValue);\n                            }\n\n                            return _val;\n                        }\n                    }\n                };\n\n                return function (boundID, inputIndex, val) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var _input;\n\n                    if (item) {\n\n                        _input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : jQuery(item.$target.find('input[type]').get(inputIndex));\n                        _input.val(val);\n\n                        if (!item.disableChangeTrigger) {\n                            _input.trigger(\"change\");\n                        }\n\n                        // picker의 입력이 2개이상인 경우\n                        //console.log(item.inputLength);\n                        if (item.inputLength > 1) {\n                            // 경우에 따라 첫번 선택에 따라 해야할 일들 처리\n                            if (multipleInputProcessor[item.content.type]) {\n                                val = multipleInputProcessor[item.content.type].call(this, item, inputIndex, val);\n                            }\n                        }\n\n                        var that = {\n                            self: self,\n                            state: \"changeValue\",\n                            item: item,\n                            inputIndex: inputIndex,\n                            value: val,\n                            values: [val]\n                        };\n                        if (item.$target.get(0).tagName.toUpperCase() !== \"INPUT\") {\n                            that.values = [];\n                            item.$target.find('input[type]').each(function () {\n                                that.values.push(this.value);\n                            });\n                        }\n\n                        onStateChanged.call(this, item, that);\n\n                        if (item.inputLength == 1) {\n                            this.close();\n                        }\n                    }\n\n                    item = null;\n                    boundID = null;\n                    inputIndex = null;\n                    val = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5picker.open\n             * @param {String} boundObjectId\n             * @returns {ax5picker} this\n             */\n            this.open = function () {\n\n                var pickerContent = {\n                    '@fn': function fn(queIdx, callback) {\n                        var item = this.queue[queIdx];\n                        item.content.call(item, function (html) {\n                            callback(html);\n                        });\n                        return true;\n                    },\n                    'date': function date(queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div ' + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" ' + 'class=\"ax-picker-content-box\" ' + 'data-calendar-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        var calendarConfig = jQuery.extend({}, cfg.calendar, { displayDate: new Date() });\n                        var input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : item.$target.find('input[type]');\n\n                        // calendar bind\n                        item.pickerCalendar = [];\n                        item.pickerContent.find('[data-calendar-target]').each(function () {\n\n                            // calendarConfig extend ~\n                            var idx = this.getAttribute(\"data-calendar-target\"),\n                                dValue = input.get(idx).value,\n                                d = ax5.util.date(dValue);\n\n                            calendarConfig.displayDate = d;\n                            if (dValue) calendarConfig.selection = [d];\n                            calendarConfig = jQuery.extend(true, calendarConfig, item.content.config || {});\n                            calendarConfig.target = this;\n                            calendarConfig.onClick = function () {\n                                self.setContentValue(item.id, idx, this.date);\n                            };\n\n                            item.pickerCalendar.push({\n                                itemId: item.id,\n                                inputIndex: idx,\n                                ax5uiInstance: new ax5.ui.calendar(calendarConfig)\n                            });\n                        });\n                    },\n                    'secure-num': function secureNum(queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div ' + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" ' + 'class=\"ax-picker-content-box\" ' + 'data-secure-num-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-secure-num-target]').each(function () {\n                            var idx = this.getAttribute(\"data-secure-num-target\"),\n                                po = [];\n\n                            var numArray = function (a) {\n                                var j, x, i;\n                                for (i = a.length; i; i -= 1) {\n                                    j = Math.floor(Math.random() * i);\n                                    x = a[i - 1];\n                                    a[i - 1] = a[j];\n                                    a[j] = x;\n                                }\n                                return a;\n                            }([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n                            var specialArray = [{ label: \"&#x02190\", fn: \"back\" }, { label: \"C\", fn: \"clear\" }];\n\n                            numArray.forEach(function (n) {\n                                po.push('<div style=\"float:left;' + item.content.config.btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + item.content.config.btnTheme + '\" ' + 'style=\"' + item.content.config.btnStyle + '\" data-secure-num-value=\"' + n + '\">' + n + '</button>');\n                                po.push('</div>');\n                            });\n                            specialArray.forEach(function (n) {\n                                po.push('<div style=\"float:left;' + item.content.config.btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + item.content.config.specialBtnTheme + '\" ' + 'style=\"' + item.content.config.btnStyle + '\" data-secure-num-value=\"' + n.fn + '\">' + n.label + '</button>');\n                                po.push('</div>');\n                            });\n\n                            po.push('<div style=\"clear:both;\"></div>');\n\n                            $(this).html(po.join('')).on(\"click\", '[data-secure-num-value]', function () {\n                                var act = this.getAttribute(\"data-secure-num-value\");\n                                var _input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : jQuery(item.$target.find('input[type]').get(idx));\n                                var val = _input.val();\n\n                                if (act == \"back\") {\n                                    _input.val(val.substring(0, val.length - 1));\n                                } else if (act == \"clear\") {\n                                    _input.val('');\n                                } else {\n                                    _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: \"changeValue\",\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'keyboard': function keyboard(queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div ' + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" ' + 'class=\"ax-picker-content-box\" ' + 'data-keyboard-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        var keyArray = [[{ value: \"`\", shiftValue: \"~\" }, { value: \"1\", shiftValue: \"!\" }, { value: \"2\", shiftValue: \"@\" }, { value: \"3\", shiftValue: \"#\" }, { value: \"4\", shiftValue: \"$\" }, { value: \"5\", shiftValue: \"%\" }, { value: \"6\", shiftValue: \"^\" }, { value: \"7\", shiftValue: \"&\" }, { value: \"8\", shiftValue: \"*\" }, { value: \"9\", shiftValue: \"(\" }, { value: \"0\", shiftValue: \")\" }, { value: \"-\", shiftValue: \"_\" }, { value: \"=\", shiftValue: \"+\" }, { label: \"&#x02190\", fn: \"back\" }], [{ value: \"q\", shiftValue: \"Q\" }, { value: \"w\", shiftValue: \"W\" }, { value: \"e\", shiftValue: \"E\" }, { value: \"r\", shiftValue: \"R\" }, { value: \"t\", shiftValue: \"T\" }, { value: \"y\", shiftValue: \"Y\" }, { value: \"u\", shiftValue: \"U\" }, { value: \"i\", shiftValue: \"I\" }, { value: \"o\", shiftValue: \"O\" }, { value: \"p\", shiftValue: \"P\" }, { value: \"[\", shiftValue: \"{\" }, { value: \"]\", shiftValue: \"}\" }, { value: \"\\\\\", shiftValue: \"|\" }], [{ label: \"Clear\", fn: \"clear\" }, { value: \"a\", shiftValue: \"A\" }, { value: \"s\", shiftValue: \"S\" }, { value: \"d\", shiftValue: \"D\" }, { value: \"f\", shiftValue: \"F\" }, { value: \"g\", shiftValue: \"G\" }, { value: \"h\", shiftValue: \"H\" }, { value: \"j\", shiftValue: \"J\" }, { value: \"k\", shiftValue: \"K\" }, { value: \"l\", shiftValue: \"L\" }, { value: \";\", shiftValue: \":\" }, { value: \"'\", shiftValue: \"\\\"\" }], [{ label: \"Shift\", fn: \"shift\" }, { value: \"z\", shiftValue: \"Z\" }, { value: \"x\", shiftValue: \"X\" }, { value: \"c\", shiftValue: \"C\" }, { value: \"v\", shiftValue: \"V\" }, { value: \"b\", shiftValue: \"B\" }, { value: \"n\", shiftValue: \"N\" }, { value: \"m\", shiftValue: \"M\" }, { value: \",\", shiftValue: \"<\" }, { value: \".\", shiftValue: \">\" }, { value: \"/\", shiftValue: \"?\" }, { label: \"Close\", fn: \"close\" }]];\n                        var specialArray = [{ label: \"&#x02190\", fn: \"back\" }, { label: \"C\", fn: \"clear\" }];\n\n                        var getKeyBoard = function getKeyBoard(isShiftKey) {\n                            var po = [];\n                            keyArray.forEach(function (row) {\n                                po.push('<div style=\"display: table;margin:0 auto;\">');\n                                row.forEach(function (n) {\n\n                                    var keyValue, keyLabel, btnWrapStyle, btnTheme, btnStyle;\n                                    if (n.fn) {\n                                        keyValue = n.fn;\n                                        keyLabel = n.label;\n                                        btnWrapStyle = item.content.config.specialBtnWrapStyle;\n                                        btnTheme = item.content.config.specialBtnTheme;\n                                        btnStyle = item.content.config.specialBtnStyle;\n                                    } else {\n                                        keyLabel = keyValue = isShiftKey ? n.shiftValue : n.value;\n                                        btnWrapStyle = item.content.config.btnWrapStyle;\n                                        btnTheme = item.content.config.btnTheme;\n                                        btnStyle = item.content.config.btnStyle;\n                                    }\n\n                                    po.push('<div style=\"display: table-cell;' + btnWrapStyle + '\">');\n                                    po.push('<button class=\"btn btn-default btn-' + btnTheme + '\" ' + 'style=\"' + btnStyle + '\" data-keyboard-value=\"' + keyValue + '\">' + keyLabel + '</button>');\n                                    po.push('</div>');\n                                });\n                                po.push('</div>');\n                            });\n                            return po.join('');\n                        };\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-keyboard-target]').each(function () {\n                            var idx = this.getAttribute(\"data-keyboard-target\");\n                            var $this = $(this);\n                            var isShiftKey = false;\n                            var toggleShift = function toggleShift() {\n                                isShiftKey = !isShiftKey;\n                                $this.html(getKeyBoard(isShiftKey));\n                            };\n                            $this.html(getKeyBoard(isShiftKey)).on(\"mousedown\", '[data-keyboard-value]', function () {\n                                var act = this.getAttribute(\"data-keyboard-value\");\n                                var _input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : jQuery(item.$target.find('input[type]').get(idx));\n                                var val = _input.val();\n\n                                switch (act) {\n                                    case \"back\":\n                                        _input.val(val.substring(0, val.length - 1));\n                                        break;\n                                    case \"clear\":\n                                        _input.val('');\n                                        break;\n                                    case \"shift\":\n                                        toggleShift();\n                                        return false;\n                                        break;\n                                    case \"close\":\n                                        self.close();\n                                        return false;\n                                        break;\n                                    default:\n                                        _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: \"changeValue\",\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'numpad': function numpad(queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div ' + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" ' + 'class=\"ax-picker-content-box\" ' + 'data-numpad-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-numpad-target]').each(function () {\n                            var idx = this.getAttribute(\"data-numpad-target\"),\n                                po = [];\n\n                            var keyArray = item.content.config.keyArray || [{ value: \"7\" }, { value: \"8\" }, { value: \"9\" }, { label: \"BS\", fn: \"back\" }, { value: \"4\" }, { value: \"5\" }, { value: \"6\" }, { label: \"CLS\", fn: \"clear\" }, { value: \"1\" }, { value: \"2\" }, { value: \"3\" }, { value: \"\" }, { value: \".\" }, { value: \"0\" }, { value: \"\" }, { label: \"OK\", fn: \"enter\" }];\n\n                            keyArray.forEach(function (n) {\n                                var keyValue, keyLabel, btnWrapStyle, btnTheme, btnStyle;\n\n                                if (n.fn) {\n                                    keyValue = n.fn;\n                                    keyLabel = n.label;\n                                    btnTheme = item.content.config.specialBtnTheme;\n                                    btnWrapStyle = item.content.config.specialBtnWrapStyle;\n                                    btnStyle = item.content.config.specialBtnStyle;\n                                } else {\n                                    keyLabel = keyValue = n.value;\n                                    btnTheme = keyValue ? item.content.config.btnTheme : \"\";\n                                    btnWrapStyle = item.content.config.btnWrapStyle;\n                                    btnStyle = item.content.config.btnStyle;\n                                }\n\n                                po.push('<div style=\"float:left;' + btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + btnTheme + '\" ' + 'style=\"' + btnStyle + '\" data-numpad-value=\"' + keyValue + '\">' + (keyLabel || \"&nbsp;\") + '</button>');\n                                po.push('</div>');\n                            });\n\n                            po.push('<div style=\"clear:both;\"></div>');\n\n                            $(this).html(po.join('')).on(\"mousedown\", '[data-numpad-value]', function () {\n                                var act = this.getAttribute(\"data-numpad-value\");\n                                var _input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : jQuery(item.$target.find('input[type]').get(idx));\n                                var val = _input.val();\n                                var state = \"\";\n\n                                switch (act) {\n                                    case \"back\":\n                                        state = \"changeValue\";\n                                        _input.val(val.substring(0, val.length - 1));\n                                        break;\n                                    case \"clear\":\n                                        state = \"changeValue\";\n                                        _input.val('');\n                                        break;\n                                    case \"enter\":\n                                        self.close(item, \"enter\");\n                                        return false;\n                                        break;\n                                    case \"close\":\n                                        self.close();\n                                        return false;\n                                        break;\n                                    default:\n                                        state = \"changeValue\";\n                                        _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: state,\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    }\n                };\n\n                return function (boundID, tryCount) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n\n                    /**\n                     다른 피커가 있는 경우와 다른 피커를 닫고 다시 오픈 명령이 내려진 경우에 대한 예외 처리 구문\n                     */\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activePicker) {\n                        if (this.activePickerQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout(function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }.bind(this), cfg.animateTime);\n                        return this;\n                    }\n\n                    this.activePicker = jQuery(PICKER.tmpl.get.call(this, \"pickerTmpl\", item));\n                    this.activePickerArrow = this.activePicker.find(\".ax-picker-arrow\");\n                    this.activePickerQueueIndex = queIdx;\n                    item.pickerContent = this.activePicker.find('[data-picker-els=\"content\"]');\n\n                    if (U.isFunction(item.content)) {\n                        // 함수타입\n                        item.pickerContent.html(\"Loading..\");\n                        pickerContent[\"@fn\"].call(this, queIdx, function (html) {\n                            item.pickerContent.html(html);\n                        });\n                    } else {\n                        if (item.content.type in pickerContent) {\n                            pickerContent[item.content.type].call(this, queIdx);\n                        }\n                    }\n\n                    // bind event picker btns\n                    this.activePicker.find(\"[data-picker-btn]\").on(cfg.clickEventName, function (e) {\n                        onBtnClick.call(this, e || window.event, queIdx);\n                    }.bind(this));\n\n                    alignPicker.call(this, \"append\");\n\n                    jQuery(window).bind(\"resize.ax5picker\", function () {\n                        alignPicker.call(this);\n                    }.bind(this));\n\n                    // bind key event\n                    jQuery(window).bind(\"keyup.ax5picker\", function (e) {\n                        e = e || window.event;\n                        onBodyKeyup.call(this, e);\n                        U.stopEvent(e);\n                    }.bind(this));\n\n                    jQuery(window).bind(\"click.ax5picker\", function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }.bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5picker.close\n             * @returns {ax5picker} this\n             */\n            this.close = function (item, state) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activePicker) return this;\n\n                item = this.queue[this.activePickerQueueIndex];\n\n                this.activePicker.addClass(\"destroy\");\n                jQuery(window).unbind(\"resize.ax5picker\");\n                jQuery(window).unbind(\"click.ax5picker\");\n                jQuery(window).unbind(\"keyup.ax5picker\");\n\n                this.closeTimer = setTimeout(function () {\n                    if (this.activePicker) this.activePicker.remove();\n                    this.activePicker = null;\n                    this.activePickerQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: state || \"close\"\n                    });\n                }.bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5picker;\n    }());\n\n    PICKER = ax5.ui.picker;\n})();\n\n/**\n * ax5.ui.picker_instance\n * @type {ax5picker}\n * @example\n * ```js\n * // picker 기본 속성을 변경해야 한다면\n * ax5.ui.picker_instance.setConfig({\n * });\n *\n * ```\n */\nax5.ui.picker_instance = new ax5.ui.picker();\n\njQuery.fn.ax5picker = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.picker_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.picker_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.picker_instance.setContentValue(this, arguments[1], arguments[2]);\n                    break;\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend(true, config, defaultConfig);\n                ax5.ui.picker_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n// ax5.ui.picker.tmpl\n(function () {\n    var PICKER = ax5.ui.picker;\n    var U = ax5.util;\n\n    var pickerTmpl = function pickerTmpl() {\n        return '\\n<div class=\"ax5-ui-picker {{theme}}\" id=\"{{id}}\" data-picker-els=\"root\" {{#zIndex}}style=\"z-index:{{zIndex}};\"{{/zIndex}}>\\n    {{#title}}\\n        <div class=\"ax-picker-heading\">{{title}}</div>\\n    {{/title}}\\n    <div class=\"ax-picker-body\">\\n        <div class=\"ax-picker-content\" data-picker-els=\"content\" style=\"width:{{contentWidth}}px;\"></div>\\n        {{#btns}}\\n            <div class=\"ax-picker-buttons\">\\n            {{#btns}}\\n                {{#@each}}\\n                <button data-picker-btn=\"{{@key}}\" class=\"btn btn-default {{@value.theme}}\">{{@value.label}}</button>\\n                {{/@each}}\\n            {{/btns}}\\n            </div>\\n        {{/btns}}\\n    </div>\\n    <div class=\"ax-picker-arrow\"></div>\\n</div>\\n';\n    };\n\n    PICKER.tmpl = {\n        \"pickerTmpl\": pickerTmpl,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(PICKER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.formatter\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var FORMATTER;\n\n    UI.addClass({\n        className: \"formatter\",\n        version: \"1.3.66\"\n    }, function () {\n        var TODAY = new Date();\n        var setSelectionRange = function setSelectionRange(input, pos) {\n            if (typeof pos == \"undefined\") {\n                pos = input.value.length;\n            }\n            if (input.setSelectionRange) {\n                input.focus();\n                input.setSelectionRange(pos, pos);\n            } else if (input.createTextRange) {\n                var range = input.createTextRange();\n                range.collapse(true);\n                range.moveEnd('character', pos);\n                range.moveStart('character', pos);\n                range.select();\n            } else if (input.selectionStart) {\n                input.focus();\n                input.selectionStart = pos;\n                input.selectionEnd = pos;\n            }\n        };\n\n        /**\n         * @class ax5formatter\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * $('#idInputTime').attr('data-ax5formatter', 'time').ax5formatter();\n         * $('#idInputMoney').attr('data-ax5formatter', 'money').ax5formatter();\n         * $('#idInputPhone').attr('data-ax5formatter', 'phone').ax5formatter();\n         * $('#idInputDate').attr('data-ax5formatter', 'date').ax5formatter();\n         *\n         * $('#ax5formatter-custom').ax5formatter({\n         *     pattern: \"custom\",\n         *     getEnterableKeyCodes: function(){\n         *         return {\n         *             '65':'a',\n         *             '66':'b',\n         *             '67':'c',\n         *             '68':'d',\n         *             '69':'e',\n         *             '70':'f'\n         *         };\n         *     },\n         *     getPatternValue: function(obj){\n         *         return obj.value.replace(/./g, \"*\");\n         *     }\n         * });\n         * ```\n         */\n        var ax5formatter = function ax5formatter() {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                animateTime: 250\n            };\n\n            this.queue = [];\n            this.openTimer = null;\n            this.closeTimer = null;\n\n            cfg = this.config;\n\n            var formatterEvent = {\n                'focus': function focus(opts, optIdx, e) {\n                    if (!opts.$input.data(\"__originValue__\")) opts.$input.data(\"__originValue__\", opts.$input.val());\n                },\n                /* 키 다운 이벤트에서 입력할 수 없는 키 입력을 방어 */\n                'keydown': function keydown(opts, optIdx, e) {\n                    var isStop = false;\n                    if (!opts.enterableKeyCodes) {} else if (e.which && opts.enterableKeyCodes[e.which]) {} else if (!e.metaKey && !e.ctrlKey && !e.shiftKey) {\n                        //console.log(e.which, opts.enterableKeyCodes);\n                        isStop = true;\n                    }\n                    if (isStop) ax5.util.stopEvent(e);\n                },\n                /* 키 업 이벤트에서 패턴을 적용 */\n                'keyup': function keyup(opts, optIdx, e) {\n                    var elem = opts.$input.get(0),\n                        elemFocusPosition,\n                        beforeValue,\n                        newValue,\n                        selection,\n                        selectionLength;\n\n                    if ('selectionStart' in elem) {\n                        // Standard-compliant browsers\n                        elemFocusPosition = elem.selectionStart;\n                    } else if (document.selection) {\n                        // IE\n                        //elem.focus();\n                        selection = document.selection.createRange();\n                        selectionLength = document.selection.createRange().text.length;\n                        selection.moveStart('character', -elem.value.length);\n                        elemFocusPosition = selection.text.length - selectionLength;\n                    }\n\n                    beforeValue = elem.value;\n                    if (opts.pattern in FORMATTER.formatter) {\n                        newValue = FORMATTER.formatter[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value);\n                    } else {\n                        newValue = beforeValue;\n                    }\n\n                    if (newValue != beforeValue) {\n                        opts.$input.val(newValue).trigger(\"change\");\n                        setSelectionRange(elem, elemFocusPosition + newValue.length - beforeValue.length);\n                    }\n                },\n                'blur': function blur(opts, optIdx, e, _force) {\n                    var elem = opts.$input.get(0),\n                        beforeValue,\n                        newValue;\n\n                    opts.$input.removeData(\"__originValue__\");\n\n                    beforeValue = elem.value;\n                    if (opts.pattern in FORMATTER.formatter) {\n                        newValue = FORMATTER.formatter[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value, 'blur');\n                    } else {\n                        newValue = beforeValue;\n                    }\n\n                    if (_force) {\n                        opts.$input.val(newValue);\n                    } else {\n                        if (newValue != beforeValue) {\n                            opts.$input.val(newValue).trigger(\"change\");\n                        }\n                    }\n                }\n            },\n                bindFormatterTarget = function bindFormatterTarget(opts, optIdx) {\n\n                if (!opts.pattern) {\n                    if (opts.$target.get(0).tagName == \"INPUT\") {\n                        opts.pattern = opts.$target.attr('data-ax5formatter');\n                    } else {\n                        opts.pattern = opts.$target.find('input[type=\"text\"]').attr('data-ax5formatter');\n                    }\n                    if (!opts.pattern) {\n                        console.log(ax5.info.getError(\"ax5formatter\", \"501\", \"bind\"));\n                        console.log(opts.target);\n                        return this;\n                    }\n                }\n\n                var re = /[^\\(^\\))]+/gi,\n                    matched = opts.pattern.match(re);\n\n                opts.pattern = matched[0];\n                opts.patternArgument = matched[1] || \"\";\n\n                // 함수타입\n                if (opts.pattern in FORMATTER.formatter) {\n                    opts.enterableKeyCodes = FORMATTER.formatter[opts.pattern].getEnterableKeyCodes.call(this, opts, optIdx);\n                }\n\n                opts.$input.unbind('focus.ax5formatter').bind('focus.ax5formatter', formatterEvent.focus.bind(this, this.queue[optIdx], optIdx));\n\n                opts.$input.unbind('keydown.ax5formatter').bind('keydown.ax5formatter', formatterEvent.keydown.bind(this, this.queue[optIdx], optIdx));\n\n                opts.$input.unbind('keyup.ax5formatter').bind('keyup.ax5formatter', formatterEvent.keyup.bind(this, this.queue[optIdx], optIdx));\n\n                opts.$input.unbind('blur.ax5formatter').bind('blur.ax5formatter', formatterEvent.blur.bind(this, this.queue[optIdx], optIdx));\n\n                formatterEvent.blur.call(this, this.queue[optIdx], optIdx);\n\n                return this;\n            },\n                getQueIdx = function getQueIdx(boundID) {\n                if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-formatter\");\n                }\n                /*\n                 if (!U.isString(boundID)) {\n                 console.log(ax5.info.getError(\"ax5formatter\", \"402\", \"getQueIdx\"));\n                 return;\n                 }\n                 */\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            };\n\n            /**\n             * Preferences of formatter UI\n             * @method ax5formatter.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5.ui.formatter}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {};\n\n            this.bind = function (opts) {\n                var formatterConfig = {},\n                    optIdx;\n\n                jQuery.extend(true, formatterConfig, cfg);\n                if (opts) jQuery.extend(true, formatterConfig, opts);\n                opts = formatterConfig;\n\n                if (!opts.target) {\n                    console.log(ax5.info.getError(\"ax5formatter\", \"401\", \"bind\"));\n                    return this;\n                }\n                opts.$target = jQuery(opts.target);\n\n                if (opts.$target.get(0).tagName == \"INPUT\") {\n                    opts.$input = opts.$target;\n                } else {\n                    opts.$input = opts.$target.find('input[type=\"text\"]');\n                    if (opts.$input.length > 1) {\n                        opts.$input.each(function () {\n                            opts.target = this;\n                            self.bind(opts);\n                        });\n                        return this;\n                    }\n                }\n\n                opts.$input = opts.$target.get(0).tagName == \"INPUT\" ? opts.$target : opts.$target.find('input[type=\"text\"]');\n                if (!opts.id) opts.id = opts.$input.data(\"ax5-formatter\");\n\n                if (!opts.id) {\n                    opts.id = 'ax5-formatter-' + ax5.getGuid();\n                    opts.$input.data(\"ax5-formatter\", opts.id);\n                }\n                optIdx = U.search(this.queue, function () {\n                    return this.id == opts.id;\n                });\n\n                if (optIdx === -1) {\n                    this.queue.push(opts);\n                    bindFormatterTarget.call(this, this.queue[this.queue.length - 1], this.queue.length - 1);\n                } else {\n                    this.queue[optIdx] = opts;\n                    bindFormatterTarget.call(this, this.queue[optIdx], optIdx);\n                }\n\n                return this;\n            };\n\n            /**\n             * formatter value 를 다시 적용합니다.\n             * @method ax5formatter.formatting\n             * @returns {ax5formatter}\n             * @example\n             * ```js\n             * $('[data-ax5formatter=\"time\"]').ax5formatter(\"formatting\"); // 하나만\n             * $('[data-ax5formatter]').ax5formatter(\"formatting\"); // 모두\n             * ```\n             */\n            this.formatting = function (boundID) {\n                var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                if (queIdx === -1) {\n                    var i = this.queue.length;\n                    while (i--) {\n                        formatterEvent.blur.call(this, this.queue[i], i, null, true);\n                    }\n                } else {\n                    formatterEvent.blur.call(this, this.queue[queIdx], queIdx, null, true);\n                }\n                return this;\n            };\n\n            this.unbind = function () {\n                // 구현해야함.\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5formatter;\n    }());\n\n    FORMATTER = ax5.ui.formatter;\n})();\n\nax5.ui.formatter_instance = new ax5.ui.formatter();\n\njQuery.fn.ax5formatter = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"formatting\":\n                    return ax5.ui.formatter_instance.formatting(this);\n                    break;\n\n                case \"unbind\":\n                    return ax5.ui.formatter_instance.unbind(this);\n                    break;\n\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.formatter_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n\n// ax5.ui.formatter.formatter\n(function () {\n\n    var FORMATTER = ax5.ui.formatter;\n    var U = ax5.util;\n    var ctrlKeys = {\n        \"18\": \"KEY_ALT\",\n        \"8\": \"KEY_BACKSPACE\",\n        \"17\": \"KEY_CONTROL\",\n        \"46\": \"KEY_DELETE\",\n        \"40\": \"KEY_DOWN\",\n        \"35\": \"KEY_END\",\n        \"187\": \"KEY_EQUAL\",\n        \"27\": \"KEY_ESC\",\n        \"36\": \"KEY_HOME\",\n        \"45\": \"KEY_INSERT\",\n        \"37\": \"KEY_LEFT\",\n        \"189\": \"KEY_MINUS\",\n        \"34\": \"KEY_PAGEDOWN\",\n        \"33\": \"KEY_PAGEUP\",\n        // \"190\": \"KEY_PERIOD\",\n        \"13\": \"KEY_RETURN\",\n        \"39\": \"KEY_RIGHT\",\n        \"16\": \"KEY_SHIFT\",\n        // \"32\": \"KEY_SPACE\",\n        \"9\": \"KEY_TAB\",\n        \"38\": \"KEY_UP\",\n        \"91\": \"KEY_WINDOW\"\n        //\"107\" : \"NUMPAD_ADD\",\n        //\"194\" : \"NUMPAD_COMMA\",\n        //\"110\" : \"NUMPAD_DECIMAL\",\n        //\"111\" : \"NUMPAD_DIVIDE\",\n        //\"12\" : \"NUMPAD_EQUAL\",\n        //\"106\" : \"NUMPAD_MULTIPLY\",\n        //\"109\" : \"NUMPAD_SUBTRACT\"\n    };\n    var numKeys = {\n        '48': 1, '49': 1, '50': 1, '51': 1, '52': 1, '53': 1, '54': 1, '55': 1, '56': 1, '57': 1,\n        '96': 1, '97': 1, '98': 1, '99': 1, '100': 1, '101': 1, '102': 1, '103': 1, '104': 1, '105': 1\n    };\n    var pattern_money = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                '188': ','\n            };\n            if (_opts.patternArgument == \"int\") {\n                // 소수점 입력 안됨\n            } else {\n                enterableKeyCodes['190'] = \".\"; // 소수점 입력 허용\n            }\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/[^0-9^\\.^\\-]/g, \"\");\n            var regExpPattern = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n                arrNumber = val.split('.'),\n                returnValue;\n\n            arrNumber[0] += '.';\n\n            do {\n                arrNumber[0] = arrNumber[0].replace(regExpPattern, '$1,$2');\n            } while (regExpPattern.test(arrNumber[0]));\n\n            if (arrNumber.length > 1) {\n                if (U.isNumber(_opts.maxRound)) {\n                    returnValue = arrNumber[0] + U.left(arrNumber[1], _opts.maxRound);\n                } else {\n                    returnValue = arrNumber.join('');\n                }\n            } else {\n                returnValue = arrNumber[0].split('.')[0];\n            }\n\n            return returnValue;\n        }\n    };\n\n    var pattern_number = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                '190': '.'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/[^0-9^\\.^\\-]/g, \"\");\n            var arrNumber = val.split('.'),\n                returnValue;\n\n            if (arrNumber.length > 1) {\n                if (U.isNumber(_opts.maxRound)) {\n                    returnValue = arrNumber[0] + U.left(arrNumber[1], _opts.maxRound);\n                } else {\n                    returnValue = arrNumber.join('');\n                }\n            } else {\n                returnValue = arrNumber[0].split('.')[0];\n            }\n\n            return returnValue;\n        }\n    };\n\n    var pattern_date = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                '189': '-', '191': '/'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            if (val == \"\") return val;\n            var regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?\\-?([0-9]{1,2})?.*$/;\n\n            if (_opts.patternArgument == \"time\") {\n                regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?\\-?([0-9]{1,2})? ?([0-9]{1,2})?:?([0-9]{1,2})?:?([0-9]{1,2})?.*$/;\n            }\n\n            var matchedPattern = val.match(regExpPattern),\n                returnValue = \"\",\n                inspectValue = function inspectValue(val, format, inspect, data) {\n                var _val = {\n                    'Y': function Y(v) {\n                        if (typeof v == \"undefined\") v = TODAY.getFullYear();\n                        if (v == '' || v == '0000') v = TODAY.getFullYear();\n                        return v.length < 4 ? U.setDigit(v, 4) : v;\n                    },\n                    'M': function M(v) {\n                        if (typeof v == \"undefined\") v = TODAY.getMonth() + 1;\n                        return v > 12 ? 12 : v == 0 ? '01' : U.setDigit(v, 2);\n                    },\n                    'D': function D(v) {\n                        if (typeof v == \"undefined\") v = TODAY.getDate() + 1;\n                        var dLen = U.daysOfMonth(data[1], data[2] - 1);\n                        return v > dLen ? dLen : v == 0 ? '01' : U.setDigit(v, 2);\n                    },\n                    'h': function h(v) {\n                        if (!v) v = 0;\n                        return v > 23 ? 23 : U.setDigit(v, 2);\n                    },\n                    'm': function m(v) {\n                        if (!v) v = 0;\n                        return v > 59 ? 59 : U.setDigit(v, 2);\n                    },\n                    's': function s(v) {\n                        if (!v) v = 0;\n                        return v > 59 ? 59 : U.setDigit(v, 2);\n                    }\n                };\n                return inspect ? _val[format](val) : val;\n            };\n\n            returnValue = val.replace(regExpPattern, function (a, b) {\n                var nval = [inspectValue(arguments[1], \"Y\", eType)];\n                if (arguments[2] || eType) nval.push('-' + inspectValue(arguments[2], \"M\", eType));\n                if (arguments[3] || eType) nval.push('-' + inspectValue(arguments[3], \"D\", eType, arguments));\n                if (_opts.patternArgument == \"time\") {\n                    if (arguments[4] || eType) nval.push(' ' + inspectValue(arguments[4], \"h\", eType));\n                    if (arguments[5] || eType) nval.push(':' + inspectValue(arguments[5], \"m\", eType));\n                    if (arguments[6] || eType) nval.push(':' + inspectValue(arguments[6], \"s\", eType));\n                }\n                return nval.join('');\n            });\n\n            if (eType == 'blur' && !matchedPattern) {\n                returnValue = function () {\n                    var nval = [inspectValue(returnValue, \"Y\", eType)];\n                    nval.push('-' + inspectValue(0, \"M\", eType));\n                    nval.push('-' + inspectValue(0, \"D\", eType, arguments));\n                    if (_opts.patternArgument == \"time\") {\n                        nval.push(' ' + inspectValue(0, \"h\", eType));\n                        nval.push(':' + inspectValue(0, \"m\", eType));\n                        nval.push(':' + inspectValue(0, \"s\", eType));\n                    }\n                    return nval.join('');\n                }();\n            } else if (!matchedPattern) returnValue = returnValue.length > 4 ? U.left(returnValue, 4) : returnValue;\n\n            return returnValue;\n        }\n    };\n\n    var pattern_time = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                '186': ':'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            var regExpPattern = /^([0-9]{1,2})?:?([0-9]{1,2})?:?([0-9]{1,2})?.*$/;\n\n            var matchedPattern = val.match(regExpPattern),\n                returnValue = val.replace(regExpPattern, function (a, b) {\n                var nval = [arguments[1]];\n                if (arguments[2]) nval.push(':' + arguments[2]);\n                if (arguments[3]) nval.push(':' + arguments[3]);\n                return nval.join('');\n            });\n\n            if (!matchedPattern) returnValue = returnValue.length > 2 ? U.left(returnValue, 2) : returnValue;\n\n            return returnValue;\n        }\n    };\n\n    var pattern_bizno = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                '189': '-'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            var regExpPattern = /^([0-9]{3})\\-?([0-9]{1,2})?\\-?([0-9]{1,5})?.*$/,\n                returnValue = val.replace(regExpPattern, function (a, b) {\n                var nval = [arguments[1]];\n                if (arguments[2]) nval.push(arguments[2]);\n                if (arguments[3]) nval.push(arguments[3]);\n                return nval.join(\"-\");\n            });\n\n            return returnValue;\n        }\n    };\n\n    var pattern_phone = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                '189': '-', '188': ','\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            var regExpPattern3 = /^([0-9]{3})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n            if (val.substr(0, 2) == \"02\") {\n                regExpPattern3 = /^([0-9]{2})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n            }\n\n            var returnValue = val.replace(regExpPattern3, function (a, b) {\n                var nval = [arguments[1]];\n                if (arguments[2]) nval.push(arguments[2]);\n                if (arguments[3]) nval.push(arguments[3]);\n                if (arguments[4]) nval.push(arguments[4]);\n                if (arguments[5]) nval.push(arguments[5]);\n                return nval.join(\"-\");\n            });\n            return returnValue;\n        }\n    };\n\n    var pattern_credit = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                '189': '-'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\").substring(0, 16);\n\n            var regExpPattern3 = /^([0-9]{4})\\-?([0-9]{4})?\\-?([0-9]{4})?\\-?([0-9]{4})?/,\n                returnValue = val.replace(regExpPattern3, function (a, b) {\n                var nval = [arguments[1]];\n                if (arguments[2]) nval.push(arguments[2]);\n                if (arguments[3]) nval.push(arguments[3]);\n                if (arguments[4]) nval.push(arguments[4]);\n                return nval.join(\"-\");\n            });\n            return returnValue;\n        }\n    };\n\n    var pattern_custom = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            if (_opts.getEnterableKeyCodes) {\n                return _opts.getEnterableKeyCodes.call(_opts, { $input: _opts.$input });\n            } else {\n                return null;\n            }\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            if (_opts.getPatternValue) {\n                return _opts.getPatternValue.call(_opts, { event: e, $input: _opts.$input, value: val });\n            }\n        }\n    };\n\n    FORMATTER.formatter = {\n        ctrlKeys: ctrlKeys,\n        numKeys: numKeys,\n        money: pattern_money,\n        number: pattern_number,\n        date: pattern_date,\n        time: pattern_time,\n        bizno: pattern_bizno,\n        phone: pattern_phone,\n        credit: pattern_credit,\n        custom: pattern_custom\n    };\n})();\n// ax5.ui.menu\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MENU;\n\n    UI.addClass({\n        className: \"menu\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5.ui.menu\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var menu = new ax5.ui.menu({\n         *     theme: 'primary',\n         *     iconWidth: 20,\n         *     acceleratorWidth: 100,\n         *     itemClickAndClose: false,\n         *     icons: {\n         *         'arrow': '<i class=\"fa fa-caret-right\"></i>'\n         *     },\n         *     columnKeys: {\n         *         label: 'name',\n         *         items: 'chidren'\n         *     },\n         *     items: [\n         *         {\n         *             icon: '<i class=\"fa fa-archive\"></i>',\n         *             name: \"Menu Parent 0\",\n         *             chidren: [\n         *                 {\n         *                     check: {\n         *                         type: 'checkbox',\n         *                         name: 'A',\n         *                         value: '0',\n         *                         checked: false\n         *                     },\n         *                     name: \"Menu Z\",\n         *                     data: {},\n         *                     role: \"\",\n         *                     accelerator: \"CmdOrCtrl+Z\"\n         *                 },\n         *                 {\n         *                     check: {\n         *                         type: 'checkbox',\n         *                         name: 'A',\n         *                         value: '1',\n         *                         checked: true\n         *                     },\n         *                     name: \"Menu A\",\n         *                     data: {},\n         *                     role: \"\"\n         *                 }\n         *             ],\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             divide: true,\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             icon: '<i class=\"fa fa-mixcloud\"></i>',\n         *             name: \"Menu Parent 1\",\n         *             chidren: [\n         *                 {\n         *                     name: \"Menu Z\",\n         *                     data: {},\n         *                     role: \"\",\n         *                     chidren: [\n         *                         {\n         *                             name: \"Menu Z\",\n         *                             data: {},\n         *                             role: \"\"\n         *                         },\n         *                         {\n         *                             name: \"Menu A\",\n         *                             data: {},\n         *                             role: \"\"\n         *                         }\n         *                     ]\n         *                 },\n         *                 {\n         *                     name: \"Menu A\",\n         *                     data: {},\n         *                     role: \"\"\n         *                 }\n         *             ],\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '1',\n         *                 checked: false\n         *             },\n         *             icon: '<i class=\"fa fa-bluetooth\"></i>',\n         *             name: \"Menu Parent 2\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '2',\n         *                 checked: false\n         *             },\n         *             name: \"Menu Parent 3\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '3',\n         *                 checked: false\n         *             },\n         *             name: \"Menu Parent 4\"\n         *         },\n         *         {divide: true},\n         *         {\n         *             html: function () {\n         *                 return '<div style=\"text-align: center;\">' +\n         *                     '<button class=\"btn btn-primary\" data-menu-btn=\"OK\">OK</button> ' +\n         *                     '<button class=\"btn btn-danger\" data-menu-btn=\"CANCEL\">CANCEL</button>' +\n         *                     '</div>';\n         *             }\n         *         }\n         *     ]\n         * });\n         * ```\n         */\n        var ax5menu = function ax5menu() {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: \"default\",\n                iconWidth: 22,\n                acceleratorWidth: 100,\n                menuBodyPadding: 5,\n                //direction: \"top\", // top|bottom\n                offset: { left: 0, top: 0 },\n                position: \"fixed\",\n                animateTime: 250,\n                items: [],\n                itemClickAndClose: true,\n                columnKeys: {\n                    label: 'label',\n                    items: 'items'\n                }\n            };\n\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.queue = [];\n            this.menuBar = {};\n            this.state = undefined;\n\n            cfg = this.config;\n\n            var appEventAttach = function appEventAttach(active) {\n                if (active) {\n                    jQuery(document).unbind(\"click.ax5menu-\" + this.menuId).bind(\"click.ax5menu-\" + this.menuId, clickItem.bind(this));\n                    jQuery(window).unbind(\"keydown.ax5menu-\" + this.menuId).bind(\"keydown.ax5menu-\" + this.menuId, function (e) {\n                        if (e.which == ax5.info.eventKeys.ESC) {\n                            self.close();\n                        }\n                    });\n                    jQuery(window).unbind(\"resize.ax5menu-\" + this.menuId).bind(\"resize.ax5menu-\" + this.menuId, function (e) {\n                        self.close();\n                    });\n                } else {\n                    jQuery(document).unbind(\"click.ax5menu-\" + this.menuId);\n                    jQuery(window).unbind(\"keydown.ax5menu-\" + this.menuId);\n                    jQuery(window).unbind(\"resize.ax5menu-\" + this.menuId);\n                }\n            },\n                onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                self.state = that.state;\n                opts = null;\n                that = null;\n                return true;\n            },\n                onLoad = function onLoad(that) {\n                if (this.onLoad) {\n                    this.onLoad.call(that, that);\n                }\n\n                that = null;\n                return true;\n            },\n                popup = function popup(opt, items, depth, path) {\n                var data = opt,\n                    activeMenu,\n                    removed;\n\n                data.theme = opt.theme || cfg.theme;\n                data.cfg = {\n                    icons: jQuery.extend({}, cfg.icons),\n                    iconWidth: opt.iconWidth || cfg.iconWidth,\n                    acceleratorWidth: opt.acceleratorWidth || cfg.acceleratorWidth\n                };\n\n                items.forEach(function (n) {\n                    if (n.html || n.divide) {\n                        n['@isMenu'] = false;\n                        if (n.html) {\n                            n['@html'] = n.html.call({\n                                item: n,\n                                config: cfg,\n                                opt: opt\n                            });\n                        }\n                    } else {\n                        n['@isMenu'] = true;\n                    }\n                });\n\n                data[cfg.columnKeys.items] = items;\n                data['@depth'] = depth;\n                data['@path'] = path || \"root\";\n                data['@hasChild'] = function () {\n                    return this[cfg.columnKeys.items] && this[cfg.columnKeys.items].length > 0;\n                };\n                activeMenu = jQuery(MENU.tmpl.get.call(this, \"tmpl\", data, cfg.columnKeys));\n                jQuery(document.body).append(activeMenu);\n\n                // remove queue\n\n                removed = this.queue.splice(depth);\n                removed.forEach(function (n) {\n                    n.$target.remove();\n                });\n\n                this.queue.push({\n                    '$target': activeMenu,\n                    'data': jQuery.extend({}, data)\n                });\n\n                activeMenu.find('[data-menu-item-index]').bind(\"mouseover\", function () {\n                    var depth = this.getAttribute(\"data-menu-item-depth\"),\n                        index = this.getAttribute(\"data-menu-item-index\"),\n                        path = this.getAttribute(\"data-menu-item-path\"),\n                        $this,\n                        offset,\n                        scrollTop,\n                        childOpt,\n                        _items,\n                        _activeMenu;\n\n                    if (depth != null && typeof depth != \"undefined\") {\n                        _items = self.queue[depth].data[cfg.columnKeys.items][index][cfg.columnKeys.items];\n                        _activeMenu = self.queue[depth].$target;\n                        _activeMenu.find('[data-menu-item-index]').removeClass(\"hover\");\n                        jQuery(this).addClass(\"hover\");\n\n                        if (_activeMenu.attr(\"data-selected-menu-item-index\") != index) {\n                            _activeMenu.attr(\"data-selected-menu-item-index\", index);\n\n                            if (_items && _items.length > 0) {\n\n                                $this = jQuery(this);\n                                offset = $this.offset();\n                                scrollTop = cfg.position == \"fixed\" ? jQuery(document).scrollTop() : 0;\n                                childOpt = {\n                                    '@parent': {\n                                        left: offset.left,\n                                        top: offset.top,\n                                        width: $this.outerWidth(),\n                                        height: $this.outerHeight()\n                                    },\n                                    left: offset.left + $this.outerWidth() - cfg.menuBodyPadding,\n                                    top: offset.top - cfg.menuBodyPadding - 1 - scrollTop\n                                };\n\n                                childOpt = jQuery.extend(true, opt, childOpt);\n                                popup.call(self, childOpt, _items, Number(depth) + 1, path);\n                            } else {\n                                self.queue.splice(Number(depth) + 1).forEach(function (n) {\n                                    n.$target.remove();\n                                });\n                            }\n                        }\n                    }\n\n                    depth = null;\n                    index = null;\n                    path = null;\n                    $this = null;\n                    offset = null;\n                    scrollTop = null;\n                    childOpt = null;\n                    _items = null;\n                    _activeMenu = null;\n                });\n\n                // mouse out\n                activeMenu.find('[data-menu-item-index]').bind(\"mouseout\", function () {\n                    var depth = this.getAttribute(\"data-menu-item-depth\"),\n                        index = this.getAttribute(\"data-menu-item-index\"),\n                        path = this.getAttribute(\"data-menu-item-path\"),\n                        _items;\n\n                    _items = self.queue[depth].data[cfg.columnKeys.items][index][cfg.columnKeys.items];\n                    if (_items && _items.length > 0) {} else {\n                        jQuery(this).removeClass(\"hover\");\n                    }\n                });\n\n                // is Root\n                if (depth == 0) {\n                    if (data.direction) activeMenu.addClass(\"direction-\" + data.direction);\n                    onStateChanged.call(this, null, {\n                        self: this,\n                        items: items,\n                        parent: function (path) {\n                            if (!path) return false;\n                            var item = null;\n                            try {\n                                item = Function(\"\", \"return this.config.items[\" + path.substring(5).replace(/\\./g, '].items[') + \"];\").call(self);\n                            } catch (e) {}\n                            return item;\n                        }(data['@path']),\n                        state: \"popup\"\n                    });\n                }\n\n                align.call(this, activeMenu, data);\n                onLoad.call(this, {\n                    self: this,\n                    items: items,\n                    element: activeMenu.get(0)\n                });\n\n                data = null;\n                activeMenu = null;\n                removed = null;\n                opt = null;\n                items = null;\n                depth = null;\n                path = null;\n\n                return this;\n            },\n                clickItem = function clickItem(e, target, item) {\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-menu-item-index\")) {\n                        return true;\n                    }\n                });\n                if (target) {\n                    item = function (path) {\n                        if (!path) return false;\n                        var item;\n                        try {\n                            item = Function(\"\", \"return this.config.items[\" + path.substring(5).replace(/\\./g, '].' + cfg.columnKeys.items + '[') + \"];\").call(self);\n                        } catch (e) {\n                            console.log(ax5.info.getError(\"ax5menu\", \"501\", \"menuItemClick\"));\n                        }\n\n                        try {\n                            return item;\n                        } finally {\n                            item = null;\n                        }\n                    }(target.getAttribute(\"data-menu-item-path\"));\n\n                    if (!item) return this;\n\n                    if (item.check) {\n                        (function (items) {\n                            var setValue = {\n                                'checkbox': function checkbox(value) {\n                                    this.checked = !value;\n                                },\n                                'radio': function radio(value) {\n                                    var name = this.name;\n                                    items.forEach(function (n) {\n                                        if (n.check && n.check.type === 'radio' && n.check.name == name) {\n                                            n.check.checked = false;\n                                        }\n                                    });\n                                    this.checked = !value;\n                                }\n                            };\n                            if (setValue[this.type]) setValue[this.type].call(this, this.checked);\n                            setValue = null;\n                        }).call(item.check, cfg.items);\n\n                        if (!cfg.itemClickAndClose) {\n                            self.queue.forEach(function (n) {\n                                n.$target.find('[data-menu-item-index]').each(function () {\n                                    var item = n.data[cfg.columnKeys.items][this.getAttribute(\"data-menu-item-index\")];\n                                    if (item.check) {\n                                        jQuery(this).find(\".item-checkbox-wrap\").attr(\"data-item-checked\", item.check.checked);\n                                    }\n                                });\n                            });\n                        }\n                    }\n\n                    if (self.onClick) {\n                        self.onClick.call(item, item);\n                    }\n                    if ((!item[cfg.columnKeys.items] || item[cfg.columnKeys.items].length == 0) && cfg.itemClickAndClose) self.close();\n                } else {\n                    self.close();\n                }\n\n                target = null;\n                item = null;\n                return this;\n            },\n                align = function align(activeMenu, data) {\n                //console.log(data['@parent']);\n                var $window = jQuery(window),\n                    $document = jQuery(document),\n                    wh = cfg.position == \"fixed\" ? $window.height() : $document.height(),\n                    ww = $window.width(),\n                    h = activeMenu.outerHeight(),\n                    w = activeMenu.outerWidth(),\n                    l = data.left,\n                    t = data.top,\n                    position = cfg.position || \"fixed\";\n\n                if (l + w > ww) {\n                    if (data['@parent']) {\n                        l = data['@parent'].left - w + cfg.menuBodyPadding;\n                    } else {\n                        l = ww - w;\n                    }\n                }\n\n                if (t + h > wh) {\n                    t = wh - h;\n                }\n\n                activeMenu.css({ left: l, top: t, position: position });\n\n                activeMenu = null;\n                data = null;\n                $window = null;\n                $document = null;\n                wh = null;\n                ww = null;\n                h = null;\n                w = null;\n                l = null;\n                t = null;\n                position = null;\n                return this;\n            };\n\n            /// private end\n\n            this.init = function () {\n                self.menuId = ax5.getGuid();\n\n                /**\n                 * config에 선언된 이벤트 함수들을 this로 이동시켜 주어 나중에 인스턴스.on... 으로 처리 가능 하도록 변경\n                 */\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"init\"\n                });\n            };\n\n            /**\n             * @method ax5.ui.menu.popup\n             * @param {Event|Object} e - Event or Object\n             * @param {Object} [opt]\n             * @param {String} [opt.theme]\n             * @param {Function} [opt.filter]\n             * @returns {ax5.ui.menu} this\n             */\n            this.popup = function () {\n\n                var getOption = {\n                    'event': function event(e, opt) {\n                        //var xOffset = Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);\n                        //var yOffset = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n                        //console.log(e.pageY);\n\n                        e = {\n                            left: e.clientX,\n                            top: cfg.position == \"fixed\" ? e.clientY : e.pageY,\n                            width: cfg.width,\n                            theme: cfg.theme\n                        };\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) e.left += cfg.offset.left;\n                            if (cfg.offset.top) e.top += cfg.offset.top;\n                        }\n                        opt = jQuery.extend(true, e, opt);\n\n                        try {\n                            return opt;\n                        } finally {\n                            e = null;\n                            //opt = null;\n                        }\n                    },\n                    'object': function object(e, opt) {\n                        e = {\n                            left: e.left,\n                            top: e.top,\n                            width: e.width || cfg.width,\n                            theme: e.theme || cfg.theme\n                        };\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) e.left += cfg.offset.left;\n                            if (cfg.offset.top) e.top += cfg.offset.top;\n                        }\n\n                        opt = jQuery.extend(true, e, opt);\n\n                        try {\n                            return opt;\n                        } finally {\n                            e = null;\n                            //opt = null;\n                        }\n                    }\n                };\n                var updateTheme = function updateTheme(theme) {\n                    if (theme) cfg.theme = theme;\n                };\n\n                return function (e, opt) {\n\n                    if (!e) return this;\n                    opt = getOption[typeof e.clientX == \"undefined\" ? \"object\" : \"event\"].call(this, e, opt);\n                    updateTheme(opt.theme);\n\n                    var items = [].concat(cfg.items);\n                    if (opt.filter) {\n                        var filteringItem = function filteringItem(_items) {\n                            var arr = [];\n                            _items.forEach(function (n) {\n                                if (n.items && n.items.length > 0) {\n                                    n.items = filteringItem(n.items);\n                                }\n                                if (opt.filter.call(n)) {\n                                    arr.push(n);\n                                }\n                            });\n                            return arr;\n                        };\n                        items = filteringItem(items);\n                    }\n\n                    if (items.length) {\n                        popup.call(this, opt, items, 0); // 0 is seq of queue\n                        appEventAttach.call(this, true); // 이벤트 연결\n                    }\n\n                    e = null;\n                    //opt = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5.ui.menu.attach\n             * @param {Element|jQueryObject} el\n             * @returns {ax5.ui.menu} this\n             */\n            this.attach = function () {\n\n                var getOption = {\n                    'object': function object(e, opt) {\n                        e = {\n                            left: e.left,\n                            top: e.top,\n                            width: e.width || cfg.width,\n                            theme: e.theme || cfg.theme,\n                            direction: e.direction || cfg.direction\n                        };\n                        opt = jQuery.extend(true, opt, e);\n\n                        try {\n                            return opt;\n                        } finally {\n                            e = null;\n                            opt = null;\n                        }\n                    }\n                };\n\n                var popUpChildMenu = function popUpChildMenu(target, opt, eType) {\n                    var $target = jQuery(target),\n                        offset = $target.offset(),\n                        height = $target.outerHeight(),\n                        index = Number(target.getAttribute(\"data-menu-item-index\")),\n                        scrollTop = cfg.position == \"fixed\" ? jQuery(document).scrollTop() : 0;\n\n                    if (cfg.items && cfg.items[index][cfg.columnKeys.items] && cfg.items[index][cfg.columnKeys.items].length) {\n\n                        if (self.menuBar.openedIndex == index) {\n                            if (eType == \"click\") self.close();\n                            return false;\n                        }\n\n                        self.menuBar.target.find('[data-menu-item-index]').removeClass(\"hover\");\n                        self.menuBar.opened = true;\n                        self.menuBar.openedIndex = index;\n\n                        $target.attr(\"data-menu-item-opened\", \"true\");\n                        $target.addClass(\"hover\");\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) offset.left += cfg.offset.left;\n                            if (cfg.offset.top) offset.top += cfg.offset.top;\n                        }\n\n                        opt = getOption[\"object\"].call(this, { left: offset.left, top: offset.top + height - scrollTop }, opt);\n\n                        popup.call(self, opt, cfg.items[index][cfg.columnKeys.items], 0, 'root.' + target.getAttribute(\"data-menu-item-index\")); // 0 is seq of queue\n                        appEventAttach.call(self, true); // 이벤트 연결\n                    }\n\n                    target = null;\n                    opt = null;\n                    $target = null;\n                    offset = null;\n                    height = null;\n                    index = null;\n                    scrollTop = null;\n                };\n                var clickParentMenu = function clickParentMenu(target, opt, eType) {\n                    var $target = jQuery(target),\n                        offset = $target.offset(),\n                        height = $target.outerHeight(),\n                        index = Number(target.getAttribute(\"data-menu-item-index\")),\n                        scrollTop = cfg.position == \"fixed\" ? jQuery(document).scrollTop() : 0;\n                    if (cfg.items && (!cfg.items[index][cfg.columnKeys.items] || cfg.items[index][cfg.columnKeys.items].length == 0)) {\n                        if (self.onClick) {\n                            self.onClick.call(cfg.items[index], cfg.items[index]);\n                        }\n                    }\n                };\n\n                return function (el, opt) {\n                    var data = {},\n                        items = cfg.items,\n                        activeMenu;\n\n                    if (typeof opt === \"undefined\") opt = {};\n\n                    data.theme = opt.theme || cfg.theme;\n                    data.cfg = {\n                        icons: jQuery.extend({}, cfg.icons),\n                        iconWidth: opt.iconWidth || cfg.iconWidth,\n                        acceleratorWidth: opt.acceleratorWidth || cfg.acceleratorWidth\n                    };\n\n                    items.forEach(function (n) {\n                        if (n.html || n.divide) {\n                            n['@isMenu'] = false;\n                            if (n.html) {\n                                n['@html'] = n.html.call({\n                                    item: n,\n                                    config: cfg,\n                                    opt: opt\n                                });\n                            }\n                        } else {\n                            n['@isMenu'] = true;\n                        }\n                    });\n\n                    data[cfg.columnKeys.items] = items;\n\n                    activeMenu = jQuery(MENU.tmpl.get.call(this, \"tmplMenubar\", data, cfg.columnKeys));\n                    self.menuBar = {\n                        target: jQuery(el),\n                        opened: false\n                    };\n                    self.menuBar.target.html(activeMenu);\n\n                    // click, mouseover\n                    self.menuBar.target.bind(\"click\", function (e) {\n                        if (!e) return this;\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-menu-item-index\")) {\n                                return true;\n                            }\n                        });\n                        if (target) {\n                            clickParentMenu(target, opt, \"click\");\n                            popUpChildMenu(target, opt, \"click\");\n                        }\n\n                        target = null;\n                    });\n                    self.menuBar.target.bind(\"mouseover\", function (e) {\n                        if (!self.menuBar.opened) return false;\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-menu-item-index\")) {\n                                return true;\n                            }\n                        });\n                        if (target) popUpChildMenu(target, opt, \"mouseover\");\n\n                        target = null;\n                    });\n\n                    el = null;\n                    opt = null;\n                    data = null;\n                    items = null;\n                    activeMenu = null;\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5.ui.menu.close\n             * @returns {ax5.ui.menu} this\n             */\n            this.close = function () {\n\n                if (self.menuBar && self.menuBar.target) {\n                    self.menuBar.target.find('[data-menu-item-index]').removeClass(\"hover\");\n                    self.menuBar.opened = false;\n                    self.menuBar.openedIndex = null;\n                }\n\n                appEventAttach.call(this, false); // 이벤트 제거\n\n                this.queue.forEach(function (n) {\n                    n.$target.remove();\n                });\n                this.queue = [];\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                return this;\n            };\n\n            /**\n             * @method ax5.ui.menu.getCheckValue\n             * @returns {Object} statusCheckItem\n             */\n            this.getCheckValue = function () {\n                var checkItems = {},\n                    _collectItem = function collectItem(items) {\n                    var i = items.length;\n                    while (i--) {\n                        if (items[i].check && items[i].check.checked) {\n                            if (!checkItems[items[i].check.name]) checkItems[items[i].check.name] = items[i].check.value;else {\n                                if (U.isString(checkItems[items[i].check.name])) checkItems[items[i].check.name] = [checkItems[items[i].check.name]];\n                                checkItems[items[i].check.name].push(items[i].check.value);\n                            }\n                        }\n                        if (items[i].items && items[i].items.length > 0) _collectItem(items[i].items);\n                    }\n                };\n\n                _collectItem(cfg.items);\n\n                try {\n                    return checkItems;\n                } finally {\n                    checkItems = null;\n                    _collectItem = null;\n                }\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.menu_instance = UI.menu_instance || [];\n                UI.menu_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5menu;\n    }());\n\n    MENU = ax5.ui.menu;\n})();\n\n// todo : menu 드랍다운 아이콘 설정 기능 추가\n// ax5.ui.menu.tmpl\n(function () {\n    var MENU = ax5.ui.menu;\n\n    var tmpl = function tmpl(columnKeys) {\n        return '\\n        <div class=\"ax5-ui-menu {{theme}}\" {{#width}}style=\"width:{{width}}px;\"{{/width}}>\\n            <div class=\"ax-menu-body\">\\n                {{#' + columnKeys.items + '}}\\n                    {{^@isMenu}}\\n                        {{#divide}}\\n                        <div class=\"ax-menu-item-divide\" data-menu-item-index=\"{{@i}}\"></div>\\n                        {{/divide}}\\n                        {{#html}}\\n                        <div class=\"ax-menu-item-html\" data-menu-item-index=\"{{@i}}\">{{{@html}}}</div>\\n                        {{/html}}\\n                    {{/@isMenu}}\\n                    {{#@isMenu}}\\n                    <div class=\"ax-menu-item\" data-menu-item-depth=\"{{@depth}}\" data-menu-item-index=\"{{@i}}\" data-menu-item-path=\"{{@path}}.{{@i}}\">\\n                        <span class=\"ax-menu-item-cell ax-menu-item-checkbox\">\\n                            {{#check}}\\n                            <span class=\"item-checkbox-wrap useCheckBox\" {{#checked}}data-item-checked=\"true\"{{/checked}}></span>\\n                            {{/check}}\\n                            {{^check}}\\n                            <span class=\"item-checkbox-wrap\"></span>\\n                            {{/check}}\\n                        </span>\\n                        {{#icon}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-icon\" style=\"width:{{cfg.iconWidth}}px;\">{{{.}}}</span>\\n                        {{/icon}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-label\">{{{' + columnKeys.label + '}}}</span>\\n                        {{#accelerator}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-accelerator\" style=\"width:{{cfg.acceleratorWidth}}px;\"><span class=\"item-wrap\">{{.}}</span></span>\\n                        {{/accelerator}}\\n                        {{#@hasChild}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-handle\">{{{cfg.icons.arrow}}}</span>\\n                        {{/@hasChild}}\\n                    </div>\\n                    {{/@isMenu}}\\n\\n                {{/' + columnKeys.items + '}}\\n            </div>\\n            <div class=\"ax-menu-arrow\"></div>\\n        </div>\\n        ';\n    };\n    var tmplMenubar = function tmplMenubar(columnKeys) {\n        return '\\n        <div class=\"ax5-ui-menubar {{theme}}\">\\n            <div class=\"ax-menu-body\">\\n                {{#' + columnKeys.items + '}}\\n                    {{^@isMenu}}\\n                        {{#divide}}\\n                        <div class=\"ax-menu-item-divide\" data-menu-item-index=\"{{@i}}\"></div>\\n                        {{/divide}}\\n                        {{#html}}\\n                        <div class=\"ax-menu-item-html\" data-menu-item-index=\"{{@i}}\">{{{@html}}}</div>\\n                        {{/html}}\\n                    {{/@isMenu}}\\n                    {{#@isMenu}}\\n                    <div class=\"ax-menu-item\" data-menu-item-index=\"{{@i}}\">\\n                        {{#icon}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-icon\" style=\"width:{{cfg.iconWidth}}px;\">{{{.}}}</span>\\n                        {{/icon}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-label\">{{{' + columnKeys.label + '}}}</span>\\n                    </div>\\n                    {{/@isMenu}}\\n                {{/' + columnKeys.items + '}}\\n            </div>\\n        </div>\\n        ';\n    };\n\n    MENU.tmpl = {\n        \"tmpl\": tmpl,\n        \"tmplMenubar\": tmplMenubar,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MENU.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.select\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var SELECT;\n\n    UI.addClass({\n        className: \"select\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5select\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * for (var i = 0; i < 20; i++) {\n         *     options.push({value: i, text: \"optionText\" + i});\n         * }\n          * var mySelect = new ax5.ui.select({\n         *     theme: \"danger\"\n         * });\n          * mySelect.bind({\n         *     theme: \"primary\",\n         *     target: $('[data-ax5select=\"select1\"]'),\n         *     options: options,\n         *     onChange: function () {\n         *         console.log(this);\n         *     },\n         *     onClose: function () {\n         *         console.log(this);\n         *     },\n         *     onStateChanged: function () {\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        var ax5select = function ax5select() {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 100,\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'now loading..',\n                    multipleLabel: '\"{{label}}\"외 {{length}}건'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n            this.queue = [];\n            this.activeSelectOptionGroup = null;\n            this.activeSelectQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n            this.xvar = {};\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var ctrlKeys = {\n                \"18\": \"KEY_ALT\",\n                \"8\": \"KEY_BACKSPACE\",\n                \"17\": \"KEY_CONTROL\",\n                \"46\": \"KEY_DELETE\",\n                \"40\": \"KEY_DOWN\",\n                \"35\": \"KEY_END\",\n                \"187\": \"KEY_EQUAL\",\n                \"27\": \"KEY_ESC\",\n                \"36\": \"KEY_HOME\",\n                \"45\": \"KEY_INSERT\",\n                \"37\": \"KEY_LEFT\",\n                \"189\": \"KEY_MINUS\",\n                \"34\": \"KEY_PAGEDOWN\",\n                \"33\": \"KEY_PAGEUP\",\n                // \"190\": \"KEY_PERIOD\",\n                \"13\": \"KEY_RETURN\",\n                \"39\": \"KEY_RIGHT\",\n                \"16\": \"KEY_SHIFT\",\n                // \"32\": \"KEY_SPACE\",\n                \"9\": \"KEY_TAB\",\n                \"38\": \"KEY_UP\",\n                \"91\": \"KEY_WINDOW\"\n                //\"107\" : \"NUMPAD_ADD\",\n                //\"194\" : \"NUMPAD_COMMA\",\n                //\"110\" : \"NUMPAD_DECIMAL\",\n                //\"111\" : \"NUMPAD_DIVIDE\",\n                //\"12\" : \"NUMPAD_EQUAL\",\n                //\"106\" : \"NUMPAD_MULTIPLY\",\n                //\"109\" : \"NUMPAD_SUBTRACT\"\n            },\n                onStateChanged = function onStateChanged(item, that) {\n                if (item && item.onStateChanged) {\n                    item.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                if (that.state == \"changeValue\") {\n                    if (item && item.onChange) {\n                        item.onChange.call(that, that);\n                    } else if (this.onChange) {\n                        this.onChange.call(that, that);\n                    }\n                }\n\n                item = null;\n                that = null;\n                return true;\n            },\n                alignSelectDisplay = function alignSelectDisplay() {\n                var i = this.queue.length,\n                    w;\n                while (i--) {\n                    if (this.queue[i].$display) {\n                        w = Math.max(this.queue[i].$select.outerWidth(), U.number(this.queue[i].minWidth));\n                        this.queue[i].$display.css({\n                            \"min-width\": w\n                        });\n                        if (this.queue[i].reset) {\n                            this.queue[i].$display.find(\".addon-icon-reset\").css({\n                                \"line-height\": this.queue[i].$display.height() + \"px\"\n                            });\n                        }\n                    }\n                }\n\n                i = null;\n                w = null;\n                return this;\n            },\n                alignSelectOptionGroup = function alignSelectOptionGroup(append) {\n                if (!this.activeSelectOptionGroup) return this;\n\n                var item = this.queue[this.activeSelectQueueIndex],\n                    pos = {},\n                    positionMargin = 0,\n                    dim = {},\n                    pickerDim = {},\n                    pickerDirection;\n\n                if (append) jQuery(document.body).append(this.activeSelectOptionGroup);\n\n                pos = item.$target.offset();\n                dim = {\n                    width: item.$target.outerWidth(),\n                    height: item.$target.outerHeight()\n                };\n                pickerDim = {\n                    winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                    winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                    width: this.activeSelectOptionGroup.outerWidth(),\n                    height: this.activeSelectOptionGroup.outerHeight()\n                };\n\n                // picker css(width, left, top) & direction 결정\n                if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                    // set direction\n                    pickerDirection = \"top\";\n\n                    if (pos.top - pickerDim.height - positionMargin < 0) {\n                        pickerDirection = \"top\";\n                    } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                        pickerDirection = \"bottom\";\n                    }\n                } else {\n                    pickerDirection = item.direction;\n                }\n                // todo : 표현할 공간이 없다면..\n                if (append) {\n                    this.activeSelectOptionGroup.addClass(\"direction-\" + pickerDirection);\n                }\n                this.activeSelectOptionGroup.css(function () {\n                    if (pickerDirection == \"top\") {\n                        if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                            var newTop = pos.top + dim.height / 2 - pickerDim.height / 2;\n                            if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                newTop = 0;\n                            }\n                            if (newTop < 0) {\n                                newTop = 0;\n                            }\n\n                            return {\n                                left: pos.left,\n                                top: newTop,\n                                width: dim.width\n                            };\n                        }\n                        return {\n                            left: pos.left,\n                            top: pos.top + dim.height + 1,\n                            width: dim.width\n                        };\n                    } else if (pickerDirection == \"bottom\") {\n                        return {\n                            left: pos.left,\n                            top: pos.top - pickerDim.height - 1,\n                            width: dim.width\n                        };\n                    }\n                }.call(this));\n            },\n                onBodyClick = function onBodyClick(e, target) {\n                if (!this.activeSelectOptionGroup) return this;\n\n                var item = this.queue[this.activeSelectQueueIndex],\n                    clickEl = \"display\";\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-option-value\")) {\n                        clickEl = \"optionItem\";\n                        return true;\n                    } else if (item.$target.get(0) == target) {\n                        clickEl = \"display\";\n                        return true;\n                    }\n                });\n\n                if (!target) {\n                    this.close();\n                    return this;\n                } else if (clickEl === \"optionItem\") {\n                    this.val(item.id, {\n                        index: {\n                            gindex: target.getAttribute(\"data-option-group-index\"),\n                            index: target.getAttribute(\"data-option-index\")\n                        }\n                    }, undefined, \"internal\");\n                    item.$select.trigger(\"change\");\n                    item.$display.focus();\n                    if (!item.multiple) this.close();\n                } else {\n                    //open and display click\n                    //console.log(this.instanceId);\n                }\n\n                return this;\n            },\n                onBodyKeyup = function onBodyKeyup(e) {\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                } else if (e.which == ax5.info.eventKeys.RETURN) {\n                    if (this.queue[this.activeSelectQueueIndex].optionFocusIndex > -1) {\n                        // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                        var $option = this.activeSelectOptionGroup.find('[data-option-focus-index=\"' + this.queue[this.activeSelectQueueIndex].optionFocusIndex + '\"]');\n                        this.val(this.queue[this.activeSelectQueueIndex].id, {\n                            index: {\n                                gindex: $option.attr(\"data-option-group-index\"),\n                                index: $option.attr(\"data-option-index\")\n                            }\n                        }, undefined, \"internal\");\n                        this.queue[this.activeSelectQueueIndex].$select.trigger(\"change\");\n                        if (!this.queue[this.activeSelectQueueIndex].multiple) this.close();\n                    } else {\n                        this.close();\n                    }\n                }\n            },\n                getLabel = function getLabel(queIdx) {\n                var item = this.queue[queIdx];\n                var labels = [];\n\n                if (U.isArray(item.selected) && item.selected.length > 0) {\n                    item.selected.forEach(function (n) {\n                        if (n.selected) labels.push(n[item.columnKeys.optionText]);\n                    });\n                } else {\n                    if (!item.multiple && item.options && item.options[0]) {\n                        if (item.options[0].optgroup) {\n                            labels[0] = item.options[0].options[0][item.columnKeys.optionText];\n                        } else {\n                            labels[0] = item.options[0][item.columnKeys.optionText];\n                        }\n                    } else {\n                        labels[0] = item.lang.noSelected;\n                    }\n                }\n\n                return function () {\n                    if (item.multiple && labels.length > 1) {\n                        var data = {\n                            label: labels[0],\n                            length: labels.length - 1\n                        };\n                        return ax5.mustache.render(item.lang.multipleLabel, data);\n                    } else {\n                        return labels[0];\n                    }\n                }();\n            },\n                syncLabel = function syncLabel(queIdx) {\n                this.queue[queIdx].$displayLabel.html(getLabel.call(this, queIdx));\n            },\n                focusWord = function focusWord(queIdx, searchWord) {\n                var options = [],\n                    i = -1,\n                    l = this.queue[queIdx].indexedOptions.length - 1,\n                    n;\n                if (searchWord) {\n                    while (l - i++) {\n                        n = this.queue[queIdx].indexedOptions[i];\n                        if (('' + n.value).toLowerCase() == searchWord.toLowerCase()) {\n                            options = [{ '@findex': n['@findex'], optionsSort: 0 }];\n                            break;\n                        } else {\n                            var sort = ('' + n.value).toLowerCase().search(searchWord.toLowerCase());\n                            if (sort > -1) {\n                                options.push({ '@findex': n['@findex'], optionsSort: sort });\n                                if (options.length > 2) break;\n                            }\n                            sort = null;\n                        }\n                    }\n                    options.sort(function (a, b) {\n                        return a.optionsSort - b.optionsSort;\n                    });\n                }\n                if (options && options.length > 0) {\n                    focusMove.call(this, queIdx, undefined, options[0]['@findex']);\n                }\n\n                try {\n                    return options;\n                } finally {\n                    options = null;\n                    i = null;\n                    l = null;\n                    n = null;\n                }\n            },\n                focusMove = function focusMove(queIdx, direction, findex) {\n                var _focusIndex, _prevFocusIndex, focusOptionEl, optionGroupScrollContainer;\n                if (this.activeSelectOptionGroup && this.queue[queIdx].options && this.queue[queIdx].options.length > 0) {\n\n                    if (typeof findex !== \"undefined\") {\n                        _focusIndex = findex;\n                    } else {\n                        _prevFocusIndex = this.queue[queIdx].optionFocusIndex == -1 ? this.queue[queIdx].optionSelectedIndex || -1 : this.queue[queIdx].optionFocusIndex;\n                        if (_prevFocusIndex == -1) {\n                            _focusIndex = direction > 0 ? 0 : this.queue[queIdx].optionItemLength - 1;\n                        } else {\n                            _focusIndex = _prevFocusIndex + direction;\n                            if (_focusIndex < 0) _focusIndex = 0;else if (_focusIndex > this.queue[queIdx].optionItemLength - 1) _focusIndex = this.queue[queIdx].optionItemLength - 1;\n                        }\n                    }\n\n                    this.queue[queIdx].optionFocusIndex = _focusIndex;\n\n                    this.activeSelectOptionGroup.find('[data-option-focus-index]').removeClass(\"hover\");\n\n                    focusOptionEl = this.activeSelectOptionGroup.find('[data-option-focus-index=\"' + _focusIndex + '\"]').addClass(\"hover\");\n\n                    optionGroupScrollContainer = this.activeSelectOptionGroup.find('[data-els=\"content\"]');\n\n                    var focusOptionElHeight = focusOptionEl.outerHeight(),\n                        optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                        optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                        focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                    if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                        optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                    } else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                        optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                    }\n                    // optionGroup scroll check\n                }\n            },\n                bindSelectTarget = function () {\n                var focusWordCall = U.debounce(function (searchWord, queIdx) {\n                    focusWord.call(self, queIdx, searchWord);\n                    self.queue[queIdx].$displayInput.val('');\n                }, 300);\n\n                var selectEvent = {\n                    'click': function click(queIdx, e) {\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-selected-clear\")) {\n                                //clickEl = \"clear\";\n                                return true;\n                            }\n                        });\n\n                        if (target) {\n                            this.val(queIdx, { clear: true });\n                        } else {\n                            if (self.activeSelectQueueIndex == queIdx) {\n                                if (this.queue[queIdx].optionFocusIndex == -1) {\n                                    // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                    self.close();\n                                }\n                            } else {\n                                self.open(queIdx);\n                                U.stopEvent(e);\n                            }\n                        }\n                    },\n                    'keyUp': function keyUp(queIdx, e) {\n                        if (e.which == ax5.info.eventKeys.SPACE) {\n                            selectEvent.click.call(this, queIdx, e);\n                        } else if (!ctrlKeys[e.which]) {\n                            // 사용자 입력이 뜸해지면 찾고 검색 값 제거...\n                            focusWordCall(this.queue[queIdx].$displayInput.val(), queIdx);\n                        }\n                    },\n                    'keyDown': function keyDown(queIdx, e) {\n                        if (e.which == ax5.info.eventKeys.DOWN) {\n                            focusMove.call(this, queIdx, 1);\n                            U.stopEvent(e);\n                        } else if (e.which == ax5.info.eventKeys.UP) {\n                            focusMove.call(this, queIdx, -1);\n                            U.stopEvent(e);\n                        }\n                    },\n                    'blur': function blur(queIdx, e) {},\n                    'selectChange': function selectChange(queIdx, e) {\n                        this.val(queIdx, this.queue[queIdx].$select.val(), true);\n                    }\n                };\n                return function (queIdx) {\n                    var item = this.queue[queIdx];\n                    var data = {};\n                    item.selected = [];\n\n                    if (!item.$display) {\n                        /// 템플릿에 전달할 오브젝트 선언\n                        data.instanceId = this.instanceId;\n                        data.id = item.id;\n                        data.name = item.name;\n                        data.theme = item.theme;\n                        data.tabIndex = item.tabIndex;\n                        data.multiple = item.multiple;\n                        data.reset = item.reset;\n\n                        data.label = getLabel.call(this, queIdx);\n                        data.formSize = function () {\n                            return item.size ? \"input-\" + item.size : \"\";\n                        }();\n\n                        item.$display = SELECT.tmpl.get.call(this, \"tmpl\", data);\n                        item.$displayLabel = item.$display.find('[data-ax5select-display=\"label\"]');\n\n                        if (item.$target.find(\"select\").get(0)) {\n                            item.$select = item.$target.find(\"select\");\n                            // select 속성만 변경\n                            item.$select.attr(\"tabindex\", \"-1\").attr(\"class\", \"form-control \" + data.formSize);\n                            if (data.name) {\n                                item.$select.attr(\"name\", \"name\");\n                            }\n                            if (data.multiple) {\n                                item.$select.attr(\"multiple\", \"multiple\");\n                            }\n                        } else {\n                            item.$select = SELECT.tmpl.get.call(this, \"selectTmpl\", data);\n                            item.$target.append(item.$select);\n                            // select append\n                        }\n\n                        item.$target.append(item.$display);\n                        item.$displayInput = item.$display.find('[data-ax5select-display=\"input\"]'); // 사용자 입력값을 받기위한 숨음 입력필드\n                        item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n                        alignSelectDisplay.call(this);\n\n                        item.$displayInput.unbind(\"blur.ax5select\").bind(\"blur.ax5select\", selectEvent.blur.bind(this, queIdx)).unbind('keyup.ax5select').bind('keyup.ax5select', selectEvent.keyUp.bind(this, queIdx)).unbind(\"keydown.ax5select\").bind(\"keydown.ax5select\", selectEvent.keyDown.bind(this, queIdx));\n                    } else {\n                        item.$displayLabel.html(getLabel.call(this, queIdx));\n                        item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n                        alignSelectDisplay.call(this);\n                    }\n\n                    item.$display.unbind('click.ax5select').bind('click.ax5select', selectEvent.click.bind(this, queIdx)).unbind('keyup.ax5select').bind('keyup.ax5select', selectEvent.keyUp.bind(this, queIdx));\n\n                    // select 태그에 대한 change 이벤트 감시\n                    item.$select.unbind('change.ax5select').bind('change.ax5select', selectEvent.selectChange.bind(this, queIdx));\n\n                    data = null;\n                    item = null;\n                    queIdx = null;\n                    return this;\n                };\n            }(),\n                syncSelectOptions = function () {\n                var setSelected = function setSelected(queIdx, O) {\n                    if (!O) {\n                        this.queue[queIdx].selected = [];\n                    } else {\n                        if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n                    }\n                };\n\n                return function (queIdx, options) {\n                    var item = this.queue[queIdx];\n                    var po,\n                        elementOptions,\n                        newOptions,\n                        focusIndex = 0;\n                    setSelected.call(this, queIdx, false); // item.selected 초기화\n\n                    if (options) {\n                        item.options = options;\n                        item.indexedOptions = [];\n\n                        // select options 태그 생성\n                        po = [];\n                        item.options.forEach(function (O, OIndex) {\n                            if (O.optgroup) {\n                                // todo\n                                O['@gindex'] = OIndex;\n                                O.options.forEach(function (OO, OOIndex) {\n                                    OO['@index'] = OOIndex;\n                                    OO['@findex'] = focusIndex;\n                                    po.push('<option value=\"' + OO[item.columnKeys.optionValue] + '\" ' + (OO[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>' + OO[item.columnKeys.optionText] + '</option>');\n                                    if (OO[item.columnKeys.optionSelected]) {\n                                        setSelected.call(self, queIdx, OO);\n                                    }\n\n                                    item.indexedOptions.push({\n                                        '@findex': focusIndex, value: OO[item.columnKeys.optionValue], text: OO[item.columnKeys.optionText]\n                                    });\n                                    focusIndex++;\n                                });\n                            } else {\n                                O['@index'] = OIndex;\n                                O['@findex'] = focusIndex;\n                                po.push('<option value=\"' + O[item.columnKeys.optionValue] + '\" ' + (O[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>' + O[item.columnKeys.optionText] + '</option>');\n                                if (O[item.columnKeys.optionSelected]) {\n                                    setSelected.call(self, queIdx, O);\n                                }\n\n                                item.indexedOptions.push({\n                                    '@findex': focusIndex, value: O[item.columnKeys.optionValue], text: O[item.columnKeys.optionText]\n                                });\n                                focusIndex++;\n                            }\n                        });\n\n                        item.optionItemLength = focusIndex;\n                        item.$select.html(po.join(''));\n                    } else {\n                        /// select > options 태그로 스크립트 options를 만들어주는 역할\n                        elementOptions = U.toArray(item.$select.get(0).options);\n                        // select option 스크립트 생성\n                        newOptions = [];\n                        elementOptions.forEach(function (O, OIndex) {\n                            var option = {};\n                            //if (O.value != \"\") {\n                            option[item.columnKeys.optionValue] = O.value;\n                            option[item.columnKeys.optionText] = O.text;\n                            option[item.columnKeys.optionSelected] = O.selected;\n                            option['@index'] = OIndex;\n                            option['@findex'] = OIndex;\n                            if (O.selected) setSelected.call(self, queIdx, option);\n                            newOptions.push(option);\n                            //}\n                            option = null;\n                        });\n                        item.options = newOptions;\n                        item.indexedOptions = newOptions;\n                    }\n\n                    if (!item.multiple && item.selected.length == 0 && item.options && item.options[0]) {\n                        if (item.options[0].optgroup) {\n                            item.options[0].options[0][item.columnKeys.optionSelected] = true;\n                            item.selected.push(jQuery.extend({}, item.options[0].options[0]));\n                        } else {\n                            item.options[0][item.columnKeys.optionSelected] = true;\n                            item.selected.push(jQuery.extend({}, item.options[0]));\n                        }\n                    }\n\n                    po = null;\n                    elementOptions = null;\n                    newOptions = null;\n                    return item.options;\n                };\n            }(),\n                getQueIdx = function getQueIdx(boundID) {\n                if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-ax5select-id\");\n                }\n                if (!U.isString(boundID)) {\n                    console.log(ax5.info.getError(\"ax5select\", \"402\", \"getQueIdx\"));\n                    return;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            };\n            /// private end\n\n            /**\n             * Preferences of select UI\n             * @method ax5select.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5select}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n\n                jQuery(window).bind(\"resize.ax5select-display-\" + this.instanceId, function () {\n                    alignSelectDisplay.call(this);\n                }.bind(this));\n            };\n\n            /**\n             * bind select\n             * @method ax5select.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @returns {ax5select}\n             */\n            this.bind = function (item) {\n                var selectConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, selectConfig, cfg, item);\n\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5select\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5select-id\");\n                if (!item.id) {\n                    item.id = 'ax5select-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5select-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5select\");\n\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5select-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindSelectTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx].selected = [];\n                    this.queue[queIdx].options = item.options;\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindSelectTarget.call(this, queIdx);\n                }\n\n                selectConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of select\n             * @method ax5select.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5select}\n             */\n            this.open = function () {\n\n                var onExpand = function onExpand(item) {\n                    item.onExpand.call({\n                        self: this,\n                        item: item\n                    }, function (O) {\n                        if (this.waitOptionsCallback) {\n                            var data = {};\n                            var item = this.queue[this.activeSelectQueueIndex];\n\n                            /// 현재 selected 검증후 처리\n                            (function (item, O) {\n                                var optionsMap = {};\n                                O.options.forEach(function (_O, _OIndex) {\n                                    _O[\"@index\"] = _OIndex;\n                                    optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                                });\n                                if (U.isArray(item.selected)) {\n                                    item.selected.forEach(function (_O) {\n                                        if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                            O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                        }\n                                    });\n                                }\n                            })(item, O);\n\n                            item.$displayLabel.html(getLabel.call(this, this.activeSelectQueueIndex));\n                            item.options = syncSelectOptions.call(this, this.activeSelectQueueIndex, O.options);\n\n                            alignSelectDisplay.call(this);\n\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.id = item.id;\n                            data.theme = item.theme;\n                            data.size = \"ax5select-option-group-\" + item.size;\n                            data.multiple = item.multiple;\n                            data.lang = item.lang;\n                            data.options = item.options;\n                            this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(SELECT.tmpl.get.call(this, \"optionsTmpl\", data, item.columnKeys));\n                        }\n                    }.bind(this));\n                };\n\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open select from the outside\n                     */\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {},\n                        focusTop,\n                        selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activeSelectOptionGroup) {\n                        if (this.activeSelectQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout(function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }.bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5select-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-select-option-group-opened\", \"true\");\n                    //console.log(data.lang);\n\n                    if (item.onExpand) {\n                        // onExpand 인 경우 UI 대기모드 추가\n                        data.waitOptions = true;\n                    }\n\n                    data.options = item.options;\n                    this.activeSelectOptionGroup = SELECT.tmpl.get.call(this, \"optionGroupTmpl\", data);\n                    this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(SELECT.tmpl.get.call(this, \"optionsTmpl\", data, item.columnKeys));\n                    this.activeSelectQueueIndex = queIdx;\n\n                    alignSelectOptionGroup.call(this, \"append\"); // alignSelectOptionGroup 에서 body append\n                    jQuery(window).bind(\"resize.ax5select-\" + this.instanceId, function () {\n                        alignSelectOptionGroup.call(this);\n                    }.bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activeSelectOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activeSelectOptionGroup.height() / 3;\n                            this.activeSelectOptionGroup.find('[data-els=\"content\"]').stop().animate({ scrollTop: focusTop }, item.animateTime, 'swing', function () {});\n                        }\n                    }\n\n                    /// 사용자 입력으로 옵션을 검색하기 위한 시나리오\n                    // 옵션그룹이 활성화 되면 사용자 입력을 받기위한 input 값 초기화 및 포커스 다른 select가 닫히면서 display focus 이벤트와 충돌하는 문제가 있으므로\n                    // 1밀리세컨 지연후 포커스 처리. input에 포커스가 되므로 input value로 options를 검색 할 수 있게 됩니다.\n                    item.$displayInput.val('');\n\n                    setTimeout(function () {\n                        item.$displayInput.trigger(\"focus\");\n\n                        jQuery(window).bind(\"keyup.ax5select-\" + this.instanceId, function (e) {\n                            e = e || window.event;\n                            onBodyKeyup.call(this, e);\n                            U.stopEvent(e);\n                        }.bind(this));\n\n                        jQuery(window).bind(\"click.ax5select-\" + this.instanceId, function (e) {\n                            e = e || window.event;\n                            onBodyClick.call(this, e);\n                            U.stopEvent(e);\n                        }.bind(this));\n                    }.bind(this), 300);\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    // waitOption timer\n                    if (item.onExpand) {\n                        this.waitOptionsCallback = true;\n                        onExpand.call(this, item);\n                    }\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5select.update\n             * @param {(Object|String)} item\n             * @returns {ax5select}\n             */\n            this.update = function (_item) {\n                this.bind(_item);\n                return this;\n            };\n\n            /**\n             * @method ax5select.val\n             * @param {(String|Number|Element)} boundID\n             * @param {(String|Object|Array)} [value]\n             * @param {Boolean} [selected]\n             * @returns {ax5select}\n             */\n            this.val = function () {\n\n                // todo : val 함수 리팩토링 필요\n                var getSelected = function getSelected(_item, o, selected) {\n                    if (typeof selected === \"undefined\") {\n                        return _item.multiple ? !o : true;\n                    } else {\n                        return selected;\n                    }\n                };\n                var clearSelected = function clearSelected(queIdx) {\n                    this.queue[queIdx].options.forEach(function (n) {\n                        if (n.optgroup) {\n                            n.options.forEach(function (nn) {\n                                nn.selected = false;\n                            });\n                        } else {\n                            n.selected = false;\n                        }\n                    });\n                };\n\n                var processor = {\n                    'index': function index(queIdx, value, selected) {\n                        // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                        var item = this.queue[queIdx];\n\n                        /*\n                         if (U.isArray(value.index)) {\n                         value.index.forEach(function (n) {\n                         item.options[n][item.columnKeys.optionSelected] = getSelected(item, item.options[n][item.columnKeys.optionSelected], selected);\n                         self.activeSelectOptionGroup\n                         .find('[data-option-index=\"' + n + '\"]')\n                         .attr(\"data-option-selected\", item.options[n][item.columnKeys.optionSelected].toString());\n                         });\n                         }\n                         else {\n                         }\n                         */\n                        if (U.isString(value.index.gindex)) {\n                            item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected], selected);\n                            self.activeSelectOptionGroup.find('[data-option-group-index=\"' + value.index.gindex + '\"][data-option-index=\"' + value.index.index + '\"]').attr(\"data-option-selected\", item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected].toString());\n                        } else {\n                            item.options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.index][item.columnKeys.optionSelected], selected);\n                            self.activeSelectOptionGroup.find('[data-option-index=\"' + value.index.index + '\"]').attr(\"data-option-selected\", item.options[value.index.index][item.columnKeys.optionSelected].toString());\n                        }\n\n                        syncSelectOptions.call(this, queIdx, item.options);\n                        syncLabel.call(this, queIdx);\n                        alignSelectOptionGroup.call(this);\n                    },\n                    'arr': function arr(queIdx, values, selected) {\n                        values.forEach(function (value) {\n                            if (U.isString(value) || U.isNumber(value)) {\n                                processor.value.call(self, queIdx, value, selected);\n                            } else {\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(self, queIdx, value, selected);\n                                        break;\n                                    }\n                                }\n                            }\n                        });\n                    },\n                    'value': function value(queIdx, _value2, selected) {\n                        var item = this.queue[queIdx];\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionValue] == _value2;\n                        });\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        } else {\n                            console.log(ax5.info.getError(\"ax5select\", \"501\", \"val\"));\n                            return;\n                        }\n\n                        syncSelectOptions.call(this, queIdx, item.options);\n                        syncLabel.call(this, queIdx);\n                    },\n                    'text': function text(queIdx, value, selected) {\n                        var item = this.queue[queIdx];\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionText] == value;\n                        });\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        } else {\n                            console.log(ax5.info.getError(\"ax5select\", \"501\", \"val\"));\n                            return;\n                        }\n\n                        syncSelectOptions.call(this, queIdx, item.options);\n                        syncLabel.call(this, queIdx);\n                    },\n                    'clear': function clear(queIdx) {\n                        clearSelected.call(this, queIdx);\n                        syncSelectOptions.call(this, queIdx, this.queue[queIdx].options);\n                        syncLabel.call(this, queIdx);\n\n                        if (this.activeSelectOptionGroup) {\n                            this.activeSelectOptionGroup.find('[data-option-index]').attr(\"data-option-selected\", \"false\");\n                        }\n                    }\n                };\n\n                return function (boundID, value, selected, internal) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5select\", \"402\", \"val\"));\n                        return;\n                    }\n\n                    // setValue 이면 현재 선택값 초기화\n                    if (typeof value !== \"undefined\" && !this.queue[queIdx].multiple) {\n                        clearSelected.call(this, queIdx);\n                    }\n\n                    if (typeof value == \"undefined\") {\n                        return this.queue[queIdx].selected;\n                    } else if (U.isArray(value)) {\n                        processor.arr.call(this, queIdx, value, selected);\n                    } else if (U.isString(value) || U.isNumber(value)) {\n                        processor.value.call(this, queIdx, value, selected);\n                    } else {\n                        if (value === null) {\n                            processor.clear.call(this, queIdx);\n                        } else {\n                            for (var key in processor) {\n                                if (value[key]) {\n                                    processor[key].call(this, queIdx, value, selected);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (typeof value !== \"undefined\") {\n                        onStateChanged.call(this, this.queue[queIdx], {\n                            self: this,\n                            item: this.queue[queIdx],\n                            state: internal ? \"changeValue\" : \"setValue\",\n                            value: this.queue[queIdx].selected,\n                            internal: internal\n                        });\n                    }\n\n                    boundID = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5select.close\n             * @returns {ax5select}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activeSelectOptionGroup) return this;\n\n                item = this.queue[this.activeSelectQueueIndex];\n                item.optionFocusIndex = -1;\n\n                item.$displayInput.val('').trigger(\"blur\");\n                item.$display.removeAttr(\"data-select-option-group-opened\").trigger(\"focus\");\n\n                this.activeSelectOptionGroup.addClass(\"destroy\");\n\n                jQuery(window).unbind(\"resize.ax5select-\" + this.instanceId).unbind(\"click.ax5select-\" + this.instanceId).unbind(\"keyup.ax5select-\" + this.instanceId);\n\n                this.closeTimer = setTimeout(function () {\n                    if (this.activeSelectOptionGroup) this.activeSelectOptionGroup.remove();\n                    this.activeSelectOptionGroup = null;\n                    this.activeSelectQueueIndex = -1;\n\n                    var that = {\n                        self: this,\n                        item: item,\n                        value: item.selected,\n                        state: \"close\"\n                    };\n\n                    onStateChanged.call(this, item, that);\n\n                    // waitOption timer\n                    if (item.onClose) {\n                        item.onClose.call(that);\n                    }\n                }.bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            this.enable = function (boundID) {\n                var queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].$display.removeAttr(\"disabled\");\n                this.queue[queIdx].$select.removeAttr(\"disabled\");\n\n                onStateChanged.call(this, this.queue[queIdx], {\n                    self: this,\n                    state: \"enable\"\n                });\n\n                return this;\n            };\n\n            this.disable = function (boundID) {\n                var queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n\n                onStateChanged.call(this, this.queue[queIdx], {\n                    self: this,\n                    state: \"disable\"\n                });\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5select;\n    }());\n    SELECT = ax5.ui.select;\n})();\n\nax5.ui.select_instance = new ax5.ui.select();\njQuery.fn.ax5select = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.select_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.select_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.select_instance.val(this, arguments[1], arguments[2]);\n                    break;\n                case \"getValue\":\n                    return ax5.ui.select_instance.val(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.select_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.select_instance.disable(this);\n                    break;\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.select_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n\n// muliple 속성이 없는 select의 기본 선택 해제 방법.. 결정 필요..\n// onExpand 가 있으면..?\n// ax5.ui.select.tmpl\n(function () {\n\n    var SELECT = ax5.ui.select;\n\n    var optionGroupTmpl = function optionGroupTmpl(columnKeys) {\n        return '\\n<div class=\"ax5select-option-group {{theme}} {{size}}\" data-ax5select-option-group=\"{{id}}\">\\n    <div class=\"ax-select-body\">\\n        <div class=\"ax-select-option-group-content\" data-els=\"content\"></div>\\n    </div>\\n    <div class=\"ax-select-arrow\"></div> \\n</div>\\n';\n    };\n    var tmpl = function tmpl(columnKeys) {\n        return '\\n<a {{^tabIndex}}href=\"#ax5select-{{id}}\" {{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}class=\"form-control {{formSize}} ax5select-display {{theme}}\" \\ndata-ax5select-display=\"{{id}}\" data-ax5select-instance=\"{{instanceId}}\">\\n    <div class=\"ax5select-display-table\" data-els=\"display-table\">\\n        <div data-ax5select-display=\"label\">{{label}}</div>\\n        <div data-ax5select-display=\"addon\"> \\n            {{#multiple}}{{#reset}}\\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\\n            {{/reset}}{{/multiple}}\\n            {{#icons}}\\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\\n            <span class=\"addon-icon-opened\">{{opened}}</span>\\n            {{/icons}}\\n            {{^icons}}\\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\\n            {{/icons}}\\n        </div>\\n    </div>\\n    <input type=\"text\" tabindex=\"-1\" data-ax5select-display=\"input\" \\n    style=\"position:absolute;z-index:0;left:0px;top:0px;font-size:1px;opacity: 0;width:1px;border: 0px none;color : transparent;text-indent: -9999em;\" />\\n</a>\\n';\n    };\n    var selectTmpl = function selectTmpl(columnKeys) {\n        return '\\n<select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}}></select>\\n';\n    };\n    var optionsTmpl = function optionsTmpl(columnKeys) {\n        return '\\n{{#waitOptions}}\\n    <div class=\"ax-select-option-item\">\\n            <div class=\"ax-select-option-item-holder\">\\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\\n                    {{{lang.loading}}}\\n                </span>\\n            </div>\\n        </div>\\n{{/waitOptions}}\\n{{^waitOptions}}\\n    {{#options}}\\n        {{#optgroup}}\\n            <div class=\"ax-select-option-group\">\\n                <div class=\"ax-select-option-item-holder\">\\n                    <span class=\"ax-select-option-group-label\">\\n                        {{{.}}}\\n                    </span>\\n                </div>\\n                {{#options}}\\n                <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \\n                data-option-value=\"{{' + columnKeys.optionValue + '}}\" \\n                {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n                    <div class=\"ax-select-option-item-holder\">\\n                        {{#multiple}}\\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\\n                            <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\\n                        </span>\\n                        {{/multiple}}\\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{' + columnKeys.optionText + '}}</span>\\n                    </div>\\n                </div>\\n                {{/options}}\\n            </div>                            \\n        {{/optgroup}}\\n        {{^optgroup}}\\n        <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{' + columnKeys.optionValue + '}}\" {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n            <div class=\"ax-select-option-item-holder\">\\n                {{#multiple}}\\n                <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\\n                    <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\\n                </span>\\n                {{/multiple}}\\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{' + columnKeys.optionText + '}}</span>\\n            </div>\\n        </div>\\n        {{/optgroup}}\\n    {{/options}}\\n    {{^options}}\\n        <div class=\"ax-select-option-item\">\\n            <div class=\"ax-select-option-item-holder\">\\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\\n                    {{{lang.noOptions}}}\\n                </span>\\n            </div>\\n        </div>\\n    {{/options}}\\n{{/waitOptions}}\\n';\n    };\n\n    SELECT.tmpl = {\n        \"optionGroupTmpl\": optionGroupTmpl,\n        \"tmpl\": tmpl,\n        \"selectTmpl\": selectTmpl,\n        \"optionsTmpl\": optionsTmpl,\n\n        get: function get(tmplName, data, columnKeys) {\n            return jQuery(ax5.mustache.render(SELECT.tmpl[tmplName].call(this, columnKeys), data));\n        }\n    };\n})();\n/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.grid\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var GRID;\n\n    UI.addClass({\n        className: \"grid\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5grid\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * var myGrid = new ax5.ui.grid();\n         * ```\n         */\n        var ax5grid = function ax5grid() {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n\n                // 틀고정 속성\n                frozenColumnIndex: 0,\n                frozenRowIndex: 0,\n                showLineNumber: false,\n                showRowSelector: false,\n                multipleSelect: true,\n\n                height: 0,\n                columnMinWidth: 100,\n                lineNumberColumnWidth: 30,\n                rowSelectorColumnWidth: 26,\n                sortable: undefined,\n                remoteSort: false,\n\n                header: {\n                    align: false,\n                    columnHeight: 26,\n                    columnPadding: 3,\n                    columnBorderWidth: 1\n                },\n                body: {\n                    align: false,\n                    columnHeight: 26,\n                    columnPadding: 3,\n                    columnBorderWidth: 1,\n                    grouping: false\n                },\n                rightSum: false,\n                footSum: false,\n                page: {\n                    height: 25,\n                    display: true,\n                    navigationItemCount: 5\n                },\n                scroller: {\n                    size: 15,\n                    barMinSize: 15,\n                    trackPadding: 4\n                },\n                columnKeys: {\n                    selected: '__selected__',\n                    modified: '__modified__',\n                    deleted: '__deleted__',\n                    disableSelection: '__disable_selection__'\n                }\n            };\n            this.xvar = {\n                bodyTrHeight: 0, // 한줄의 높이\n                scrollContentWidth: 0, // 스크롤 될 내용물의 너비 (스크롤 될 내용물 : panel['body-scroll'] 안에 컬럼이 있는)\n                scrollContentHeight: 0 // 스크롤 된 내용물의 높이\n            };\n\n            // 그리드 데이터셋\n            this.columns = []; // config.columns에서 복제된 오브젝트\n            this.colGroup = []; // columns를 table태그로 출력하기 좋게 변환한 오브젝트\n            this.footSumColumns = [];\n            this.bodyGrouping = {};\n\n            this.list = []; // 그리드의 데이터\n            this.page = {}; // 그리드의 페이지 정보\n            this.selectedDataIndexs = [];\n            this.deletedList = [];\n            this.sortInfo = {}; // 그리드의 헤더 정렬 정보\n            this.focusedColumn = {}; // 그리드 바디의 포커스된 셀 정보\n            this.selectedColumn = {}; // 그리드 바디의 선택된 셀 정보\n            this.isInlineEditing = false;\n            this.inlineEditing = {};\n\n            // header\n            this.headerTable = {};\n            this.leftHeaderData = {};\n            this.headerData = {};\n            this.rightHeaderData = {};\n\n            // body\n            this.bodyRowTable = {};\n            this.leftBodyRowData = {};\n            this.bodyRowData = {};\n            this.rightBodyRowData = {};\n            this.bodyRowMap = {};\n\n            this.bodyGroupingTable = {};\n            this.leftBodyGroupingData = {};\n            this.bodyGroupingData = {};\n            this.rightBodyGroupingData = {};\n\n            // footSum\n            this.footSumTable = {}; // footSum의 출력레이아웃\n            this.leftFootSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 왼쪽\n            this.footSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 오른쪽\n            this.needToPaintSum = true; // 데이터 셋이 변경되어 summary 변경 필요여부\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(_opts, _that) {\n                if (_opts && _opts.onStateChanged) {\n                    _opts.onStateChanged.call(_that, _that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(_that, _that);\n                }\n                return true;\n            },\n                initGrid = function initGrid() {\n                // 그리드 템플릿에 전달하고자 하는 데이터를 정리합시다.\n\n                var data = {\n                    instanceId: this.id\n                };\n\n                this.$target.html(GRID.tmpl.get(\"main\", data));\n\n                // 그리드 패널 프레임의 각 엘리먼트를 캐쉬합시다.\n                this.$ = {\n                    \"container\": {\n                        \"hidden\": this.$target.find('[data-ax5grid-container=\"hidden\"]'),\n                        \"root\": this.$target.find('[data-ax5grid-container=\"root\"]'),\n                        \"header\": this.$target.find('[data-ax5grid-container=\"header\"]'),\n                        \"body\": this.$target.find('[data-ax5grid-container=\"body\"]'),\n                        \"page\": this.$target.find('[data-ax5grid-container=\"page\"]'),\n                        \"scroller\": this.$target.find('[data-ax5grid-container=\"scroller\"]')\n                    },\n                    \"panel\": {\n                        \"aside-header\": this.$target.find('[data-ax5grid-panel=\"aside-header\"]'),\n                        \"left-header\": this.$target.find('[data-ax5grid-panel=\"left-header\"]'),\n                        \"header\": this.$target.find('[data-ax5grid-panel=\"header\"]'),\n                        \"header-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"header\"]'),\n                        \"right-header\": this.$target.find('[data-ax5grid-panel=\"right-header\"]'),\n                        \"top-aside-body\": this.$target.find('[data-ax5grid-panel=\"top-aside-body\"]'),\n                        \"top-left-body\": this.$target.find('[data-ax5grid-panel=\"top-left-body\"]'),\n                        \"top-body\": this.$target.find('[data-ax5grid-panel=\"top-body\"]'),\n                        \"top-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"top-body\"]'),\n                        \"top-right-body\": this.$target.find('[data-ax5grid-panel=\"top-right-body\"]'),\n                        \"aside-body\": this.$target.find('[data-ax5grid-panel=\"aside-body\"]'),\n                        \"aside-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"aside-body\"]'),\n                        \"left-body\": this.$target.find('[data-ax5grid-panel=\"left-body\"]'),\n                        \"left-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"left-body\"]'),\n                        \"body\": this.$target.find('[data-ax5grid-panel=\"body\"]'),\n                        \"body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"body\"]'),\n                        \"right-body\": this.$target.find('[data-ax5grid-panel=\"right-body\"]'),\n                        \"right-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"right-body\"]'),\n                        \"bottom-aside-body\": this.$target.find('[data-ax5grid-panel=\"bottom-aside-body\"]'),\n                        \"bottom-left-body\": this.$target.find('[data-ax5grid-panel=\"bottom-left-body\"]'),\n                        \"bottom-body\": this.$target.find('[data-ax5grid-panel=\"bottom-body\"]'),\n                        \"bottom-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"bottom-body\"]'),\n                        \"bottom-right-body\": this.$target.find('[data-ax5grid-panel=\"bottom-right-body\"]')\n                    },\n                    \"livePanelKeys\": [], // 현재 사용중인 패널들 (grid-body repaint에서 수집하여 처리)\n                    \"scroller\": {\n                        \"vertical\": this.$target.find('[data-ax5grid-scroller=\"vertical\"]'),\n                        \"vertical-bar\": this.$target.find('[data-ax5grid-scroller=\"vertical-bar\"]'),\n                        \"horizontal\": this.$target.find('[data-ax5grid-scroller=\"horizontal\"]'),\n                        \"horizontal-bar\": this.$target.find('[data-ax5grid-scroller=\"horizontal-bar\"]'),\n                        \"corner\": this.$target.find('[data-ax5grid-scroller=\"corner\"]')\n                    },\n                    \"page\": {\n                        \"navigation\": this.$target.find('[data-ax5grid-page=\"navigation\"]'),\n                        \"status\": this.$target.find('[data-ax5grid-page=\"status\"]')\n                    },\n                    \"form\": {\n                        \"clipboard\": this.$target.find('[data-ax5grid-form=\"clipboard\"]')\n                    },\n                    \"resizer\": {\n                        \"vertical\": this.$target.find('[data-ax5grid-resizer=\"vertical\"]'),\n                        \"horizontal\": this.$target.find('[data-ax5grid-resizer=\"horizontal\"]')\n                    }\n                };\n\n                this.$[\"container\"][\"root\"].css({ height: this.config.height });\n\n                return this;\n            },\n                initColumns = function initColumns(_columns) {\n                this.columns = U.deepCopy(_columns);\n                this.headerTable = GRID.util.makeHeaderTable.call(this, this.columns);\n                this.xvar.frozenColumnIndex = cfg.frozenColumnIndex > this.columns.length ? this.columns.length : cfg.frozenColumnIndex;\n\n                this.bodyRowTable = GRID.util.makeBodyRowTable.call(this, this.columns);\n                this.bodyRowMap = GRID.util.makeBodyRowMap.call(this, this.bodyRowTable);\n                // 바디에 표현될 한줄의 높이를 계산합니다.\n                this.xvar.bodyTrHeight = this.bodyRowTable.rows.length * this.config.body.columnHeight;\n\n                var colGroupMap = {};\n                for (var r = 0, rl = this.headerTable.rows.length; r < rl; r++) {\n                    var row = this.headerTable.rows[r];\n                    for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                        colGroupMap[row.cols[c].colIndex] = jQuery.extend({}, row.cols[c]);\n                    }\n                }\n\n                this.colGroup = [];\n                for (var k in colGroupMap) {\n                    this.colGroup.push(colGroupMap[k]);\n                }\n\n                return this;\n            },\n                onResetColumns = function onResetColumns() {\n                initColumns.call(this, this.config.columns);\n                resetColGroupWidth.call(this);\n                if (this.config.footSum) {\n                    initFootSum.call(this, this.config.footSum);\n                    this.needToPaintSum = true;\n                }\n                if (this.config.body.grouping) initBodyGroup.call(this, this.config.body.grouping);\n                alignGrid.call(this, true);\n                GRID.header.repaint.call(this, true);\n                GRID.body.repaint.call(this, true);\n                GRID.scroller.resize.call(this);\n            },\n                resetColGroupWidth = function resetColGroupWidth() {\n                /// !! 그리드 target의 크기가 변경되면 이 함수를 호출하려 this.colGroup의 _width 값을 재 계산 하여야 함. [tom]\n                var CT_WIDTH = this.$[\"container\"][\"root\"].width() - function () {\n                    var width = 0;\n                    if (cfg.showLineNumber) width += cfg.lineNumberColumnWidth;\n                    if (cfg.showRowSelector) width += cfg.rowSelectorColumnWidth;\n                    return width;\n                }();\n                var totalWidth = 0;\n                var computedWidth;\n                var autoWidthColgroupIndexs = [];\n                var colGroup = this.colGroup;\n                var i, l;\n\n                for (i = 0, l = colGroup.length; i < l; i++) {\n                    if (U.isNumber(colGroup[i].width)) {\n                        totalWidth += colGroup[i]._width = colGroup[i].width;\n                    } else if (colGroup[i].width === \"*\") {\n                        autoWidthColgroupIndexs.push(i);\n                    } else if (U.right(colGroup[i].width, 1) === \"%\") {\n                        totalWidth += colGroup[i]._width = CT_WIDTH * U.left(colGroup[i].width, \"%\") / 100;\n                    }\n                }\n                if (autoWidthColgroupIndexs.length > 0) {\n                    computedWidth = (CT_WIDTH - totalWidth) / autoWidthColgroupIndexs.length;\n                    for (i = 0, l = autoWidthColgroupIndexs.length; i < l; i++) {\n                        colGroup[autoWidthColgroupIndexs[i]]._width = computedWidth;\n                    }\n                }\n            },\n                initFootSum = function initFootSum(_footSum) {\n                if (U.isArray(_footSum)) {\n                    this.footSumTable = GRID.util.makeFootSumTable.call(this, this.footSumColumns = _footSum);\n                } else {\n                    this.footSumColumns = [];\n                    this.footSumTable = {};\n                }\n            },\n                initBodyGroup = function initBodyGroup(_grouping) {\n                var grouping = jQuery.extend({}, _grouping);\n                if (\"by\" in grouping && \"columns\" in grouping) {\n\n                    this.bodyGrouping = {\n                        by: grouping.by,\n                        columns: grouping.columns\n                    };\n                    this.bodyGroupingTable = GRID.util.makeBodyGroupingTable.call(this, this.bodyGrouping.columns);\n                    this.sortInfo = function () {\n                        var sortInfo = {};\n                        for (var k = 0, kl = this.bodyGrouping.by.length; k < kl; k++) {\n                            sortInfo[this.bodyGrouping.by[k]] = {\n                                orderBy: \"asc\",\n                                seq: k,\n                                fixed: true\n                            };\n                            for (var c = 0, cl = this.colGroup.length; c < cl; c++) {\n                                if (this.colGroup[c].key === this.bodyGrouping.by[k]) {\n                                    this.colGroup[c].sort = \"asc\";\n                                    this.colGroup[c].sortFixed = true;\n                                }\n                            }\n                        }\n                        return sortInfo;\n                    }.call(this);\n                } else {\n                    cfg.body.grouping = false;\n                }\n            },\n                alignGrid = function alignGrid(_isFirst) {\n                // isFirst : 그리드 정렬 메소드가 처음 호출 되었는지 판단 하는 아규먼트\n                var CT_WIDTH = this.$[\"container\"][\"root\"].width();\n                var CT_HEIGHT = this.$[\"container\"][\"root\"].height();\n                var CT_INNER_WIDTH = CT_WIDTH;\n                var CT_INNER_HEIGHT = CT_HEIGHT;\n\n                var asidePanelWidth = cfg.asidePanelWidth = function () {\n                    var width = 0;\n\n                    if (cfg.showLineNumber) width += cfg.lineNumberColumnWidth;\n                    if (cfg.showRowSelector) width += cfg.rowSelectorColumnWidth;\n                    return width;\n                }();\n\n                var frozenPanelWidth = cfg.frozenPanelWidth = function (colGroup, endIndex) {\n                    var width = 0;\n                    for (var i = 0, l = endIndex; i < l; i++) {\n                        width += colGroup[i]._width;\n                    }\n                    return width;\n                }(this.colGroup, cfg.frozenColumnIndex);\n\n                var rightPanelWidth = 0; // todo : 우측 함계컬럼 넘비 계산\n\n                var frozenRowHeight = function (bodyTrHeight) {\n                    return cfg.frozenRowIndex * bodyTrHeight;\n                }(this.xvar.bodyTrHeight);\n\n                var footSumHeight = function (bodyTrHeight) {\n                    return this.footSumColumns.length * bodyTrHeight;\n                }.call(this, this.xvar.bodyTrHeight);\n\n                var headerHeight = this.headerTable.rows.length * cfg.header.columnHeight;\n                var pageHeight = cfg.page.display ? cfg.page.height : 0;\n\n                // 데이터의 길이가 body보다 높을때. 수직 스크롤러 활성화\n                var verticalScrollerWidth, horizontalScrollerHeight;\n\n                (function () {\n                    verticalScrollerWidth = CT_HEIGHT - headerHeight - pageHeight - footSumHeight < this.list.length * this.xvar.bodyTrHeight ? this.config.scroller.size : 0;\n                    // 남은 너비가 colGroup의 너비보다 넓을때. 수평 스크롤 활성화.\n                    horizontalScrollerHeight = function () {\n                        var totalColGroupWidth = 0;\n                        // aside 빼고 너비\n                        // 수직 스크롤이 있으면 또 빼고 비교\n                        var bodyWidth = CT_WIDTH - asidePanelWidth - verticalScrollerWidth;\n                        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n                            totalColGroupWidth += this.colGroup[i]._width;\n                        }\n                        return totalColGroupWidth > bodyWidth ? this.config.scroller.size : 0;\n                    }.call(this);\n\n                    if (horizontalScrollerHeight > 0) {\n                        verticalScrollerWidth = CT_HEIGHT - headerHeight - pageHeight - footSumHeight - horizontalScrollerHeight < this.list.length * this.xvar.bodyTrHeight ? this.config.scroller.size : 0;\n                    }\n                }).call(this);\n\n                // 수평 너비 결정\n                CT_INNER_WIDTH = CT_WIDTH - verticalScrollerWidth;\n                // 수직 스크롤러의 높이 결정.\n                CT_INNER_HEIGHT = CT_HEIGHT - pageHeight - horizontalScrollerHeight;\n\n                var bodyHeight = CT_INNER_HEIGHT - headerHeight;\n\n                var panelDisplayProcess = function panelDisplayProcess(panel, vPosition, hPosition, containerType) {\n                    var css = {};\n                    var isHide = false;\n\n                    switch (hPosition) {\n                        case \"aside\":\n                            if (asidePanelWidth === 0) {\n                                isHide = true;\n                            } else {\n                                css[\"left\"] = 0;\n                                css[\"width\"] = asidePanelWidth;\n                            }\n                            break;\n                        case \"left\":\n                            if (cfg.frozenColumnIndex === 0) {\n                                isHide = true;\n                            } else {\n                                css[\"left\"] = asidePanelWidth;\n                                css[\"width\"] = frozenPanelWidth;\n                            }\n                            break;\n                        case \"right\":\n                            if (!cfg.rightSum) {\n                                isHide = true;\n                            } else {}\n                            break;\n                        default:\n                            if (containerType !== \"page\") {\n                                if (cfg.frozenColumnIndex === 0) {\n                                    css[\"left\"] = asidePanelWidth;\n                                } else {\n                                    css[\"left\"] = frozenPanelWidth + asidePanelWidth;\n                                }\n                                css[\"width\"] = CT_INNER_WIDTH - asidePanelWidth - frozenPanelWidth - rightPanelWidth;\n                            }\n                            break;\n                    }\n\n                    if (isHide) {\n                        panel.hide();\n                        // 프로세스 중지\n                        return this;\n                    }\n\n                    if (containerType === \"body\") {\n                        switch (vPosition) {\n                            case \"top\":\n                                if (cfg.frozenRowIndex == 0) {\n                                    isHide = true;\n                                } else {\n                                    css[\"top\"] = 0;\n                                    css[\"height\"] = frozenRowHeight;\n                                }\n                                break;\n                            case \"bottom\":\n                                if (!cfg.footSum) {\n                                    isHide = true;\n                                } else {\n                                    css[\"top\"] = bodyHeight - footSumHeight;\n                                    css[\"height\"] = footSumHeight; // footSum height\n                                }\n                                break;\n                            default:\n\n                                css[\"top\"] = frozenRowHeight;\n                                css[\"height\"] = bodyHeight - frozenRowHeight - footSumHeight;\n\n                                break;\n                        }\n                    } else if (containerType === \"header\") {\n                        css[\"height\"] = headerHeight;\n                    } else if (containerType === \"page\") {\n                        if (pageHeight == 0) {\n                            isHide = true;\n                        } else {\n                            css[\"height\"] = pageHeight;\n                        }\n                    }\n\n                    if (isHide) {\n                        panel.hide();\n                        // 프로세스 중지\n                        return this;\n                    }\n\n                    panel.css(css);\n                    return this;\n                };\n                var scrollerDisplayProcess = function scrollerDisplayProcess(panel, scrollerWidth, scrollerHeight, containerType) {\n                    var css = {};\n                    var isHide = false;\n\n                    switch (containerType) {\n                        case \"vertical\":\n                            if (scrollerWidth > 0) {\n                                css[\"width\"] = scrollerWidth;\n                                css[\"height\"] = CT_INNER_HEIGHT;\n                                css[\"bottom\"] = scrollerHeight + pageHeight;\n                            } else {\n                                isHide = true;\n                            }\n                            break;\n                        case \"horizontal\":\n                            if (scrollerHeight > 0) {\n                                css[\"width\"] = CT_INNER_WIDTH;\n                                css[\"height\"] = scrollerHeight;\n                                css[\"right\"] = scrollerWidth;\n                                css[\"bottom\"] = pageHeight;\n                            } else {\n                                isHide = true;\n                            }\n                            break;\n                        case \"corner\":\n                            if (scrollerWidth > 0 && scrollerHeight > 0) {\n                                css[\"width\"] = scrollerWidth;\n                                css[\"height\"] = scrollerHeight;\n                                css[\"bottom\"] = pageHeight;\n                            } else {\n                                isHide = true;\n                            }\n                            break;\n                    }\n\n                    if (isHide) {\n                        panel.hide();\n                        // 프로세스 중지\n                        return this;\n                    }\n\n                    panel.show().css(css);\n                };\n\n                this.$[\"container\"][\"header\"].css({ height: headerHeight });\n                this.$[\"container\"][\"body\"].css({ height: bodyHeight });\n\n                // 각 패널들의 크기 표시여부를 결정합니다\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-header\"], \"\", \"aside\", \"header\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"left-header\"], \"\", \"left\", \"header\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"header\"], \"\", \"\", \"header\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"right-header\"], \"\", \"right\", \"header\");\n\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-aside-body\"], \"top\", \"aside\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-left-body\"], \"top\", \"left\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-body\"], \"top\", \"\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-right-body\"], \"top\", \"right\", \"body\");\n\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-body\"], \"\", \"aside\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"left-body\"], \"\", \"left\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"body\"], \"\", \"\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"right-body\"], \"\", \"right\", \"body\");\n\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-aside-body\"], \"bottom\", \"aside\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-left-body\"], \"bottom\", \"left\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-body\"], \"bottom\", \"\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-right-body\"], \"bottom\", \"right\", \"body\");\n\n                scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"vertical\"], verticalScrollerWidth, horizontalScrollerHeight, \"vertical\");\n                scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"horizontal\"], verticalScrollerWidth, horizontalScrollerHeight, \"horizontal\");\n                scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"corner\"], verticalScrollerWidth, horizontalScrollerHeight, \"corner\");\n\n                panelDisplayProcess.call(this, this.$[\"container\"][\"page\"], \"\", \"\", \"page\");\n            },\n                sortColumns = function sortColumns(_sortInfo) {\n                GRID.header.repaint.call(this);\n\n                if (U.isFunction(this.config.remoteSort)) {\n                    var that = { sortInfo: [] };\n                    for (var k in _sortInfo) {\n                        that.sortInfo.push({\n                            key: k,\n                            orderBy: _sortInfo[k].orderBy,\n                            seq: _sortInfo[k].seq\n                        });\n                    }\n                    that.sortInfo.sort(function (a, b) {\n                        return a.seq > b.seq;\n                    });\n                    this.config.remoteSort.call(that, that);\n                } else {\n                    if (this.config.body.grouping) {\n                        this.list = GRID.data.initData.call(this, GRID.data.sort.call(this, _sortInfo, GRID.data.clearGroupingData.call(this, this.list)));\n                    } else {\n                        this.list = GRID.data.sort.call(this, _sortInfo, GRID.data.clearGroupingData.call(this, this.list));\n                    }\n                    GRID.body.repaint.call(this, true);\n                    GRID.scroller.resize.call(this);\n                }\n            };\n\n            /// private end\n\n            /**\n             * Preferences of grid UI\n             * @method ax5grid.setConfig\n             * @param {Object} _config - 클래스 속성값\n             * @param {Element} _config.target\n             * @param {Number} [_config.frozenColumnIndex=0]\n             * @param {Number} [_config.frozenRowIndex=0]\n             * @param {Boolean} [_config.showLineNumber=false]\n             * @param {Boolean} [_config.showRowSelector=false]\n             * @param {Boolean} [_config.multipleSelect=true]\n             * @param {Number} [_config.columnMinWidth=100]\n             * @param {Number} [_config.lineNumberColumnWidth=30]\n             * @param {Number} [_config.rowSelectorColumnWidth=25]\n             * @param {Boolean} [_config.sortable=false]\n             * @param {Boolean} [_config.multiSort=false]\n             * @param {Function} [_config.remoteSort=false]\n             * @param {Object} [_config.header]\n             * @param {String} [_config.header.align]\n             * @param {Number} [_config.header.columnHeight=25]\n             * @param {Number} [_config.header.columnPadding=3]\n             * @param {Number} [_config.header.columnBorderWidth=1]\n             * @param {Object} [_config.body]\n             * @param {String} [_config.body.align]\n             * @param {Number} [_config.body.columnHeight=25]\n             * @param {Number} [_config.body.columnPadding=3]\n             * @param {Number} [_config.body.columnBorderWidth=1]\n             * @param {Object} [_config.body.grouping]\n             * @param {Array} [_config.body.grouping.by] - list grouping keys\n             * @param {Array} [_config.body.grouping.columns] - list grouping columns\n             * @param {Object} [_config.page]\n             * @param {Number} [_config.page.height=25]\n             * @param {Boolean} [_config.page.display=true]\n             * @param {Number} [_config.page.navigationItemCount=5]\n             * @param {Object} [_config.scroller]\n             * @param {Number} [_config.scroller.size=15]\n             * @param {Number} [_config.scroller.barMinSize=15]\n             * @param {Number} [_config.scroller.trackPadding=4]\n             * @param {Object} [_config.columnKeys]\n             * @param {String} [_config.columnKeys.selected=\"_SELECTED\"]\n             * @param {Object[]} _config.columns\n             * @param {String} _config.columns[].key\n             * @param {String} _config.columns[].label\n             * @param {Number} _config.columns[].width\n             * @param {(String|Function)} _config.columns[].styleClass\n             * @param {Boolean} _config.columns[].enableFilter\n             * @param {Boolean} _config.columns[].sortable\n             * @param {String} _config.columns[].align\n             * @param {(String|Function)} _config.columns[].formatter\n             * @param {Object} _config.columns[].editor\n             * @param {String} _config.columns[].editor.type - text,number,money,date\n             * @param {Object} _config.columns[].editor.config\n             * @param {Array} _config.columns[].editor.updateWith\n             * @parem {Function} _config.columns[].editor.disabled - disable editor\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * var firstGrid = new ax5.ui.grid();\n             *\n             * ax5.ui.grid.formatter[\"myType\"] = function () {\n             *     return \"myType\" + (this.value || \"\");\n             * };\n             * ax5.ui.grid.formatter[\"capital\"] = function(){\n             *     return (''+this.value).toUpperCase();\n             * };\n             *\n             * ax5.ui.grid.collector[\"myType\"] = function () {\n             *     return \"myType\" + (this.value || \"\");\n             * };\n             *\n             * var sampleData = [\n             *     {a: \"A\", b: \"A01\", price: 1000, amount: 12, cost: 12000, saleDt: \"2016-08-29\", customer: \"장기영\", saleType: \"A\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"B01\", price: 1100, amount: 11, cost: 12100, saleDt: \"2016-08-28\", customer: \"장서우\", saleType: \"B\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"C01\", price: 1200, amount: 10, cost: 12000, saleDt: \"2016-08-27\", customer: \"이영희\", saleType: \"A\"},\n             *     {companyJson: {\"대표자명\":\"위세라\"}, a: \"A\", b: \"A01\", price: 1300, amount: 8, cost: 10400, saleDt: \"2016-08-25\", customer: \"황인서\", saleType: \"C\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"B01\", price: 1400, amount: 5, cost: 7000, saleDt: \"2016-08-29\", customer: \"황세진\", saleType: \"D\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"A01\", price: 1500, amount: 2, cost: 3000, saleDt: \"2016-08-26\", customer: \"이서연\", saleType: \"A\"}\n             * ];\n             *\n             * var gridView = {\n             *     initView: function () {\n             *         firstGrid.setConfig({\n             *             target: $('[data-ax5grid=\"first-grid\"]'),\n             *             columns: [\n             *                 {\n             *                     key: \"companyJson['대표자명']\",\n             *                     label: \"필드A\",\n             *                     width: 80,\n             *                     styleClass: function () {\n             *                         return \"ABC\";\n             *                     },\n             *                     enableFilter: true,\n             *                     align: \"center\",\n             *                     editor: {type:\"text\"}\n             *                 },\n             *                 {key: \"b\", label: \"필드B\", align: \"center\"},\n             *                 {\n             *                     key: undefined, label: \"필드C\", columns: [\n             *                         {key: \"price\", label: \"단가\", formatter: \"money\", align: \"right\"},\n             *                         {key: \"amount\", label: \"수량\", formatter: \"money\", align: \"right\"},\n             *                         {key: \"cost\", label: \"금액\", align: \"right\", formatter: \"money\"}\n             *                     ]\n             *                 },\n             *                 {key: \"saleDt\", label: \"판매일자\", align: \"center\"},\n             *                 {key: \"customer\", label: \"고객명\"},\n             *                 {key: \"saleType\", label: \"판매타입\"}\n             *             ]\n             *         });\n             *         return this;\n             *     },\n             *     setData: function (_pageNo) {\n             *\n             *         firstGrid.setData(sampleData);\n             *\n             *         return this;\n             *     }\n             * };\n             * ```\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5grid\", \"401\", \"init\"));\n                    return this;\n                }\n\n                // 그리드의 이벤트 정의 구간\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n                this.onDataChanged = cfg.body.onDataChanged;\n                // todo event에 대한 추가 정의 필요\n\n                this.$target = jQuery(cfg.target);\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        cfg = jQuery.extend(true, cfg, data);\n                    }\n                }).call(this, U.parseJson(this.$target.attr(\"data-ax5grid-config\"), true));\n\n                var grid = this.config = cfg;\n\n                if (!this.config.height) {\n                    this.config.height = this.$target.height();\n                }\n\n                if (!this.id) this.id = this.$target.data(\"data-ax5grid-id\");\n                if (!this.id) {\n                    //this.id = 'ax5grid-' + ax5.getGuid();\n                    this.id = 'ax5grid-' + this.instanceId;\n                    this.$target.data(\"data-ax5grid-id\", grid.id);\n                }\n\n                ///========\n                // 그리드를 그리기 위한 가장 기초적인 작업 뼈대와 틀을 준비합니다. 이 메소드는 초기화 시 한번만 호출 되게 됩니다.\n                initGrid.call(this);\n\n                // columns데이터를 분석하여 미리 처리해야하는 데이터를 정리합니다.\n                initColumns.call(this, grid.columns);\n                resetColGroupWidth.call(this);\n\n                // footSum 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n                if (grid.footSum) initFootSum.call(this, grid.footSum);\n\n                // bodyGrouping 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n                if (grid.body.grouping) initBodyGroup.call(this, grid.body.grouping);\n\n                // 그리드의 각 요소의 크기를 맞춤니다.\n                alignGrid.call(this, true);\n\n                // columns의 데이터로 header데이터를 만들고\n                GRID.header.init.call(this);\n                // header를 출력합니다.\n                GRID.header.repaint.call(this);\n\n                // columns의 데이터로 body데이터를 만들고\n                GRID.body.init.call(this);\n                // body를 출력합니다.\n                GRID.body.repaint.call(this);\n\n                // scroller\n                GRID.scroller.init.call(this);\n                GRID.scroller.resize.call(this);\n\n                jQuery(window).bind(\"resize.ax5grid-\" + this.id, function () {\n                    alignGrid.call(this);\n                    GRID.scroller.resize.call(this);\n                }.bind(this));\n\n                jQuery(document.body).on(\"click.ax5grid-\" + this.id, function (e) {\n                    var isPickerClick = false;\n                    var target = U.findParentNode(e.target, function (_target) {\n                        if (isPickerClick = _target.getAttribute(\"data-ax5grid-inline-edit-picker\")) {\n                            return true;\n                        }\n                        return _target.getAttribute(\"data-ax5grid-container\") === \"root\";\n                    });\n\n                    if (target && target.getAttribute(\"data-ax5grid-instance\") === this.id) {\n                        self.focused = true;\n                    } else {\n                        self.focused = false;\n                        GRID.body.blur.call(this);\n                    }\n                }.bind(this));\n\n                var ctrlKeys = {\n                    \"33\": \"KEY_PAGEUP\",\n                    \"34\": \"KEY_PAGEDOWN\",\n                    \"35\": \"KEY_END\",\n                    \"36\": \"KEY_HOME\",\n                    \"37\": \"KEY_LEFT\",\n                    \"38\": \"KEY_UP\",\n                    \"39\": \"KEY_RIGHT\",\n                    \"40\": \"KEY_DOWN\"\n                };\n                jQuery(window).on(\"keydown.ax5grid-\" + this.instanceId, function (e) {\n                    if (self.focused) {\n                        if (self.isInlineEditing) {\n\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                self.keyDown(\"ESC\", e.originalEvent);\n                            } else if (e.which == ax5.info.eventKeys.RETURN) {\n                                self.keyDown(\"RETURN\", e.originalEvent);\n                            } else if (e.which == ax5.info.eventKeys.TAB) {\n                                self.keyDown(\"TAB\", e.originalEvent);\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.UP) {\n                                self.keyDown(\"RETURN\", { shiftKey: true });\n                            } else if (e.which == ax5.info.eventKeys.DOWN) {\n                                self.keyDown(\"RETURN\", {});\n                            }\n                        } else {\n\n                            if (e.metaKey || e.ctrlKey) {\n                                if (e.which == 67) {\n                                    // c\n                                    self.copySelect();\n                                }\n                            } else {\n                                if (ctrlKeys[e.which]) {\n                                    self.keyDown(ctrlKeys[e.which], e.originalEvent);\n                                    U.stopEvent(e);\n                                } else if (e.which == ax5.info.eventKeys.ESC) {\n                                    if (self.focused) {\n                                        GRID.body.blur.call(self);\n                                    }\n                                } else if (e.which == ax5.info.eventKeys.RETURN) {\n                                    self.keyDown(\"RETURN\", e.originalEvent);\n                                } else if (e.which == ax5.info.eventKeys.TAB) {\n                                    //self.keyDown(\"RETURN\", e.originalEvent);\n                                    U.stopEvent(e);\n                                } else if (e.which != ax5.info.eventKeys.SPACE && Object.keys(self.focusedColumn).length) {\n                                    self.keyDown(\"INLINE_EDIT\", e.originalEvent);\n                                }\n                            }\n                        }\n                    }\n                });\n\n                // 그리드 레이아웃이 모든 준비를 마친시점에 onLoad존재 여부를 확인하고 호출하여 줍니다.\n                setTimeout(function () {\n                    if (this.onLoad) {\n                        this.onLoad.call({\n                            self: this\n                        });\n                    }\n                }.bind(this));\n                return this;\n            };\n\n            /**\n             * align grid size\n             * @method ax5grid.align\n             * @returns {ax5grid}\n             */\n            this.align = function () {\n                alignGrid.call(this);\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.keyDown\n             * @param {String} _keyName\n             * @param {Event|Object} _data\n             * @return {ax5grid}\n             */\n            this.keyDown = function () {\n                var processor = {\n                    \"KEY_UP\": function KEY_UP() {\n                        GRID.body.moveFocus.call(this, \"UP\");\n                    },\n                    \"KEY_DOWN\": function KEY_DOWN() {\n                        GRID.body.moveFocus.call(this, \"DOWN\");\n                    },\n                    \"KEY_LEFT\": function KEY_LEFT() {\n                        GRID.body.moveFocus.call(this, \"LEFT\");\n                    },\n                    \"KEY_RIGHT\": function KEY_RIGHT() {\n                        GRID.body.moveFocus.call(this, \"RIGHT\");\n                    },\n                    \"KEY_HOME\": function KEY_HOME() {\n                        GRID.body.moveFocus.call(this, \"HOME\");\n                    },\n                    \"KEY_END\": function KEY_END() {\n                        GRID.body.moveFocus.call(this, \"END\");\n                    },\n                    \"INLINE_EDIT\": function INLINE_EDIT(_e) {\n                        GRID.body.inlineEdit.active.call(this, this.focusedColumn, _e);\n                        if (!/[0-9a-zA-Z]/.test(_e.key)) {\n                            U.stopEvent(_e);\n                        }\n                    },\n                    \"ESC\": function ESC(_e) {\n                        GRID.body.inlineEdit.keydown.call(this, \"ESC\");\n                    },\n                    \"RETURN\": function RETURN(_e) {\n                        var activeEditLength = 0;\n                        for (var columnKey in this.inlineEditing) {\n                            activeEditLength++;\n\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\", columnKey);\n                            // next focus\n                            if (activeEditLength == 1) {\n                                if (GRID.body.moveFocus.call(this, _e.shiftKey ? \"UP\" : \"DOWN\")) {\n                                    GRID.body.inlineEdit.keydown.call(this, \"RETURN\");\n                                }\n                            }\n                        }\n                        if (activeEditLength == 0) {\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\");\n                        }\n                    },\n                    \"TAB\": function TAB(_e) {\n\n                        var activeEditLength = 0;\n                        for (var columnKey in this.inlineEditing) {\n                            activeEditLength++;\n\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\", columnKey, { moveFocus: true });\n                            // next focus\n                            if (activeEditLength == 1) {\n                                if (GRID.body.moveFocus.call(this, _e.shiftKey ? \"LEFT\" : \"RIGHT\")) {\n                                    GRID.body.inlineEdit.keydown.call(this, \"RETURN\", undefined, { moveFocus: true });\n                                }\n                            }\n                        }\n                    }\n                };\n                return function (_act, _data) {\n                    if (_act in processor) processor[_act].call(this, _data);\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5grid.copySelect\n             * @returns {Boolean} copysuccess\n             */\n            this.copySelect = function () {\n                var copysuccess;\n                var $clipBoard = this.$[\"form\"][\"clipboard\"];\n                var copyTextArray = [];\n                var copyText = \"\";\n\n                var _rowIndex, _colIndex, _dindex;\n                var _di = 0;\n                for (var c in this.selectedColumn) {\n                    var _column = this.selectedColumn[c];\n\n                    if (_column) {\n                        if (typeof _dindex === \"undefined\") {\n                            _dindex = _column.dindex;\n                            _rowIndex = _column.rowIndex;\n                            _colIndex = _column.rowIndex;\n                        }\n\n                        if (_dindex != _column.dindex || _rowIndex != _column.rowIndex) {\n                            _di++;\n                        }\n\n                        if (!copyTextArray[_di]) {\n                            copyTextArray[_di] = [];\n                        }\n                        var originalColumn = this.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                        if (originalColumn) {\n                            if (this.list[_column.dindex].__isGrouping) {\n                                copyTextArray[_di].push(this.list[_column.dindex][_column.colIndex]);\n                            } else {\n                                copyTextArray[_di].push(this.list[_column.dindex][originalColumn.key]);\n                            }\n                        } else {\n                            copyTextArray[_di].push(\"\");\n                        }\n\n                        _dindex = _column.dindex;\n                        _rowIndex = _column.rowIndex;\n                    }\n                }\n\n                copyTextArray.forEach(function (r) {\n                    copyText += r.join('\\t') + \"\\n\";\n                });\n\n                $clipBoard.get(0).innerText = copyText;\n                $clipBoard.select();\n\n                try {\n                    copysuccess = document.execCommand(\"copy\");\n                } catch (e) {\n                    copysuccess = false;\n                }\n                return copysuccess;\n            };\n\n            /**\n             * @method ax5grid.setData\n             * @param {Array} _data\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setData({\n             *  list: [],\n             *  page: {\n             *      currentPage: 0,\n             *      pageSize: 50,\n             *      totalElements: 500,\n             *      totalPages: 100\n             *  }\n             * });\n             *\n             * // onlyList\n             * ax5Grid.setData([]);\n             * ```\n             */\n            this.setData = function (_data) {\n                GRID.data.set.call(this, _data);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this);\n                GRID.scroller.resize.call(this);\n                GRID.page.navigationUpdate.call(this);\n                GRID.body.scrollTo.call(this, { top: 0 });\n                return this;\n            };\n\n            /**\n             * @method ax5grid.getList\n             * @param {String} _type\n             * @returns {Array}\n             * @example\n             * ```js\n             * ax5Grid.getList();\n             * ax5Grid.getList(\"modified\");\n             * ax5Grid.getList(\"deleted\");\n             * ```\n             */\n            this.getList = function (_type) {\n                return GRID.data.getList.call(this, _type);\n            };\n\n            /**\n             * @method ax5grid.setHeight\n             * @param {Number} _height\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setHeight(height);\n             * ```\n             */\n            this.setHeight = function (_height) {\n                //console.log(this.$target);\n                if (_height == \"100%\") {\n                    _height = this.$target.offsetParent().innerHeight();\n                }\n                this.$target.css({ height: _height });\n                this.$[\"container\"][\"root\"].css({ height: _height });\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.addRow\n             * @param {Object} _row\n             * @param {Number|String} [_dindex=last]\n             * @param {Object} [_options] - options of addRow\n             * @param {Boolean} [_options.sort] - sortData\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.addRow($.extend({}, {...}), \"first\");\n             * ```\n             */\n            this.addRow = function (_row, _dindex, _options) {\n                GRID.data.add.call(this, _row, _dindex, _options);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.body.moveFocus.call(this, this.config.body.grouping ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.removeRow\n             * @param {Number|String} [_dindex=last]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.removeRow();\n             * ax5Grid.removeRow(\"first\");\n             * ax5Grid.removeRow(\"last\");\n             * ax5Grid.removeRow(1);\n             * ```\n             */\n            this.removeRow = function (_dindex) {\n                GRID.data.remove.call(this, _dindex);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.body.moveFocus.call(this, this.config.body.grouping ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.updateRow\n             * @param {Object} _row\n             * @param {Number} _dindex\n             * @returns {ax5grid}\n             */\n            this.updateRow = function (_row, _dindex) {\n                GRID.data.update.call(this, _row, _dindex);\n                GRID.body.repaintRow.call(this, _dindex);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.deleteRow\n             * @param {Number|String} _dindex\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.deleteRow(\"first\");\n             * ax5Grid.deleteRow(\"last\");\n             * ax5Grid.deleteRow(1);\n             * ax5Grid.deleteRow(\"selected\");\n             * ```\n             */\n            this.deleteRow = function (_dindex) {\n                GRID.data.deleteRow.call(this, _dindex);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                // 삭제시엔 포커스 ?\n                // GRID.body.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.setValue\n             * @param _dindex\n             * @param _key\n             * @param _value\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setValue(0, \"price\", 100);\n             * ```\n             */\n            this.setValue = function (_dindex, _key, _value) {\n                // getPanelname;\n                if (GRID.data.setValue.call(this, _dindex, _key, _value)) {\n                    var repaintCell = function repaintCell(_panelName, _rows, __dindex, __key, __value) {\n                        for (var r = 0, rl = _rows.length; r < rl; r++) {\n                            for (var c = 0, cl = _rows[r].cols.length; c < cl; c++) {\n                                if (_rows[r].cols[c].key == __key) {\n                                    if (this.xvar.frozenRowIndex > __dindex) {\n                                        GRID.body.repaintCell.call(this, \"top-\" + _panelName, __dindex, r, c, __value);\n                                    } else {\n                                        GRID.body.repaintCell.call(this, _panelName + \"-scroll\", __dindex, r, c, __value);\n                                    }\n                                }\n                            }\n                        }\n                    };\n\n                    repaintCell.call(this, \"left-body\", this.leftBodyRowData.rows, _dindex, _key, _value);\n                    repaintCell.call(this, \"body\", this.bodyRowData.rows, _dindex, _key, _value);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.addColumn\n             * @param {Object} _column\n             * @param {Number|String} [_cindex=last]\n             * @returns {ax5grid}\n             */\n            this.addColumn = function () {\n                var processor = {\n                    \"first\": function first(_column) {\n                        this.config.columns = [].concat(_column).concat(this.config.columns);\n                    },\n                    \"last\": function last(_column) {\n                        this.config.columns = this.config.columns.concat([].concat(_column));\n                    }\n                };\n\n                return function (_column, _cindex) {\n                    if (typeof _column === \"undefined\") throw '_column must not be null';\n                    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n                    if (_cindex in processor) {\n                        processor[_cindex].call(this, _column);\n                    } else {\n                        if (!U.isNumber(_cindex)) {\n                            throw 'invalid argument _cindex';\n                        }\n                        this.config.columns.splice(_cindex, [].concat(_column));\n                    }\n                    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5grid.removeCloumn\n             * @param {Number|String} [_cindex=last]\n             * @returns {ax5grid}\n             */\n            this.removeColumn = function () {\n                var processor = {\n                    \"first\": function first(_cindex) {\n                        this.config.columns.splice(_cindex, 1);\n                    },\n                    \"last\": function last() {\n                        this.config.columns.splice(this.config.columns.length - 1, 1);\n                    }\n                };\n                return function (_cindex) {\n                    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n                    if (_cindex in processor) {\n                        processor[_cindex].call(this, _cindex);\n                    } else {\n                        if (!U.isNumber(_cindex)) {\n                            throw 'invalid argument _cindex';\n                        }\n                        //\n                        this.config.columns.splice(_cindex, 1);\n                    }\n                    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5grid.updateColumn\n             * @param {Object} _column\n             * @param {Number} _cindex\n             * @returns {ax5grid}\n             */\n            this.updateColumn = function (_column, _cindex) {\n                if (!U.isNumber(_cindex)) {\n                    throw 'invalid argument _cindex';\n                }\n                //\n                this.config.columns.splice(_cindex, 1, _column);\n                onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                return this;\n            };\n\n            /**\n             * @method ax5grid.setColumnWidth\n             * @param {Number} _width\n             * @param {Number} _cindex\n             * @returns {ax5grid}\n             */\n            this.setColumnWidth = function (_width, _cindex) {\n                this.colGroup[this.xvar.columnResizerIndex]._width = _width;\n                this.needToPaintSum = true;\n\n                // 컬럼너비 변경사항 적용.\n                GRID.header.repaint.call(this);\n                GRID.body.repaint.call(this, true);\n                GRID.scroller.resize.call(this);\n\n                alignGrid.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.getColumnSortInfo\n             * @returns {Object} sortInfo\n             */\n            this.getColumnSortInfo = function () {\n                var that = { sortInfo: [] };\n                for (var k in this.sortInfo) {\n                    that.sortInfo.push({\n                        key: k,\n                        orderBy: this.sortInfo[k].orderBy,\n                        seq: this.sortInfo[k].seq\n                    });\n                }\n                that.sortInfo.sort(function (a, b) {\n                    return a.seq > b.seq;\n                });\n                return that.sortInfo;\n            };\n\n            /**\n             * @method ax5grid.setColumnSort\n             * @param {Object} _sortInfo\n             * @param {Object} _sortInfo.key\n             * @param {Number} _sortInfo.key.seq - seq of sortOrder\n             * @param {String} _sortInfo.key.orderBy - \"desc\"|\"asc\"\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5grid.setColumnSort({a:{seq:0, orderBy:\"desc\"}, b:{seq:1, orderBy:\"asc\"}});\n             * ```\n             */\n            this.setColumnSort = function (_sortInfo) {\n                if (typeof _sortInfo !== \"undefined\") {\n                    this.sortInfo = _sortInfo;\n                    GRID.header.applySortStatus.call(this, _sortInfo);\n                }\n\n                sortColumns.call(this, _sortInfo || this.sortInfo);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.select\n             * @param {Number|Object} _selectObject\n             * @param {Number} _selectObject.index - index of row\n             * @param {Number} _selectObject.rowIndex - rowIndex of columns\n             * @param {Number} _selectObject.conIndex - colIndex of columns\n             * @param {Object} _options\n             * @param {Boolean} _options.selectedClear\n             * @param {Boolean} _options.selected\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.select(0);\n             * firstGrid.select(0, {selected: true});\n             * firstGrid.select(0, {selected: false});\n             * firstGrid.select(0, {selectedClear: true});\n             * ```\n             */\n            this.select = function (_selectObject, _options) {\n                if (U.isNumber(_selectObject)) {\n                    var _dindex2 = _selectObject;\n\n                    if (!this.config.multipleSelect) {\n                        this.clearSelect();\n                    } else {\n                        if (_options && _options.selectedClear) {\n                            this.clearSelect();\n                        }\n                    }\n\n                    GRID.data.select.call(this, _dindex2, _options && _options.selected);\n                    GRID.body.updateRowState.call(this, [\"selected\"], _dindex2);\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5grid.clearSelect\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.clearSelect();\n             * ```\n             */\n            this.clearSelect = function () {\n                GRID.body.updateRowState.call(this, [\"selectedClear\"]);\n                GRID.data.clearSelect.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.selectAll\n             * @param {Object} _options\n             * @param {Boolean} _options.selected\n             * @param {Function} _options.filter\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.selectAll();\n             * firstGrid.selectAll({selected: true});\n             * firstGrid.selectAll({selected: false});\n             * firstGrid.selectAll({filter: function(){\n             *      return this[\"b\"] == \"A01\";\n             * });\n             * firstGrid.selectAll({selected: true, filter: function(){\n             *      return this[\"b\"] == \"A01\";\n             * });\n             * ```\n             */\n            this.selectAll = function (_options) {\n                GRID.data.selectAll.call(this, _options && _options.selected, _options);\n                GRID.body.updateRowStateAll.call(this, [\"selected\"]);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.exportExcel\n             * @param {String} _fileName\n             * @returns {ax5grid|String}\n             * @example\n             * ```js\n             * firstGrid.exportExcel(\"grid-to-excel.xls\");\n             * console.log(firstGrid.exportExcel());\n             * ```\n             */\n            this.exportExcel = function (_fileName) {\n                var table = [];\n                table.push('<table border=\"1\">');\n                table.push(GRID.header.getExcelString.call(this));\n                table.push(GRID.body.getExcelString.call(this));\n                table.push('</table>');\n\n                if (typeof _fileName === \"undefined\") {\n                    return table.join('');\n                } else {\n                    GRID.excel.export.call(this, [table.join('')], _fileName);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.focus\n             * @param {String|Number} _pos - UP, DOWN, LEFT, RIGHT, HOME, END\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.focus(\"UP\");\n             * firstGrid.focus(\"DOWN\");\n             * firstGrid.focus(\"HOME\");\n             * firstGrid.focus(\"END\");\n             * ```\n             */\n            this.focus = function (_pos) {\n                var _this4 = this;\n\n                if (GRID.body.moveFocus.call(this, _pos)) {\n                    var focusedColumn = void 0;\n                    for (var c in this.focusedColumn) {\n                        focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                        break;\n                    }\n                    if (focusedColumn) {\n                        this.select(focusedColumn.dindex, { selectedClear: true });\n                    }\n                } else {\n                    if (typeof this.selectedDataIndexs[0] === \"undefined\") {\n                        this.select(0);\n                    } else {\n                        (function () {\n                            var selectedIndex = _this4.selectedDataIndexs[0];\n                            var processor = {\n                                \"UP\": function UP() {\n                                    if (selectedIndex > 0) {\n                                        this.select(selectedIndex - 1, { selectedClear: true });\n                                        GRID.body.moveFocus.call(this, selectedIndex - 1);\n                                    }\n                                },\n                                \"DOWN\": function DOWN() {\n                                    if (selectedIndex < this.list.length - 1) {\n                                        this.select(selectedIndex + 1, { selectedClear: true });\n                                        GRID.body.moveFocus.call(this, selectedIndex + 1);\n                                    }\n                                },\n                                \"HOME\": function HOME() {\n                                    this.select(0, { selectedClear: true });\n                                    GRID.body.moveFocus.call(this, 0);\n                                },\n                                \"END\": function END() {\n                                    this.select(this.list.length - 1, { selectedClear: true });\n                                    GRID.body.moveFocus.call(this, this.list.length - 1);\n                                }\n                            };\n\n                            if (_pos in processor) {\n                                processor[_pos].call(_this4);\n                            }\n                        })();\n                    }\n                }\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                UI.grid_instance = UI.grid_instance || [];\n                UI.grid_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5grid;\n    }());\n\n    GRID = ax5.ui.grid;\n})();\n\n// todo : excel export\n// todo : merge cells\n// todo : filter\n// todo : body menu\n// todo : column reorder\n// todo : editor 필수값 속성 지정\n\n\n// ax5.ui.grid.body\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var columnSelect = {\n        focusClear: function focusClear() {\n            var self = this;\n            for (var c in self.focusedColumn) {\n                var _column = self.focusedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName].find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]').removeAttr('data-ax5grid-column-focused');\n                }\n            }\n            self.focusedColumn = {};\n        },\n        clear: function clear() {\n            var self = this;\n            for (var c in self.selectedColumn) {\n                var _column = self.selectedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName].find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]').removeAttr('data-ax5grid-column-selected');\n                }\n            }\n            self.selectedColumn = {};\n        },\n        init: function init(column) {\n            var self = this;\n            if (this.isInlineEditing) {\n                for (var editKey in this.inlineEditing) {\n                    if (editKey == column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex) {\n                        return this;\n                    }\n                }\n            }\n\n            // focus\n            columnSelect.focusClear.call(self);\n            self.focusedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex] = {\n                panelName: column.panelName,\n                dindex: column.dindex,\n                rowIndex: column.rowIndex,\n                colIndex: column.colIndex,\n                colspan: column.colspan\n            };\n\n            // select\n            columnSelect.clear.call(self);\n            self.xvar.selectedRange = {\n                start: [column.dindex, column.rowIndex, column.colIndex, column.colspan - 1],\n                end: null\n            };\n            self.selectedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex] = function (data) {\n                if (data) {\n                    return false;\n                } else {\n                    return {\n                        panelName: column.panelName,\n                        dindex: column.dindex,\n                        rowIndex: column.rowIndex,\n                        colIndex: column.colIndex,\n                        colspan: column.colspan\n                    };\n                }\n            }(self.selectedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex]);\n\n            this.$.panel[column.panelName].find('[data-ax5grid-tr-data-index=\"' + column.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + column.colIndex + '\"]').attr('data-ax5grid-column-focused', \"true\").attr('data-ax5grid-column-selected', \"true\");\n\n            if (this.isInlineEditing) {\n                GRID.body.inlineEdit.deActive.call(this, \"RETURN\");\n            }\n        },\n        update: function update(column) {\n            var self = this;\n            var dindex, colIndex, rowIndex, trl;\n\n            self.xvar.selectedRange[\"end\"] = [column.dindex, column.rowIndex, column.colIndex, column.colspan - 1];\n            columnSelect.clear.call(self);\n\n            var range = {\n                r: {\n                    s: Math.min(self.xvar.selectedRange[\"start\"][0], self.xvar.selectedRange[\"end\"][0]),\n                    e: Math.max(self.xvar.selectedRange[\"start\"][0], self.xvar.selectedRange[\"end\"][0])\n                },\n                c: {\n                    s: Math.min(self.xvar.selectedRange[\"start\"][2], self.xvar.selectedRange[\"end\"][2]),\n                    e: Math.max(self.xvar.selectedRange[\"start\"][2] + self.xvar.selectedRange[\"start\"][3], self.xvar.selectedRange[\"end\"][2] + self.xvar.selectedRange[\"end\"][3])\n                }\n            };\n\n            dindex = range.r.s;\n            for (; dindex <= range.r.e; dindex++) {\n\n                trl = this.bodyRowTable.rows.length;\n                rowIndex = 0;\n                for (; rowIndex < trl; rowIndex++) {\n                    colIndex = range.c.s;\n                    for (; colIndex <= range.c.e; colIndex++) {\n                        var _panels = [],\n                            panelName = \"\";\n\n                        if (self.xvar.frozenRowIndex > dindex) _panels.push(\"top\");\n                        if (self.xvar.frozenColumnIndex > colIndex) _panels.push(\"left\");\n                        _panels.push(\"body\");\n                        if (_panels[0] !== \"top\") _panels.push(\"scroll\");\n                        panelName = _panels.join(\"-\");\n\n                        self.selectedColumn[dindex + \"_\" + colIndex + \"_\" + rowIndex] = {\n                            panelName: panelName,\n                            dindex: dindex,\n                            rowIndex: rowIndex,\n                            colIndex: colIndex,\n                            colspan: column.colspan\n                        };\n\n                        _panels = null;\n                        panelName = null;\n                    }\n                }\n            }\n            dindex = null;\n            colIndex = null;\n            rowIndex = null;\n\n            for (var c in self.selectedColumn) {\n                var _column = self.selectedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName].find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]').attr('data-ax5grid-column-selected', 'true');\n                }\n            }\n        }\n    };\n\n    var columnSelector = {\n        \"on\": function on(cell) {\n            var self = this;\n\n            if (this.inlineEditing[cell.dindex + \"_\" + cell.colIndex + \"_\" + cell.rowIndex]) {\n                return;\n            }\n\n            columnSelect.init.call(self, cell);\n\n            this.$[\"container\"][\"body\"].on(\"mousemove.ax5grid-\" + this.instanceId, '[data-ax5grid-column-attr=\"default\"]', function (e) {\n                if (this.getAttribute(\"data-ax5grid-column-rowIndex\")) {\n                    columnSelect.update.call(self, {\n                        panelName: this.getAttribute(\"data-ax5grid-panel-name\"),\n                        dindex: Number(this.getAttribute(\"data-ax5grid-data-index\")),\n                        rowIndex: Number(this.getAttribute(\"data-ax5grid-column-rowIndex\")),\n                        colIndex: Number(this.getAttribute(\"data-ax5grid-column-colIndex\")),\n                        colspan: Number(this.getAttribute(\"colspan\"))\n                    });\n                    U.stopEvent(e);\n                }\n            }).on(\"mouseup.ax5grid-\" + this.instanceId, function () {\n                columnSelector.off.call(self);\n            }).on(\"mouseleave.ax5grid-\" + this.instanceId, function () {\n                columnSelector.off.call(self);\n            });\n\n            jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n        },\n        \"off\": function off() {\n\n            this.$[\"container\"][\"body\"].off(\"mousemove.ax5grid-\" + this.instanceId).off(\"mouseup.ax5grid-\" + this.instanceId).off(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n        }\n    };\n\n    var updateRowState = function updateRowState(_states, _dindex, _data) {\n        var self = this;\n        var cfg = this.config;\n\n        var processor = {\n            \"selected\": function selected(_dindex) {\n                var i = this.$.livePanelKeys.length;\n                while (i--) {\n                    this.$.panel[this.$.livePanelKeys[i]].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]').attr(\"data-ax5grid-selected\", this.list[_dindex][cfg.columnKeys.selected]);\n                }\n            },\n            \"selectedClear\": function selectedClear() {\n                var si = this.selectedDataIndexs.length;\n                while (si--) {\n                    var dindex = this.selectedDataIndexs[si];\n                    var i = this.$.livePanelKeys.length;\n                    while (i--) {\n                        this.$.panel[this.$.livePanelKeys[i]].find('[data-ax5grid-tr-data-index=\"' + dindex + '\"]').attr(\"data-ax5grid-selected\", false);\n                        this.list[dindex][cfg.columnKeys.selected] = false;\n                    }\n                }\n            },\n            \"cellChecked\": function cellChecked(_dindex, _data) {\n                var key = _data.key;\n                var rowIndex = _data.rowIndex;\n                var colIndex = _data.colIndex;\n\n                var panelName = function () {\n                    var _panels = [];\n                    if (this.xvar.frozenRowIndex > _dindex) _panels.push(\"top\");\n                    if (this.xvar.frozenColumnIndex > colIndex) _panels.push(\"left\");\n                    _panels.push(\"body\");\n                    if (_panels[0] !== \"top\") _panels.push(\"scroll\");\n                    return _panels.join(\"-\");\n                }.call(this);\n\n                this.$.panel[panelName].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]').find('[data-ax5grid-column-rowIndex=\"' + rowIndex + '\"][data-ax5grid-column-colIndex=\"' + colIndex + '\"]').find('[data-ax5grid-editor=\"checkbox\"]').attr(\"data-ax5grid-checked\", '' + _data.checked);\n            }\n        };\n        _states.forEach(function (_state) {\n            if (!processor[_state]) throw 'invaild state name';\n            processor[_state].call(self, _dindex, _data);\n        });\n    };\n\n    var updateRowStateAll = function updateRowStateAll(_states, _data) {\n        var self = this;\n        var cfg = this.config;\n\n        var processor = {\n            \"selected\": function selected(_dindex) {\n                GRID.body.repaint.call(this, true);\n            }\n        };\n        _states.forEach(function (_state) {\n            if (!processor[_state]) throw 'invaild state name';\n            processor[_state].call(self, _data);\n        });\n    };\n\n    var init = function init() {\n        var self = this;\n\n        this.$[\"container\"][\"body\"].on(\"click\", '[data-ax5grid-column-attr]', function (e) {\n            var panelName, attr, row, col, dindex, rowIndex, colIndex, disableSelection;\n            var targetClick = {\n                \"default\": function _default(_column) {\n                    var column = self.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                    var that = {\n                        self: self,\n                        page: self.page,\n                        list: self.list,\n                        item: self.list[_column.dindex],\n                        dindex: _column.dindex,\n                        rowIndex: _column.rowIndex,\n                        colIndex: _column.colIndex,\n                        column: column,\n                        value: self.list[_column.dindex][column.key]\n                    };\n\n                    if (column.editor && column.editor.type == \"checkbox\") {\n                        // todo : GRID.inlineEditor에서 처리 할수 있도록 구문 변경 필요.\n                        var value = GRID.data.getValue.call(self, _column.dindex, column.key);\n\n                        var checked, newValue;\n                        if (column.editor.config && column.editor.config.trueValue) {\n                            if (checked = !(value == column.editor.config.trueValue)) {\n                                newValue = column.editor.config.trueValue;\n                            } else {\n                                newValue = column.editor.config.falseValue;\n                            }\n                        } else {\n                            newValue = checked = value == false || value == \"false\" || value < \"1\" ? \"true\" : \"false\";\n                        }\n\n                        GRID.data.setValue.call(self, _column.dindex, column.key, newValue);\n\n                        updateRowState.call(self, [\"cellChecked\"], _column.dindex, {\n                            key: column.key, rowIndex: _column.rowIndex, colIndex: _column.colIndex,\n                            editorConfig: column.editor.config, checked: checked\n                        });\n                    } else {\n                        if (self.config.body.onClick) {\n                            self.config.body.onClick.call(that);\n                        }\n                    }\n                },\n                \"rowSelector\": function rowSelector(_column) {\n                    if (self.list[_column.dindex][self.config.columnKeys.disableSelection]) {\n                        return false;\n                    }\n\n                    if (!self.config.multipleSelect && self.selectedDataIndexs[0] !== _column.dindex) {\n                        GRID.body.updateRowState.call(self, [\"selectedClear\"]);\n                        GRID.data.clearSelect.call(self);\n                    }\n\n                    GRID.data.select.call(self, _column.dindex, undefined, {\n                        internalCall: true\n                    });\n                    updateRowState.call(self, [\"selected\"], _column.dindex);\n                },\n                \"lineNumber\": function lineNumber(_column) {}\n            };\n\n            panelName = this.getAttribute(\"data-ax5grid-panel-name\");\n            attr = this.getAttribute(\"data-ax5grid-column-attr\");\n            row = Number(this.getAttribute(\"data-ax5grid-column-row\"));\n            col = Number(this.getAttribute(\"data-ax5grid-column-col\"));\n            rowIndex = Number(this.getAttribute(\"data-ax5grid-column-rowIndex\"));\n            colIndex = Number(this.getAttribute(\"data-ax5grid-column-colIndex\"));\n            dindex = Number(this.getAttribute(\"data-ax5grid-data-index\"));\n\n            if (attr in targetClick) {\n                targetClick[attr]({\n                    panelName: panelName,\n                    attr: attr,\n                    row: row,\n                    col: col,\n                    dindex: dindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex\n                });\n            }\n        });\n        this.$[\"container\"][\"body\"].on(\"dblclick\", '[data-ax5grid-column-attr]', function (e) {\n            var panelName, attr, row, col, dindex, rowIndex, colIndex;\n            var targetClick = {\n                \"default\": function _default(_column) {\n\n                    if (this.isInlineEditing) {\n                        for (var columnKey in this.inlineEditing) {\n                            if (columnKey == _column.dindex + \"_\" + _column.colIndex + \"_\" + _column.rowIndex) {\n                                return this;\n                            }\n                        }\n                    }\n\n                    var column = self.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                    var value = \"\";\n                    if (column) {\n                        if (!self.list[dindex].__isGrouping) {\n                            value = GRID.data.getValue.call(self, dindex, column.key);\n                        }\n                    }\n                    GRID.body.inlineEdit.active.call(self, self.focusedColumn, e, value);\n                },\n                \"rowSelector\": function rowSelector(_column) {},\n                \"lineNumber\": function lineNumber(_column) {}\n            };\n\n            panelName = this.getAttribute(\"data-ax5grid-panel-name\");\n            attr = this.getAttribute(\"data-ax5grid-column-attr\");\n            row = Number(this.getAttribute(\"data-ax5grid-column-row\"));\n            col = Number(this.getAttribute(\"data-ax5grid-column-col\"));\n            rowIndex = Number(this.getAttribute(\"data-ax5grid-column-rowIndex\"));\n            colIndex = Number(this.getAttribute(\"data-ax5grid-column-colIndex\"));\n            dindex = Number(this.getAttribute(\"data-ax5grid-data-index\"));\n\n            if (attr in targetClick) {\n                targetClick[attr]({\n                    panelName: panelName,\n                    attr: attr,\n                    row: row,\n                    col: col,\n                    dindex: dindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex\n                });\n            }\n        });\n        this.$[\"container\"][\"body\"].on(\"mouseover\", \"tr\", function () {\n            return;\n            var dindex = this.getAttribute(\"data-ax5grid-tr-data-index\");\n            var i = self.$.livePanelKeys.length;\n            while (i--) {\n                if (typeof self.xvar.dataHoveredIndex !== \"undefined\") self.$.panel[self.$.livePanelKeys[i]].find('[data-ax5grid-tr-data-index=\"' + self.xvar.dataHoveredIndex + '\"]').removeClass(\"hover\");\n                self.$.panel[self.$.livePanelKeys[i]].find('[data-ax5grid-tr-data-index=\"' + dindex + '\"]').addClass(\"hover\");\n            }\n            self.xvar.dataHoveredIndex = dindex;\n        });\n        this.$[\"container\"][\"body\"].on(\"mousedown\", '[data-ax5grid-column-attr=\"default\"]', function (e) {\n            if (self.xvar.touchmoved) return false;\n            if (this.getAttribute(\"data-ax5grid-column-rowIndex\")) {\n                columnSelector.on.call(self, {\n                    panelName: this.getAttribute(\"data-ax5grid-panel-name\"),\n                    dindex: Number(this.getAttribute(\"data-ax5grid-data-index\")),\n                    rowIndex: Number(this.getAttribute(\"data-ax5grid-column-rowIndex\")),\n                    colIndex: Number(this.getAttribute(\"data-ax5grid-column-colIndex\")),\n                    colspan: Number(this.getAttribute(\"colspan\"))\n                });\n            }\n        }).on(\"dragstart\", function (e) {\n            U.stopEvent(e);\n            return false;\n        });\n\n        resetFrozenColumn.call(this);\n    };\n\n    var resetFrozenColumn = function resetFrozenColumn() {\n        var cfg = this.config;\n        var dividedBodyRowObj = GRID.util.divideTableByFrozenColumnIndex(this.bodyRowTable, this.xvar.frozenColumnIndex);\n        this.asideBodyRowData = function (dataTable) {\n            var data = { rows: [] };\n            for (var i = 0, l = dataTable.rows.length; i < l; i++) {\n                data.rows[i] = { cols: [] };\n                if (i === 0) {\n                    var col = {\n                        label: \"\",\n                        colspan: 1,\n                        rowspan: dataTable.rows.length,\n                        colIndex: null\n                    },\n                        _col = {};\n\n                    if (cfg.showLineNumber) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.lineNumberColumnWidth,\n                            _width: cfg.lineNumberColumnWidth,\n                            columnAttr: \"lineNumber\",\n                            label: \"&nbsp;\", key: \"__d-index__\"\n                        });\n                        data.rows[i].cols.push(_col);\n                    }\n                    if (cfg.showRowSelector) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.rowSelectorColumnWidth,\n                            _width: cfg.rowSelectorColumnWidth,\n                            columnAttr: \"rowSelector\",\n                            label: \"\", key: \"__d-checkbox__\"\n                        });\n                        data.rows[i].cols.push(_col);\n                    }\n                }\n            }\n\n            return data;\n        }.call(this, this.bodyRowTable);\n        this.leftBodyRowData = dividedBodyRowObj.leftData;\n        this.bodyRowData = dividedBodyRowObj.rightData;\n\n        if (cfg.body.grouping) {\n            var dividedBodyGroupingObj = GRID.util.divideTableByFrozenColumnIndex(this.bodyGroupingTable, this.xvar.frozenColumnIndex);\n            this.asideBodyGroupingData = function (dataTable) {\n                var data = { rows: [] };\n                for (var i = 0, l = dataTable.rows.length; i < l; i++) {\n                    data.rows[i] = { cols: [] };\n                    if (i === 0) {\n                        var col = {\n                            label: \"\",\n                            colspan: 1,\n                            rowspan: dataTable.rows.length,\n                            colIndex: null\n                        },\n                            _col = {};\n\n                        if (cfg.showLineNumber) {\n                            _col = jQuery.extend({}, col, {\n                                width: cfg.lineNumberColumnWidth,\n                                _width: cfg.lineNumberColumnWidth,\n                                columnAttr: \"lineNumber\",\n                                label: \"&nbsp;\", key: \"__d-index__\"\n                            });\n                            data.rows[i].cols.push(_col);\n                        }\n                        if (cfg.showRowSelector) {\n                            _col = jQuery.extend({}, col, {\n                                width: cfg.rowSelectorColumnWidth,\n                                _width: cfg.rowSelectorColumnWidth,\n                                columnAttr: \"rowSelector\",\n                                label: \"\", key: \"__d-checkbox__\"\n                            });\n                            data.rows[i].cols.push(_col);\n                        }\n                    }\n                }\n\n                return data;\n            }.call(this, this.bodyGroupingTable);\n            this.leftBodyGroupingData = dividedBodyGroupingObj.leftData;\n            this.bodyGroupingData = dividedBodyGroupingObj.rightData;\n        }\n\n        this.leftFootSumData = {};\n        this.footSumData = {};\n        if (this.config.footSum) {\n            var dividedFootSumObj = GRID.util.divideTableByFrozenColumnIndex(this.footSumTable, this.xvar.frozenColumnIndex);\n            this.leftFootSumData = dividedFootSumObj.leftData;\n            this.footSumData = dividedFootSumObj.rightData;\n        }\n    };\n\n    var getFieldValue = function getFieldValue(_list, _item, _index, _col, _value, _returnPlainText) {\n        var _key = _col.key,\n            tagsToReplace = {\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        if (_key === \"__d-index__\") {\n            return typeof _item[\"__index\"] !== \"undefined\" ? _item[\"__index\"] + 1 : \"\";\n        } else if (_key === \"__d-checkbox__\") {\n            return '<div class=\"checkBox\"></div>';\n        } else {\n            if (_col.editor && function (_editor) {\n                if (_editor.type in GRID.inlineEditor) {\n                    return GRID.inlineEditor[_editor.type].editMode == \"inline\";\n                }\n                return false;\n            }(_col.editor)) {\n\n                _value = _value || GRID.data.getValue.call(this, _index, _key);\n\n                if (U.isFunction(_col.editor.disabled)) {\n                    if (_col.editor.disabled.call({\n                        list: _list,\n                        dindex: _index,\n                        item: _list[_index],\n                        key: _key,\n                        value: _value\n                    })) {\n                        return _value;\n                    }\n                }\n\n                // print editor\n                return _returnPlainText ? _value : GRID.inlineEditor[_col.editor.type].getHtml(this, _col.editor, _value);\n            }\n            if (_col.formatter) {\n                var that = {\n                    key: _key,\n                    value: _value || GRID.data.getValue.call(this, _index, _key),\n                    dindex: _index,\n                    item: _item,\n                    list: _list\n                };\n                if (U.isFunction(_col.formatter)) {\n                    return _col.formatter.call(that);\n                } else {\n                    return GRID.formatter[_col.formatter].call(that);\n                }\n            } else {\n                var returnValue = \"\";\n\n                if (typeof _value !== \"undefined\") {\n                    returnValue = _value;\n                } else {\n                    _value = GRID.data.getValue.call(this, _index, _key);\n                    if (_value !== null && typeof _value !== \"undefined\") returnValue = _value;\n                }\n\n                return typeof returnValue === \"number\" ? returnValue : returnValue.replace(/[<>]/g, function (tag) {\n                    return tagsToReplace[tag] || tag;\n                });\n            }\n        }\n    };\n\n    var getGroupingValue = function getGroupingValue(_item, _index, _col) {\n        var value,\n            that,\n            _key = _col.key,\n            _label = _col.label;\n\n        if (typeof _key === \"undefined\") {\n            that = {\n                key: _key,\n                list: _item.__groupingList,\n                groupBy: _item.__groupingBy\n            };\n            if (U.isFunction(_label)) {\n                value = _label.call(that);\n            } else {\n                value = _label;\n            }\n            _item[_col.colIndex] = value;\n            return value;\n        } else if (_key === \"__d-index__\") {\n            return '';\n        } else if (_key === \"__d-checkbox__\") {\n            return '';\n        } else {\n            if (_col.collector) {\n                that = {\n                    key: _key,\n                    list: _item.__groupingList\n                };\n                if (U.isFunction(_col.collector)) {\n                    value = _col.collector.call(that);\n                } else {\n                    value = GRID.collector[_col.collector].call(that);\n                }\n                _item[_col.colIndex] = value;\n\n                if (_col.formatter) {\n                    that.value = value;\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                } else {\n                    return value;\n                }\n            } else {\n                return \"&nbsp;\";\n            }\n        }\n    };\n\n    var getSumFieldValue = function getSumFieldValue(_list, _col) {\n        var _key = _col.key,\n            _label = _col.label;\n        //, _collector, _formatter\n        if (typeof _key === \"undefined\") {\n            return _label;\n        } else if (_key === \"__d-index__\" || _key === \"__d-checkbox__\") {\n            return '&nbsp;';\n        } else {\n            if (_col.collector) {\n                var that = {\n                    key: _key,\n                    list: _list\n                };\n                var value;\n                if (U.isFunction(_col.collector)) {\n                    value = _col.collector.call(that);\n                } else {\n                    value = GRID.collector[_col.collector].call(that);\n                }\n\n                if (_col.formatter) {\n                    that.value = value;\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                } else {\n                    return value;\n                }\n            } else {\n                return \"&nbsp;\";\n            }\n        }\n    };\n\n    var repaint = function repaint(_reset) {\n        var cfg = this.config,\n            list = this.list;\n\n        /// repaint reset 타입이면 고정컬럼을 재조정\n        if (_reset) {\n            resetFrozenColumn.call(this);\n            // 틀고정 이 변경되면 출력 시작 인덱스 값을 초기화\n            this.xvar.paintStartRowIndex = undefined;\n        }\n\n        /// 출력시작 인덱스\n        var paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex;\n        if (this.xvar.dataRowCount === list.length && this.xvar.paintStartRowIndex === paintStartRowIndex) return this; // 스크롤 포지션 변경 여부에 따라 프로세스 진행여부 결정\n\n        var isFirstPaint = typeof this.xvar.paintStartRowIndex === \"undefined\",\n            asideBodyRowData = this.asideBodyRowData,\n            leftBodyRowData = this.leftBodyRowData,\n            bodyRowData = this.bodyRowData,\n            leftFootSumData = this.leftFootSumData,\n            footSumData = this.footSumData,\n            asideBodyGroupingData = this.asideBodyGroupingData,\n            leftBodyGroupingData = this.leftBodyGroupingData,\n            bodyGroupingData = this.bodyGroupingData,\n            bodyAlign = cfg.body.align,\n            paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1;\n\n        if (document.addEventListener && ax5.info.supportTouch) {\n            paintRowCount = paintRowCount * 2;\n        }\n\n        /// 스크롤 컨텐츠의 높이 : 그리드 스크롤의 실제 크기와는 관계 없이 데이터 갯수에 따라 스크롤 컨텐츠 높이값 구해서 저장해두기.\n        this.xvar.scrollContentHeight = this.xvar.bodyTrHeight * (this.list.length - this.xvar.frozenRowIndex);\n        /// 사용된 패널들의 키 모음\n        this.$.livePanelKeys = [];\n\n        // 그리드 바디 영역 페인트 함수\n        var repaintBody = function repaintBody(_elTargetKey, _colGroup, _bodyRow, _groupRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n\n            if (!isFirstPaint && !_scrollConfig) {\n                this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n                return false;\n            }\n\n            var SS = [],\n                cgi = void 0,\n                cgl = void 0,\n                di = void 0,\n                dl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                cellHeight = void 0,\n                colAlign = void 0,\n                isScrolled = function () {\n                // 스크롤값이 변경되거나 처음 호출되었습니까?\n                if (typeof _scrollConfig === \"undefined\" || typeof _scrollConfig['paintStartRowIndex'] === \"undefined\") {\n                    _scrollConfig = {\n                        paintStartRowIndex: 0,\n                        paintRowCount: _list.length\n                    };\n                    return false;\n                } else {\n                    return true;\n                }\n            }();\n\n            if (isScrolled) {\n                SS.push('<div style=\"font-size:0;line-height:0;height: ' + (_scrollConfig.paintStartRowIndex - this.xvar.frozenRowIndex) * _scrollConfig.bodyTrHeight + 'px;\"></div>');\n            }\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (di = _scrollConfig.paintStartRowIndex, dl = function () {\n                var len = void 0;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            }(); di < dl; di++) {\n\n                var isGroupingRow = false,\n                    rowTable = void 0;\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    rowTable = _groupRow;\n                    isGroupingRow = true;\n                } else {\n                    rowTable = _bodyRow;\n                }\n\n                for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n\n                    SS.push('<tr class=\"tr-' + di % 4 + '\"', isGroupingRow ? ' data-ax5grid-grouping-tr=\"true\"' : '', ' data-ax5grid-tr-data-index=\"' + di + '\"', ' data-ax5grid-selected=\"' + (_list[di][cfg.columnKeys.selected] || \"false\") + '\"', ' data-ax5grid-disable-selection=\"' + (_list[di][cfg.columnKeys.disableSelection] || \"false\") + '\"', '>');\n                    for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                        col = rowTable.rows[tri].cols[ci];\n                        cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                        colAlign = col.align || bodyAlign;\n\n                        SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                            var attrs = \"\";\n                            if (_focusedColumn) {\n                                attrs += 'data-ax5grid-column-focused=\"true\" ';\n                            }\n                            if (_selectedColumn) {\n                                attrs += 'data-ax5grid-column-selected=\"true\" ';\n                            }\n                            return attrs;\n                        }(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                        column: _col,\n                                        key: _col.key,\n                                        item: _list[di],\n                                        index: di\n                                    }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                        SS.push(function (_cellHeight) {\n                            var lineHeight = cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth;\n                            if (!col.multiLine) {\n                                _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                            }\n\n                            return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n                        }(cellHeight), isGroupingRow ? getGroupingValue.call(this, _list[di], di, col) : getFieldValue.call(this, _list, _list[di], di, col), '</span>');\n\n                        SS.push('</td>');\n                    }\n                    SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-attr=\"' + \"default\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                    SS.push('</tr>');\n                }\n            }\n            SS.push('</table>');\n\n            if (isScrolled && _list.length) {\n                SS.push('<div style=\"font-size:0;line-height:0;height: ' + (_list.length - di) * _scrollConfig.bodyTrHeight + 'px;\"></div>');\n            }\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n\n            this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n            return true;\n        };\n        var repaintSum = function repaintSum(_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n\n            if (!isFirstPaint && !_scrollConfig) {\n                this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n                return false;\n            }\n\n            var SS = [],\n                cgi = void 0,\n                cgl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                cellHeight = void 0,\n                colAlign = void 0;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + tri + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                        var attrs = \"\";\n                        if (_focusedColumn) {\n                            attrs += 'data-ax5grid-column-focused=\"true\" ';\n                        }\n                        if (_selectedColumn) {\n                            attrs += 'data-ax5grid-column-selected=\"true\" ';\n                        }\n                        return attrs;\n                    }(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.styleClass) {\n                            if (U.isFunction(_col.styleClass)) {\n                                tdCSS_class += _col.styleClass.call({\n                                    column: _col,\n                                    key: _col.key,\n                                    isFootSum: true\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.styleClass + \" \";\n                            }\n                        }\n                        if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push(function (_cellHeight) {\n                        var lineHeight = cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth;\n                        if (!col.multiLine) {\n                            _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        }\n\n                        return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n                    }(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-column-attr=\"' + \"sum\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n            return true;\n        };\n        var scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            bodyTrHeight: this.xvar.bodyTrHeight\n        };\n\n        // aside\n        if (cfg.asidePanelWidth > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                repaintBody.call(this, \"top-aside-body\", this.asideColGroup, asideBodyRowData, asideBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n            }\n\n            repaintBody.call(this, \"aside-body-scroll\", this.asideColGroup, asideBodyRowData, asideBodyGroupingData, list, scrollConfig);\n\n            if (cfg.footSum) {\n                // 바닥 요약 (footSum에 대한 aside 사용안함)\n                //repaintSum.call(this, \"bottom-aside-body\", this.asideColGroup, asideBodyRowData, null, list);\n            }\n        }\n\n        // left\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                repaintBody.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n            }\n\n            repaintBody.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, leftBodyGroupingData, list, scrollConfig);\n\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, list);\n            }\n        }\n\n        // body\n        if (this.xvar.frozenRowIndex > 0) {\n            // 상단 행고정\n            repaintBody.call(this, \"top-body-scroll\", this.headerColGroup, bodyRowData, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n        }\n\n        repaintBody.call(this, \"body-scroll\", this.headerColGroup, bodyRowData, bodyGroupingData, list, scrollConfig);\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", this.headerColGroup, footSumData, list, scrollConfig);\n        }\n\n        //todo : repaintBody 에서 footSum 데이터 예외처리\n        // right\n        if (cfg.rightSum) {\n            // todo : right 표현 정리\n        }\n\n        this.xvar.paintStartRowIndex = paintStartRowIndex;\n        this.xvar.paintRowCount = paintRowCount;\n        this.xvar.dataRowCount = list.length;\n        this.needToPaintSum = false;\n        GRID.page.statusUpdate.call(this);\n    };\n\n    var repaintCell = function repaintCell(_panelName, _dindex, _rowIndex, _colIndex, _newValue) {\n        var self = this;\n        var cfg = this.config;\n        var list = this.list;\n\n        var updateCell = this.$[\"panel\"][_panelName].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + _rowIndex + '\"][data-ax5grid-column-colindex=\"' + _colIndex + '\"]').find('[data-ax5grid-cellholder]');\n        var colGroup = this.colGroup;\n        var col = colGroup[_colIndex];\n\n        updateCell.html(getFieldValue.call(this, list, list[_dindex], _dindex, col));\n\n        if (col.editor && col.editor.updateWith) {\n            col.editor.updateWith.forEach(function (updateColumnKey) {\n                colGroup.forEach(function (col) {\n                    if (col.key == updateColumnKey) {\n                        var rowIndex = col.rowIndex;\n                        var colIndex = col.colIndex;\n                        var panelName = GRID.util.findPanelByColumnIndex.call(self, _dindex, colIndex, rowIndex).panelName;\n                        var updateWithCell = self.$[\"panel\"][panelName].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + rowIndex + '\"][data-ax5grid-column-colindex=\"' + colIndex + '\"]').find('[data-ax5grid-cellholder]');\n                        updateWithCell.html(getFieldValue.call(self, list, list[_dindex], _dindex, col));\n                    }\n                });\n            });\n        }\n\n        /// ~~~~~~\n\n        var paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex;\n        var leftFootSumData = this.leftFootSumData;\n        var footSumData = this.footSumData;\n        var asideBodyGroupingData = this.asideBodyGroupingData;\n        var leftBodyGroupingData = this.leftBodyGroupingData;\n        var bodyGroupingData = this.bodyGroupingData;\n        var bodyAlign = cfg.body.align;\n        var paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1;\n        var scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            bodyTrHeight: this.xvar.bodyTrHeight\n        };\n\n        var repaintSum = function repaintSum(_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n\n            var SS = [];\n            var cgi, cgl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + tri + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                        var attrs = \"\";\n                        if (_focusedColumn) {\n                            attrs += 'data-ax5grid-column-focused=\"true\" ';\n                        }\n                        if (_selectedColumn) {\n                            attrs += 'data-ax5grid-column-selected=\"true\" ';\n                        }\n                        return attrs;\n                    }(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.styleClass) {\n                            if (U.isFunction(_col.styleClass)) {\n                                tdCSS_class += _col.styleClass.call({\n                                    column: _col,\n                                    key: _col.key,\n                                    isFootSum: true\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.styleClass + \" \";\n                            }\n                        }\n                        if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push(function (_cellHeight) {\n                        var lineHeight = cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth;\n                        if (!col.multiLine) {\n                            _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        }\n\n                        return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n                    }(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-column-attr=\"' + \"sum\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            return true;\n        };\n        var replaceGroupTr = function replaceGroupTr(_elTargetKey, _colGroup, _groupRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n            var SS = [];\n            var cgi, cgl;\n            var di, dl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n            for (di = _scrollConfig.paintStartRowIndex, dl = function () {\n                var len;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            }(); di < dl; di++) {\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    var rowTable = _groupRow;\n                    SS = [];\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                                var attrs = \"\";\n                                if (_focusedColumn) {\n                                    attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                }\n                                if (_selectedColumn) {\n                                    attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                }\n                                return attrs;\n                            }(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                                var tdCSS_class = \"\";\n                                if (_col.styleClass) {\n                                    if (U.isFunction(_col.styleClass)) {\n                                        tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            item: _list[di],\n                                            index: di\n                                        }) + \" \";\n                                    } else {\n                                        tdCSS_class += _col.styleClass + \" \";\n                                    }\n                                }\n                                if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                return tdCSS_class;\n                            }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push(function (_cellHeight) {\n                                var lineHeight = cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth;\n                                if (!col.multiLine) {\n                                    _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                }\n\n                                return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n                            }(cellHeight), getGroupingValue.call(this, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-attr=\"' + \"default\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                    }\n                    _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n                }\n            }\n        };\n\n        // body.grouping tr 다시 그리기..\n        if (cfg.body.grouping) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > 0) {\n                    // 상단 행고정\n                    replaceGroupTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), {\n                        paintStartRowIndex: 0,\n                        paintRowCount: this.xvar.frozenRowIndex,\n                        bodyTrHeight: this.xvar.bodyTrHeight\n                    });\n                }\n                replaceGroupTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyGroupingData, list, scrollConfig);\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                replaceGroupTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), {\n                    paintStartRowIndex: 0,\n                    paintRowCount: this.xvar.frozenRowIndex,\n                    bodyTrHeight: this.xvar.bodyTrHeight\n                });\n            }\n\n            replaceGroupTr.call(this, \"body-scroll\", this.headerColGroup, bodyGroupingData, list, scrollConfig);\n        }\n\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, list);\n            }\n        }\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", this.headerColGroup, footSumData, list, scrollConfig);\n        }\n    };\n\n    var repaintRow = function repaintRow(_dindex) {\n        var self = this,\n            cfg = this.config,\n            list = this.list;\n        /// ~~~~~~\n\n        var paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex;\n        var asideBodyRowData = this.asideBodyRowData;\n        var leftBodyRowData = this.leftBodyRowData;\n        var bodyRowData = this.bodyRowData;\n        var leftFootSumData = this.leftFootSumData;\n        var footSumData = this.footSumData;\n        var asideBodyGroupingData = this.asideBodyGroupingData;\n        var leftBodyGroupingData = this.leftBodyGroupingData;\n        var bodyGroupingData = this.bodyGroupingData;\n        var bodyAlign = cfg.body.align;\n        var paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1;\n        var scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            bodyTrHeight: this.xvar.bodyTrHeight\n        };\n\n        var repaintSum = function repaintSum(_elTargetKey, _colGroup, _bodyRow, _list) {\n            var _elTarget = this.$.panel[_elTargetKey];\n\n            var SS = [];\n            var cgi, cgl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + tri + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                        var attrs = \"\";\n                        if (_focusedColumn) {\n                            attrs += 'data-ax5grid-column-focused=\"true\" ';\n                        }\n                        if (_selectedColumn) {\n                            attrs += 'data-ax5grid-column-selected=\"true\" ';\n                        }\n                        return attrs;\n                    }(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.styleClass) {\n                            if (U.isFunction(_col.styleClass)) {\n                                tdCSS_class += _col.styleClass.call({\n                                    column: _col,\n                                    key: _col.key,\n                                    isFootSum: true\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.styleClass + \" \";\n                            }\n                        }\n                        if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push(function (_cellHeight) {\n                        var lineHeight = cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth;\n                        if (!col.multiLine) {\n                            _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        }\n\n                        return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n                    }(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-column-attr=\"' + \"sum\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            return true;\n        };\n        var replaceGroupTr = function replaceGroupTr(_elTargetKey, _colGroup, _groupRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n            var SS = [];\n            var cgi, cgl;\n            var di, dl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n            for (di = _scrollConfig.paintStartRowIndex, dl = function () {\n                var len;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            }(); di < dl; di++) {\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    var rowTable = _groupRow;\n                    SS = [];\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                                var attrs = \"\";\n                                if (_focusedColumn) {\n                                    attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                }\n                                if (_selectedColumn) {\n                                    attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                }\n                                return attrs;\n                            }(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                                var tdCSS_class = \"\";\n                                if (_col.styleClass) {\n                                    if (U.isFunction(_col.styleClass)) {\n                                        tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            item: _list[di],\n                                            index: di\n                                        }) + \" \";\n                                    } else {\n                                        tdCSS_class += _col.styleClass + \" \";\n                                    }\n                                }\n                                if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                return tdCSS_class;\n                            }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push(function (_cellHeight) {\n                                var lineHeight = cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth;\n                                if (!col.multiLine) {\n                                    _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                }\n\n                                return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n                            }(cellHeight), getGroupingValue.call(this, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-attr=\"' + \"default\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                    }\n                    _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n                }\n            }\n        };\n        var replaceTr = function replaceTr(_elTargetKey, _colGroup, _bodyRow, _list, di) {\n            var _elTarget = this.$.panel[_elTargetKey];\n            var SS = [];\n            var cgi, cgl;\n            var di, dl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n            var rowTable = _bodyRow;\n            for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                    col = rowTable.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                        var attrs = \"\";\n                        if (_focusedColumn) {\n                            attrs += 'data-ax5grid-column-focused=\"true\" ';\n                        }\n                        if (_selectedColumn) {\n                            attrs += 'data-ax5grid-column-selected=\"true\" ';\n                        }\n                        return attrs;\n                    }(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.styleClass) {\n                            if (U.isFunction(_col.styleClass)) {\n                                tdCSS_class += _col.styleClass.call({\n                                    column: _col,\n                                    key: _col.key,\n                                    item: _list[di],\n                                    index: di\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.styleClass + \" \";\n                            }\n                        }\n                        if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push(function (_cellHeight) {\n                        var lineHeight = cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth;\n                        if (!col.multiLine) {\n                            _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        }\n\n                        return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n                    }(cellHeight), getFieldValue.call(this, _list, _list[di], di, col), '</span>');\n                    SS.push('</td>');\n                }\n                SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-attr=\"' + \"default\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n            }\n\n            //_elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').html(SS.join(''));\n            _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n        };\n\n        // left\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                replaceTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, list, _dindex);\n            }\n            replaceTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, list, _dindex);\n        }\n\n        // body\n        if (this.xvar.frozenRowIndex > 0) {\n            // 상단 행고정\n            replaceTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyRowData, list, _dindex);\n        }\n\n        replaceTr.call(this, \"body-scroll\", this.headerColGroup, bodyRowData, list, _dindex);\n\n        // body.grouping tr 다시 그리기..\n        if (cfg.body.grouping) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > 0) {\n                    // 상단 행고정\n                    replaceGroupTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n                }\n                replaceGroupTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyGroupingData, list, scrollConfig);\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                replaceGroupTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n            }\n\n            replaceGroupTr.call(this, \"body-scroll\", this.headerColGroup, bodyGroupingData, list, scrollConfig);\n        }\n\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, list);\n            }\n        }\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", this.headerColGroup, footSumData, list, scrollConfig);\n        }\n    };\n\n    var scrollTo = function scrollTo(css, noRepaint) {\n        var cfg = this.config;\n\n        if (this.isInlineEditing) {\n            for (var key in this.inlineEditing) {\n                //if(this.inlineEditing[key].editor.type === \"select\") {}\n                // 인라인 에디팅 인데 스크롤 이벤트가 발생하면 디액티브 처리\n                GRID.body.inlineEdit.deActive.call(this, \"ESC\", key);\n            }\n        }\n\n        if (cfg.asidePanelWidth > 0 && \"top\" in css) {\n            this.$.panel[\"aside-body-scroll\"].css({ top: css.top });\n        }\n        if (this.xvar.frozenColumnIndex > 0 && \"top\" in css) {\n            this.$.panel[\"left-body-scroll\"].css({ top: css.top });\n        }\n        if (this.xvar.frozenRowIndex > 0 && \"left\" in css) {\n            this.$.panel[\"top-body-scroll\"].css({ left: css.left });\n        }\n\n        this.$.panel[\"body-scroll\"].css(css);\n\n        if (cfg.footSum && \"left\" in css) {\n            this.$.panel[\"bottom-body-scroll\"].css({ left: css.left });\n        }\n\n        if (!noRepaint && \"top\" in css) {\n            repaint.call(this);\n        } else {}\n    };\n\n    var blur = function blur() {\n        columnSelect.focusClear.call(this);\n        columnSelect.clear.call(this);\n        if (this.isInlineEditing) {\n            inlineEdit.deActive.call(this);\n        }\n    };\n\n    var moveFocus = function moveFocus(_position) {\n        var focus = {\n            \"UD\": function UD(_dy) {\n                var moveResult = true,\n                    focusedColumn = void 0,\n                    originalColumn = void 0,\n                    while_i = void 0;\n\n                for (var c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n\n                if (!focusedColumn) return false;\n\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dy > 0) {\n                    if (focusedColumn.rowIndex + (originalColumn.rowspan - 1) + _dy > this.bodyRowTable.rows.length - 1) {\n                        focusedColumn.dindex = focusedColumn.dindex + _dy;\n                        focusedColumn.rowIndex = 0;\n                        if (focusedColumn.dindex > this.list.length - 1) {\n                            focusedColumn.dindex = this.list.length - 1;\n                            moveResult = false;\n                        }\n                    } else {\n                        focusedColumn.rowIndex = focusedColumn.rowIndex + _dy;\n                    }\n                } else {\n                    if (focusedColumn.rowIndex + _dy < 0) {\n                        focusedColumn.dindex = focusedColumn.dindex + _dy;\n                        focusedColumn.rowIndex = this.bodyRowTable.rows.length - 1;\n                        if (focusedColumn.dindex < 0) {\n                            focusedColumn.dindex = 0;\n                            moveResult = false;\n                        }\n                    } else {\n                        focusedColumn.rowIndex = focusedColumn.rowIndex + _dy;\n                    }\n                }\n\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    if (focusedColumn.rowIndex == 0 || while_i % 2 == (_dy > 0 ? 0 : 1)) {\n                        focusedColumn.colIndex--;\n                    } else {\n                        focusedColumn.rowIndex--;\n                    }\n\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        moveResult = false;\n                        break;\n                    }\n                    while_i++;\n                }\n\n                var nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리.\n                (function () {\n                    if (focusedColumn.dindex + 1 > this.xvar.frozenRowIndex) {\n                        if (focusedColumn.dindex <= this.xvar.paintStartRowIndex) {\n                            scrollTo.call(this, { top: -(focusedColumn.dindex - this.xvar.frozenRowIndex) * this.xvar.bodyTrHeight });\n                            GRID.scroller.resize.call(this);\n                        } else if (focusedColumn.dindex + 1 > this.xvar.paintStartRowIndex + (this.xvar.paintRowCount - 2)) {\n                            scrollTo.call(this, { top: -(focusedColumn.dindex - this.xvar.frozenRowIndex - this.xvar.paintRowCount + 3) * this.xvar.bodyTrHeight });\n                            GRID.scroller.resize.call(this);\n                        }\n                    }\n                }).call(this);\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n                this.$.panel[focusedColumn.panelName].find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').attr('data-ax5grid-column-focused', \"true\");\n\n                return moveResult;\n            },\n            \"LR\": function LR(_dx) {\n                var moveResult = true;\n                var focusedColumn;\n                var originalColumn;\n                var while_i = 0;\n                var isScrollPanel = false;\n                var containerPanelName = \"\";\n\n                for (var c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n                if (!focusedColumn) return false;\n\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dx < 0) {\n                    focusedColumn.colIndex = focusedColumn.colIndex + _dx;\n                    if (focusedColumn.colIndex < 0) {\n                        focusedColumn.colIndex = 0;\n                        moveResult = false;\n                    }\n                } else {\n                    focusedColumn.colIndex = focusedColumn.colIndex + (originalColumn.colspan - 1) + _dx;\n                    if (focusedColumn.colIndex > this.colGroup.length - 1) {\n                        focusedColumn.colIndex = this.colGroup.length - 1;\n                        moveResult = false;\n                    }\n                }\n\n                if (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    focusedColumn.rowIndex = 0;\n                }\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    focusedColumn.colIndex--;\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        moveResult = false;\n                        break;\n                    }\n                    while_i++;\n                }\n\n                var nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n\n                focusedColumn.panelName = nPanelInfo.panelName;\n                containerPanelName = nPanelInfo.containerPanelName;\n                isScrollPanel = nPanelInfo.isScrollPanel;\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n\n                var $column = this.$.panel[focusedColumn.panelName].find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').attr('data-ax5grid-column-focused', \"true\");\n\n                if ($column && isScrollPanel) {\n                    // 스크롤 패널 이라면~\n                    var newLeft = function () {\n                        if ($column.position().left + $column.outerWidth() > Math.abs(this.$.panel[focusedColumn.panelName].position().left) + this.$.panel[containerPanelName].width()) {\n                            return $column.position().left + $column.outerWidth() - this.$.panel[containerPanelName].width();\n                        } else if (Math.abs(this.$.panel[focusedColumn.panelName].position().left) > $column.position().left) {\n                            return $column.position().left;\n                        } else {\n                            return;\n                        }\n                    }.call(this);\n\n                    //console.log(newLeft);\n\n                    if (typeof newLeft !== \"undefined\") {\n                        GRID.header.scrollTo.call(this, { left: -newLeft });\n                        scrollTo.call(this, { left: -newLeft });\n                        GRID.scroller.resize.call(this);\n                    }\n                }\n\n                return moveResult;\n            },\n            \"INDEX\": function INDEX(_dindex) {\n                var moveResult = true;\n                var focusedColumn;\n                var originalColumn;\n                var while_i;\n\n                for (var c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n                if (!focusedColumn) {\n                    focusedColumn = {\n                        rowIndex: 0,\n                        colIndex: 0\n                    };\n                }\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dindex == \"end\") {\n                    _dindex = this.list.length - 1;\n                }\n\n                focusedColumn.dindex = _dindex;\n                focusedColumn.rowIndex = 0;\n\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    if (focusedColumn.rowIndex == 0 || while_i % 2 == (_dy > 0 ? 0 : 1)) {\n                        focusedColumn.colIndex--;\n                    } else {\n                        focusedColumn.rowIndex--;\n                    }\n\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        break;\n                    }\n                    while_i++;\n                }\n\n                var nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리.\n                (function () {\n                    if (focusedColumn.dindex + 1 > this.xvar.frozenRowIndex) {\n                        if (focusedColumn.dindex < this.xvar.paintStartRowIndex) {\n                            scrollTo.call(this, { top: -(focusedColumn.dindex - this.xvar.frozenRowIndex) * this.xvar.bodyTrHeight });\n                            GRID.scroller.resize.call(this);\n                        } else if (focusedColumn.dindex + 1 > this.xvar.paintStartRowIndex + (this.xvar.paintRowCount - 2)) {\n                            scrollTo.call(this, { top: -(focusedColumn.dindex - this.xvar.frozenRowIndex - this.xvar.paintRowCount + 3) * this.xvar.bodyTrHeight });\n                            GRID.scroller.resize.call(this);\n                        }\n                    }\n                }).call(this);\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n                this.$.panel[focusedColumn.panelName].find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').attr('data-ax5grid-column-focused', \"true\");\n\n                return moveResult;\n            }\n        };\n\n        var processor = {\n            \"UP\": function UP() {\n                return focus[\"UD\"].call(this, -1);\n            },\n            \"DOWN\": function DOWN() {\n                return focus[\"UD\"].call(this, 1);\n            },\n            \"LEFT\": function LEFT() {\n                return focus[\"LR\"].call(this, -1);\n            },\n            \"RIGHT\": function RIGHT() {\n                return focus[\"LR\"].call(this, 1);\n            },\n            \"HOME\": function HOME() {\n                return focus[\"INDEX\"].call(this, 0);\n            },\n            \"END\": function END() {\n                return focus[\"INDEX\"].call(this, \"end\");\n            },\n            \"position\": function position(_position) {\n                return focus[\"INDEX\"].call(this, _position);\n            }\n        };\n\n        if (_position in processor) {\n            return processor[_position].call(this);\n        } else {\n            return processor[\"position\"].call(this, _position);\n        }\n    };\n\n    var inlineEdit = {\n        active: function active(_focusedColumn, _e, _initValue) {\n            var self = this,\n                dindex,\n                colIndex,\n                rowIndex,\n                panelName,\n                colspan,\n                col,\n                editor;\n\n            // this.inlineEditing = {};\n            for (var key in _focusedColumn) {\n                panelName = _focusedColumn[key].panelName;\n                dindex = _focusedColumn[key].dindex;\n                colIndex = _focusedColumn[key].colIndex;\n                rowIndex = _focusedColumn[key].rowIndex;\n                colspan = _focusedColumn[key].colspan;\n\n                // 인라인 에디팅을 멈춰야 하는 경우 조건\n                col = this.colGroup[colIndex];\n                if (!(editor = col.editor)) return this;\n\n                // editor disabled 체크\n                if (U.isFunction(editor.disabled)) {\n                    if (editor.disabled.call({\n                        list: this.list,\n                        dindex: dindex,\n                        item: this.list[dindex],\n                        key: col.key,\n                        value: _initValue\n                    })) {\n                        return this;\n                    }\n                }\n\n                // 조건에 맞지 않는 에디팅 타입이면 반응 없음.\n                if (!function (_editor, _type) {\n                    if (_editor.type in GRID.inlineEditor) {\n                        return GRID.inlineEditor[_editor.type].editMode == \"popup\";\n                    }\n                }(editor)) {\n                    // 체크 박스 타입이면 값 변경 시도\n                    if (editor.type == \"checkbox\") {\n                        var checked, newValue;\n                        if (editor.config && editor.config.trueValue) {\n                            if (checked = !(_initValue == editor.config.trueValue)) {\n                                newValue = editor.config.trueValue;\n                            } else {\n                                newValue = editor.config.falseValue;\n                            }\n                        } else {\n                            newValue = checked = _initValue == false || _initValue == \"false\" || _initValue < \"1\" ? \"true\" : \"false\";\n                        }\n\n                        GRID.data.setValue.call(self, dindex, col.key, newValue);\n                        updateRowState.call(self, [\"cellChecked\"], dindex, {\n                            key: col.key, rowIndex: rowIndex, colIndex: colIndex,\n                            editorConfig: col.editor.config, checked: checked\n                        });\n                    }\n                    return this;\n                }\n\n                if (this.list[dindex].__isGrouping) {\n                    return false;\n                }\n                if (key in this.inlineEditing) {\n                    return false;\n                }\n                this.inlineEditing[key] = {\n                    editor: editor,\n                    panelName: panelName,\n                    columnKey: key,\n                    column: _focusedColumn[key],\n                    useReturnToSave: GRID.inlineEditor[editor.type].useReturnToSave\n                };\n                this.isInlineEditing = true;\n            }\n            if (this.isInlineEditing) {\n\n                var originalValue = GRID.data.getValue.call(self, dindex, col.key);\n                var initValue = function (__value, __editor) {\n                    if (U.isNothing(__value)) {\n                        __value = U.isNothing(originalValue) ? \"\" : originalValue;\n                    }\n\n                    if (__editor.type == \"money\") {\n                        return U.number(__value, { \"money\": true });\n                    } else {\n                        return __value;\n                    }\n                }.call(this, _initValue, editor);\n\n                this.inlineEditing[key].$inlineEditorCell = this.$[\"panel\"][panelName].find('[data-ax5grid-tr-data-index=\"' + dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + rowIndex + '\"][data-ax5grid-column-colindex=\"' + colIndex + '\"]').find('[data-ax5grid-cellholder]');\n\n                this.inlineEditing[key].$inlineEditor = GRID.inlineEditor[editor.type].init(this, key, editor, this.inlineEditing[key].$inlineEditorCell, initValue);\n\n                return true;\n            }\n        },\n        deActive: function deActive(_msg, _key, _value) {\n            // console.log(this.inlineEditing.column.dindex, this.inlineEditing.$inlineEditor.val());\n            if (!this.inlineEditing[_key]) return this;\n\n            var panelName = this.inlineEditing[_key].panelName;\n            var dindex = this.inlineEditing[_key].column.dindex;\n            var rowIndex = this.inlineEditing[_key].column.rowIndex;\n            var colIndex = this.inlineEditing[_key].column.colIndex;\n\n            var column = this.bodyRowMap[this.inlineEditing[_key].column.rowIndex + \"_\" + this.inlineEditing[_key].column.colIndex];\n            var editorValue = function ($inlineEditor) {\n                if (typeof _value === \"undefined\") {\n                    if ($inlineEditor.get(0).tagName == \"SELECT\" || $inlineEditor.get(0).tagName == \"INPUT\" || $inlineEditor.get(0).tagName == \"TEXTAREA\") {\n                        return $inlineEditor.val();\n                    } else {\n                        _msg = \"CANCEL\";\n                        return false;\n                    }\n                } else {\n                    return _value;\n                }\n            }(this.inlineEditing[_key].$inlineEditor);\n\n            var newValue = function (__value, __editor) {\n                if (__editor.type == \"money\") {\n                    return U.number(__value);\n                } else {\n                    return __value;\n                }\n            }.call(this, editorValue, column.editor);\n\n            var action = {\n                \"CANCEL\": function CANCEL(_dindex, _column, _newValue) {\n                    action[\"__clear\"].call(this);\n                },\n                \"RETURN\": function RETURN(_dindex, _column, _newValue) {\n                    if (GRID.data.setValue.call(this, _dindex, _column.key, _newValue)) {\n                        action[\"__clear\"].call(this);\n                        GRID.body.repaintCell.call(this, panelName, dindex, rowIndex, colIndex, _newValue);\n                    } else {\n                        action[\"__clear\"].call(this);\n                    }\n                },\n                \"__clear\": function __clear() {\n                    this.isInlineEditing = false;\n                    var bindedAx5ui = this.inlineEditing[_key].$inlineEditor.data(\"binded-ax5ui\");\n                    if (bindedAx5ui == \"ax5picker\") {\n                        this.inlineEditing[_key].$inlineEditor.ax5picker(\"close\");\n                    } else if (bindedAx5ui == \"ax5select\") {\n                        this.inlineEditing[_key].$inlineEditor.ax5select(\"close\");\n                    }\n\n                    this.inlineEditing[_key].$inlineEditor.remove();\n                    this.inlineEditing[_key].$inlineEditor = null;\n                    this.inlineEditing[_key].$inlineEditorCell = null;\n                    this.inlineEditing[_key] = undefined;\n                    delete this.inlineEditing[_key]; // delete 지원안하는 브라우저 테스트..\n                }\n            };\n\n            if (_msg in action) {\n                action[_msg || \"RETURN\"].call(this, dindex, column, newValue);\n            } else {\n                action[\"__clear\"].call(this);\n            }\n        },\n        keydown: function keydown(key, columnKey, _options) {\n            var processor = {\n                \"ESC\": function ESC() {\n                    for (var columnKey in this.inlineEditing) {\n                        inlineEdit.deActive.call(this, \"CANCEL\", columnKey);\n                    }\n                },\n                \"RETURN\": function RETURN() {\n                    if (this.isInlineEditing) {\n                        if (this.inlineEditing[columnKey] && this.inlineEditing[columnKey].useReturnToSave) {\n                            // todo : 네이밍 검증 할 필요있음.\n                            inlineEdit.deActive.call(this, \"RETURN\", columnKey);\n                        }\n                    } else {\n\n                        for (var k in this.focusedColumn) {\n                            var _column = this.focusedColumn[k];\n                            var column = this.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                            var dindex = _column.dindex;\n                            var value = \"\";\n                            if (column) {\n                                if (!this.list[dindex].__isGrouping) {\n                                    value = GRID.data.getValue.call(this, dindex, column.key);\n                                }\n                            }\n\n                            var col = this.colGroup[_column.colIndex];\n\n                            if (GRID.inlineEditor[col.editor.type].editMode === \"inline\") {\n                                if (_options && _options.moveFocus) {} else {\n                                    if (column.editor && column.editor.type == \"checkbox\") {\n\n                                        value = GRID.data.getValue.call(this, dindex, column.key);\n\n                                        var checked, newValue;\n                                        if (column.editor.config && column.editor.config.trueValue) {\n                                            if (checked = !(value == column.editor.config.trueValue)) {\n                                                newValue = column.editor.config.trueValue;\n                                            } else {\n                                                newValue = column.editor.config.falseValue;\n                                            }\n                                        } else {\n                                            newValue = checked = value == false || value == \"false\" || value < \"1\" ? \"true\" : \"false\";\n                                        }\n\n                                        GRID.data.setValue.call(this, _column.dindex, column.key, newValue);\n                                        updateRowState.call(this, [\"cellChecked\"], dindex, {\n                                            key: column.key, rowIndex: _column.rowIndex, colIndex: _column.colIndex,\n                                            editorConfig: column.editor.config, checked: checked\n                                        });\n                                    }\n                                }\n                            } else {\n                                GRID.body.inlineEdit.active.call(this, this.focusedColumn, null, value);\n                            }\n                        }\n                    }\n                }\n            };\n\n            if (key in processor) {\n                processor[key].call(this, key, columnKey, _options);\n            }\n        }\n    };\n\n    var getExcelString = function getExcelString() {\n        var cfg = this.config,\n            list = this.list,\n            bodyRowData = this.bodyRowTable,\n            footSumData = this.footSumTable,\n            bodyGroupingData = this.bodyGroupingTable;\n\n        // body-scroll 의 포지션에 의존적이므로..\n        var getBody = function getBody(_colGroup, _bodyRow, _groupRow, _list) {\n            var SS = [],\n                di = void 0,\n                dl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0;\n\n            //SS.push('<table border=\"1\">');\n            for (di = 0, dl = _list.length; di < dl; di++) {\n                var isGroupingRow = false,\n                    rowTable = void 0;\n\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    rowTable = _groupRow;\n                    isGroupingRow = true;\n                } else {\n                    rowTable = _bodyRow;\n                }\n\n                for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                    SS.push('\\n<tr>');\n                    for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                        col = rowTable.rows[tri].cols[ci];\n\n                        SS.push('<td ', 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', '>', isGroupingRow ? getGroupingValue.call(this, _list[di], di, col) : getFieldValue.call(this, _list, _list[di], di, col, undefined, \"text\"), '</td>');\n                    }\n                    SS.push('\\n</tr>');\n                }\n            }\n            //SS.push('</table>');\n            return SS.join('');\n        };\n        var getSum = function getSum(_colGroup, _bodyRow, _list) {\n            var SS = [],\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0;\n\n            //SS.push('<table border=\"1\">');\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('\\n<tr>');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    SS.push('<td ', 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', '>', getSumFieldValue.call(this, _list, col), '</td>');\n                }\n                SS.push('\\n</tr>');\n            }\n            //SS.push('</table>');\n\n            return SS.join('');\n        };\n\n        var po = [];\n        po.push(getBody.call(this, this.headerColGroup, bodyRowData, bodyGroupingData, list));\n        if (cfg.footSum) {\n            // 바닥 요약\n            po.push(getSum.call(this, this.headerColGroup, footSumData, list));\n        }\n\n        // right\n        if (cfg.rightSum) {\n            // todo : right 표현 정리\n        }\n\n        return po.join('');\n    };\n\n    GRID.body = {\n        init: init,\n        repaint: repaint,\n        repaintCell: repaintCell,\n        repaintRow: repaintRow,\n        updateRowState: updateRowState,\n        updateRowStateAll: updateRowStateAll,\n        scrollTo: scrollTo,\n        blur: blur,\n        moveFocus: moveFocus,\n        inlineEdit: inlineEdit,\n        getExcelString: getExcelString\n    };\n})();\n\n// ax5.ui.grid.collector\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n    var sum = function sum() {\n        var value = 0;\n        var i = this.list.length;\n        while (i--) {\n            if (!(\"__groupingList\" in this.list[i])) {\n                value += U.number(this.list[i][this.key]);\n            }\n        }\n        return value;\n    };\n    var avg = function avg() {\n        var value = 0;\n        var i = this.list.length,\n            listLength = 0;\n        while (i--) {\n            if (!(\"__groupingList\" in this.list[i])) {\n                value += U.number(this.list[i][this.key]);\n                listLength++;\n            }\n        }\n        return U.number(value / (listLength || 1), { \"round\": 2 });\n    };\n\n    GRID.collector = {\n        sum: sum,\n        avg: avg\n    };\n})();\n// ax5.ui.grid.layout\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var init = function init() {};\n\n    var clearGroupingData = function clearGroupingData(_list) {\n        var i = 0,\n            l = _list.length;\n        var returnList = [];\n        for (; i < l; i++) {\n            if (_list[i] && !_list[i][\"__isGrouping\"]) {\n                if (_list[i][this.config.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(i);\n                }\n                returnList.push(jQuery.extend({}, _list[i]));\n            }\n        }\n        return returnList;\n    };\n\n    var initData = function initData(_list) {\n        this.selectedDataIndexs = [];\n        var i = 0,\n            l = _list.length,\n            returnList = [],\n            appendIndex = 0,\n            dataRealRowCount = 0;\n\n        if (this.config.body.grouping) {\n            var groupingKeys = U.map(this.bodyGrouping.by, function () {\n                return {\n                    key: this,\n                    compareString: \"\",\n                    grouping: false,\n                    list: []\n                };\n            });\n            var gi = 0,\n                gl = groupingKeys.length,\n                compareString = void 0,\n                appendRow = [],\n                ari = void 0;\n            for (; i < l + 1; i++) {\n                gi = 0;\n                if (_list[i] && _list[i][this.config.columnKeys.deleted]) {\n                    this.deletedList.push(_list[i]);\n                } else {\n                    compareString = \"\";\n                    appendRow = [];\n                    for (; gi < gl; gi++) {\n                        if (_list[i]) {\n                            compareString += \"$|$\" + _list[i][groupingKeys[gi].key];\n                        }\n                        if (appendIndex > 0 && compareString != groupingKeys[gi].compareString) {\n                            var appendRowItem = { keys: [], labels: [], list: groupingKeys[gi].list };\n                            for (var ki = 0; ki < gi + 1; ki++) {\n                                appendRowItem.keys.push(groupingKeys[ki].key);\n                                appendRowItem.labels.push(_list[i - 1][groupingKeys[ki].key]);\n                            }\n                            appendRow.push(appendRowItem);\n                            groupingKeys[gi].list = [];\n                        }\n                        groupingKeys[gi].list.push(_list[i]);\n                        groupingKeys[gi].compareString = compareString;\n                    }\n\n                    ari = appendRow.length;\n                    while (ari--) {\n                        returnList.push({ __isGrouping: true, __groupingList: appendRow[ari].list, __groupingBy: { keys: appendRow[ari].keys, labels: appendRow[ari].labels } });\n                    }\n\n                    if (_list[i]) {\n                        if (_list[i][this.config.columnKeys.selected]) {\n                            this.selectedDataIndexs.push(i);\n                        }\n                        dataRealRowCount = _list[i][\"__index\"] = i;\n                        returnList.push(_list[i]);\n                        appendIndex++;\n                    }\n                }\n            }\n        } else {\n            for (; i < l; i++) {\n                if (_list[i] && _list[i][this.config.columnKeys.deleted]) {\n                    this.deletedList.push(_list[i]);\n                } else if (_list[i]) {\n                    if (_list[i][this.config.columnKeys.selected]) {\n                        this.selectedDataIndexs.push(i);\n                    }\n                    // __index변수를 추가하여 lineNumber 에 출력합니다. (body getFieldValue 에서 출력함)\n                    _list[i][\"__index\"] = i;\n                    dataRealRowCount++;\n                    returnList.push(_list[i]);\n                }\n            }\n        }\n\n        // 원본 데이터의 갯수\n        // grouping은 제외하고 수집됨.\n        this.xvar.dataRealRowCount = dataRealRowCount;\n        return returnList;\n    };\n\n    var set = function set(data) {\n        var self = this;\n\n        if (U.isArray(data)) {\n            this.page = null;\n            this.list = initData.call(this, !this.config.remoteSort && Object.keys(this.sortInfo).length ? sort.call(this, this.sortInfo, data) : data);\n            this.deletedList = [];\n        } else if (\"page\" in data) {\n            this.page = jQuery.extend({}, data.page);\n            this.list = initData.call(this, !this.config.remoteSort && Object.keys(this.sortInfo).length ? sort.call(this, this.sortInfo, data.list) : data.list);\n            this.deletedList = [];\n        }\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n\n        if (this.config.body.grouping) {}\n        return this;\n    };\n\n    var get = function get(_type) {\n        return {\n            list: this.list,\n            page: this.page\n        };\n    };\n\n    var getList = function getList(_type) {\n        var returnList = [];\n        var i = 0,\n            l = this.list.length;\n        switch (_type) {\n            case \"modified\":\n                for (; i < l; i++) {\n                    if (this.list[i] && !this.list[i][\"__isGrouping\"] && this.list[i][this.config.columnKeys.modified]) {\n                        returnList.push(jQuery.extend({}, this.list[i]));\n                    }\n                }\n                break;\n            case \"selected\":\n                for (; i < l; i++) {\n                    if (this.list[i] && !this.list[i][\"__isGrouping\"] && this.list[i][this.config.columnKeys.selected]) {\n                        returnList.push(jQuery.extend({}, this.list[i]));\n                    }\n                }\n                break;\n            case \"deleted\":\n                //_list = GRID.data.clearGroupingData(this.list);\n                returnList = [].concat(this.deletedList);\n                break;\n            default:\n                returnList = GRID.data.clearGroupingData.call(this, this.list);\n        }\n        return returnList;\n    };\n\n    var add = function add(_row, _dindex, _options) {\n        var list = this.config.body.grouping ? clearGroupingData.call(this, this.list) : this.list;\n        var processor = {\n            \"first\": function first() {\n                list = [].concat(_row).concat(list);\n            },\n            \"last\": function last() {\n                list = list.concat([].concat(_row));\n            }\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n        if (_dindex in processor) {\n            _row[this.config.columnKeys.modified] = true;\n            processor[_dindex].call(this, _row);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            //\n            list = list.splice(_dindex, [].concat(_row));\n        }\n\n        if (this.config.body.grouping) {\n            list = initData.call(this, sort.call(this, this.sortInfo, list));\n        } else if (_options && _options.sort && Object.keys(this.sortInfo).length) {\n            list = sort.call(this, this.sortInfo, list);\n        }\n\n        this.list = list;\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    /**\n     * list에서 완전 제거 하는 경우 사용.\n     * ax5grid.data.remove\n     */\n    var remove = function remove(_dindex) {\n        var list = this.config.body.grouping ? clearGroupingData.call(this, this.list) : this.list;\n        var processor = {\n            \"first\": function first() {\n                list.splice(_dindex, 1);\n            },\n            \"last\": function last() {\n                var lastIndex = list.length - 1;\n                list.splice(lastIndex, 1);\n            }\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n        if (_dindex in processor) {\n            processor[_dindex].call(this, _dindex);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            //\n            list.splice(_dindex, 1);\n        }\n\n        if (this.config.body.grouping) {\n            list = initData.call(this, sort.call(this, this.sortInfo, list));\n        } else if (Object.keys(this.sortInfo).length) {\n            list = initData.call(this, sort.call(this, this.sortInfo, list));\n        } else {\n            list = initData.call(this, list);\n        }\n\n        this.list = list;\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    /**\n     * list에서 deleted 처리 repaint\n     * ax5grid.data.deleteRow\n     */\n    var deleteRow = function deleteRow(_dindex) {\n        var list = this.config.body.grouping ? clearGroupingData.call(this, this.list) : this.list;\n        var processor = {\n            \"first\": function first() {\n                list[0][this.config.columnKeys.deleted] = true;\n            },\n            \"last\": function last() {\n                list[list.length - 1][this.config.columnKeys.deleted] = true;\n            },\n            \"selected\": function selected() {\n                var i = list.length;\n                while (i--) {\n                    if (list[i][this.config.columnKeys.selected]) {\n                        list[i][this.config.columnKeys.deleted] = true;\n                    }\n                }\n            }\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n        if (_dindex in processor) {\n            processor[_dindex].call(this, _dindex);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            list[_dindex][this.config.columnKeys.deleted] = true;\n        }\n\n        if (this.config.body.grouping) {\n            list = initData.call(this, sort.call(this, this.sortInfo, list));\n        } else if (Object.keys(this.sortInfo).length) {\n            list = initData.call(this, sort.call(this, this.sortInfo, list));\n        } else {\n            list = initData.call(this, list);\n        }\n\n        this.list = list;\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    var update = function update(_row, _dindex) {\n        if (!U.isNumber(_dindex)) {\n            throw 'invalid argument _dindex';\n        }\n        //\n        this.needToPaintSum = true;\n        this.list.splice(_dindex, 1, _row);\n\n        if (this.config.body.grouping) {\n            this.list = initData.call(this, clearGroupingData.call(this, this.list));\n        }\n    };\n\n    var setValue = function setValue(_dindex, _key, _value) {\n        var originalValue = getValue.call(this, _dindex, _key);\n        this.needToPaintSum = true;\n\n        if (originalValue !== _value) {\n            if (/[\\.\\[\\]]/.test(_key)) {\n                try {\n                    this.list[_dindex][this.config.columnKeys.modified] = true;\n                    Function(\"val\", \"this\" + GRID.util.getRealPathForDataItem(_key) + \" = val;\").call(this.list[_dindex], _value);\n                } catch (e) {}\n            } else {\n                this.list[_dindex][this.config.columnKeys.modified] = true;\n                this.list[_dindex][_key] = _value;\n            }\n\n            if (this.onDataChanged) {\n                this.onDataChanged.call({\n                    self: this,\n                    list: this.list,\n                    dindex: _dindex,\n                    item: this.list[_dindex],\n                    key: _key,\n                    value: _value\n                });\n            }\n        }\n\n        return true;\n    };\n\n    var getValue = function getValue(_dindex, _key, _value) {\n        if (/[\\.\\[\\]]/.test(_key)) {\n            try {\n                _value = Function(\"\", \"return this\" + GRID.util.getRealPathForDataItem(_key) + \";\").call(this.list[_dindex]);\n            } catch (e) {}\n        } else {\n            _value = this.list[_dindex][_key];\n        }\n        return _value;\n    };\n\n    var clearSelect = function clearSelect() {\n        this.selectedDataIndexs = [];\n    };\n\n    var select = function select(_dindex, _selected, _options) {\n        var cfg = this.config;\n\n        if (this.list[_dindex].__isGrouping) return false;\n        if (this.list[_dindex][cfg.columnKeys.disableSelection]) return false;\n\n        if (typeof _selected === \"undefined\") {\n            if (this.list[_dindex][cfg.columnKeys.selected] = !this.list[_dindex][cfg.columnKeys.selected]) {\n                this.selectedDataIndexs.push(_dindex);\n            }\n        } else {\n            if (this.list[_dindex][cfg.columnKeys.selected] = _selected) {\n                this.selectedDataIndexs.push(_dindex);\n            }\n        }\n\n        if (this.onDataChanged && _options && _options.internalCall) {\n            this.onDataChanged.call({\n                self: this,\n                list: this.list,\n                dindex: _dindex,\n                item: this.list[_dindex],\n                key: cfg.columnKeys.selected,\n                value: this.list[_dindex][cfg.columnKeys.selected]\n            });\n        }\n\n        return this.list[_dindex][cfg.columnKeys.selected];\n    };\n\n    var selectAll = function selectAll(_selected, _options) {\n        var cfg = this.config,\n            dindex = this.list.length;\n\n        if (typeof _selected === \"undefined\") {\n            while (dindex--) {\n                if (this.list[dindex].__isGrouping) continue;\n                if (_options && _options.filter) {\n                    if (_options.filter.call(this.list[dindex]) !== true) {\n                        continue;\n                    }\n                }\n                if (this.list[dindex][cfg.columnKeys.disableSelection]) continue;\n\n                if (this.list[dindex][cfg.columnKeys.selected] = !this.list[dindex][cfg.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(dindex);\n                }\n            }\n        } else {\n            while (dindex--) {\n                if (this.list[dindex].__isGrouping) continue;\n                if (_options && _options.filter) {\n                    if (_options.filter.call(this.list[dindex]) !== true) {\n                        continue;\n                    }\n                }\n                if (this.list[dindex][cfg.columnKeys.disableSelection]) continue;\n\n                if (this.list[dindex][cfg.columnKeys.selected] = _selected) {\n                    this.selectedDataIndexs.push(dindex);\n                }\n            }\n        }\n\n        if (this.onDataChanged && _options && _options.internalCall) {\n            this.onDataChanged.call({\n                self: this,\n                list: this.list\n            });\n        }\n\n        return this.list;\n    };\n\n    var sort = function sort(_sortInfo, _list) {\n        var self = this,\n            list = _list || this.list,\n            sortInfoArray = [];\n        var getKeyValue = function getKeyValue(_item, _key, _value) {\n            if (/[\\.\\[\\]]/.test(_key)) {\n                try {\n                    _value = Function(\"\", \"return this\" + GRID.util.getRealPathForDataItem(_key) + \";\").call(_item);\n                } catch (e) {}\n            } else {\n                _value = _item[_key];\n            }\n            return _value;\n        };\n\n        for (var k in _sortInfo) {\n            sortInfoArray[_sortInfo[k].seq] = { key: k, order: _sortInfo[k].orderBy };\n        }\n        sortInfoArray = U.filter(sortInfoArray, function () {\n            return typeof this !== \"undefined\";\n        });\n\n        var i = 0,\n            l = sortInfoArray.length,\n            _a_val = void 0,\n            _b_val = void 0;\n\n        list.sort(function (_a, _b) {\n            for (i = 0; i < l; i++) {\n                _a_val = getKeyValue(_a, sortInfoArray[i].key);\n                _b_val = getKeyValue(_b, sortInfoArray[i].key);\n\n                if ((typeof _a_val === 'undefined' ? 'undefined' : _typeof(_a_val)) !== (typeof _b_val === 'undefined' ? 'undefined' : _typeof(_b_val))) {\n                    _a_val = '' + _a_val;\n                    _b_val = '' + _b_val;\n                }\n                if (_a_val < _b_val) {\n                    return sortInfoArray[i].order === \"asc\" ? -1 : 1;\n                } else if (_a_val > _b_val) {\n                    return sortInfoArray[i].order === \"asc\" ? 1 : -1;\n                }\n            }\n        });\n\n        if (_list) {\n            return list;\n        } else {\n            this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n            this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n            GRID.page.navigationUpdate.call(this);\n            return this;\n        }\n    };\n\n    GRID.data = {\n        init: init,\n        set: set,\n        get: get,\n        getList: getList,\n        setValue: setValue,\n        getValue: getValue,\n        clearSelect: clearSelect,\n        select: select,\n        selectAll: selectAll,\n        add: add,\n        remove: remove,\n        deleteRow: deleteRow,\n        update: update,\n        sort: sort,\n        initData: initData,\n        clearGroupingData: clearGroupingData\n    };\n})();\n/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.grid.excel\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var base64 = function base64(s) {\n        return window.btoa(unescape(encodeURIComponent(s)));\n    };\n    var uri = \"data:application/vnd.ms-excel;base64,\";\n\n    var getExcelTmpl = function getExcelTmpl() {\n        return '\\uFEFF\\n{{#tables}}{{{body}}}{{/tables}}\\n';\n    };\n\n    var tableToExcel = function tableToExcel(table, fileName) {\n        var link, a, output;\n        var tables = [].concat(table);\n\n        output = ax5.mustache.render(getExcelTmpl(), {\n            worksheet: function () {\n                var arr = [];\n                tables.forEach(function (t, ti) {\n                    arr.push({ name: \"Sheet\" + (ti + 1) });\n                });\n                return arr;\n            }(),\n            tables: function () {\n                var arr = [];\n                tables.forEach(function (t, ti) {\n                    arr.push({ body: t });\n                });\n                return arr;\n            }()\n        });\n\n        var isChrome = navigator.userAgent.indexOf(\"Chrome\") > -1;\n        var isSafari = !isChrome && navigator.userAgent.indexOf(\"Safari\") > -1;\n\n        var isIE = /*@cc_on!@*/false || !!document.documentMode; // this works with IE10 and IE11 both :)\n        if (navigator.msSaveOrOpenBlob) {\n            var blob1 = new Blob([output], { type: \"text/html\" });\n            window.navigator.msSaveOrOpenBlob(blob1, fileName);\n        } else if (isSafari) {\n            // 사파리는 지원이 안되므로 그냥 테이블을 클립보드에 복사처리\n            //tables\n            var blankWindow = window.open('about:blank', this.id + '-excel-export', 'width=600,height=400');\n            blankWindow.document.write(output);\n            blankWindow = null;\n        } else {\n            if (isIE && typeof Blob === \"undefined\") {\n\n                //otherwise use the iframe and save\n                //requires a blank iframe on page called txtArea1\n                var $iframe = jQuery('<iframe id=\"' + this.id + '-excel-export\" style=\"display:none\"></iframe>');\n                jQuery(document.body).append($iframe);\n                var iframe = window[this.id + '-excel-export'];\n                iframe.document.open(\"text/html\", \"replace\");\n                iframe.document.write(output);\n                iframe.document.close();\n                iframe.focus();\n                iframe.document.execCommand(\"SaveAs\", true, fileName);\n                $iframe.remove();\n            } else {\n                // Attempt to use an alternative method\n                var anchor = document.body.appendChild(document.createElement(\"a\"));\n\n                // If the [download] attribute is supported, try to use it\n                if (\"download\" in anchor) {\n                    anchor.download = fileName;\n                    //anchor.href = URL.createObjectURL( blob );\n                    anchor.href = uri + base64(output);\n                    anchor.click();\n                    document.body.removeChild(anchor);\n                }\n            }\n        }\n\n        return true;\n    };\n\n    GRID.excel = {\n        export: tableToExcel\n    };\n})();\n// ax5.ui.grid.formatter\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n    var money = function money() {\n        return U.number(this.value, { \"money\": true });\n    };\n\n    GRID.formatter = {\n        money: money\n    };\n})();\n// ax5.ui.grid.header\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var columnResizerEvent = {\n        \"on\": function on(_columnResizer, _colIndex) {\n            var self = this;\n            var $columnResizer = $(_columnResizer);\n            var columnResizerPositionLeft = $columnResizer.offset().left;\n            var gridTargetOffsetLeft = self.$[\"container\"][\"root\"].offset().left;\n            self.xvar.columnResizerIndex = _colIndex;\n            var resizeRange = {\n                min: -self.colGroup[_colIndex]._width + 2,\n                max: self.colGroup[_colIndex + 1] ? self.colGroup[_colIndex + 1]._width : self.$[\"container\"][\"root\"].width() - 2\n            };\n            //console.log(resizeRange);\n\n            jQuery(document.body).bind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                var mouseObj = GRID.util.getMousePosition(e);\n                self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n\n                if (resizeRange.min > self.xvar.__da) {\n                    self.xvar.__da = resizeRange.min;\n                } else if (resizeRange.max < self.xvar.__da) {\n                    self.xvar.__da = resizeRange.max;\n                }\n\n                if (!self.xvar.columnResizerLived) {\n                    self.$[\"resizer\"][\"horizontal\"].addClass(\"live\");\n                }\n                self.xvar.columnResizerLived = true;\n                self.$[\"resizer\"][\"horizontal\"].css({\n                    left: columnResizerPositionLeft + self.xvar.__da - gridTargetOffsetLeft\n                });\n            }).bind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                columnResizerEvent.off.call(self);\n                U.stopEvent(e);\n            }).bind(\"mouseleave.ax5grid-\" + this.instanceId, function (e) {\n                columnResizerEvent.off.call(self);\n                U.stopEvent(e);\n            });\n\n            jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n        },\n        \"off\": function off() {\n            this.$[\"resizer\"][\"horizontal\"].removeClass(\"live\");\n            this.xvar.columnResizerLived = false;\n\n            if (typeof this.xvar.__da === \"undefined\") {} else {\n                this.setColumnWidth(this.colGroup[this.xvar.columnResizerIndex]._width + this.xvar.__da, this.xvar.columnResizerIndex);\n            }\n\n            jQuery(document.body).unbind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId).unbind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId).unbind(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n        }\n    };\n\n    var init = function init() {\n        // 헤더 초기화\n        var self = this;\n\n        this.$[\"container\"][\"header\"].on(\"click\", '[data-ax5grid-column-attr]', function (e) {\n            var key = this.getAttribute(\"data-ax5grid-column-key\"),\n                colIndex = this.getAttribute(\"data-ax5grid-column-colindex\"),\n                rowIndex = this.getAttribute(\"data-ax5grid-column-rowindex\"),\n                col = self.colGroup[colIndex];\n\n            if (key === \"__checkbox_header__\") {\n                var selected = this.getAttribute(\"data-ax5grid-selected\");\n                selected = U.isNothing(selected) ? true : selected === \"true\" ? false : true;\n\n                $(this).attr(\"data-ax5grid-selected\", selected);\n                self.selectAll({ selected: selected });\n            } else {\n                if (key && col) {\n                    if ((col.sortable === true || self.config.sortable === true) && col.sortable !== false) {\n                        if (!col.sortFixed) toggleSort.call(self, col.key);\n                    }\n                }\n            }\n\n            GRID.body.blur.call(self);\n        });\n        this.$[\"container\"][\"header\"].on(\"mousedown\", '[data-ax5grid-column-resizer]', function (e) {\n            var colIndex = this.getAttribute(\"data-ax5grid-column-resizer\");\n            self.xvar.mousePosition = GRID.util.getMousePosition(e);\n            columnResizerEvent.on.call(self, this, Number(colIndex));\n            U.stopEvent(e);\n        }).on(\"dragstart\", function (e) {\n            U.stopEvent(e);\n            return false;\n        });\n\n        resetFrozenColumn.call(this);\n    };\n\n    var resetFrozenColumn = function resetFrozenColumn() {\n        var cfg = this.config,\n            dividedHeaderObj = GRID.util.divideTableByFrozenColumnIndex(this.headerTable, this.config.frozenColumnIndex);\n        this.asideHeaderData = function (dataTable) {\n            var colGroup = [];\n            var data = { rows: [] };\n            for (var i = 0, l = dataTable.rows.length; i < l; i++) {\n                data.rows[i] = { cols: [] };\n                if (i === 0) {\n                    var col = {\n                        label: \"\",\n                        colspan: 1,\n                        rowspan: dataTable.rows.length,\n                        colIndex: null\n                    },\n                        _col = {};\n\n                    if (cfg.showLineNumber) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.lineNumberColumnWidth,\n                            _width: cfg.lineNumberColumnWidth,\n                            columnAttr: \"lineNumber\",\n                            key: \"__index_header__\", label: \"&nbsp;\"\n                        });\n                        colGroup.push(_col);\n                        data.rows[i].cols.push(_col);\n                    }\n                    if (cfg.showRowSelector) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.rowSelectorColumnWidth,\n                            _width: cfg.rowSelectorColumnWidth,\n                            columnAttr: \"rowSelector\",\n                            key: \"__checkbox_header__\", label: \"\"\n                        });\n                        colGroup.push(_col);\n                        data.rows[i].cols.push(_col);\n                    }\n                }\n            }\n\n            this.asideColGroup = colGroup;\n            return data;\n        }.call(this, this.headerTable);\n        this.leftHeaderData = dividedHeaderObj.leftData;\n        this.headerData = dividedHeaderObj.rightData;\n    };\n\n    var getFieldValue = function getFieldValue(_col) {\n        var cfg = this.config,\n            colGroup = this.colGroup,\n            _key = _col.key,\n            tagsToReplace = {\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        if (_key === \"__checkbox_header__\") {\n            return '<div class=\"checkBox\"></div>';\n        } else {\n            return _col.label || \"&nbsp;\";\n        }\n    };\n\n    var repaint = function repaint(_reset) {\n        var cfg = this.config,\n            colGroup = this.colGroup;\n\n        if (_reset) {\n            resetFrozenColumn.call(this);\n            this.xvar.paintStartRowIndex = undefined;\n        }\n        var asideHeaderData = this.asideHeaderData,\n            leftHeaderData = this.leftHeaderData,\n            headerData = this.headerData,\n            headerAlign = cfg.header.align;\n\n        // this.asideColGroup : asideHeaderData에서 처리 함.\n        this.leftHeaderColGroup = colGroup.slice(0, this.config.frozenColumnIndex);\n        this.headerColGroup = colGroup.slice(this.config.frozenColumnIndex);\n\n        var repaintHeader = function repaintHeader(_elTarget, _colGroup, _bodyRow) {\n            var tableWidth = 0,\n                SS = [];\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n                tableWidth += _colGroup[cgi]._width;\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                var trCSS_class = \"\";\n                SS.push('<tr class=\"' + trCSS_class + '\">');\n                for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    var col = _bodyRow.rows[tri].cols[ci];\n                    var cellHeight = cfg.header.columnHeight * col.rowspan - cfg.header.columnBorderWidth;\n                    var colAlign = headerAlign || col.align;\n                    SS.push('<td ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', function () {\n                        return typeof col.key !== \"undefined\" ? 'data-ax5grid-column-key=\"' + col.key + '\" ' : '';\n                    }(), 'data-ax5grid-column-colindex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-rowindex=\"' + col.rowIndex + '\" ', 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.styleClass) {\n                            if (U.isFunction(_col.styleClass)) {\n                                tdCSS_class += _col.styleClass.call({\n                                    column: _col,\n                                    key: _col.key\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.styleClass + \" \";\n                            }\n                        }\n                        if (cfg.header.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push(function () {\n                        var lineHeight = cfg.header.columnHeight - cfg.header.columnPadding * 2 - cfg.header.columnBorderWidth;\n                        return '<span data-ax5grid-cellHolder=\"\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + ' style=\"height: ' + (cfg.header.columnHeight - cfg.header.columnBorderWidth) + 'px;line-height: ' + lineHeight + 'px;\">';\n                    }(), function () {\n                        var _SS = \"\";\n\n                        if (!U.isNothing(col.key) && !U.isNothing(col.colIndex) && (cfg.sortable === true || col.sortable === true) && col.sortable !== false) {\n                            _SS += '<span data-ax5grid-column-sort=\"' + col.colIndex + '\" data-ax5grid-column-sort-order=\"' + (colGroup[col.colIndex].sort || \"\") + '\" />';\n                        }\n                        return _SS;\n                    }(), getFieldValue.call(this, col), '</span>');\n\n                    if (!U.isNothing(col.colIndex)) {\n                        if (cfg.enableFilter) {\n                            SS.push('<span data-ax5grid-column-filter=\"' + col.colIndex + '\" data-ax5grid-column-filter-value=\"\"  />');\n                        }\n                    }\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'style=\"height: ' + cfg.header.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                SS.push('</tr>');\n            }\n            SS.push('</table>');\n            _elTarget.html(SS.join(''));\n\n            /// append column-resizer\n            (function () {\n                var resizerHeight = cfg.header.columnHeight * _bodyRow.rows.length - cfg.header.columnBorderWidth,\n                    resizerLeft = 0,\n                    AS = [];\n\n                for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                    var col = _colGroup[cgi];\n                    if (!U.isNothing(col.colIndex)) {\n                        //_colGroup[cgi]._width\n                        resizerLeft += col._width;\n                        AS.push('<div data-ax5grid-column-resizer=\"' + col.colIndex + '\" style=\"height:' + resizerHeight + 'px;left: ' + (resizerLeft - 4) + 'px;\"  />');\n                    }\n                }\n                _elTarget.append(AS);\n            }).call(this);\n\n            return tableWidth;\n        };\n\n        if (cfg.asidePanelWidth > 0) {\n            repaintHeader.call(this, this.$.panel[\"aside-header\"], this.asideColGroup, asideHeaderData);\n        }\n        if (cfg.frozenColumnIndex > 0) {\n            repaintHeader.call(this, this.$.panel[\"left-header\"], this.leftHeaderColGroup, leftHeaderData);\n        }\n        this.xvar.scrollContentWidth = repaintHeader.call(this, this.$.panel[\"header-scroll\"], this.headerColGroup, headerData);\n\n        if (cfg.rightSum) {}\n    };\n\n    var scrollTo = function scrollTo(css) {\n        this.$.panel[\"header-scroll\"].css(css);\n        return this;\n    };\n\n    var toggleSort = function toggleSort(_key) {\n        var sortOrder = \"\",\n            sortInfo = {},\n            seq = 0;\n\n        for (var k in this.sortInfo) {\n            if (this.sortInfo[k].fixed) {\n                sortInfo[k] = this.sortInfo[k];\n                seq++;\n            }\n        }\n\n        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n            if (this.colGroup[i].key == _key) {\n                if (sortOrder == \"\") {\n                    if (typeof this.colGroup[i].sort === \"undefined\") {\n                        sortOrder = \"desc\";\n                    } else if (this.colGroup[i].sort === \"desc\") {\n                        sortOrder = \"asc\";\n                    } else {\n                        sortOrder = undefined;\n                    }\n                }\n                this.colGroup[i].sort = sortOrder;\n            } else if (!this.config.multiSort) {\n                this.colGroup[i].sort = undefined;\n            }\n\n            if (typeof this.colGroup[i].sort !== \"undefined\") {\n                if (!sortInfo[this.colGroup[i].key]) {\n                    sortInfo[this.colGroup[i].key] = {\n                        seq: seq++,\n                        orderBy: this.colGroup[i].sort\n                    };\n                }\n            }\n        }\n\n        this.setColumnSort(sortInfo);\n        return this;\n    };\n\n    var applySortStatus = function applySortStatus(_sortInfo) {\n        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n            for (var _key in _sortInfo) {\n                if (this.colGroup[i].key == _key) {\n                    this.colGroup[i].sort = _sortInfo[_key].orderBy;\n                }\n            }\n        }\n        return this;\n    };\n\n    var select = function select(_options) {\n        GRID.data.select.call(this, dindex, _options && _options.selected);\n        GRID.body.updateRowState.call(this, [\"selected\"], dindex);\n    };\n\n    var getExcelString = function getExcelString() {\n        var cfg = this.config,\n            colGroup = this.colGroup,\n            headerData = this.headerTable,\n            getHeader = function getHeader(_colGroup, _bodyRow) {\n            var SS = [];\n            //SS.push('<table border=\"1\">');\n            for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr>');\n                for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    var col = _bodyRow.rows[tri].cols[ci];\n                    SS.push('<td ', 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', '>', getFieldValue.call(this, col), '</td>');\n                }\n                SS.push('</tr>');\n            }\n            //SS.push('</table>');\n\n            return SS.join('');\n        };\n\n        return getHeader.call(this, colGroup, headerData);\n    };\n\n    GRID.header = {\n        init: init,\n        repaint: repaint,\n        scrollTo: scrollTo,\n        toggleSort: toggleSort,\n        applySortStatus: applySortStatus,\n        getExcelString: getExcelString\n    };\n})();\n// ax5.ui.grid.inlineEditor\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var edit_text = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"text\" value=\"' + _value + '\" >';\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.focus().select();\n        }\n    };\n\n    var edit_money = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"money\" value=\"' + _value + '\" >';\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.data(\"binded-ax5ui\", \"ax5formater\");\n            _$el.ax5formatter({\n                pattern: \"money\"\n            });\n            _$el.focus().select();\n        }\n    };\n\n    var edit_number = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"number\" value=\"' + _value + '\" >';\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.data(\"binded-ax5ui\", \"ax5formater\");\n            _$el.ax5formatter({\n                pattern: \"number\"\n            });\n            _$el.focus().select();\n        }\n    };\n\n    var edit_date = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"calendar\" value=\"' + _value + '\" >';\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            var self = _root;\n            _$el.data(\"binded-ax5ui\", \"ax5picker\");\n            _$el.ax5picker({\n                direction: \"auto\",\n                content: {\n                    type: 'date',\n                    formatter: {\n                        pattern: 'date'\n                    }\n                },\n                onStateChanged: function onStateChanged() {\n                    if (this.state == \"open\") {\n                        this.self.activePicker.attr(\"data-ax5grid-inline-edit-picker\", \"date\");\n                    } else if (this.state == \"close\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"RETURN\", _columnKey);\n                    }\n                }\n            });\n            _$el.focus().select();\n        }\n    };\n\n    var edit_select = {\n        useReturnToSave: false,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            var po = [];\n            po.push('<div data-ax5select=\"ax5grid-editor\" data-ax5select-config=\"{}\">');\n            po.push('</div>');\n\n            return po.join('');\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            var eConfig = {\n                columnKeys: {\n                    optionValue: \"value\",\n                    optionText: \"text\",\n                    optionSelected: \"selected\"\n                }\n            };\n            jQuery.extend(true, eConfig, _editor.config);\n\n            eConfig.options.forEach(function (n) {\n                if (n[eConfig.columnKeys.optionValue] == _value) n[eConfig.columnKeys.optionSelected] = true;\n            });\n\n            var self = _root;\n            _$el.data(\"binded-ax5ui\", \"ax5select\");\n            _$el.ax5select({\n                direction: \"auto\",\n                columnKeys: eConfig.columnKeys,\n                options: eConfig.options,\n                onStateChanged: function onStateChanged() {\n                    if (this.state == \"open\") {\n                        this.self.activeSelectOptionGroup.attr(\"data-ax5grid-inline-edit-picker\", \"select\");\n                    } else if (this.state == \"changeValue\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"RETURN\", _columnKey, this.value[0][eConfig.columnKeys.optionValue]);\n                    } else if (this.state == \"close\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"ESC\", _columnKey);\n                    }\n                }\n            });\n            _$el.ax5select(\"open\");\n            _$el.ax5select(\"setValue\", _value);\n            _$el.find(\"a\").focus();\n        }\n    };\n\n    var edit_checkbox = {\n        editMode: \"inline\",\n        getHtml: function getHtml(_root, _editor, _value) {\n\n            var lineHeight = _root.config.body.columnHeight - _root.config.body.columnPadding * 2 - _root.config.body.columnBorderWidth;\n            var checked;\n            if (_editor.config && _editor.config.trueValue) {\n                checked = _value == _editor.config.trueValue ? \"true\" : \"false\";\n            } else {\n                checked = _value == false || _value == \"false\" || _value < \"1\" ? \"false\" : \"true\";\n            }\n\n            var eConfig = {\n                marginTop: 2,\n                height: lineHeight - 4\n            };\n            jQuery.extend(true, eConfig, _editor.config);\n            eConfig.marginTop = (lineHeight - eConfig.height) / 2;\n\n            return '<div data-ax5grid-editor=\"checkbox\" data-ax5grid-checked=\"' + checked + '\" style=\"height:' + eConfig.height + 'px;width:' + eConfig.height + 'px;margin-top:' + eConfig.marginTop + 'px;\"></div>';\n        }\n    };\n\n    GRID.inlineEditor = {\n        \"text\": edit_text,\n        \"money\": edit_money,\n        \"number\": edit_number,\n        \"date\": edit_date,\n        \"select\": edit_select,\n        \"checkbox\": edit_checkbox\n    };\n})();\n// ax5.ui.grid.page\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var onclickPageMove = function onclickPageMove(_act) {\n        var callback = function callback(_pageNo) {\n            if (this.page.currentPage != _pageNo) {\n                this.page.selectPage = _pageNo;\n                if (this.config.page.onChange) {\n                    this.config.page.onChange.call({\n                        self: this,\n                        page: this.page,\n                        data: this.data\n                    });\n                }\n            }\n        };\n        var processor = {\n            \"first\": function first() {\n                callback.call(this, 0);\n            },\n            \"prev\": function prev() {\n                var pageNo = this.page.currentPage - 1;\n                if (pageNo < 0) pageNo = 0;\n                callback.call(this, pageNo);\n            },\n            \"next\": function next() {\n                var pageNo = this.page.currentPage + 1;\n                if (pageNo > this.page.totalPages - 1) pageNo = this.page.totalPages - 1;\n                callback.call(this, pageNo);\n            },\n            \"last\": function last() {\n                callback.call(this, this.page.totalPages - 1);\n            }\n        };\n\n        if (_act in processor) {\n            processor[_act].call(this);\n        } else {\n            callback.call(this, _act - 1);\n        }\n    };\n\n    var navigationUpdate = function navigationUpdate() {\n        var self = this;\n        if (this.page) {\n            var page = {\n                hasPage: false,\n                currentPage: this.page.currentPage,\n                pageSize: this.page.pageSize,\n                totalElements: this.page.totalElements,\n                totalPages: this.page.totalPages,\n                firstIcon: this.config.page.firstIcon,\n                prevIcon: this.config.page.prevIcon || \"«\",\n                nextIcon: this.config.page.nextIcon || \"»\",\n                lastIcon: this.config.page.lastIcon\n            };\n            var navigationItemCount = this.config.page.navigationItemCount;\n\n            page[\"@paging\"] = function () {\n                var returns = [];\n\n                var startI = page.currentPage - Math.floor(navigationItemCount / 2);\n                if (startI < 0) startI = 0;\n                var endI = page.currentPage + navigationItemCount;\n                if (endI > page.totalPages) endI = page.totalPages;\n\n                if (endI - startI > navigationItemCount) {\n                    endI = startI + navigationItemCount;\n                }\n\n                if (endI - startI < navigationItemCount) {\n                    startI = endI - navigationItemCount;\n                }\n                if (startI < 0) startI = 0;\n\n                for (var p = startI, l = endI; p < l; p++) {\n                    returns.push({ 'pageNo': p + 1, 'selected': page.currentPage == p });\n                }\n                return returns;\n            }();\n\n            if (page[\"@paging\"].length > 0) {\n                page.hasPage = true;\n            }\n\n            this.$[\"page\"][\"navigation\"].html(GRID.tmpl.get(\"page_navigation\", page));\n            this.$[\"page\"][\"navigation\"].find(\"[data-ax5grid-page-move]\").on(\"click\", function () {\n                var act = this.getAttribute(\"data-ax5grid-page-move\");\n                onclickPageMove.call(self, act);\n            });\n        } else {\n            this.$[\"page\"][\"navigation\"].empty();\n        }\n    };\n\n    var statusUpdate = function statusUpdate() {\n        var fromRowIndex = this.xvar.paintStartRowIndex;\n        var toRowIndex = this.xvar.paintStartRowIndex + this.xvar.paintRowCount - 1;\n        //var totalElements = (this.page && this.page.totalElements) ? this.page.totalElements : this.xvar.dataRowCount;\n        var totalElements = this.xvar.dataRowCount;\n        if (toRowIndex > totalElements) {\n            toRowIndex = totalElements;\n        }\n\n        this.$[\"page\"][\"status\"].html(GRID.tmpl.get(\"page_status\", {\n            fromRowIndex: U.number(fromRowIndex + 1, { \"money\": true }),\n            toRowIndex: U.number(toRowIndex, { \"money\": true }),\n            totalElements: U.number(totalElements, { \"money\": true }),\n            dataRowCount: totalElements !== this.xvar.dataRealRowCount ? U.number(this.xvar.dataRealRowCount, { \"money\": true }) : false\n        }));\n    };\n\n    GRID.page = {\n        navigationUpdate: navigationUpdate,\n        statusUpdate: statusUpdate\n    };\n})();\n// ax5.ui.grid.scroller\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var convertScrollPosition = {\n        \"vertical\": function vertical(css, _var) {\n            var _content_height = _var._content_height - _var._panel_height;\n            var _scroller_height = _var._vertical_scroller_height - _var.verticalScrollBarHeight;\n            var top = _content_height * css.top / _scroller_height;\n            if (top < 0) top = 0;else if (_content_height < top) {\n                top = _content_height;\n            }\n            return {\n                top: -top\n            };\n        },\n        \"horizontal\": function horizontal(css, _var) {\n            var _content_width = _var._content_width - _var._panel_width;\n            var _scroller_width = _var._horizontal_scroller_width - _var.horizontalScrollBarWidth;\n            var left = _content_width * css.left / _scroller_width;\n            if (left < 0) left = 0;else if (_content_width < left) {\n                left = _content_width;\n            }\n            return {\n                left: -left\n            };\n        }\n    };\n    var convertScrollBarPosition = {\n        \"vertical\": function vertical(_top, _var) {\n\n            var type = \"vertical\";\n            var _content_height = _var._content_height - _var._panel_height;\n            var _scroller_height = _var._vertical_scroller_height - _var.verticalScrollBarHeight;\n            var top = _scroller_height * _top / _content_height;\n\n            if (-top > _scroller_height) {\n                top = -_scroller_height;\n\n                var scrollPositon = convertScrollPosition[type].call(this, { top: -top }, {\n                    _content_width: _var._content_width,\n                    _content_height: _var._content_height,\n                    _panel_width: _var._panel_width,\n                    _panel_height: _var._panel_height,\n                    _horizontal_scroller_width: _var._horizontal_scroller_width,\n                    _vertical_scroller_height: _var._vertical_scroller_height,\n                    verticalScrollBarHeight: _var.verticalScrollBarHeight,\n                    horizontalScrollBarWidth: _var.horizontalScrollBarWidth\n                });\n\n                GRID.body.scrollTo.call(this, scrollPositon);\n            }\n\n            return -top;\n        },\n        \"horizontal\": function horizontal(_left, _var) {\n            var type = \"horizontal\";\n            var _content_width = _var._content_width - _var._panel_width;\n            var _scroller_width = _var._horizontal_scroller_width - _var.horizontalScrollBarWidth;\n            var left = _scroller_width * _left / _content_width;\n\n            if (-left > _scroller_width) {\n                left = -_scroller_width;\n                var scrollPositon = convertScrollPosition[type].call(this, { left: -left }, {\n                    _content_width: _var._content_width,\n                    _content_height: _var._content_height,\n                    _panel_width: _var._panel_width,\n                    _panel_height: _var._panel_height,\n                    _horizontal_scroller_width: _var._horizontal_scroller_width,\n                    _vertical_scroller_height: _var._vertical_scroller_height,\n                    verticalScrollBarHeight: _var.verticalScrollBarHeight,\n                    horizontalScrollBarWidth: _var.horizontalScrollBarWidth\n                });\n\n                GRID.header.scrollTo.call(this, scrollPositon);\n                GRID.body.scrollTo.call(this, scrollPositon);\n            }\n\n            return -left;\n        }\n    };\n    var scrollBarMover = {\n        \"click\": function click(track, bar, type, e) {\n\n            // 마우스 무브 완료 타임과 클릭타임 차이가 20 보다 작으면 클릭이벤트 막기.\n            if (new Date().getTime() - GRID.scroller.moveout_timer < 20) {\n                return false;\n            }\n\n            var self = this,\n                trackOffset = track.offset(),\n                barBox = {\n                width: bar.outerWidth(), height: bar.outerHeight()\n            },\n                trackBox = {\n                width: track.innerWidth(), height: track.innerHeight()\n            },\n                _vertical_scroller_height = self.$[\"scroller\"][\"vertical\"].innerHeight(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _horizontal_scroller_width = self.$[\"scroller\"][\"horizontal\"].innerWidth(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                verticalScrollBarHeight = self.$[\"scroller\"][\"vertical-bar\"].outerHeight(),\n                horizontalScrollBarWidth = self.$[\"scroller\"][\"horizontal-bar\"].outerWidth(),\n                getScrollerPosition = {\n                \"vertical\": function vertical(e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    // track을 벗어 나지 안도록 범위 체크\n                    var newTop = mouseObj.clientY - trackOffset.top;\n                    if (newTop < 0) {\n                        newTop = 0;\n                    } else if (newTop + barBox.height > trackBox.height) {\n                        newTop = trackBox.height - barBox.height;\n                    }\n                    return { top: newTop };\n                },\n                \"horizontal\": function horizontal(e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    // track을 벗어 나지 안도록 범위 체크\n                    var newLeft = mouseObj.clientX - trackOffset.left;\n                    if (newLeft < 0) {\n                        newLeft = 0;\n                    } else if (newLeft + barBox.width > trackBox.width) {\n                        newLeft = trackBox.width - barBox.width;\n                    }\n                    return { left: newLeft };\n                }\n            };\n\n            var css = getScrollerPosition[type](e);\n            bar.css(css);\n\n            var scrollPositon = convertScrollPosition[type].call(self, css, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            });\n            if (type === \"horizontal\") GRID.header.scrollTo.call(self, scrollPositon);\n            GRID.body.scrollTo.call(self, scrollPositon);\n        },\n        \"on\": function on(track, bar, type, e) {\n            var self = this,\n                barOffset = bar.position(),\n                barBox = {\n                width: bar.outerWidth(), height: bar.outerHeight()\n            },\n                trackBox = {\n                width: track.innerWidth(), height: track.innerHeight()\n            },\n                _vertical_scroller_height = self.$[\"scroller\"][\"vertical\"].innerHeight(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _horizontal_scroller_width = self.$[\"scroller\"][\"horizontal\"].innerWidth(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                verticalScrollBarHeight = self.$[\"scroller\"][\"vertical-bar\"].outerHeight(),\n                horizontalScrollBarWidth = self.$[\"scroller\"][\"horizontal-bar\"].outerWidth(),\n                getScrollerPosition = {\n                \"vertical\": function vertical(e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    self.xvar.__da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n                    // track을 벗어 나지 안도록 범위 체크\n                    var newTop = barOffset.top + self.xvar.__da;\n                    if (newTop < 0) {\n                        newTop = 0;\n                    } else if (newTop + barBox.height > trackBox.height) {\n                        newTop = trackBox.height - barBox.height;\n                    }\n                    return { top: newTop };\n                },\n                \"horizontal\": function horizontal(e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                    // track을 벗어 나지 안도록 범위 체크\n                    var newLeft = barOffset.left + self.xvar.__da;\n                    if (newLeft < 0) {\n                        newLeft = 0;\n                    } else if (newLeft + barBox.width > trackBox.width) {\n                        newLeft = trackBox.width - barBox.width;\n                    }\n                    return { left: newLeft };\n                }\n            };\n\n            self.xvar.__da = 0; // 이동량 변수 초기화 (계산이 잘못 될까바)\n\n            jQuery(document.body).bind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                var css = getScrollerPosition[type](e);\n                bar.css(css);\n\n                var scrollPositon = convertScrollPosition[type].call(self, css, {\n                    _content_width: _content_width,\n                    _content_height: _content_height,\n                    _panel_width: _panel_width,\n                    _panel_height: _panel_height,\n                    _horizontal_scroller_width: _horizontal_scroller_width,\n                    _vertical_scroller_height: _vertical_scroller_height,\n                    verticalScrollBarHeight: verticalScrollBarHeight,\n                    horizontalScrollBarWidth: horizontalScrollBarWidth\n                });\n\n                if (type === \"horizontal\") GRID.header.scrollTo.call(self, scrollPositon);\n                GRID.body.scrollTo.call(self, scrollPositon);\n            }).bind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                scrollBarMover.off.call(self);\n            }).bind(\"mouseleave.ax5grid-\" + this.instanceId, function (e) {\n                scrollBarMover.off.call(self);\n            });\n\n            jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n        },\n        \"off\": function off() {\n\n            GRID.scroller.moveout_timer = new Date().getTime();\n\n            jQuery(document.body).unbind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId).unbind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId).unbind(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n        }\n    };\n    var scrollContentMover = {\n        \"wheel\": function wheel(delta) {\n            var self = this,\n                _body_scroll_position = self.$[\"panel\"][\"body-scroll\"].position(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth;\n\n            if (isNaN(_content_height) || isNaN(_content_width)) {\n                return false;\n            }\n\n            var newLeft = void 0,\n                newTop = void 0,\n                _top_is_end = false,\n                _left_is_end = false;\n\n            newLeft = _body_scroll_position.left - delta.x;\n            newTop = _body_scroll_position.top - delta.y;\n\n            // newTop이 범위를 넘었는지 체크\n            if (newTop >= 0) {\n                newTop = 0;\n                _top_is_end = true;\n            } else if (newTop <= _panel_height - _content_height) {\n                newTop = _panel_height - _content_height;\n                if (newTop >= 0) newTop = 0;\n                _top_is_end = true;\n            } else {\n                if (delta.y == 0) _top_is_end = true;\n            }\n\n            // newLeft이 범위를 넘었는지 체크\n            if (newLeft >= 0) {\n                newLeft = 0;\n                _left_is_end = true;\n            } else if (newLeft <= _panel_width - _content_width) {\n                newLeft = _panel_width - _content_width;\n                if (newLeft >= 0) newLeft = 0;\n                _left_is_end = true;\n            } else {\n                if (delta.x == 0) _left_is_end = true;\n            }\n\n            //self.$[\"panel\"][\"body-scroll\"].css({left: newLeft, top: newTop});\n            GRID.header.scrollTo.call(this, { left: newLeft });\n            GRID.body.scrollTo.call(this, { left: newLeft, top: newTop });\n            resize.call(this);\n\n            return !_top_is_end || !_left_is_end;\n        },\n        \"on\": function on() {\n            var self = this,\n                _body_scroll_position = self.$[\"panel\"][\"body-scroll\"].position(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                getContentPosition = function getContentPosition(e) {\n                var mouseObj = GRID.util.getMousePosition(e),\n                    newLeft = void 0,\n                    newTop = void 0;\n\n                self.xvar.__x_da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                self.xvar.__y_da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n\n                newLeft = _body_scroll_position.left + self.xvar.__x_da;\n                newTop = _body_scroll_position.top + self.xvar.__y_da;\n\n                // newTop이 범위를 넘었는지 체크\n                if (newTop >= 0) {\n                    newTop = 0;\n                } else if (newTop <= _panel_height - _content_height) {\n                    newTop = _panel_height - _content_height;\n                    if (newTop >= 0) newTop = 0;\n                }\n\n                // newLeft이 범위를 넘었는지 체크\n                if (newLeft >= 0) {\n                    newLeft = 0;\n                } else if (newLeft <= _panel_width - _content_width) {\n                    newLeft = _panel_width - _content_width;\n                    if (newLeft >= 0) newLeft = 0;\n                }\n\n                return {\n                    left: newLeft, top: newTop\n                };\n            };\n\n            this.xvar.__x_da = 0; // 이동량 변수 초기화 (계산이 잘못 될까바)\n            this.xvar.__y_da = 0; // 이동량 변수 초기화 (계산이 잘못 될까바)\n            this.xvar.touchmoved = false;\n\n            jQuery(document.body).on(\"touchmove\" + \".ax5grid-\" + this.instanceId, function (e) {\n\n                var css = getContentPosition(e);\n                GRID.header.scrollTo.call(self, { left: css.left });\n                GRID.body.scrollTo.call(self, css, \"noRepaint\");\n                resize.call(self);\n                U.stopEvent(e);\n                self.xvar.touchmoved = true;\n            }).on(\"touchend\" + \".ax5grid-\" + this.instanceId, function (e) {\n                if (self.xvar.touchmoved) {\n                    var css = getContentPosition(e);\n                    GRID.header.scrollTo.call(self, { left: css.left });\n                    GRID.body.scrollTo.call(self, css);\n                    resize.call(self);\n                    U.stopEvent(e);\n                    scrollContentMover.off.call(self);\n                }\n            });\n\n            jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n        },\n        \"off\": function off() {\n\n            jQuery(document.body).off(\"touchmove\" + \".ax5grid-\" + this.instanceId).off(\"touchend\" + \".ax5grid-\" + this.instanceId);\n\n            jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n        }\n    };\n\n    var init = function init() {\n        var self = this,\n            margin = this.config.scroller.trackPadding;\n\n        this.$[\"scroller\"][\"vertical-bar\"].css({ width: this.config.scroller.size - (margin + 1), left: margin / 2 });\n        this.$[\"scroller\"][\"horizontal-bar\"].css({ height: this.config.scroller.size - (margin + 1), top: margin / 2 });\n\n        this.$[\"scroller\"][\"vertical-bar\"].on(GRID.util.ENM[\"mousedown\"], function (e) {\n            this.xvar.mousePosition = GRID.util.getMousePosition(e);\n            scrollBarMover.on.call(this, this.$[\"scroller\"][\"vertical\"], this.$[\"scroller\"][\"vertical-bar\"], \"vertical\", e);\n        }.bind(this)).on(\"dragstart\", function (e) {\n            U.stopEvent(e);\n            return false;\n        });\n\n        this.$[\"scroller\"][\"vertical\"].on(\"click\", function (e) {\n            if (e.target.getAttribute(\"data-ax5grid-scroller\") == \"vertical\") {\n                scrollBarMover.click.call(this, this.$[\"scroller\"][\"vertical\"], this.$[\"scroller\"][\"vertical-bar\"], \"vertical\", e);\n            }\n        }.bind(this));\n\n        this.$[\"scroller\"][\"horizontal-bar\"].on(GRID.util.ENM[\"mousedown\"], function (e) {\n            this.xvar.mousePosition = GRID.util.getMousePosition(e);\n            scrollBarMover.on.call(this, this.$[\"scroller\"][\"horizontal\"], this.$[\"scroller\"][\"horizontal-bar\"], \"horizontal\", e);\n        }.bind(this)).on(\"dragstart\", function (e) {\n            U.stopEvent(e);\n            return false;\n        });\n\n        this.$[\"scroller\"][\"horizontal\"].on(\"click\", function (e) {\n            if (e.target.getAttribute(\"data-ax5grid-scroller\") == \"horizontal\") {\n                scrollBarMover.click.call(this, this.$[\"scroller\"][\"horizontal\"], this.$[\"scroller\"][\"horizontal-bar\"], \"horizontal\", e);\n            }\n        }.bind(this));\n\n        this.$[\"container\"][\"body\"].on('mousewheel DOMMouseScroll', function (e) {\n            var E = e.originalEvent,\n                delta = { x: 0, y: 0 };\n\n            if (E.detail) {\n                delta.y = E.detail * 10;\n            } else {\n                if (typeof E.deltaY === \"undefined\") {\n                    delta.y = -E.wheelDelta;\n                    delta.x = 0;\n                } else {\n                    delta.y = E.deltaY;\n                    delta.x = E.deltaX;\n                }\n            }\n\n            if (scrollContentMover.wheel.call(this, delta)) {\n                U.stopEvent(e);\n            }\n        }.bind(this));\n\n        if (document.addEventListener && ax5.info.supportTouch) {\n            this.$[\"container\"][\"body\"].on(\"touchstart\", '[data-ax5grid-panel]', function (e) {\n                self.xvar.mousePosition = GRID.util.getMousePosition(e);\n                scrollContentMover.on.call(self);\n            });\n        }\n    };\n\n    var resize = function resize() {\n        var _vertical_scroller_height = this.$[\"scroller\"][\"vertical\"].height(),\n            _horizontal_scroller_width = this.$[\"scroller\"][\"horizontal\"].width(),\n            _panel_height = this.$[\"panel\"][\"body\"].height(),\n            _panel_width = this.$[\"panel\"][\"body\"].width(),\n            _content_height = this.xvar.scrollContentHeight,\n            _content_width = this.xvar.scrollContentWidth,\n            verticalScrollBarHeight = _panel_height * _vertical_scroller_height / _content_height,\n            horizontalScrollBarWidth = _panel_width * _horizontal_scroller_width / _content_width;\n\n        if (verticalScrollBarHeight < this.config.scroller.barMinSize) verticalScrollBarHeight = this.config.scroller.barMinSize;\n        if (horizontalScrollBarWidth < this.config.scroller.barMinSize) horizontalScrollBarWidth = this.config.scroller.barMinSize;\n\n        this.$[\"scroller\"][\"vertical-bar\"].css({\n            top: convertScrollBarPosition.vertical.call(this, this.$.panel[\"body-scroll\"].position().top, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            }),\n            height: verticalScrollBarHeight\n        });\n\n        //console.log(horizontalScrollBarWidth);\n\n        this.$[\"scroller\"][\"horizontal-bar\"].css({\n            left: convertScrollBarPosition.horizontal.call(this, this.$.panel[\"body-scroll\"].position().left, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            }),\n            width: horizontalScrollBarWidth\n        });\n\n        _vertical_scroller_height = null;\n        _horizontal_scroller_width = null;\n        _panel_height = null;\n        _panel_width = null;\n        _content_height = null;\n        _content_width = null;\n        verticalScrollBarHeight = null;\n        horizontalScrollBarWidth = null;\n    };\n\n    GRID.scroller = {\n        // 타이머\n        moveout_timer: new Date().getTime(),\n        init: init,\n        resize: resize\n    };\n})();\n// ax5.ui.grid.tmpl\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var main = function main() {\n        return '<div data-ax5grid-container=\"root\" data-ax5grid-instance=\"{{instanceId}}\">\\n            <div data-ax5grid-container=\"hidden\">\\n                <textarea data-ax5grid-form=\"clipboard\"></textarea>\\n            </div>\\n            <div data-ax5grid-container=\"header\">\\n                <div data-ax5grid-panel=\"aside-header\"></div>\\n                <div data-ax5grid-panel=\"left-header\"></div>\\n                <div data-ax5grid-panel=\"header\">\\n                    <div data-ax5grid-panel-scroll=\"header\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"right-header\"></div>\\n            </div>\\n            <div data-ax5grid-container=\"body\">\\n                <div data-ax5grid-panel=\"top-aside-body\"></div>\\n                <div data-ax5grid-panel=\"top-left-body\"></div>\\n                <div data-ax5grid-panel=\"top-body\">\\n                    <div data-ax5grid-panel-scroll=\"top-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"top-right-body\"></div>\\n                <div data-ax5grid-panel=\"aside-body\">\\n                    <div data-ax5grid-panel-scroll=\"aside-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"left-body\">\\n                    <div data-ax5grid-panel-scroll=\"left-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"body\">\\n                    <div data-ax5grid-panel-scroll=\"body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"right-body\">\\n                  <div data-ax5grid-panel-scroll=\"right-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"bottom-aside-body\"></div>\\n                <div data-ax5grid-panel=\"bottom-left-body\"></div>\\n                <div data-ax5grid-panel=\"bottom-body\">\\n                    <div data-ax5grid-panel-scroll=\"bottom-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"bottom-right-body\"></div>\\n            </div>\\n            <div data-ax5grid-container=\"page\">\\n                <div data-ax5grid-page=\"holder\">\\n                    <div data-ax5grid-page=\"navigation\"></div>\\n                    <div data-ax5grid-page=\"status\"></div>\\n                </div>\\n            </div>\\n            <div data-ax5grid-container=\"scroller\">\\n                <div data-ax5grid-scroller=\"vertical\">\\n                    <div data-ax5grid-scroller=\"vertical-bar\"></div>    \\n                </div>\\n                <div data-ax5grid-scroller=\"horizontal\">\\n                    <div data-ax5grid-scroller=\"horizontal-bar\"></div>\\n                </div>\\n                <div data-ax5grid-scroller=\"corner\"></div>\\n            </div>\\n            <div data-ax5grid-resizer=\"vertical\"></div>\\n            <div data-ax5grid-resizer=\"horizontal\"></div>\\n        </div>';\n    };\n\n    var page_navigation = function page_navigation() {\n        return '<div data-ax5grid-page-navigation=\"holder\">\\n            {{#hasPage}}\\n            <div data-ax5grid-page-navigation=\"cell\">    \\n                {{#firstIcon}}<button data-ax5grid-page-move=\"first\">{{{firstIcon}}}</button>{{/firstIcon}}\\n                <button data-ax5grid-page-move=\"prev\">{{{prevIcon}}}</button>\\n            </div>\\n            <div data-ax5grid-page-navigation=\"cell-paging\">\\n                {{#@paging}}\\n                <button data-ax5grid-page-move=\"{{pageNo}}\" data-ax5grid-page-selected=\"{{selected}}\">{{pageNo}}</button>\\n                {{/@paging}}\\n            </div>\\n            <div data-ax5grid-page-navigation=\"cell\">\\n                <button data-ax5grid-page-move=\"next\">{{{nextIcon}}}</button>\\n                {{#lastIcon}}<button data-ax5grid-page-move=\"last\">{{{lastIcon}}}</button>{{/lastIcon}}\\n            </div>\\n            {{/hasPage}}\\n        </div>';\n    };\n\n    var page_status = function page_status() {\n        return '<span>{{fromRowIndex}} - {{toRowIndex}} of {{totalElements}}{{#dataRowCount}} ({{dataRowCount}}){{/dataRowCount}}</span>';\n    };\n\n    GRID.tmpl = {\n        \"main\": main,\n        \"page_navigation\": page_navigation,\n        \"page_status\": page_status,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(GRID.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.grid.util\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    /**\n     * @method ax5grid.util.divideTableByFrozenColumnIndex\n     * @param _table\n     * @param _frozenColumnIndex\n     * @returns {{leftHeaderData: {rows: Array}, headerData: {rows: Array}}}\n     */\n\n    var divideTableByFrozenColumnIndex = function divideTableByFrozenColumnIndex(_table, _frozenColumnIndex) {\n        var tempTable_l = { rows: [] };\n        var tempTable_r = { rows: [] };\n        for (var r = 0, rl = _table.rows.length; r < rl; r++) {\n            var row = _table.rows[r];\n\n            tempTable_l.rows[r] = { cols: [] };\n            tempTable_r.rows[r] = { cols: [] };\n\n            for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                var col = jQuery.extend({}, row.cols[c]);\n                var colStartIndex = col.colIndex,\n                    colEndIndex = col.colIndex + col.colspan;\n\n                if (colStartIndex < _frozenColumnIndex) {\n                    if (colEndIndex <= _frozenColumnIndex) {\n                        // 좌측편에 변형없이 추가\n                        tempTable_l.rows[r].cols.push(col);\n                    } else {\n                        var leftCol = jQuery.extend({}, col);\n                        var rightCol = jQuery.extend({}, leftCol);\n                        leftCol.colspan = _frozenColumnIndex - leftCol.colIndex;\n                        rightCol.colIndex = _frozenColumnIndex;\n                        rightCol.colspan = col.colspan - leftCol.colspan;\n\n                        tempTable_l.rows[r].cols.push(leftCol);\n                        tempTable_r.rows[r].cols.push(rightCol);\n                    }\n                } else {\n                    // 오른편\n                    tempTable_r.rows[r].cols.push(col);\n                }\n            }\n        }\n\n        return {\n            leftData: tempTable_l,\n            rightData: tempTable_r\n        };\n    };\n\n    var getMousePosition = function getMousePosition(e) {\n        var mouseObj,\n            originalEvent = e.originalEvent ? e.originalEvent : e;\n        mouseObj = 'changedTouches' in originalEvent ? originalEvent.changedTouches[0] : originalEvent;\n        // clientX, Y 쓰면 스크롤에서 문제 발생\n        return {\n            clientX: mouseObj.pageX,\n            clientY: mouseObj.pageY\n        };\n    };\n\n    var ENM = {\n        \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n        \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n        \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n    };\n\n    var makeHeaderTable = function makeHeaderTable(_columns) {\n        var columns = U.deepCopy(_columns);\n        var cfg = this.config;\n        var table = {\n            rows: []\n        };\n        var colIndex = 0;\n        var maekRows = function maekRows(_columns, depth, parentField) {\n            var row = { cols: [] };\n            var i = 0,\n                l = _columns.length;\n\n            for (; i < l; i++) {\n                var field = _columns[i];\n                var colspan = 1;\n\n                if (!field.hidden) {\n                    field.colspan = 1;\n                    field.rowspan = 1;\n\n                    field.rowIndex = depth;\n                    field.colIndex = function () {\n                        if (!parentField) {\n                            return colIndex++;\n                        } else {\n                            colIndex = parentField.colIndex + i + 1;\n                            return parentField.colIndex + i;\n                        }\n                    }();\n\n                    row.cols.push(field);\n\n                    if ('columns' in field) {\n                        colspan = maekRows(field.columns, depth + 1, field);\n                    } else {\n                        field.width = 'width' in field ? field.width : cfg.columnMinWidth;\n                    }\n                    field.colspan = colspan;\n                } else {}\n            }\n\n            if (row.cols.length > 0) {\n                if (!table.rows[depth]) {\n                    table.rows[depth] = { cols: [] };\n                }\n                table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n                return row.cols.length - 1 + colspan;\n            } else {\n                return colspan;\n            }\n        };\n        maekRows(columns, 0);\n\n        // set rowspan\n        for (var r = 0, rl = table.rows.length; r < rl; r++) {\n            for (var c = 0, cl = table.rows[r].cols.length; c < cl; c++) {\n                if (!('columns' in table.rows[r].cols[c])) {\n                    table.rows[r].cols[c].rowspan = rl - r;\n                }\n            }\n        }\n\n        return table;\n    };\n\n    var makeBodyRowTable = function makeBodyRowTable(_columns) {\n        var columns = U.deepCopy(_columns);\n        var table = {\n            rows: []\n        };\n        var colIndex = 0;\n        var maekRows = function maekRows(_columns, depth, parentField) {\n            var row = { cols: [] };\n            var i = 0,\n                l = _columns.length;\n\n            var selfMakeRow = function selfMakeRow(__columns) {\n                var i = 0,\n                    l = __columns.length;\n                for (; i < l; i++) {\n                    var field = __columns[i];\n                    var colspan = 1;\n\n                    if (!field.hidden) {\n\n                        if ('key' in field) {\n                            field.colspan = 1;\n                            field.rowspan = 1;\n\n                            field.rowIndex = depth;\n                            field.colIndex = function () {\n                                if (!parentField) {\n                                    return colIndex++;\n                                } else {\n                                    colIndex = parentField.colIndex + i + 1;\n                                    return parentField.colIndex + i;\n                                }\n                            }();\n\n                            row.cols.push(field);\n                            if ('columns' in field) {\n                                colspan = maekRows(field.columns, depth + 1, field);\n                            }\n                            field.colspan = colspan;\n                        } else {\n                            if ('columns' in field) {\n                                selfMakeRow(field.columns, depth);\n                            }\n                        }\n                    } else {}\n                }\n            };\n\n            for (; i < l; i++) {\n                var field = _columns[i];\n                var colspan = 1;\n\n                if (!field.hidden) {\n\n                    if ('key' in field) {\n                        field.colspan = 1;\n                        field.rowspan = 1;\n\n                        field.rowIndex = depth;\n                        field.colIndex = function () {\n                            if (!parentField) {\n                                return colIndex++;\n                            } else {\n                                colIndex = parentField.colIndex + i + 1;\n                                return parentField.colIndex + i;\n                            }\n                        }();\n\n                        row.cols.push(field);\n                        if ('columns' in field) {\n                            colspan = maekRows(field.columns, depth + 1, field);\n                        }\n                        field.colspan = colspan;\n                    } else {\n                        if ('columns' in field) {\n                            selfMakeRow(field.columns, depth);\n                        }\n                    }\n                } else {}\n            }\n\n            if (row.cols.length > 0) {\n                if (!table.rows[depth]) {\n                    table.rows[depth] = { cols: [] };\n                }\n                table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n                return row.cols.length - 1 + colspan;\n            } else {\n                return colspan;\n            }\n        };\n        maekRows(columns, 0);\n\n        (function (table) {\n            // set rowspan\n            for (var r = 0, rl = table.rows.length; r < rl; r++) {\n                var row = table.rows[r];\n                for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                    var col = row.cols[c];\n                    if (!('columns' in col)) {\n                        col.rowspan = rl - r;\n                    }\n                }\n            }\n        })(table);\n\n        return table;\n    };\n\n    var makeBodyRowMap = function makeBodyRowMap(_table) {\n        var map = {};\n        _table.rows.forEach(function (row) {\n            row.cols.forEach(function (col) {\n                map[col.rowIndex + \"_\" + col.colIndex] = jQuery.extend({}, col);\n            });\n        });\n        return map;\n    };\n\n    var makeFootSumTable = function makeFootSumTable(_footSumColumns) {\n        var table = {\n            rows: []\n        };\n\n        for (var r = 0, rl = _footSumColumns.length; r < rl; r++) {\n            var footSumRow = _footSumColumns[r];\n            table.rows[r] = { cols: [] };\n            var addC = 0;\n            for (var c = 0, cl = footSumRow.length; c < cl; c++) {\n                if (addC > this.columns.length) break;\n                var colspan = footSumRow[c].colspan || 1;\n                if (footSumRow[c].label || footSumRow[c].key) {\n                    table.rows[r].cols.push({\n                        colspan: colspan,\n                        rowspan: 1,\n                        colIndex: addC,\n                        columnAttr: \"sum\",\n                        align: footSumRow[c].align,\n                        label: footSumRow[c].label,\n                        key: footSumRow[c].key,\n                        collector: footSumRow[c].collector,\n                        formatter: footSumRow[c].formatter\n                    });\n                } else {\n                    table.rows[r].cols.push({\n                        colIndex: addC,\n                        colspan: colspan,\n                        rowspan: 1,\n                        label: \"&nbsp;\"\n                    });\n                }\n                addC += colspan;\n            }\n\n            if (addC < this.columns.length + 1) {\n                for (var c = addC; c < this.colGroup.length; c++) {\n                    table.rows[r].cols.push({\n                        colIndex: c + 1,\n                        colspan: 1,\n                        rowspan: 1,\n                        label: \"&nbsp;\"\n                    });\n                }\n            }\n        }\n        return table;\n    };\n\n    var makeBodyGroupingTable = function makeBodyGroupingTable(_bodyGroupingColumns) {\n        var table = {\n            rows: []\n        };\n\n        var r = 0;\n        table.rows[r] = { cols: [] };\n        var addC = 0;\n        for (var c = 0, cl = _bodyGroupingColumns.length; c < cl; c++) {\n            if (addC > this.columns.length) break;\n            var colspan = _bodyGroupingColumns[c].colspan || 1;\n            if (_bodyGroupingColumns[c].label || _bodyGroupingColumns[c].key) {\n                table.rows[r].cols.push({\n                    colspan: colspan,\n                    rowspan: 1,\n                    rowIndex: 0,\n                    colIndex: addC,\n                    columnAttr: \"default\",\n                    align: _bodyGroupingColumns[c].align,\n                    label: _bodyGroupingColumns[c].label,\n                    key: _bodyGroupingColumns[c].key,\n                    collector: _bodyGroupingColumns[c].collector,\n                    formatter: _bodyGroupingColumns[c].formatter\n                });\n            } else {\n                table.rows[r].cols.push({\n                    rowIndex: 0,\n                    colIndex: addC,\n                    colspan: colspan,\n                    rowspan: 1,\n                    label: \"&nbsp;\"\n                });\n            }\n            addC += colspan;\n        }\n\n        if (addC < this.colGroup.length) {\n            for (var c = addC; c < this.colGroup.length; c++) {\n                table.rows[r].cols.push({\n                    rowIndex: 0,\n                    colIndex: c + 1,\n                    colspan: 1,\n                    rowspan: 1,\n                    label: \"&nbsp;\"\n                });\n            }\n        }\n\n        return table;\n    };\n\n    var findPanelByColumnIndex = function findPanelByColumnIndex(_dindex, _colIndex, _rowIndex) {\n        var _containerPanelName;\n        var _isScrollPanel = false;\n        var _panels = [];\n\n        if (this.xvar.frozenRowIndex > _dindex) _panels.push(\"top\");\n        if (this.xvar.frozenColumnIndex > _colIndex) _panels.push(\"left\");\n        _panels.push(\"body\");\n\n        if (this.xvar.frozenColumnIndex <= _colIndex || this.xvar.frozenRowIndex <= _dindex) {\n            _containerPanelName = _panels.join(\"-\");\n            _panels.push(\"scroll\");\n            _isScrollPanel = true;\n        }\n\n        return {\n            panelName: _panels.join(\"-\"),\n            containerPanelName: _containerPanelName,\n            isScrollPanel: _isScrollPanel\n        };\n    };\n\n    var getRealPathForDataItem = function getRealPathForDataItem(_dataPath) {\n        var path = [];\n        var _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n        _path.forEach(function (n) {\n            if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n        });\n        _path = null;\n        return path.join(\"\");\n    };\n\n    GRID.util = {\n        divideTableByFrozenColumnIndex: divideTableByFrozenColumnIndex,\n        getMousePosition: getMousePosition,\n        ENM: ENM,\n        makeHeaderTable: makeHeaderTable,\n        makeBodyRowTable: makeBodyRowTable,\n        makeBodyRowMap: makeBodyRowMap,\n        makeFootSumTable: makeFootSumTable,\n        makeBodyGroupingTable: makeBodyGroupingTable,\n        findPanelByColumnIndex: findPanelByColumnIndex,\n        getRealPathForDataItem: getRealPathForDataItem\n    };\n})();\n// ax5.ui.mediaViewer\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MEDIAVIEWER;\n\n    UI.addClass({\n        className: \"mediaViewer\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5mediaViewer\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var myViewer = new ax5.ui.mediaViewer({\n         *     theme: \"danger\",\n         *     target: $(\"#media-viewer-target-0\"),\n         *     loading: {\n         *         icon: '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw margin-bottom\" aria-hidden=\"true\"></i>',\n         *         text: '<div>Now Loading</div>'\n         *     },\n         *     media: {\n         *         width: '11%', height: '11%',\n         *         prevHandle: '<i class=\"fa fa-chevron-left\"></i>',\n         *         nextHandle: '<i class=\"fa fa-chevron-right\"></i>',\n         *         poster: '<i class=\"fa fa-youtube-play\" style=\"font-size: 20px;\"></i>',\n         *         list: [\n         *             {\n         *                 video: {\n         *                     html: '<iframe src=\"https://player.vimeo.com/video/121840700?color=fcfcfc&badge=0\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>',\n         *                     poster: ''\n         *                 }\n         *             },\n         *             {\n         *                 video: {\n         *                     html: '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/w9Uh2oP88JI\" frameborder=\"0\" allowfullscreen></iframe>',\n         *                     poster: ''\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'https://www.twilio.com/blog/wp-content/uploads/2013/11/Screen-Shot-2013-11-06-at-12.05.36-PM.png',\n         *                     poster: 'https://www.twilio.com/blog/wp-content/uploads/2013/11/Screen-Shot-2013-11-06-at-12.05.36-PM.png'\n         *                 }\n         *             }\n         *         ]\n         *     },\n         *     onClick: function () {\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        var ax5mediaViewer = function ax5mediaViewer() {\n            var self = this,\n                cfg,\n                ENM = {\n                \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n                \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n                \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n            },\n                getMousePosition = function getMousePosition(e) {\n                var mouseObj = 'changedTouches' in e.originalEvent ? e.originalEvent.changedTouches[0] : e;\n\n                return {\n                    clientX: mouseObj.clientX,\n                    clientY: mouseObj.clientY,\n                    time: new Date().getTime()\n                };\n            };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                animateTime: 250,\n\n                columnKeys: {\n                    src: 'src',\n                    poster: 'poster',\n                    html: 'html'\n                },\n                loading: {\n                    icon: '',\n                    text: 'Now Loading'\n                },\n                viewer: {\n                    prevHandle: false,\n                    nextHandle: false,\n                    ratio: 16 / 9\n                },\n                media: {\n                    prevHandle: '<',\n                    nextHandle: '>',\n                    width: 36, height: 36,\n                    list: []\n                }\n            };\n            this.queue = [];\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.selectedIndex = 0;\n            this.mousePosition = {};\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            },\n                getFrame = function getFrame() {\n                var data = jQuery.extend(true, { id: this.id }, cfg);\n\n                try {\n                    return MEDIAVIEWER.tmpl.get.call(this, \"frame\", data, cfg.columnKeys);\n                } finally {\n                    data = null;\n                }\n            },\n                onClick = function onClick(e, target) {\n                var result,\n                    elementType = \"\",\n                    processor = {\n                    'thumbnail': function thumbnail(target) {\n                        this.select(target.getAttribute(\"data-media-thumbnail\"));\n                    },\n                    'prev': function prev(target) {\n                        if (this.selectedIndex > 0) {\n                            this.select(this.selectedIndex - 1);\n                        } else {\n                            this.select(cfg.media.list.length - 1);\n                        }\n                    },\n                    'next': function next(target) {\n                        if (this.selectedIndex < cfg.media.list.length - 1) {\n                            this.select(this.selectedIndex + 1);\n                        } else {\n                            this.select(0);\n                        }\n                    },\n                    'viewer': function viewer(target) {\n                        if (self.onClick) {\n                            self.onClick.call({\n                                media: cfg.media.list[this.selectedIndex]\n                            });\n                        }\n                    }\n                };\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-media-thumbnail\")) {\n                        elementType = \"thumbnail\";\n                        return true;\n                    } else if (target.getAttribute(\"data-media-viewer-els\") == \"media-list-prev-handle\") {\n                        elementType = \"prev\";\n                        return true;\n                    } else if (target.getAttribute(\"data-media-viewer-els\") == \"media-list-next-handle\") {\n                        elementType = \"next\";\n                        return true;\n                    } else if (target.getAttribute(\"data-media-viewer-els\") == \"viewer\") {\n                        elementType = \"viewer\";\n                        return true;\n                    } else if (self.target.get(0) == target) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    for (var key in processor) {\n                        if (key == elementType) {\n                            result = processor[key].call(this, target);\n                            break;\n                        }\n                    }\n                    return this;\n                }\n                return this;\n            },\n                getSelectedIndex = function getSelectedIndex() {\n                if (cfg.media && cfg.media.list && cfg.media.list.length > 0) {\n                    var i = cfg.media.list.length,\n                        selecteIndex = 0;\n                    while (i--) {\n                        if (cfg.media.list[i].selected) {\n                            selecteIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (selecteIndex == 0) {\n                        cfg.media.list[0].selected = true;\n                    }\n                    try {\n                        return selecteIndex;\n                    } finally {\n                        i = null;\n                        selecteIndex = null;\n                    }\n                } else {\n                    return;\n                }\n            },\n                alignMediaList = function alignMediaList() {\n                var thumbnail = this.$[\"list\"].find('[data-media-thumbnail=' + this.selectedIndex + ']'),\n                    pos = thumbnail.position(),\n                    thumbnailWidth = thumbnail.outerWidth(),\n                    containerWidth = this.$[\"list\"].outerWidth(),\n                    parentLeft = this.$[\"list-table\"].position().left,\n                    parentWidth = this.$[\"list-table\"].outerWidth(),\n                    newLeft = 0;\n\n                if (pos.left + thumbnailWidth + parentLeft > containerWidth) {\n                    newLeft = containerWidth - (pos.left + thumbnailWidth);\n                    if (parentLeft != newLeft) this.$[\"list-table\"].css({ left: parentLeft = newLeft });\n                } else if (pos.left + parentLeft < 0) {\n                    newLeft = pos.left;\n                    if (newLeft > 0) newLeft = 0;\n                    if (parentLeft != newLeft) this.$[\"list-table\"].css({ left: parentLeft = newLeft });\n                }\n\n                if (parentLeft != newLeft) {\n                    if (parentLeft + parentWidth < containerWidth) {\n                        newLeft = containerWidth - parentWidth;\n                        if (newLeft > 0) newLeft = 0;\n                        this.$[\"list-table\"].css({ left: newLeft });\n                    }\n                }\n\n                thumbnail = null;\n                pos = null;\n                thumbnailWidth = null;\n                containerWidth = null;\n                parentLeft = null;\n                newLeft = null;\n            },\n                swipeMedia = {\n                \"on\": function on(mousePosition) {\n                    // console.log(mousePosition);\n                    var getSwipePosition = function getSwipePosition(e) {\n                        var mouseObj = e;\n                        if ('changedTouches' in e.originalEvent) {\n                            mouseObj = e.originalEvent.changedTouches[0];\n                        }\n\n                        mousePosition.__dx = mouseObj.clientX - mousePosition.clientX;\n                        mousePosition.__dy = mouseObj.clientY - mousePosition.clientY;\n                        mousePosition.__time = new Date().getTime();\n\n                        if (Math.abs(mousePosition.__dx) > Math.abs(mousePosition.__dy)) {\n                            return { left: mousePosition.__dx };\n                        } else {\n                            return { top: mousePosition.__dy };\n                        }\n                    };\n                    var viewerWidth = this.$[\"viewer\"].width();\n\n                    jQuery(document.body).bind(ENM[\"mousemove\"] + \".ax5media-viewer-\" + this.instanceId, function (e) {\n                        var position = getSwipePosition(e);\n\n                        if ('left' in position) {\n                            self.$[\"viewer-holder\"].css(position);\n                            if (Math.abs(self.mousePosition.__dx) > viewerWidth / 3) {\n                                //console.log(self.mousePosition);\n                                // trigger nextMedia\n\n                                var nextIndex = 0;\n\n                                if (self.mousePosition.__dx > 0) {\n                                    if (self.selectedIndex > 0) {\n                                        nextIndex = self.selectedIndex - 1;\n                                    } else {\n                                        nextIndex = cfg.media.list.length - 1;\n                                    }\n                                } else {\n                                    if (self.selectedIndex < cfg.media.list.length - 1) {\n                                        nextIndex = self.selectedIndex + 1;\n                                    }\n                                }\n\n                                self.select(nextIndex);\n                                swipeMedia.off.call(self);\n                            }\n\n                            U.stopEvent(e);\n                        }\n                    }).bind(ENM[\"mouseup\"] + \".ax5media-viewer-\" + this.instanceId, function (e) {\n                        swipeMedia.off.call(self);\n                    }).bind(\"mouseleave.ax5media-viewer-\" + this.instanceId, function (e) {\n                        swipeMedia.off.call(self);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off() {\n                    self.$[\"viewer-holder\"].css({ left: 0 });\n                    jQuery(document.body).unbind(ENM[\"mousemove\"] + \".ax5media-viewer-\" + this.instanceId).unbind(ENM[\"mouseup\"] + \".ax5media-viewer-\" + this.instanceId).unbind(\"mouseleave.ax5media-viewer-\" + this.instanceId);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            };\n            /// private end\n\n            /**\n             * Preferences of mediaViewer UI\n             * @method ax5mediaViewer.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5mediaViewer}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.id = 'ax5-media-viewer-' + ax5.getGuid();\n                if (cfg.target && cfg.media && cfg.media.list && cfg.media.list.length > 0) {\n                    this.attach(cfg.target);\n                }\n            };\n\n            /**\n             * @method ax5mediaViewer.attach\n             * @param target\n             * @param options\n             * @returns {ax5mediaViewer}\n             */\n            this.attach = function (target, options) {\n                if (!target) {\n                    console.log(ax5.info.getError(\"ax5mediaViewer\", \"401\", \"setConfig\"));\n                }\n                if (typeof options != \"undefined\") {\n                    this.setConfig(options, false);\n                }\n                this.target = jQuery(target);\n                this.target.html(getFrame.call(this));\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.target.find('[data-ax5-ui-media-viewer]'),\n                    \"viewer-holder\": this.target.find('[data-media-viewer-els=\"viewer-holder\"]'),\n                    \"viewer\": this.target.find('[data-media-viewer-els=\"viewer\"]'),\n                    \"viewer-loading\": this.target.find('[data-media-viewer-els=\"viewer-loading\"]'),\n                    \"list-holder\": this.target.find('[data-media-viewer-els=\"media-list-holder\"]'),\n                    \"list-prev-handle\": this.target.find('[data-media-viewer-els=\"media-list-prev-handle\"]'),\n                    \"list\": this.target.find('[data-media-viewer-els=\"media-list\"]'),\n                    \"list-table\": this.target.find('[data-media-viewer-els=\"media-list-table\"]'),\n                    \"list-next-handle\": this.target.find('[data-media-viewer-els=\"media-list-next-handle\"]')\n                };\n\n                this.align();\n\n                jQuery(window).unbind(\"resize.ax5media-viewer-\" + this.id).bind(\"resize.ax5media-viewer-\" + this.id, function () {\n                    this.align();\n                    alignMediaList.call(this);\n                }.bind(this));\n\n                this.target.unbind(\"click\").bind(\"click\", function (e) {\n                    e = e || window.event;\n                    onClick.call(this, e);\n                    U.stopEvent(e);\n                }.bind(this));\n\n                this.$.viewer.unbind(ENM[\"mousedown\"]).bind(ENM[\"mousedown\"], function (e) {\n                    this.mousePosition = getMousePosition(e);\n                    swipeMedia.on.call(this, this.mousePosition);\n                }.bind(this)).unbind(\"dragstart\").bind(\"dragstart\", function (e) {\n                    U.stopEvent(e);\n                    return false;\n                });\n\n                this.select(getSelectedIndex.call(this));\n                return this;\n            };\n\n            /**\n             * @method ax5mediaViewer.align\n             * @returns {ax5mediaViewer}\n             */\n            this.align = function () {\n                // viewer width, height\n                this.$[\"viewer-holder\"].css({ height: this.$[\"viewer\"].width() / cfg.viewer.ratio });\n                this.$[\"viewer\"].css({ height: this.$[\"viewer\"].width() / cfg.viewer.ratio });\n\n                if (this.$[\"viewer\"].data(\"media-type\") == \"image\") {\n                    var $img = this.$[\"viewer\"].find(\"img\");\n                    $img.css({\n                        width: this.$[\"viewer\"].height() * this.$[\"viewer\"].data(\"img-ratio\"), height: this.$[\"viewer\"].height()\n                    });\n                    setTimeout(function (_img) {\n                        _img.css({ left: (this.$[\"viewer\"].width() - _img.width()) / 2 });\n                    }.bind(this, $img), 1);\n                } else if (this.$[\"viewer\"].data(\"media-type\") == \"video\") {\n                    this.$[\"viewer\"].find(\"iframe\").css({ width: this.$[\"viewer\"].height() * this.$[\"viewer\"].data(\"img-ratio\"), height: this.$[\"viewer\"].height() });\n                }\n                this.$[\"viewer-loading\"].css({ height: this.$[\"viewer\"].height() });\n\n                var mediaThumbnailWidth = U.right(cfg.media.width, 1) == '%' ? U.number(cfg.media.width) / 100 * this.$[\"viewer\"].width() : U.number(cfg.media.width),\n                    mediaThumbnailHeight = U.right(cfg.media.height, 1) == '%' ? U.number(cfg.media.height) / 100 * this.$[\"viewer\"].width() : U.number(cfg.media.height);\n\n                mediaThumbnailWidth = Math.floor(mediaThumbnailWidth);\n                mediaThumbnailHeight = Math.floor(mediaThumbnailHeight);\n\n                this.$[\"list-prev-handle\"].css({ width: mediaThumbnailWidth * 1.5 });\n                this.$[\"list-next-handle\"].css({ width: mediaThumbnailWidth * 1.5 });\n                this.$[\"list\"].css({ height: mediaThumbnailHeight });\n                this.$[\"list-table\"].find('[data-media-thumbnail]').css({ width: mediaThumbnailWidth, height: mediaThumbnailHeight });\n                this.$[\"list-table\"].find('[data-media-thumbnail-video]').css({ width: mediaThumbnailWidth, height: mediaThumbnailHeight });\n\n                return this;\n            };\n\n            /**\n             * @method ax5mediaViewer.select\n             * @param index\n             * @returns {ax5mediaViewer}\n             */\n            this.select = function () {\n                var mediaView = {\n                    image: function image(obj, callback) {\n                        self.$[\"viewer-loading\"].show();\n                        var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                        var img = new Image();\n                        img.src = obj.image[cfg.columnKeys.src];\n                        img.onload = function () {\n                            self.$[\"viewer-loading\"].fadeOut();\n                            var h = dim[1];\n                            var w = h * img.width / img.height;\n                            callback(img, Math.floor(w), h);\n                        };\n                        return img;\n                    },\n                    video: function video(obj, callback) {\n                        self.$[\"viewer-loading\"].show();\n                        var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                        var html = jQuery(obj.video[cfg.columnKeys.html]);\n                        callback(html, dim[0], dim[1]);\n                        self.$[\"viewer-loading\"].fadeOut();\n                    }\n                };\n                var onLoad = {\n                    image: function image(img, w, h) {\n                        img.width = w;\n                        img.height = h;\n\n                        var $img = $(img);\n                        this.$[\"viewer\"].html($img);\n                        $img.css({ left: (this.$[\"viewer\"].width() - w) / 2 });\n\n                        this.$[\"viewer\"].data(\"media-type\", \"image\");\n                        this.$[\"viewer\"].data(\"img-ratio\", w / h);\n                    },\n                    video: function video(html, w, h) {\n                        html.css({ width: w, height: h });\n                        this.$[\"viewer\"].html(html);\n                        this.$[\"viewer\"].data(\"media-type\", \"video\");\n                        this.$[\"viewer\"].data(\"img-ratio\", w / h);\n                    }\n                };\n                var select = function select(index) {\n                    this.$[\"list\"].find('[data-media-thumbnail]').removeClass(\"selected\");\n                    this.$[\"list\"].find('[data-media-thumbnail=' + index + ']').addClass(\"selected\");\n                    alignMediaList.call(this);\n                };\n\n                return function (index) {\n                    if (typeof index === \"undefined\") return this;\n                    this.selectedIndex = Number(index);\n                    var media = cfg.media.list[index];\n                    select.call(this, index);\n\n                    for (var key in mediaView) {\n                        if (media[key]) {\n                            mediaView[key].call(this, media, onLoad[key].bind(this));\n                            break;\n                        }\n                    }\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5mediaViewer.setMediaList\n             * @param list\n             * @returns {ax5mediaViewer}\n             */\n            this.setMediaList = function (list) {\n                cfg.media.list = [].concat(list);\n                this.attach(cfg.target);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.mediaViewer_instance = UI.mediaViewer_instance || [];\n                UI.mediaViewer_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5mediaViewer;\n    }());\n\n    MEDIAVIEWER = ax5.ui.mediaViewer;\n})();\n// ax5.ui.mediaViewer.tmpl\n(function () {\n    var MEDIAVIEWER = ax5.ui.mediaViewer;\n\n    var frame = function frame(columnKeys) {\n        return '\\n            <div data-ax5-ui-media-viewer=\"{{id}}\" class=\"{{theme}}\">\\n                <div data-media-viewer-els=\"viewer-holder\">\\n                <div data-media-viewer-els=\"viewer\"></div>\\n                </div>\\n                <div data-media-viewer-els=\"viewer-loading\">\\n                <div class=\"ax5-ui-media-viewer-loading-holder\">\\n                <div class=\"ax5-ui-media-viewer-loading-cell\">\\n                {{{loading.icon}}}\\n            {{{loading.text}}}\\n            </div>\\n            </div>\\n            </div>\\n            {{#media}}\\n            <div data-media-viewer-els=\"media-list-holder\">\\n                <div data-media-viewer-els=\"media-list-prev-handle\">{{{prevHandle}}}</div>\\n            <div data-media-viewer-els=\"media-list\">\\n                <div data-media-viewer-els=\"media-list-table\">\\n                {{#list}}\\n            <div data-media-viewer-els=\"media-list-table-td\">\\n                {{#image}}\\n            <div data-media-thumbnail=\"{{@i}}\">\\n                <img src=\"{{' + columnKeys.poster + '}}\" data-media-thumbnail-image=\"{{@i}}\" />\\n                </div>\\n                {{/image}}\\n            {{#video}}\\n            <div data-media-thumbnail=\"{{@i}}\">{{#' + columnKeys.poster + '}}<img src=\"{{.}}\" data-media-thumbnail-video=\"{{@i}}\" />>{{/' + columnKeys.poster + '}}{{^' + columnKeys.poster + '}}<a data-media-thumbnail-video=\"{{@i}}\">{{{media.' + columnKeys.poster + '}}}</a>{{/' + columnKeys.poster + '}}</div>\\n            {{/video}}\\n            </div>\\n                {{/list}}\\n            </div>\\n                </div>\\n                <div data-media-viewer-els=\"media-list-next-handle\">{{{nextHandle}}}</div>\\n                </div>\\n                {{/media}}\\n            </div>\\n        ';\n    };\n\n    MEDIAVIEWER.tmpl = {\n        \"frame\": frame,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MEDIAVIEWER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.uploader\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var UPLOADER = void 0;\n\n    UI.addClass({\n        className: \"uploader\",\n        version: \"1.3.66\"\n    }, function () {\n\n        var ax5uploader = function ax5uploader() {\n            /**\n             * @class ax5uploader\n             * @classdesc\n             * @author tom@axisj.com\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default', // theme of uploader\n                lang: { // 업로더 버튼 랭귀지 설정\n                    \"upload\": \"Upload\",\n                    \"abort\": \"Abort\"\n                },\n                uploadedBox: {\n                    columnKeys: {\n                        name: \"name\",\n                        type: \"type\",\n                        size: \"size\",\n                        uploadedName: \"uploadedName\",\n                        uploadedPath: \"uploadedPath\",\n                        downloadPath: \"downloadPath\",\n                        previewPath: \"previewPath\",\n                        thumbnail: \"thumbnail\"\n                    }\n                },\n                animateTime: 100,\n                accept: \"*/*\", // 업로드 선택 파일 타입 설정\n                multiple: false, // 다중 파일 업로드\n                manualUpload: false, // 업로딩 시작 수동처리 여부\n                progressBox: true // 업로드 프로그래스 박스 사용여부 false 이면 업로드 진행바를 표시 하지 않습니다. 개발자가 onprogress 함수를 이용하여 직접 구현 해야 합니다.\n            };\n            this.defaultBtns = {\n                \"upload\": { label: this.config.lang[\"upload\"], theme: \"btn-primary\" },\n                \"abort\": { label: this.config.lang[\"abort\"], theme: this.config.theme }\n            };\n\n            /// 업로드된 파일 큐\n            this.uploadedFiles = [];\n            /// 업로더 타겟\n            this.$target = null;\n            /// 업로드된 파일 정보들의 input 태그를 담아두는 컨테이너\n            this.$inputContainer = null;\n            /// input file 태그\n            this.$inputFile = null;\n            this.$inputFileForm = null;\n            /// 파일 선택버튼\n            this.$fileSelector = null;\n            /// 파일 드랍존\n            this.$dropZone = null;\n            /// 파일 목록 표시박스\n            this.$uploadedBox = null;\n\n            this.__uploading = false;\n            this.selectedFiles = [];\n            this.selectedFilesTotal = 0;\n            this.__loaded = 0;\n\n            cfg = this.config;\n\n            /**\n             * UI 상태변경 이벤트 처리자\n             * UI의 상태변경 : open, close, upload 등의 변경사항이 발생되면 onStateChanged 함수를 후출하여 이벤트를 처리\n             */\n            var bound_onStateChanged = function (that) {\n\n                var state = {\n                    \"open\": function open() {},\n                    \"close\": function close() {},\n                    \"upload\": function upload() {}\n                };\n\n                if (cfg.onStateChanged) {\n                    cfg.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n                return true;\n            }.bind(this);\n\n            var bound_onSelectFile = function (_evt) {\n                var files = void 0;\n\n                if (!ax5.info.supportFileApi) {\n                    // file API 지원 안되는 브라우저.\n                    // input file에 multiple 지원 안됨 그러므로 단일 파일 처리만 하면 됨.\n                    files = { path: _evt.target.value };\n                } else if ('dataTransfer' in _evt) {\n                    files = _evt.dataTransfer.files;\n                } else if ('target' in _evt) {\n                    files = _evt.target.files;\n                } else if (_evt) {\n                    files = _evt;\n                }\n\n                if (!files) return false;\n\n                /// selectedFiles에 현재 파일 정보 담아두기\n                if (length in files) {\n                    this.selectedFiles = U.toArray(files);\n                } else {\n                    this.selectedFiles = [files];\n                }\n\n                if (cfg.progressBox) {\n                    bound_openProgressBox();\n                }\n                if (!cfg.manualUpload) {\n                    this.send();\n                }\n\n                if (!ax5.info.supportFileApi) {\n                    bound_alignLayout(false);\n                }\n            }.bind(this);\n\n            var bound_bindEvent = function () {\n                this.$fileSelector.off(\"click.ax5uploader\").on(\"click.ax5uploader\", function () {\n                    this.$inputFile.trigger(\"click\");\n                }.bind(this));\n\n                if (!ax5.info.supportFileApi) {\n                    this.$fileSelector.off(\"mouseover.ax5uploader\").on(\"mouseover.ax5uploader\", function () {\n                        bound_alignLayout(true);\n                    }.bind(this));\n\n                    this.$inputFile.off(\"mouseover.ax5uploader\").on(\"mouseover.ax5uploader\", function () {\n                        this.$fileSelector.addClass(\"active\");\n                    }.bind(this));\n\n                    this.$inputFile.off(\"mouseout.ax5uploader\").on(\"mouseout.ax5uploader\", function () {\n                        this.$fileSelector.removeClass(\"active\");\n\n                        bound_alignLayout(false);\n                    }.bind(this));\n                }\n\n                (function () {\n                    if (!this.$uploadedBox || !this.$uploadedBox.get(0)) return false;\n\n                    this.$uploadedBox.on(\"click\", \"[data-uploaded-item-cell]\", function () {\n                        var $this = jQuery(this),\n                            cellType = $this.attr(\"data-uploaded-item-cell\"),\n                            uploadedItemIndex = Number($this.parents('[data-ax5uploader-uploaded-item]').attr('data-ax5uploader-uploaded-item')),\n                            that = {};\n\n                        if (cfg.uploadedBox && cfg.uploadedBox.onclick) {\n                            that = {\n                                self: self,\n                                cellType: cellType,\n                                uploadedFiles: self.uploadedFiles,\n                                fileIndex: uploadedItemIndex\n                            };\n                            cfg.uploadedBox.onclick.call(that, that);\n                        }\n\n                        $this = null;\n                        cellType = null;\n                        uploadedItemIndex = null;\n                        that = null;\n                    });\n                }).call(this);\n\n                (function () {\n                    // dropZone 설정 방식 변경\n                    if (!ax5.info.supportFileApi) return false;\n                    if (!this.$dropZone || !this.$dropZone.get(0)) return false;\n\n                    var timer = void 0;\n\n                    this.$dropZone.parent().on(\"click\", \"[data-ax5uploader-dropzone]\", function (e) {\n                        if (this == e.target || $.contains(this, e.target)) {\n                            if (U.isFunction(cfg.dropZone.onclick)) {\n                                cfg.dropZone.onclick.call({\n                                    self: self\n                                });\n                            } else {\n                                self.$inputFile.trigger(\"click\");\n                            }\n                        }\n                    });\n\n                    this.$dropZone.get(0).addEventListener('dragover', function (e) {\n                        U.stopEvent(e);\n\n                        if (U.isFunction(cfg.dropZone.ondragover)) {\n                            cfg.dropZone.ondragover.call({\n                                self: self\n                            });\n                        } else {\n                            self.$dropZone.addClass(\"dragover\");\n                        }\n                    }, false);\n\n                    this.$dropZone.get(0).addEventListener('dragleave', function (e) {\n                        U.stopEvent(e);\n\n                        if (U.isFunction(cfg.dropZone.ondragover)) {\n                            cfg.dropZone.ondragout.call({\n                                self: self\n                            });\n                        } else {\n                            self.$dropZone.removeClass(\"dragover\");\n                        }\n                    }, false);\n\n                    this.$dropZone.get(0).addEventListener('drop', function (e) {\n                        U.stopEvent(e);\n\n                        if (U.isFunction(cfg.dropZone.ondrop)) {\n                            cfg.dropZone.ondrop.call({\n                                self: self\n                            });\n                        } else {\n                            self.$dropZone.removeClass(\"dragover\");\n                        }\n\n                        bound_onSelectFile(e || window.event);\n                    }, false);\n                }).call(this);\n            }.bind(this);\n\n            var bound_alignLayout = function (_TF) {\n                // 상황이 좋지 않은경우 (만약 버튼 클릭으로 input file click이 되지 않는 다면 z-index값을 높여서 버튼위를 덮는다.)\n                if (_TF) {\n                    if (!ax5.info.supportFileApi) {\n                        // ie9에서 inputFile을 직접 클릭하지 않으면 submit 오류발생함. submit access denied\n                        // 그래서 버튼위에 inputFile을 올려두어야 함. (position값을 이용하면 편하지만..)\n                        // 그런데 form을 안에두면 또 다른 이중폼 문제 발생소지 ㅜㅜ 불가피하게 버튼의 offset 값을 이용.\n                        var box = this.$fileSelector.offset();\n                        box.width = this.$fileSelector.outerWidth();\n                        box.height = this.$fileSelector.outerHeight();\n                        this.$inputFile.css(box);\n                    }\n                } else {\n                    this.$inputFile.css({\n                        left: -1000, top: -1000\n                    });\n                }\n            }.bind(this);\n\n            var bound_alignProgressBox = function (append) {\n                var _alignProgressBox = function _alignProgressBox() {\n                    var $window = jQuery(window),\n                        $body = jQuery(document.body);\n                    var pos = {},\n                        positionMargin = 6,\n                        dim = {},\n                        pickerDim = {},\n                        pickerDirection = void 0;\n\n                    // cfg.viewport.selector\n\n                    pos = this.$progressBox.parent().get(0) == this.$target.get(0) ? this.$fileSelector.position() : this.$fileSelector.offset();\n                    dim = {\n                        width: this.$fileSelector.outerWidth(),\n                        height: this.$fileSelector.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), $body.width()),\n                        winHeight: Math.max($window.height(), $body.height()),\n                        width: this.$progressBox.outerWidth(),\n                        height: this.$progressBox.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!cfg.progressBoxDirection || cfg.progressBoxDirection === \"\" || cfg.progressBoxDirection === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = cfg.progressBoxDirection;\n                    }\n\n                    if (append) {\n                        this.$progressBox.addClass(\"direction-\" + pickerDirection);\n                    }\n\n                    var positionCSS = function () {\n                        var css = { left: 0, top: 0 };\n                        switch (pickerDirection) {\n                            case \"top\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top + dim.height + positionMargin;\n                                break;\n                            case \"bottom\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top - pickerDim.height - positionMargin;\n                                break;\n                            case \"left\":\n                                css.left = pos.left + dim.width + positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                            case \"right\":\n                                css.left = pos.left - pickerDim.width - positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                        }\n                        return css;\n                    }();\n\n                    (function () {\n                        if (pickerDirection == \"top\" || pickerDirection == \"bottom\") {\n                            if (positionCSS.left < 0) {\n                                positionCSS.left = positionMargin;\n                                this.$progressBoxArrow.css({ left: pos.left + dim.width / 2 - positionCSS.left });\n                            } else if (positionCSS.left + pickerDim.width > pickerDim.winWidth) {\n                                positionCSS.left = pickerDim.winWidth - pickerDim.width - positionMargin;\n                                this.$progressBoxArrow.css({ left: pos.left + dim.width / 2 - positionCSS.left });\n                            }\n                        }\n                    }).call(this);\n\n                    this.$progressBox.css(positionCSS);\n                };\n\n                this.$progressBox.css({ top: -999 });\n                if (append) {\n                    // progressBox를 append 할 타겟 엘리먼트 펀단 후 결정.\n                    (function () {\n                        if (cfg.viewport) {\n                            return jQuery(cfg.viewport.selector);\n                        } else {\n                            return this.$target;\n                        }\n                    }).call(this).append(this.$progressBox);\n\n                    // progressBox 버튼에 이벤트 연결.\n                    this.$progressBox.off(\"click.ax5uploader\").on(\"click.ax5uploader\", \"button\", function (_evt) {\n                        var act = _evt.target.getAttribute(\"data-pregressbox-btn\");\n                        var processor = {\n                            \"upload\": function upload() {\n                                this.send();\n                            },\n                            \"abort\": function abort() {\n                                this.abort();\n                            }\n                        };\n                        if (processor[act]) processor[act].call(this);\n                    }.bind(this));\n                }\n\n                setTimeout(function () {\n                    _alignProgressBox.call(this);\n                }.bind(this));\n            }.bind(this);\n\n            var bound_openProgressBox = function () {\n                this.$progressBox.removeClass(\"destroy\");\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.removeAttr(\"disabled\");\n\n                // apend & align progress box\n                bound_alignProgressBox(\"append\");\n\n                // state change\n                bound_onStateChanged({\n                    self: this,\n                    state: \"open\"\n                });\n            }.bind(this);\n\n            var bound_closeProgressBox = function () {\n                this.$progressBox.addClass(\"destroy\");\n                setTimeout(function () {\n                    this.$progressBox.remove();\n                }.bind(this), cfg.animateTime);\n            }.bind(this);\n\n            var bound_startUpload = function () {\n\n                var processor = {\n                    \"html5\": function html5() {\n\n                        var uploadFile = this.selectedFiles.shift();\n                        if (!uploadFile) {\n                            // 업로드 종료\n                            bound_uploadComplete();\n                            return this;\n                        }\n\n                        var formData = new FormData();\n                        //서버로 전송해야 할 추가 파라미터 정보 설정\n\n                        this.$target.find(\"input\").each(function () {\n                            formData.append(this.name, this.value);\n                        });\n                        // 파일 아이템 추가\n                        formData.append(cfg.form.fileName, uploadFile);\n\n                        this.xhr = new XMLHttpRequest();\n                        this.xhr.open(\"post\", cfg.form.action, true);\n\n                        this.xhr.onload = function (e) {\n                            var res = e.target.response;\n                            try {\n                                if (typeof res == \"string\") res = U.parseJson(res);\n                            } catch (e) {\n                                return false;\n                            }\n                            if (cfg.debug) console.log(res);\n\n                            if (res.error) {\n                                if (cfg.debug) console.log(res.error);\n                                if (U.isFunction(cfg.onuploaderror)) {\n                                    cfg.onuploaderror.call({\n                                        self: this,\n                                        error: res.error\n                                    }, res);\n                                }\n                                self.send();\n                                return false;\n                            }\n\n                            bound_uploaded(res);\n                            self.send();\n                        };\n\n                        this.xhr.upload.onprogress = function (e) {\n                            // console.log(e.loaded, e.total);\n                            bound_updateProgressBar(e);\n                            if (U.isFunction(cfg.onprogress)) {\n                                cfg.onprogress.call({\n                                    loaded: e.loaded,\n                                    total: e.total\n                                }, e);\n                            }\n                        };\n                        this.xhr.send(formData); // multipart/form-data\n                    },\n                    \"form\": function form() {\n\n                        /// i'm busy\n                        this.__uploading = true;\n\n                        // 폼과 iframe을 만들어 페이지 아래에 삽입 후 업로드\n                        var $iframe = jQuery('<iframe src=\"javascript:false;\" name=\"ax5uploader-' + this.instanceId + '-iframe\" style=\"display:none;\"></iframe>');\n                        jQuery(document.body).append($iframe);\n\n                        // onload 이벤트 핸들러\n                        // action에서 파일을 받아 처리한 결과값을 텍스트로 출력한다고 가정하고 iframe의 내부 데이터를 결과값으로 callback 호출\n                        $iframe.load(function () {\n                            var doc = this.contentWindow ? this.contentWindow.document : this.contentDocument ? this.contentDocument : this.document,\n                                root = doc.documentElement ? doc.documentElement : doc.body,\n                                result = root.textContent ? root.textContent : root.innerText,\n                                res = void 0;\n\n                            try {\n                                res = JSON.parse(result);\n                            } catch (e) {\n                                res = {\n                                    error: \"Syntax error\",\n                                    body: result\n                                };\n                            }\n\n                            if (cfg.debug) console.log(res);\n                            if (res.error) {\n                                console.log(res);\n                            } else {\n                                bound_uploaded(res);\n                                $iframe.remove();\n\n                                setTimeout(function () {\n                                    bound_uploadComplete();\n                                }, 300);\n                            }\n                        });\n\n                        this.$inputFileForm.attr(\"target\", 'ax5uploader-' + this.instanceId + '-iframe').attr(\"action\", cfg.form.action).submit();\n\n                        this.selectedFilesTotal = 1;\n                        bound_updateProgressBar({\n                            loaded: 1,\n                            total: 1\n                        });\n                    }\n                };\n\n                if (this.__uploading === false) {\n                    // 전체 파일 사이즈 구하기\n                    var filesTotal = 0;\n                    this.selectedFiles.forEach(function (n) {\n                        filesTotal += n.size;\n                    });\n                    this.selectedFilesTotal = filesTotal;\n                    this.__loaded = 0;\n\n                    this.__uploading = true; // 업로드 시작 상태 처리\n                    this.$progressUpload.attr(\"disabled\", \"disabled\");\n                    this.$progressAbort.removeAttr(\"disabled\");\n                }\n\n                processor[ax5.info.supportFileApi ? \"html5\" : \"form\"].call(this);\n            }.bind(this);\n\n            var bound_updateProgressBar = function (e) {\n                this.__loaded += e.loaded;\n                this.$progressBar.css({ width: U.number(this.__loaded / this.selectedFilesTotal * 100, { round: 2 }) + '%' });\n                if (e.lengthComputable) {\n                    if (e.loaded >= e.total) {}\n                }\n            }.bind(this);\n\n            var bound_uploaded = function (res) {\n                if (cfg.debug) console.log(res);\n                this.uploadedFiles.push(res);\n                bound_repaintUploadedBox(); // 업로드된 파일 출력\n\n                if (U.isFunction(cfg.onuploaded)) {\n                    cfg.onuploaded.call({\n                        self: this\n                    }, res);\n                }\n            }.bind(this);\n\n            var bound_uploadComplete = function () {\n                this.__uploading = false; // 업로드 완료 상태처리\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n                if (cfg.progressBox) {\n                    bound_closeProgressBox();\n                }\n                if (U.isFunction(cfg.onuploadComplete)) {\n                    cfg.onuploadComplete.call({\n                        self: this\n                    });\n                }\n                // update uploadedFiles display\n\n                /// reset inputFile\n                bound_attachFileTag();\n            }.bind(this);\n\n            var bound_cancelUpload = function () {\n\n                var processor = {\n                    \"html5\": function html5() {\n                        if (this.xhr) {\n                            this.xhr.abort();\n                        }\n                    },\n                    \"form\": function form() {}\n                };\n\n                this.__uploading = false; // 업로드 완료 상태처리\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n                processor[ax5.info.supportFileApi ? \"html5\" : \"form\"].call(this);\n\n                if (cfg.progressBox) {\n                    bound_closeProgressBox();\n                }\n\n                //this.$inputFile.val(\"\");\n                /// reset inputFile\n                bound_attachFileTag();\n\n                if (cfg.debug) console.log(\"cancelUpload\");\n                // update uploadedFiles display\n            }.bind(this);\n\n            var bound_repaintUploadedBox = function () {\n                // uploadedBox 가 없다면 아무일도 하지 않음.\n                // onuploaded 함수 이벤트를 이용하여 개발자가 직접 업로드디 박스를 구현 한다고 이해 하자.\n                if (this.$uploadedBox === null) return this;\n\n                this.$uploadedBox.html(UPLOADER.tmpl.get(\"upoadedBox\", {\n                    uploadedFiles: this.uploadedFiles,\n                    icon: cfg.uploadedBox.icon,\n                    lang: cfg.uploadedBox.lang,\n                    supportFileApi: !!ax5.info.supportFileApi\n                }, cfg.uploadedBox.columnKeys));\n            }.bind(this);\n\n            var bound_attachFileTag = function () {\n                if (this.$inputFile && this.$inputFile.get(0)) {\n                    this.$inputFile.remove();\n                }\n                if (this.$inputFileForm && this.$inputFileForm.get(0)) {\n                    this.$inputFileForm.remove();\n                }\n\n                this.$inputFile = jQuery(UPLOADER.tmpl.get.call(this, \"inputFile\", {\n                    instanceId: this.instanceId,\n                    multiple: cfg.multiple,\n                    accept: cfg.accept,\n                    name: cfg.form.fileName\n                }));\n\n                if (ax5.info.supportFileApi) {\n                    jQuery(document.body).append(this.$inputFile);\n                } else {\n                    this.$fileSelector.attr(\"tabindex\", -1);\n                    this.$inputFileForm = jQuery(UPLOADER.tmpl.get.call(this, \"inputFileForm\", {\n                        instanceId: this.instanceId\n                    }));\n\n                    this.$inputFileForm.append(this.$inputFile);\n                    jQuery(document.body).append(this.$inputFileForm);\n                }\n\n                this.$inputFile.off(\"change.ax5uploader\").on(\"change.ax5uploader\", function (_evt) {\n                    bound_onSelectFile(_evt);\n                }.bind(this));\n            }.bind(this);\n\n            /**\n             * Preferences of uploader UI\n             * @method ax5uploader.setConfig\n             * @param {Object} _config - 클래스 속성값\n             * @param {Element} _config.target\n             * @param {Object} _config.form\n             * @param {String} _config.form.action - upload URL\n             * @param {String} _config.form.fileName - The name key of the upload file\n             * @param {Boolean} [_config.multiple=false] - Whether multiple files. In a browser where fileApi is not supported (eg IE9), it only works with false.\n             * @param {String} [_config.accept=\"\"] - accept mimeType (http://www.w3schools.com/TAgs/att_input_accept.asp)\n             * @param {Boolean} [_config.manualUpload=false] - Whether to automatically upload when a file is selected.\n             * @param {Boolean} [_config.progressBox=true] - Whether to use progressBox\n             * @param {String} [_config.progressBoxDirection=auto] - ProgressBox display direction\n             * @param {Object} [_config.dropZone]\n             * @param {Element} [_config.dropZone.target]\n             * @param {Function} [_config.dropZone.onclick]\n             * @param {Function} [_config.dropZone.ondragover]\n             * @param {Function} [_config.dropZone.ondragout]\n             * @param {Function} [_config.dropZone.ondrop]\n             * @param {Object} [_config.uploadedBox]\n             * @param {Element} [_config.uploadedBox.target]\n             * @param {Element} [_config.uploadedBox.icon]\n             * @param {Object} [_config.uploadedBox.columnKeys]\n             * @param {String} [_config.uploadedBox.columnKeys.name]\n             * @param {String} [_config.uploadedBox.columnKeys.type]\n             * @param {String} [_config.uploadedBox.columnKeys.size]\n             * @param {String} [_config.uploadedBox.columnKeys.uploadedName]\n             * @param {String} [_config.uploadedBox.columnKeys.downloadPath]\n             * @param {Object} [_config.uploadedBox.lang]\n             * @param {String} [_config.uploadedBox.lang.supportedHTML5_emptyListMsg]\n             * @param {String} [_config.uploadedBox.lang.emptyListMsg]\n             * @param {Function} [_config.uploadedBox.onchange]\n             * @param {Function} [_config.uploadedBox.onclick]\n             * @param {Function} [_config.validateSelectedFiles]\n             * @param {Function} [_config.onprogress] - return loaded, total\n             * @param {Function} [_config.onuploaded] - return self\n             * @param {Function} [_config.onuploaderror] - return self, error\n             * @param {Function} [_config.onuploadComplete] - return self\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5uploader\", \"401\", \"init\"));\n                    return this;\n                }\n\n                this.$target = jQuery(cfg.target);\n\n                // 파일 드랍존은 옵션 사항.\n                if (cfg.dropZone && cfg.dropZone.target && ax5.info.supportFileApi) {\n                    this.$dropZone = jQuery(cfg.dropZone.target);\n                    this.$dropZone.attr(\"data-ax5uploader-dropzone\", this.instanceId);\n                }\n\n                // uploadedBox 옵션 사항\n                if (cfg.uploadedBox && cfg.uploadedBox.target) {\n                    this.$uploadedBox = jQuery(cfg.uploadedBox.target);\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        cfg = jQuery.extend(true, cfg, data);\n                    }\n                }).call(this, U.parseJson(this.$target.attr(\"data-ax5uploader-config\"), true));\n\n                // detect element\n                /// fileSelector 수집\n                this.$fileSelector = this.$target.find('[data-ax5uploader-button=\"selector\"]');\n\n                if (this.$fileSelector.length === 0) {\n                    console.log(ax5.info.getError(\"ax5uploader\", \"402\", \"can not find file selector\"));\n                    return this;\n                }\n\n                // input file 추가\n                bound_attachFileTag();\n\n                // btns 확인\n                cfg.btns = jQuery.extend({}, this.defaultBtns, cfg.btns);\n\n                this.$progressBox = jQuery(UPLOADER.tmpl.get.call(this, \"progressBox\", {\n                    instanceId: this.instanceId,\n                    btns: cfg.btns\n                }));\n                this.$progressBar = this.$progressBox.find('[role=\"progressbar\"]');\n                this.$progressBoxArrow = this.$progressBox.find(\".ax-progressbox-arrow\");\n                this.$progressUpload = this.$progressBox.find('[data-pregressbox-btn=\"upload\"]');\n                this.$progressAbort = this.$progressBox.find('[data-pregressbox-btn=\"abort\"]');\n\n                // file API가 지원되지 않는 브라우저는 중지 기능 제공 못함.\n                if (!ax5.info.supportFileApi) {\n                    this.$progressAbort.hide();\n                }\n                // 파일버튼 등에 이벤트 연결.\n                bound_bindEvent();\n\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * @method ax5uploader.send\n             * @returns {ax5uploader}\n             *\n             */\n            this.send = function () {\n                return function () {\n                    // 업로드 시작\n                    if (U.isFunction(cfg.validateSelectedFiles)) {\n                        var that = {\n                            self: this,\n                            uploadedFiles: this.uploadedFiles,\n                            selectedFiles: this.selectedFiles\n                        };\n                        if (!cfg.validateSelectedFiles.call(that, that)) {\n                            bound_cancelUpload();\n                            return false;\n                            // 전송처리 안함.\n                        }\n                    }\n\n                    bound_startUpload();\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5uploader.abort\n             * @returns {ax5uploader}\n             */\n            this.abort = function () {\n                return function () {\n                    if (!ax5.info.supportFileApi) {\n                        alert(\"This browser not supported abort method\");\n                        return this;\n                    }\n                    bound_cancelUpload();\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5uploader.setUploadedFiles\n             * @param {Array} _files - JSON formatting can all be overridden in columnKeys.\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             * var upload1 = new ax5.ui.uploader();\n             * upload1.setConfig({\n             *  ...\n             * });\n             *\n             *\n             * $.ajax({\n             *     url: \"api/fileListLoad.php\",\n             *     success: function (res) {\n             *         // res JSON format\n             *         // [{\n             *         // \"name\": \"barcode-scan-ani.gif\",\n             *         // \"saveName\": \"barcode-scan-ani.gif\",\n             *         // \"type\": \"file\",\n             *         // \"fileSize\": \"3891664\",\n             *         // \"uploadedPath\": \"/ax5ui-uploader/test/api/files\",\n             *         // \"thumbUrl\": \"\"\n             *         // }]\n             *         upload1.setUploadedFiles(res);\n             *     }\n             * });\n             * ```\n             */\n            this.setUploadedFiles = function (_files) {\n                if (U.isArray(_files)) {\n                    this.uploadedFiles = _files;\n                }\n                if (U.isString(_files)) {\n                    try {\n                        this.uploadedFiles = JSON.parse(_files);\n                    } catch (e) {}\n                }\n\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * Removes the object corresponding to the index passed to the argument from uploadedFiles.\n             * @method ax5uploader.removeFile\n             * @param {Number} _index\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             * // The actual file is not deleted\n             * upload1.removeFile(fileIndex);\n             * ```\n             */\n            this.removeFile = function (_index) {\n                if (!isNaN(Number(_index))) {\n                    this.uploadedFiles.splice(_index, 1);\n                }\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * Empty uploadedFiles\n             * @method ax5uploader.removeFileAll\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            this.removeFileAll = function () {\n                this.uploadedFiles = [];\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * @method ax5uploader.selectFile\n             * @returns {Boolean}\n             */\n            this.selectFile = function () {\n                if (ax5.info.supportFileApi) {\n                    this.$inputFile.trigger(\"click\");\n                    return true;\n                }\n                return false;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                UI.uploader_instance = UI.uploader_instance || [];\n                UI.uploader_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    //this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5uploader;\n    }());\n\n    UPLOADER = ax5.ui.uploader;\n})();\n\n// todo :\n// html5용 업로드 - 구현완료\n// abort, 여러개의 파일이 올라가는 중간에 abort 하면 업로드된 파일은 두고. 안올라간 파일만 중지 -- ok\n// set uploded files\n// uploaded files display, needs columnKeys\n// delete file\n\n// dropFile support\n// ax5.ui.uploader.tmpl\n(function () {\n\n    var UPLOADER = ax5.ui.uploader;\n\n    var uploadProgress = function uploadProgress(columnKeys) {\n        return '\\n        ';\n    };\n\n    var inputFile = function inputFile(columnKeys) {\n        return '<input type=\"file\" data-ax5uploader-input=\"{{instanceId}}\" name=\"{{name}}\" {{#multiple}}multiple{{/multiple}} accept=\"{{accept}}\" />';\n    };\n\n    var inputFileForm = function inputFileForm(columnKeys) {\n        return '<form data-ax5uploader-form=\"{{instanceId}}\" name=\"ax5uploader-{{instanceId}}-form\" method=\"post\" enctype=\"multipart/form-data\"></form>';\n    };\n\n    var progressBox = function progressBox(columnKeys) {\n        return '\\n<div data-ax5uploader-progressbox=\"{{instanceId}}\" class=\"{{theme}}\">\\n    <div class=\"ax-progressbox-body\">\\n        <div class=\"ax-pregressbox-content\">\\n            <div class=\"progress\">\\n              <div class=\"progress-bar progress-bar-striped active\" role=\"progressbar\" style=\"width: 0\">\\n                <span class=\"sr-only\">0% Complete</span>\\n              </div>\\n            </div>\\n        </div>\\n        {{#btns}}\\n            <div class=\"ax-progressbox-buttons\">\\n            {{#btns}}\\n                {{#@each}}\\n                <button data-pregressbox-btn=\"{{@key}}\" class=\"btn btn-default {{@value.theme}}\">{{@value.label}}</button>\\n                {{/@each}}\\n            {{/btns}}\\n            </div>\\n        {{/btns}}\\n    </div>\\n    <div class=\"ax-progressbox-arrow\"></div>\\n</div>\\n';\n    };\n\n    var upoadedBox = function upoadedBox(columnKeys) {\n        return '\\n{{#uploadedFiles}}<div data-ax5uploader-uploaded-item=\"{{@i}}\">\\n    <div class=\"uploaded-item-holder\">\\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"download\">{{{icon.download}}}</div>\\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filename\">{{' + columnKeys.name + '}}</div>\\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filesize\">({{#@fn_get_byte}}{{' + columnKeys.size + '}}{{/@fn_get_byte}})</div>\\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"delete\">{{{icon.delete}}}</div>\\n    </div>\\n</div>{{/uploadedFiles}}\\n{{^uploadedFiles}}\\n{{#supportFileApi}}{{{lang.supportedHTML5_emptyListMsg}}}{{/supportFileApi}}\\n{{^supportFileApi}}{{{lang.emptyListMsg}}}{{/supportFileApi}}\\n{{/uploadedFiles}}\\n';\n    };\n\n    UPLOADER.tmpl = {\n        \"uploadProgress\": uploadProgress,\n        \"inputFile\": inputFile,\n        \"inputFileForm\": inputFileForm,\n        \"progressBox\": progressBox,\n        \"upoadedBox\": upoadedBox,\n\n        get: function get(tmplName, data, columnKeys) {\n            data[\"@fn_get_byte\"] = function () {\n                return function (text, render) {\n                    return ax5.util.number(render(text), { round: 2, byte: true });\n                };\n            };\n            return ax5.mustache.render(UPLOADER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.combobox\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var COMBOBOX;\n\n    UI.addClass({\n        className: \"combobox\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5combobox\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * options.push({value: \"1\", text: \"string\"});\n         * options.push({value: \"2\", text: \"number\"});\n         * options.push({value: \"3\", text: \"substr\"});\n         * options.push({value: \"4\", text: \"substring\"});\n         * options.push({value: \"search\", text: \"search\"});\n         * options.push({value: \"parseInt\", text: \"parseInt\"});\n         * options.push({value: \"toFixed\", text: \"toFixed\"});\n         * options.push({value: \"min\", text: \"min\"});\n         * options.push({value: \"max\", text: \"max\"});\n         *\n         * var myCombo = new ax5.ui.combobox({\n         *     theme: \"danger\",\n         *     removeIcon: '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>'\n         * });\n         * ```\n         */\n        var ax5combobox = function ax5combobox() {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                removeIcon: 'X',\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'now loading..'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n\n            this.queue = [];\n            this.activecomboboxOptionGroup = null;\n            this.activecomboboxQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var ctrlKeys = {\n                \"18\": \"KEY_ALT\",\n                \"8\": \"KEY_BACKSPACE\",\n                \"17\": \"KEY_CONTROL\",\n                \"46\": \"KEY_DELETE\",\n                \"40\": \"KEY_DOWN\",\n                \"35\": \"KEY_END\",\n                \"187\": \"KEY_EQUAL\",\n                \"27\": \"KEY_ESC\",\n                \"36\": \"KEY_HOME\",\n                \"45\": \"KEY_INSERT\",\n                \"37\": \"KEY_LEFT\",\n                \"189\": \"KEY_MINUS\",\n                \"34\": \"KEY_PAGEDOWN\",\n                \"33\": \"KEY_PAGEUP\",\n                // \"190\": \"KEY_PERIOD\",\n                \"13\": \"KEY_RETURN\",\n                \"39\": \"KEY_RIGHT\",\n                \"16\": \"KEY_SHIFT\",\n                // \"32\": \"KEY_SPACE\",\n                \"9\": \"KEY_TAB\",\n                \"38\": \"KEY_UP\",\n                \"91\": \"KEY_WINDOW\"\n                //\"107\" : \"NUMPAD_ADD\",\n                //\"194\" : \"NUMPAD_COMMA\",\n                //\"110\" : \"NUMPAD_DECIMAL\",\n                //\"111\" : \"NUMPAD_DIVIDE\",\n                //\"12\" : \"NUMPAD_EQUAL\",\n                //\"106\" : \"NUMPAD_MULTIPLY\",\n                //\"109\" : \"NUMPAD_SUBTRACT\"\n            },\n                onStateChanged = function onStateChanged(item, that) {\n                if (item && item.onStateChanged) {\n                    item.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                if (that.state == \"changeValue\") {\n                    if (item && item.onChange) {\n                        item.onChange.call(that, that);\n                    } else if (this.onChange) {\n                        this.onChange.call(that, that);\n                    }\n                }\n\n                item = null;\n                that = null;\n                return true;\n            },\n                alignComboboxDisplay = function alignComboboxDisplay() {\n                var i = this.queue.length,\n                    w;\n\n                while (i--) {\n                    var item = this.queue[i];\n                    if (item.$display) {\n                        w = Math.max(item.$select.outerWidth(), U.number(item.minWidth));\n                        item.$display.css({\n                            \"min-width\": w\n                        });\n                        if (item.reset) {\n                            item.$display.find(\".addon-icon-reset\").css({\n                                \"line-height\": this.queue[i].$display.height() + \"px\"\n                            });\n                        }\n\n                        // 높이조절 처리\n                        if (item.multiple) {\n                            var displayTableHeightAdjust = function () {\n                                return U.number(item.$display.css(\"border-top-width\")) + U.number(item.$display.css(\"border-bottom-width\"));\n                            }.call(this);\n                            item.$target.height('');\n                            item.$display.height('');\n\n                            var displayTableHeight = item.$displayTable.outerHeight();\n                            if (Math.abs(displayTableHeight - item.$target.height()) > displayTableHeightAdjust) {\n                                item.$target.css({ height: displayTableHeight + displayTableHeightAdjust + 4 });\n                                item.$display.css({ height: displayTableHeight + displayTableHeightAdjust + 4 });\n                            }\n                        }\n                    }\n                }\n\n                i = null;\n                w = null;\n                return this;\n            },\n                alignComboboxOptionGroup = function alignComboboxOptionGroup(append) {\n                if (!this.activecomboboxOptionGroup) return this;\n\n                var item = this.queue[this.activecomboboxQueueIndex],\n                    pos = {},\n                    positionMargin = 0,\n                    dim = {},\n                    pickerDim = {},\n                    pickerDirection;\n\n                if (append) jQuery(document.body).append(this.activecomboboxOptionGroup);\n\n                pos = item.$target.offset();\n                dim = {\n                    width: item.$target.outerWidth(),\n                    height: item.$target.outerHeight()\n                };\n                pickerDim = {\n                    winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                    winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                    width: this.activecomboboxOptionGroup.outerWidth(),\n                    height: this.activecomboboxOptionGroup.outerHeight()\n                };\n\n                // picker css(width, left, top) & direction 결정\n                if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                    // set direction\n                    pickerDirection = \"top\";\n\n                    if (pos.top - pickerDim.height - positionMargin < 0) {\n                        pickerDirection = \"top\";\n                    } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                        pickerDirection = \"bottom\";\n                    }\n                } else {\n                    pickerDirection = item.direction;\n                }\n\n                if (append) {\n                    this.activecomboboxOptionGroup.addClass(\"direction-\" + pickerDirection);\n                }\n                this.activecomboboxOptionGroup.css(function () {\n                    if (pickerDirection == \"top\") {\n                        if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                            var newTop = pos.top + dim.height / 2 - pickerDim.height / 2;\n                            if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                newTop = 0;\n                            }\n                            if (newTop < 0) {\n                                newTop = 0;\n                            }\n\n                            return {\n                                left: pos.left,\n                                top: newTop,\n                                width: dim.width\n                            };\n                        }\n                        return {\n                            left: pos.left,\n                            top: pos.top + dim.height + 1,\n                            width: dim.width\n                        };\n                    } else if (pickerDirection == \"bottom\") {\n                        return {\n                            left: pos.left,\n                            top: pos.top - pickerDim.height - 1,\n                            width: dim.width\n                        };\n                    }\n                }.call(this));\n            },\n                onBodyClick = function onBodyClick(e, target) {\n                if (!this.activecomboboxOptionGroup) return this;\n\n                var item = this.queue[this.activecomboboxQueueIndex],\n                    clickEl = \"display\";\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-option-value\")) {\n                        clickEl = \"optionItem\";\n                        return true;\n                    } else if (item.$target.get(0) == target) {\n                        clickEl = \"display\";\n                        return true;\n                    }\n                });\n\n                if (!target) {\n                    this.close();\n                    return this;\n                } else if (clickEl === \"optionItem\") {\n\n                    setOptionSelect.call(this, item.id, {\n                        index: {\n                            gindex: target.getAttribute(\"data-option-group-index\"),\n                            index: target.getAttribute(\"data-option-index\")\n                        }\n                    }, undefined, true);\n\n                    alignComboboxDisplay.call(this);\n                    alignComboboxOptionGroup.call(this);\n\n                    if (!item.multiple) {\n                        this.close();\n                    }\n                } else {}\n\n                return this;\n            },\n                getLabel = function getLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                // 템플릿에 전달 해야할 데이터 선언\n                var data = {};\n                data.id = item.id;\n                data.theme = item.theme;\n                data.size = \"ax5combobox-option-group-\" + item.size;\n                data.multiple = item.multiple;\n                data.lang = item.lang;\n                data.options = item.options;\n                data.selected = item.selected;\n                data.hasSelected = data.selected && data.selected.length > 0;\n                data.removeIcon = item.removeIcon;\n\n                return COMBOBOX.tmpl.get.call(this, \"label\", data, item.columnKeys);\n            },\n                printLabel = function printLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                item.$displayLabel.find('[data-ax5combobox-selected-label]').remove();\n                item.$displayLabelInput.before(getLabel.call(this, queIdx));\n            },\n                focusLabel = function focusLabel(queIdx) {\n                if (this.queue[queIdx].disabled) return this;\n\n                this.queue[queIdx].$displayLabel.trigger(\"focus\");\n                this.queue[queIdx].$displayLabelInput.focus();\n            },\n                clearLabel = function clearLabel(queIdx) {\n                this.queue[queIdx].$displayLabelInput.val('');\n            },\n                blurLabel = function blurLabel(queIdx) {\n                this.queue[queIdx].$displayLabel.trigger(\"blur\");\n                this.queue[queIdx].$displayLabelInput.trigger(\"blur\");\n            },\n                onSearch = function onSearch(queIdx, searchWord) {\n                this.queue[queIdx].waitOptions = true;\n\n                this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(COMBOBOX.tmpl.get.call(this, \"option\", this.queue[queIdx], this.queue[queIdx].columnKeys)));\n\n                this.queue[queIdx].onSearch.call({\n                    self: this,\n                    item: this.queue[queIdx],\n                    searchWord: searchWord\n                }, function (O) {\n\n                    var data = {};\n                    var item = this.queue[this.activecomboboxQueueIndex];\n                    if (!item) return false;\n\n                    /// 현재 selected 검증후 처리\n                    (function (item, O) {\n                        var optionsMap = {};\n                        O.options.forEach(function (_O, _OIndex) {\n                            _O[\"@index\"] = _OIndex;\n                            optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                        });\n                        if (U.isArray(item.selected)) {\n                            item.selected.forEach(function (_O) {\n                                if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                    O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                }\n                            });\n                        }\n                    })(item, O);\n\n                    item.options = syncComboboxOptions.call(this, this.activecomboboxQueueIndex, O.options);\n\n                    alignComboboxDisplay.call(this);\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5combobox-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n                    data.lang = item.lang;\n                    data.options = item.options;\n\n                    this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n                }.bind(this));\n            },\n                focusWord = function focusWord(queIdx, searchWord) {\n                //console.log(searchWord);\n\n                if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                var options = [],\n                    i = -1,\n                    l = this.queue[queIdx].indexedOptions.length - 1,\n                    n;\n\n                if (searchWord != \"\") {\n                    var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n                    searchWord = searchWord.replace(regExp, \"\");\n                    if (this.queue[queIdx].onSearch) {\n                        onSearch.call(this, queIdx, searchWord);\n\n                        try {\n                            return options;\n                        } finally {\n                            options = null;\n                            i = null;\n                            l = null;\n                            n = null;\n                        }\n                        // if there is a \"onSearch\", to end this process\n                    }\n\n                    while (l - i++) {\n                        n = this.queue[queIdx].indexedOptions[i];\n\n                        if (('' + n.text).toLowerCase() == searchWord.toLowerCase()) {\n                            options = [{ '@findex': n['@findex'], optionsSort: 0 }];\n                            break;\n                        } else {\n                            var sort = ('' + n.text).toLowerCase().search(searchWord.toLowerCase());\n                            if (sort > -1) {\n                                options.push({ '@findex': n['@findex'], optionsSort: sort });\n                                if (options.length > 2) break;\n                            }\n                            sort = null;\n                        }\n                    }\n                    options.sort(function (a, b) {\n                        return a.optionsSort - b.optionsSort;\n                    });\n                }\n\n                if (options && options.length > 0) {\n                    focusMove.call(this, queIdx, undefined, options[0]['@findex']);\n                } else {\n                    focusClear.call(this, queIdx);\n                }\n\n                try {\n                    return options;\n                } finally {\n                    options = null;\n                    i = null;\n                    l = null;\n                    n = null;\n                }\n            },\n                focusClear = function focusClear(queIdx) {\n                if (this.activecomboboxOptionGroup) {\n                    this.activecomboboxOptionGroup.find('[data-option-focus-index]').removeClass(\"hover\").removeAttr(\"data-option-selected\");\n                }\n\n                this.queue[queIdx].optionFocusIndex = -1;\n            },\n                focusMove = function focusMove(queIdx, direction, findex) {\n                var _focusIndex, _prevFocusIndex, focusOptionEl, optionGroupScrollContainer;\n                var item = this.queue[queIdx];\n\n                if (this.activecomboboxOptionGroup && item.options && item.options.length > 0) {\n\n                    if (typeof findex !== \"undefined\") {\n                        _focusIndex = findex;\n                    } else {\n                        _prevFocusIndex = item.optionFocusIndex == -1 ? item.optionSelectedIndex || -1 : item.optionFocusIndex;\n                        if (_prevFocusIndex == -1) {\n                            _focusIndex = 0;\n                            //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n                        } else {\n                            _focusIndex = _prevFocusIndex + direction;\n                            if (_focusIndex < 0) _focusIndex = 0;else if (_focusIndex > item.optionItemLength - 1) _focusIndex = item.optionItemLength - 1;\n                        }\n                    }\n\n                    item.optionFocusIndex = _focusIndex;\n\n                    // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n                    // todo : editable 로 추가된 options가 제거 되지 않으므로. 인덱스 검색을 좀 더 보강 해야함.\n                    if (item.options[_focusIndex] && item.options[_focusIndex].hide) {\n                        // 옵션이 없는 값이 선택된 경우\n                        if (typeof direction === \"undefined\") {\n                            return this;\n                        } else {\n                            var isStrop = false;\n                            while (item.options[_focusIndex].hide) {\n                                _focusIndex = _focusIndex + direction;\n                                if (_focusIndex < 0) {\n                                    _focusIndex = 0;\n                                    break;\n                                } else if (_focusIndex > item.optionItemLength - 1) {\n                                    _focusIndex = item.optionItemLength - 1;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (typeof _focusIndex !== \"undefined\") {\n                        this.activecomboboxOptionGroup.find('[data-option-focus-index]').removeClass(\"hover\");\n\n                        focusOptionEl = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + _focusIndex + '\"]').addClass(\"hover\");\n\n                        optionGroupScrollContainer = this.activecomboboxOptionGroup.find('[data-els=\"content\"]');\n\n                        if (focusOptionEl.get(0)) {\n                            var focusOptionElHeight = focusOptionEl.outerHeight(),\n                                optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                                optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                                focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                            if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                                optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                            } else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                                optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                            }\n                            // optionGroup scroll check\n\n                            if (typeof direction !== \"undefined\") {\n                                item.$displayLabelInput.val(item.options[_focusIndex].text);\n                            }\n                        }\n                    }\n                }\n            },\n                syncComboboxOptions = function () {\n                var setSelected = function setSelected(queIdx, O) {\n                    if (!O) {\n                        this.queue[queIdx].selected = [];\n                    } else {\n                        this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                        /*\n                         콤보박스는 selected가 없을 때 options의 첫번째 아이템이 selected가 되지 않는다.\n                         if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                         else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n                         */\n                    }\n                };\n\n                return function (queIdx, options) {\n                    var item = this.queue[queIdx];\n                    var po,\n                        elementOptions,\n                        newOptions,\n                        focusIndex = 0;\n                    setSelected.call(this, queIdx, false); // item.selected 초기화\n\n                    if (options) {\n                        item.options = options;\n                        item.indexedOptions = [];\n\n                        // combobox options 태그 생성\n                        po = [];\n                        po.push('<option value=\"\"></option>');\n\n                        item.options.forEach(function (O, OIndex) {\n                            /// @gindex : index of optionGroup\n                            /// @index : index of options (if you use optionGroup then the index is not unique)\n                            if (O.optgroup) {\n                                O['@gindex'] = OIndex;\n                                O.options.forEach(function (OO, OOIndex) {\n                                    OO['@index'] = OOIndex;\n                                    OO['@findex'] = focusIndex;\n                                    po.push('<option value=\"' + OO[item.columnKeys.optionValue] + '\" ' + (OO[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>' + OO[item.columnKeys.optionText] + '</option>');\n                                    if (OO[item.columnKeys.optionSelected]) {\n                                        setSelected.call(self, queIdx, OO);\n                                    }\n\n                                    item.indexedOptions.push({\n                                        '@gindex': OIndex,\n                                        '@index': OOIndex,\n                                        '@findex': focusIndex,\n                                        value: OO[item.columnKeys.optionValue],\n                                        text: OO[item.columnKeys.optionText]\n                                    });\n                                    focusIndex++;\n                                });\n                            } else {\n                                O['@index'] = OIndex;\n                                O['@findex'] = focusIndex;\n                                po.push('<option value=\"' + O[item.columnKeys.optionValue] + '\" ' + (O[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>' + O[item.columnKeys.optionText] + '</option>');\n                                if (O[item.columnKeys.optionSelected]) {\n                                    setSelected.call(self, queIdx, O);\n                                }\n\n                                item.indexedOptions.push({\n                                    '@index': OIndex,\n                                    '@findex': focusIndex,\n                                    value: O[item.columnKeys.optionValue],\n                                    text: O[item.columnKeys.optionText]\n                                });\n                                focusIndex++;\n                            }\n                        });\n                        item.optionItemLength = focusIndex;\n                        item.$select.html(po.join(''));\n                    } else {\n                        /// select > options 태그로 스크립트 options를 만들어주는 역할\n                        if (item.$select.get(0).options && item.$select.get(0).options.length) item.$select.get(0).options[0].selected = false;\n                        elementOptions = U.toArray(item.$select.get(0).options);\n\n                        // select option 스크립트 생성\n                        newOptions = [];\n                        elementOptions.forEach(function (O, OIndex) {\n                            var option = {};\n                            option[item.columnKeys.optionValue] = O.value;\n                            option[item.columnKeys.optionText] = O.text;\n                            option[item.columnKeys.optionSelected] = O.selected;\n                            option['@index'] = OIndex;\n                            option['@findex'] = focusIndex;\n                            if (O.selected) setSelected.call(self, queIdx, option);\n                            newOptions.push(option);\n                            focusIndex++;\n\n                            option = null;\n                        });\n                        item.options = newOptions;\n                        item.indexedOptions = newOptions;\n\n                        item.$select.prepend('<option value=\"\"></option>');\n                        item.$select.get(0).options[0].selected = true;\n                    }\n\n                    po = null;\n                    elementOptions = null;\n                    newOptions = null;\n                    return item.options;\n                };\n            }(),\n                getQueIdx = function getQueIdx(boundID) {\n                if (boundID instanceof jQuery) {\n                    boundID = boundID.data(\"data-ax5combobox-id\");\n                } else if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-ax5combobox-id\");\n                }\n                if (!U.isString(boundID)) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"getQueIdx\"));\n                    return;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            },\n                getSelected = function getSelected(_item, o, selected) {\n                if (typeof selected === \"undefined\") {\n                    return _item.multiple ? !o : true;\n                } else {\n                    return selected;\n                }\n            },\n                clearSelected = function clearSelected(queIdx) {\n                this.queue[queIdx].options.forEach(function (n) {\n                    if (n.optgroup) {\n                        n.options.forEach(function (nn) {\n                            nn.selected = false;\n                        });\n                    } else {\n                        n.selected = false;\n                    }\n                });\n            },\n                setOptionSelect = function () {\n                var processor = {\n                    'index': function index(queIdx, value, selected, setValueType) {\n                        // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                        var item = this.queue[queIdx];\n\n                        if (U.isString(value.index.gindex)) {\n                            if (typeof item.options[value.index.gindex] !== \"undefined\") {\n\n                                item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected], selected);\n\n                                if (self.activecomboboxOptionGroup) {\n                                    self.activecomboboxOptionGroup.find('[data-option-group-index=\"' + value.index.gindex + '\"][data-option-index=\"' + value.index.index + '\"]').attr(\"data-option-Selected\", item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected].toString());\n                                }\n                            }\n                        } else {\n                            if (typeof item.options[value.index.index] !== \"undefined\") {\n\n                                item.options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.index][item.columnKeys.optionSelected], selected);\n\n                                if (self.activecomboboxOptionGroup) {\n                                    self.activecomboboxOptionGroup.find('[data-option-index=\"' + value.index.index + '\"]').attr(\"data-option-Selected\", item.options[value.index.index][item.columnKeys.optionSelected].toString());\n                                }\n                            }\n                        }\n\n                        if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                            syncComboboxOptions.call(this, queIdx, item.options);\n                            alignComboboxOptionGroup.call(this);\n                        }\n                    },\n                    'arr': function arr(queIdx, values, selected, setValueType) {\n                        values.forEach(function (value) {\n                            if (U.isString(value) || U.isNumber(value)) {\n                                processor.text.call(self, queIdx, value, selected, \"justSetValue\");\n                            } else {\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(self, queIdx, value, selected, \"justSetValue\");\n                                        break;\n                                    }\n                                }\n                            }\n                        });\n\n                        syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                        alignComboboxOptionGroup.call(this);\n                    },\n                    'value': function value(queIdx, _value3, selected, setValueType) {\n                        var item = this.queue[queIdx];\n                        var addOptions;\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionValue] == _value3[item.columnKeys.optionValue];\n                        });\n\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        } else {\n                            // 새로운 값 추가\n                            optionIndex = item.options.length;\n                            addOptions = {\n                                \"@index\": optionIndex,\n                                hide: true,\n                                addedOption: true\n                            };\n                            addOptions[item.columnKeys.optionValue] = _value3;\n                            addOptions[item.columnKeys.optionText] = _value3;\n                            item.options.push(addOptions);\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        }\n                        if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                            syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                            alignComboboxOptionGroup.call(this);\n                        }\n                    },\n                    'text': function text(queIdx, value, selected, setValueType) {\n                        var item = this.queue[queIdx];\n                        var addOptions;\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionText] == value;\n                        });\n\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        } else {\n                            // 새로운 값 추가\n                            optionIndex = item.options.length;\n                            addOptions = {\n                                \"@index\": optionIndex,\n                                hide: true,\n                                addedOption: true\n                            };\n                            addOptions[item.columnKeys.optionValue] = value;\n                            addOptions[item.columnKeys.optionText] = value;\n                            item.options.push(addOptions);\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        }\n                        if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                            syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                            alignComboboxOptionGroup.call(this);\n                        }\n                    },\n                    'clear': function clear(queIdx) {\n                        clearSelected.call(this, queIdx);\n                        syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                        //focusLabel.call(this, queIdx);\n                        focusClear.call(this, queIdx);\n\n                        if (this.activecomboboxOptionGroup) {\n                            this.activecomboboxOptionGroup.find('[data-option-index]').attr(\"data-option-Selected\", \"false\");\n                        }\n                        this.queue[queIdx].optionSelectedIndex = -1;\n                    }\n                };\n                return function (boundID, value, selected, _option) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                        return;\n                    }\n\n                    if (typeof value == \"undefined\") {\n                        throw \"error not found value\";\n                    } else if (U.isArray(value)) {\n                        processor.clear.call(this, queIdx);\n                        processor.arr.call(this, queIdx, this.queue[queIdx].multiple || value.length == 0 ? value : [value[value.length - 1]], selected);\n                    } else if (U.isString(value) || U.isNumber(value)) {\n                        if (typeof value !== \"undefined\" && value !== null && !this.queue[queIdx].multiple) {\n                            clearSelected.call(this, queIdx);\n                        }\n                        processor.text.call(this, queIdx, value, selected, \"justSetValue\");\n                    } else {\n                        if (value === null) {\n                            processor.clear.call(this, queIdx);\n                        } else {\n                            if (!this.queue[queIdx].multiple) {\n                                clearSelected.call(this, queIdx);\n                            }\n                            for (var key in processor) {\n                                if (value[key]) {\n                                    processor[key].call(this, queIdx, value, selected, \"justSetValue\");\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                    printLabel.call(this, queIdx);\n                    focusLabel.call(this, queIdx);\n\n                    if (typeof value !== \"undefined\") {\n                        if (_option && !_option.noStateChange) {\n                            onStateChanged.call(this, this.queue[queIdx], {\n                                self: this,\n                                item: this.queue[queIdx],\n                                state: \"changeValue\",\n                                value: this.queue[queIdx].selected\n                            });\n                        }\n                    }\n\n                    boundID = null;\n                    return this;\n                };\n            }();\n\n            /// private end\n\n            /**\n             * Preferences of combobox UI\n             * @method ax5combobox.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5combobox}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n                jQuery(window).bind(\"resize.ax5combobox-display-\" + this.instanceId, function () {\n                    alignComboboxDisplay.call(this);\n                }.bind(this));\n            };\n\n            /**\n             * bind combobox\n             * @method ax5combobox.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @returns {ax5combobox}\n             */\n            this.bind = function (item) {\n                var bindComboboxTarget = function () {\n                    var debouncedFocusWord = U.debounce(function (queIdx) {\n                        if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                        focusWord.call(self, queIdx, this.queue[queIdx].$displayLabelInput.val());\n                    }, 150);\n\n                    var blurLabel = function blurLabel(queIdx) {\n                        clearLabel.call(this, queIdx);\n                    };\n\n                    var comboboxEvent = {\n                        'click': function click(queIdx, e) {\n                            var clickEl;\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-ax5combobox-remove\")) {\n                                    clickEl = \"optionItemRemove\";\n                                    return true;\n                                } else if (target.getAttribute(\"data-selected-clear\")) {\n                                    clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                if (clickEl === \"optionItemRemove\") {\n                                    var selectedIndex = target.getAttribute(\"data-ax5combobox-remove-index\");\n                                    var option = this.queue[queIdx].selected[selectedIndex];\n                                    setOptionSelect.call(this, queIdx, {\n                                        index: {\n                                            gindex: option['@gindex'],\n                                            index: option['@index']\n                                        }\n                                    }, false, true);\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    focusLabel.call(this, queIdx);\n                                    U.stopEvent(e);\n                                    return this;\n                                } else if (clickEl === \"clear\") {\n                                    setOptionSelect.call(this, queIdx, { clear: true });\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    focusLabel.call(this, queIdx);\n                                }\n                            } else {\n                                if (self.activecomboboxQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) {\n                                        // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                } else {\n                                    self.open(queIdx);\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyUp': function keyUp(queIdx, e) {\n                            /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n                            if (e.which == ax5.info.eventKeys.ESC && self.activecomboboxQueueIndex === -1) {\n                                // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n                                U.stopEvent(e);\n                                return this;\n                            }\n                            if (self.activecomboboxQueueIndex != queIdx) {\n                                // 닫힌 상태 인경우\n                                self.open(queIdx);\n                                U.stopEvent(e);\n                            }\n\n                            var disableCtrlKeys = {\n                                \"40\": \"KEY_DOWN\",\n                                \"38\": \"KEY_UP\"\n                            };\n                            if (!disableCtrlKeys[e.which]) {\n\n                                // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n                                if (e.which == ax5.info.eventKeys.BACKSPACE && this.queue[queIdx].$displayLabelInput.val() == \"\") {\n                                    // 마지막 아이템을 제거.\n                                    if (this.queue[queIdx].selected.length > 0) {\n                                        var option = this.queue[queIdx].selected[this.queue[queIdx].selected.length - 1];\n                                        setOptionSelect.call(this, queIdx, {\n                                            index: {\n                                                gindex: option['@gindex'],\n                                                index: option['@index']\n                                            }\n                                        }, false, true);\n                                    }\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                } else {\n                                    debouncedFocusWord.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyDown': function keyDown(queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                clearLabel.call(this, queIdx);\n                                this.close();\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.RETURN) {\n\n                                setOptionSelect.call(this, item.id, {\n                                    index: {\n                                        gindex: item.indexedOptions[item.optionFocusIndex][\"@gindex\"],\n                                        index: item.indexedOptions[item.optionFocusIndex][\"@index\"]\n                                    }\n                                }, undefined, true);\n                                clearLabel.call(this, queIdx);\n                                alignComboboxDisplay.call(this);\n\n                                this.close();\n                                //alignComboboxOptionGroup.call(this);\n\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        'focus': function focus(queIdx, e) {\n                            //console.log(e);\n                        },\n                        'blur': function blur(queIdx, e) {\n                            blurLabel.call(this, queIdx);\n                            U.stopEvent(e);\n                        },\n                        'selectChange': function selectChange(queIdx, e) {\n                            setOptionSelect.call(this, queIdx, { value: this.queue[queIdx].$select.val() }, true);\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n                        // 현재 선택된 값을 담아두는 저장소, syncComboboxOptions를 통해 options와 selected값을 동기화 처리 한다.\n                        item.selected = [];\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = function () {\n                                return item.size ? \"input-\" + item.size : \"\";\n                            }();\n\n                            //item.$display = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"comboboxDisplay\"].call(this, queIdx), data));\n                            item.$display = jQuery(COMBOBOX.tmpl.get.call(this, \"comboboxDisplay\", data, item.columnKeys));\n                            item.$displayTable = item.$display.find('[data-els=\"display-table\"]');\n                            item.$displayLabel = item.$display.find('[data-ax5combobox-display=\"label\"]');\n                            item.$displayLabelInput = item.$display.find('[data-ax5combobox-display=\"input\"]');\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                item.$select.attr(\"tabindex\", \"-1\").attr(\"class\", \"form-control \" + data.formSize);\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                if (data.multiple) {\n                                    item.$select.attr(\"multiple\", \"multiple\");\n                                }\n                            } else {\n                                //item.$select = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"formSelect\"].call(this, queIdx), data));\n                                item.$select = jQuery(COMBOBOX.tmpl.get.call(this, \"formSelect\", data, item.columnKeys));\n                                item.$target.append(item.$select);\n                            }\n\n                            item.$target.append(item.$display);\n                            // 라벨에 사용자 입력 필드가 있으므로 displayInput은 필요 없음.\n                            // select.options로 item.options를 만들어내거나 item.options로 select.options를 만들어냄\n                            item.options = syncComboboxOptions.call(this, queIdx, item.options);\n                        } else {\n                            item.$displayLabel.html(getLabel.call(this, queIdx));\n                            item.options = syncComboboxOptions.call(this, queIdx, item.options);\n                        }\n\n                        alignComboboxDisplay.call(this);\n\n                        item.$display.unbind('click.ax5combobox').bind('click.ax5combobox', comboboxEvent.click.bind(this, queIdx));\n\n                        // combobox 태그에 대한 이벤트 감시\n\n\n                        item.$displayLabelInput.unbind(\"focus.ax5combobox\").bind(\"focus.ax5combobox\", comboboxEvent.focus.bind(this, queIdx)).unbind(\"blur.ax5combobox\").bind(\"blur.ax5combobox\", comboboxEvent.blur.bind(this, queIdx)).unbind('keyup.ax5combobox').bind('keyup.ax5combobox', comboboxEvent.keyUp.bind(this, queIdx)).unbind(\"keydown.ax5combobox\").bind(\"keydown.ax5combobox\", comboboxEvent.keyDown.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n\n                        item.$select.unbind('change.ax5combobox').bind('change.ax5combobox', comboboxEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                }();\n\n                var comboboxConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, comboboxConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5combobox-id\");\n                if (!item.id) {\n                    item.id = 'ax5combobox-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5combobox-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5combobox\");\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5combobox-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindComboboxTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindComboboxTarget.call(this, queIdx);\n                }\n\n                comboboxConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of combobox\n             * @method ax5combobox.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5combobox}\n             */\n            this.open = function () {\n                var onExpand = function onExpand(item) {\n                    item.onExpand.call({\n                        self: this,\n                        item: item\n                    }, function (O) {\n                        if (this.waitOptionsCallback) {\n                            var data = {};\n                            var item = this.queue[this.activecomboboxQueueIndex];\n\n                            /// 현재 selected 검증후 처리\n                            (function (item, O) {\n                                var optionsMap = {};\n                                O.options.forEach(function (_O, _OIndex) {\n                                    _O[\"@index\"] = _OIndex;\n                                    optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                                });\n                                if (U.isArray(item.selected)) {\n                                    item.selected.forEach(function (_O) {\n                                        if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                            O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                        }\n                                    });\n                                }\n                            })(item, O);\n\n                            item.options = syncComboboxOptions.call(this, this.activecomboboxQueueIndex, O.options);\n                            printLabel.call(this, this.activecomboboxQueueIndex);\n                            alignComboboxDisplay.call(this);\n\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.id = item.id;\n                            data.theme = item.theme;\n                            data.size = \"ax5combobox-option-group-\" + item.size;\n                            data.multiple = item.multiple;\n                            data.lang = item.lang;\n                            data.options = item.options;\n                            /*\n                             this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                             ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)\n                             ));\n                             */\n                            this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n                        }\n                    }.bind(this));\n                };\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open combobox from the outside\n                     */\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {},\n                        focusTop,\n                        selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activecomboboxOptionGroup) {\n                        if (this.activecomboboxQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout(function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }.bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5combobox-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-combobox-option-group-opened\", \"true\");\n\n                    if (item.onExpand) {\n                        // onExpand 인 경우 UI 대기모드 추가\n                        data.waitOptions = true;\n                    }\n                    data.options = U.filter(item.options, function () {\n                        return !this.hide;\n                    });\n\n                    //this.activecomboboxOptionGroup = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"optionGroup\"].call(this, item.columnKeys), data));\n                    this.activecomboboxOptionGroup = jQuery(COMBOBOX.tmpl.get.call(this, \"optionGroup\", data, item.columnKeys));\n                    //this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)));\n                    this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n                    this.activecomboboxQueueIndex = queIdx;\n\n                    alignComboboxOptionGroup.call(this, \"append\"); // alignComboboxOptionGroup 에서 body append\n                    jQuery(window).bind(\"resize.ax5combobox-\" + this.instanceId, function () {\n                        alignComboboxOptionGroup.call(this);\n                    }.bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activecomboboxOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activecomboboxOptionGroup.height() / 3;\n                            this.activecomboboxOptionGroup.find('[data-els=\"content\"]').stop().animate({ scrollTop: focusTop }, item.animateTime, 'swing', function () {});\n                        }\n                    }\n\n                    jQuery(window).bind(\"click.ax5combobox-\" + this.instanceId, function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }.bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    // waitOption timer\n                    if (item.onExpand) {\n                        this.waitOptionsCallback = true;\n                        onExpand.call(this, item);\n                    }\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5combobox.update\n             * @param {(Object|String)} item\n             * @returns {ax5combobox}\n             */\n            this.update = function (_item) {\n                this.bind(_item);\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.setValue\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _value\n             * @param {Boolean} [_selected]\n             * @return {ax5combobox}\n             * @example\n             * ```js\n             * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), \"1\");\n             * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), [\"1\", \"2\"]);\n             * ```\n             */\n            this.setValue = function (_boundID, _value, _selected) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n\n                clearSelected.call(this, queIdx);\n\n                if (U.isArray(_value)) {\n                    var _values = U.map(_value, function () {\n                        return { value: this };\n                    });\n                    setOptionSelect.call(this, queIdx, _values, _selected || true, { noStateChange: true });\n                } else if (U.isString(_value) || U.isNumber(_value)) {\n                    setOptionSelect.call(this, queIdx, { value: _value }, _selected || true, { noStateChange: true });\n                } else {\n                    printLabel.call(this, queIdx);\n                }\n\n                blurLabel.call(this, queIdx);\n                alignComboboxDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.setText\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _text\n             * @param {Boolean} [_selected]\n             * @returns {ax5combobox}\n             * @example\n             * ```js\n             * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), \"string\");\n             * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), [\"substring\", \"search\"]);\n             * ```\n             */\n            this.setText = function (_boundID, _text, _selected) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n                clearSelected.call(this, queIdx);\n                setOptionSelect.call(this, queIdx, _text, true, { noStateChange: true });\n                blurLabel.call(this, queIdx);\n                alignComboboxDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.getSelectedOption\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {Array}\n             */\n            this.getSelectedOption = function (_boundID) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n                return U.deepCopy(this.queue[queIdx].selected);\n            };\n\n            /**\n             * @method ax5combobox.close\n             * @returns {ax5combobox}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activecomboboxOptionGroup) return this;\n\n                item = this.queue[this.activecomboboxQueueIndex];\n                item.optionFocusIndex = -1;\n                item.$display.removeAttr(\"data-combobox-option-group-opened\").trigger(\"focus\");\n                item.$displayLabel.attr(\"contentEditable\", \"false\");\n\n                this.activecomboboxOptionGroup.addClass(\"destroy\");\n\n                jQuery(window).unbind(\"resize.ax5combobox-\" + this.instanceId).unbind(\"click.ax5combobox-\" + this.instanceId).unbind(\"keyup.ax5combobox-\" + this.instanceId);\n\n                this.closeTimer = setTimeout(function () {\n                    if (this.activecomboboxOptionGroup) this.activecomboboxOptionGroup.remove();\n                    this.activecomboboxOptionGroup = null;\n                    this.activecomboboxQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"close\"\n                    });\n                }.bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.blur\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.blur = function (_boundID) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n\n                blurLabel.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.enable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.enable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disabled = false;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.removeAttr(\"disabled\");\n                        this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.removeAttr(\"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"enable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.disable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.disable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disabled = true;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                        this.queue[queIdx].$displayLabelInput.attr(\"disabled\", \"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"disable\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.align\n             */\n            this.align = function () {\n                alignComboboxDisplay.call(this);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5combobox;\n    }());\n\n    COMBOBOX = ax5.ui.combobox;\n})();\n\n/**\n * ax5combobox jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5combobox\n * @param {String} methodName\n * @param [arguments]\n * @param [arguments]\n * @example\n * ```html\n * <div data-ax5combobox=\"ax1\" data-ax5combobox-config='{\n *  multiple: true,\n *  editable: true,\n *  size: \"\",\n *  theme:\"\"\n *  }'></div>\n * <script>\n * jQuery('[data-ax5combobox=\"ax1\"]').ax5combobox();\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"getSelectedOption\");\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"setValue\", [\"string\", \"number\"]);\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"enable\");\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"disable\");\n * </script>\n * ```\n */\n\nax5.ui.combobox_instance = new ax5.ui.combobox();\njQuery.fn.ax5combobox = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.combobox_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.combobox_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.combobox_instance.setValue(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"setText\":\n                    return ax5.ui.combobox_instance.setText(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"getSelectedOption\":\n                    return ax5.ui.combobox_instance.getSelectedOption(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.combobox_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.combobox_instance.disable(this);\n                    break;\n                case \"blur\":\n                    return ax5.ui.combobox_instance.blur(this);\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.combobox_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n\n// ax5.ui.combobox.tmpl\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var optionGroup = function optionGroup(columnKeys) {\n        return '\\n            <div class=\"ax5combobox-option-group {{theme}} {{size}}\" data-ax5combobox-option-group=\"{{id}}\">\\n                <div class=\"ax-combobox-body\">\\n                    <div class=\"ax-combobox-option-group-content\" data-els=\"content\"></div>\\n                </div>\\n                <div class=\"ax-combobox-arrow\"></div> \\n            </div>\\n        ';\n    };\n\n    var comboboxDisplay = function comboboxDisplay(columnKeys) {\n        return '\\n<div class=\"form-control {{formSize}} ax5combobox-display {{theme}}\" \\ndata-ax5combobox-display=\"{{id}}\" data-ax5combobox-instance=\"{{instanceId}}\">\\n    <div class=\"ax5combobox-display-table\" data-els=\"display-table\">\\n        <div data-ax5combobox-display=\"label-holder\"> \\n            <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}\\n            data-ax5combobox-display=\"label\"\\n            spellcheck=\"false\"><input type=\"text\"data-ax5combobox-display=\"input\" style=\"border:0px none;background: transparent;\" /></a>\\n        </div>\\n        <div data-ax5combobox-display=\"addon\"> \\n            {{#multiple}}{{#reset}}\\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\\n            {{/reset}}{{/multiple}}\\n            {{#icons}}\\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\\n            <span class=\"addon-icon-opened\">{{opened}}</span>\\n            {{/icons}}\\n            {{^icons}}\\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\\n            {{/icons}}\\n        </div>\\n    </div>\\n</div>\\n        ';\n    };\n\n    var formSelect = function formSelect(columnKeys) {\n        return '\\n            <select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}}></select>\\n        ';\n    };\n\n    var formSelectOptions = function formSelectOptions(columnKeys) {\n        return '\\n{{#selected}}\\n<option value=\"{{' + columnKeys.optionValue + '}}\" selected=\"true\">{{' + columnKeys.optionText + '}}</option>\\n{{/selected}}\\n';\n    };\n\n    var options = function options(columnKeys) {\n        return '\\n            {{#waitOptions}}\\n                <div class=\"ax-combobox-option-item\">\\n                        <div class=\"ax-combobox-option-item-holder\">\\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\\n                                {{{lang.loading}}}\\n                            </span>\\n                        </div>\\n                    </div>\\n            {{/waitOptions}}\\n            {{^waitOptions}}\\n                {{#options}}\\n                    {{#optgroup}}\\n                        <div class=\"ax-combobox-option-group\">\\n                            <div class=\"ax-combobox-option-item-holder\">\\n                                <span class=\"ax-combobox-option-group-label\">\\n                                    {{{.}}}\\n                                </span>\\n                            </div>\\n                            {{#options}}\\n                            {{^hide}}\\n                            <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \\n                            data-option-value=\"{{' + columnKeys.optionValue + '}}\" \\n                            {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n                                <div class=\"ax-combobox-option-item-holder\">\\n                                    {{#multiple}}\\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\\n                                        <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\\n                                    </span>\\n                                    {{/multiple}}\\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{' + columnKeys.optionText + '}}</span>\\n                                </div>\\n                            </div>\\n                            {{/hide}}\\n                            {{/options}}\\n                        </div>                            \\n                    {{/optgroup}}\\n                    {{^optgroup}}\\n                    {{^hide}}\\n                    <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{' + columnKeys.optionValue + '}}\" {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n                        <div class=\"ax-combobox-option-item-holder\">\\n                            {{#multiple}}\\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\\n                                <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\\n                            </span>\\n                            {{/multiple}}\\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{' + columnKeys.optionText + '}}</span>\\n                        </div>\\n                    </div>\\n                    {{/hide}}\\n                    {{/optgroup}}\\n                {{/options}}\\n                {{^options}}\\n                    <div class=\"ax-combobox-option-item\">\\n                        <div class=\"ax-combobox-option-item-holder\">\\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\\n                                {{{lang.noOptions}}}\\n                            </span>\\n                        </div>\\n                    </div>\\n                {{/options}}\\n            {{/waitOptions}}\\n        ';\n    };\n\n    var label = function label(columnKeys) {\n        return '{{#selected}}<div tabindex=\"-1\" data-ax5combobox-selected-label=\"{{@i}}\" data-ax5combobox-selected-text=\"{{text}}\"><div data-ax5combobox-remove=\"true\" \\ndata-ax5combobox-remove-index=\"{{@i}}\">{{{removeIcon}}}</div><span>{{text}}</span></div>{{/selected}}';\n    };\n\n    COMBOBOX.tmpl = {\n        \"comboboxDisplay\": comboboxDisplay,\n        \"formSelect\": formSelect,\n        \"formSelectOptions\": formSelectOptions,\n        \"optionGroup\": optionGroup,\n        \"options\": options,\n        \"label\": label,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(COMBOBOX.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.combobox.util\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var nodeTypeProcessor = {\n        '1': function _(queIdx, node, editable) {\n            var cfg = this.config;\n            var textNode = node;\n\n            if ($(node).find(\"span\").get(0)) {\n                textNode = $(node).find(\"span\").get(0);\n            }\n\n            var text = (textNode.textContent || textNode.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            var selectedIndex, option;\n            if (item.selected && item.selected.length > 0 && node.getAttribute(\"data-ax5combobox-selected-text\") == text) {\n                selectedIndex = node.getAttribute(\"data-ax5combobox-selected-label\");\n                option = item.selected[selectedIndex];\n                return {\n                    index: {\n                        gindex: option[\"@gindex\"],\n                        index: option[\"@index\"],\n                        value: option[cfg.columnKeys.optionValue]\n                    }\n                };\n            } else if (!node.getAttribute(\"data-ax5combobox-selected-text\")) {\n                if (text != \"\") {\n                    if (editable) {\n                        return text;\n                    } else {\n                        var $option;\n                        if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                        if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                            return {\n                                index: {\n                                    gindex: $option.attr(\"data-option-group-index\"),\n                                    index: $option.attr(\"data-option-index\")\n                                }\n                            };\n                        } else {\n                            return item.editable ? text : undefined;\n                        }\n                    }\n                } else {\n                    return undefined;\n                }\n            } else {\n                return text;\n            }\n        },\n        '3': function _(queIdx, node, editable) {\n            var cfg = this.config;\n            var text = (node.textContent || node.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            if (text != \"\") {\n                if (editable) {\n                    return text;\n                } else {\n                    var $option;\n                    if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                    if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                        return {\n                            index: {\n                                gindex: $option.attr(\"data-option-group-index\"),\n                                index: $option.attr(\"data-option-index\")\n                            }\n                        };\n                    } else {\n                        return item.editable ? text : undefined;\n                    }\n                }\n            } else {\n                return undefined;\n            }\n        }\n    };\n\n    COMBOBOX.util = {\n        nodeTypeProcessor: nodeTypeProcessor\n    };\n})();\n// ax5.ui.layout\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n\n    UI.addClass({\n        className: \"layout\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5layout\n         * @alias ax5.ui.layout\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * jQuery('[data-ax5layout=\"ax1\"]').ax5layout({\n         *     onResize: function () {\n         *     }\n         * });\n         *\n         * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"resize\", {\n         *     top: {height: 100},\n         *     bottom: 100,\n         *     left: 100,\n         *     right: 100\n         * });\n         * ```\n         */\n        var ax5layout = function ax5layout() {\n            var self = this,\n                cfg,\n                ENM = {\n                \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n                \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n                \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n            },\n                getMousePosition = function getMousePosition(e) {\n                var mouseObj = 'changedTouches' in e.originalEvent ? e.originalEvent.changedTouches[0] : e;\n                return {\n                    clientX: mouseObj.clientX,\n                    clientY: mouseObj.clientY\n                };\n            };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                splitter: {\n                    size: 4\n                },\n                autoResize: true\n            };\n            this.queue = [];\n\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.resizer = null;\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            },\n                alignLayoutAll = function alignLayoutAll() {\n                var i = this.queue.length;\n                while (i--) {\n                    if (typeof this.queue[i].parentQueIdx === \"undefined\" && this.queue[i].autoResize) {\n                        alignLayout.call(this, i, null, \"windowResize\");\n                    }\n                }\n            },\n                getDockPanelOuterSize = {\n                \"width\": function width(item, panel) {\n                    return panel ? panel.__width + (panel.split ? item.splitter.size : 0) : 0;\n                },\n                \"height\": function height(item, panel) {\n                    return panel ? panel.__height + (panel.split ? item.splitter.size : 0) : 0;\n                }\n            },\n                getPixel = function getPixel(size, parentSize) {\n                if (size == \"*\") {\n                    return;\n                } else if (U.right(size, 1) == \"%\") {\n                    return parentSize * U.number(size) / 100;\n                } else {\n                    return Number(size);\n                }\n            },\n                alignLayout = function () {\n\n                var beforeSetCSS = {\n                    \"split\": {\n                        \"horizontal\": function horizontal(item, panel, panelIndex) {\n                            if (panel.splitter) {\n                                panel.__height = item.splitter.size;\n                            } else {\n                                if (panelIndex == item.splitPanel.length - 1) {\n                                    if (item.splitPanel.asteriskLength == 0) {\n                                        panel.height = \"*\";\n                                        panel.__height = undefined;\n                                        item.splitPanel.asteriskLength++;\n                                    } else {\n                                        if (panel.height == \"*\") {\n                                            item.splitPanel.asteriskLength++;\n                                        } else {\n                                            //panel.__height = getPixel(panel.height, item.targetDimension.height);\n                                        }\n                                    }\n                                } else {\n                                    if (panel.height == \"*\") {\n                                        item.splitPanel.asteriskLength++;\n                                    } else {\n                                        //panel.__height = getPixel(panel.height, item.targetDimension.height);\n                                    }\n                                }\n                            }\n                        },\n                        \"vertical\": function vertical(item, panel, panelIndex) {\n                            if (panel.splitter) {\n                                panel.__width = item.splitter.size;\n                            } else {\n                                if (panelIndex == item.splitPanel.length - 1) {\n                                    if (item.splitPanel.asteriskLength == 0) {\n                                        panel.width = \"*\";\n                                        panel.__width = undefined;\n                                        item.splitPanel.asteriskLength++;\n                                    } else {\n                                        if (panel.width == \"*\") {\n                                            item.splitPanel.asteriskLength++;\n                                        }\n                                    }\n                                } else {\n                                    if (panel.width == \"*\") {\n                                        item.splitPanel.asteriskLength++;\n                                    } else {\n                                        //panel.__width = getPixel(panel.width, item.targetDimension.width);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                };\n                var setCSS = {\n                    \"top\": function top(item, panel) {\n                        panel.$target.css({ height: panel.__height || 0 });\n                        if (panel.split) {\n                            panel.$splitter.css({ height: item.splitter.size, top: panel.__height || 0 });\n                        }\n                    },\n                    \"bottom\": function bottom(item, panel) {\n                        panel.$target.css({ height: panel.__height || 0 });\n                        if (panel.split) {\n                            panel.$splitter.css({ height: item.splitter.size, bottom: panel.__height || 0 });\n                        }\n                    },\n                    \"left\": function left(item, panel) {\n                        var css = {\n                            width: panel.__width || 0,\n                            height: item.targetDimension.height\n                        };\n\n                        if (item.dockPanel.top) {\n                            css.height -= item.dockPanel.top.__height;\n                            css.top = item.dockPanel.top.__height;\n                            if (item.dockPanel.top.split) {\n                                css.height -= item.splitter.size;\n                                css.top += item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.bottom) {\n                            css.height -= item.dockPanel.bottom.__height;\n                            if (item.dockPanel.bottom.split) {\n                                css.height -= item.splitter.size;\n                            }\n                        }\n\n                        panel.$target.css(css);\n\n                        if (panel.split) {\n                            panel.$splitter.css({ width: item.splitter.size, height: css.height, top: css.top, left: css.width });\n                        }\n                    },\n                    \"right\": function right(item, panel) {\n                        var css = {\n                            width: panel.__width || 0,\n                            height: item.targetDimension.height\n                        };\n\n                        if (item.dockPanel.top) {\n                            css.height -= item.dockPanel.top.__height;\n                            css.top = item.dockPanel.top.__height;\n                            if (item.dockPanel.top.split) {\n                                css.height -= item.splitter.size;\n                                css.top += item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.bottom) {\n                            css.height -= item.dockPanel.bottom.__height;\n                            if (item.dockPanel.bottom.split) {\n                                css.height -= item.splitter.size;\n                            }\n                        }\n\n                        panel.$target.css(css);\n\n                        if (panel.split) {\n                            panel.$splitter.css({ width: item.splitter.size, height: css.height, top: css.top, right: css.width });\n                        }\n                    },\n                    \"center\": function center(item, panel) {\n                        var css = {\n                            width: item.targetDimension.width,\n                            height: item.targetDimension.height\n                        };\n\n                        if (item.dockPanel.top) {\n                            css.height -= item.dockPanel.top.__height || 0;\n                            css.top = item.dockPanel.top.__height || 0;\n                            if (item.dockPanel.top.split) {\n                                css.height -= item.splitter.size;\n                                css.top += item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.bottom) {\n                            css.height -= item.dockPanel.bottom.__height || 0;\n                            if (item.dockPanel.bottom.split) {\n                                css.height -= item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.left) {\n                            css.width -= item.dockPanel.left.__width || 0;\n                            css.left = item.dockPanel.left.__width || 0;\n                            if (item.dockPanel.left.split) {\n                                css.width -= item.splitter.size;\n                                css.left += item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.right) {\n                            css.width -= item.dockPanel.right.__width || 0;\n                            if (item.dockPanel.right.split) {\n                                css.width -= item.splitter.size;\n                            }\n                        }\n\n                        var minWidth = panel.minWidth || 0;\n                        var minHeight = panel.minHeight || 0;\n\n                        // 레이아웃의 최소 너비 높이를 주어 레이아웃 덕패널이 겹치는 일이 없게 합니다\n                        if (css.width < minWidth) {\n                            css.width = minWidth;\n                            item.$target.css({ minWidth: minWidth + getDockPanelOuterSize[\"width\"](item.dockPanel.left, item.splitter.size) + getDockPanelOuterSize[\"width\"](item.dockPanel.right, item.splitter.size) });\n                        }\n                        if (css.height < minHeight) {\n                            css.height = minHeight;\n                            item.$target.css({ minHeight: minHeight + getDockPanelOuterSize[\"height\"](item.dockPanel.top, item.splitter.size) + getDockPanelOuterSize[\"height\"](item.dockPanel.bottom, item.splitter.size) });\n                        }\n\n                        panel.$target.css(css);\n                    },\n                    \"split\": {\n                        \"horizontal\": function horizontal(item, panel, panelIndex, withoutAsteriskSize, windowResize) {\n                            var css = {\n                                display: \"block\"\n                            };\n                            var prevPosition = panelIndex ? Number(item.splitPanel[panelIndex - 1].offsetEnd) : 0;\n                            if (panel.splitter) {\n                                css.height = item.splitter.size;\n                            } else {\n                                if (panel.height == \"*\" && (typeof panel.__height === \"undefined\" || windowResize)) {\n                                    // 남은 전체 공간을 사용\n                                    css.height = panel.__height = (item.targetDimension.height - withoutAsteriskSize) / item.splitPanel.asteriskLength;\n                                } else {\n                                    css.height = panel.__height || 0;\n                                }\n                            }\n                            css.top = prevPosition;\n                            panel.offsetStart = prevPosition;\n                            panel.offsetEnd = Number(prevPosition) + Number(css.height);\n                            panel.$target.css(css);\n                        },\n                        \"vertical\": function vertical(item, panel, panelIndex, withoutAsteriskSize, windowResize) {\n                            var css = {\n                                display: \"block\"\n                            };\n                            var prevPosition = panelIndex ? Number(item.splitPanel[panelIndex - 1].offsetEnd) : 0;\n\n                            if (panel.splitter) {\n                                css.width = item.splitter.size;\n                            } else {\n                                if (panel.width == \"*\" && (typeof panel.__width === \"undefined\" || windowResize)) {\n                                    // 남은 전체 공간을 사용\n                                    css.width = panel.__width = (item.targetDimension.width - withoutAsteriskSize) / item.splitPanel.asteriskLength;\n                                } else {\n                                    css.width = panel.__width || 0;\n                                }\n                            }\n                            css.left = prevPosition;\n                            panel.offsetStart = prevPosition;\n                            panel.offsetEnd = Number(prevPosition) + Number(css.width);\n\n                            panel.$target.css(css);\n                        }\n                    }\n                };\n                var layoutProcessor = {\n                    \"dock-panel\": function dockPanel(item) {\n                        for (var panel in item.dockPanel) {\n                            if (item.dockPanel[panel].$target && item.dockPanel[panel].$target.get(0)) {\n                                if (panel in setCSS) {\n                                    setCSS[panel].call(this, item, item.dockPanel[panel]);\n                                }\n                            }\n                        }\n                    },\n                    \"split-panel\": function splitPanel(item, windowResize) {\n                        //console.log(item.splitPanel);\n                        var withoutAsteriskSize;\n                        item.splitPanel.asteriskLength = 0;\n                        item.splitPanel.forEach(function (panel, panelIndex) {\n                            beforeSetCSS[\"split\"][item.orientation].call(this, item, panel, panelIndex);\n                        });\n\n                        if (item.orientation == \"horizontal\") {\n                            withoutAsteriskSize = U.sum(item.splitPanel, function (n) {\n                                if (n.height != \"*\") return U.number(n.__height);\n                            });\n                        } else {\n                            withoutAsteriskSize = U.sum(item.splitPanel, function (n) {\n                                if (n.width != \"*\") return U.number(n.__width);\n                            });\n                        }\n\n                        item.splitPanel.forEach(function (panel, panelIndex) {\n                            setCSS[\"split\"][item.orientation].call(this, item, panel, panelIndex, withoutAsteriskSize, windowResize);\n                        });\n                    }\n                };\n                var childResize = function childResize(item) {\n                    var i = item.childQueIdxs.length;\n                    while (i--) {\n                        alignLayout.call(this, item.childQueIdxs[i]);\n                    }\n                };\n\n                return function (queIdx, callback, windowResize) {\n                    var item = this.queue[queIdx];\n\n                    // 레이아웃 타겟의 CSS속성을 미리 저장해 둡니다. 왜? 패널별로 크기 계산 할 때 쓰려고\n                    item.targetDimension = {\n                        height: item.$target.innerHeight(),\n                        width: item.$target.innerWidth()\n                    };\n\n                    if (item.layout in layoutProcessor) {\n                        layoutProcessor[item.layout].call(this, item, windowResize);\n                    }\n\n                    if (item.childQueIdxs) childResize.call(this, item, windowResize);\n                    if (item.onResize) {\n                        setTimeout(function () {\n                            this.onResize.call(this, this);\n                        }.bind(item), 1);\n                    }\n                    if (callback) {\n                        callback.call(item, item);\n                    }\n                };\n            }(),\n                resizeSplitter = {\n                \"on\": function on(queIdx, panel, $splitter) {\n                    var item = this.queue[queIdx];\n                    var splitterOffset = $splitter.position();\n                    var splitterBox = {\n                        width: $splitter.width(), height: $splitter.height()\n                    };\n                    var getResizerPosition = {\n                        \"left\": function left(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent ? e.originalEvent.changedTouches[0] : e;\n\n                            panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n                            var minWidth = panel.minWidth || 0;\n                            var maxWidth = panel.maxWidth || item.targetDimension.width - getDockPanelOuterSize[\"width\"](item, item.dockPanel.left) - getDockPanelOuterSize[\"width\"](item, item.dockPanel.right);\n\n                            if (panel.__width + panel.__da < minWidth) {\n                                panel.__da = -panel.__width + minWidth;\n                            } else if (maxWidth < panel.__width + panel.__da) {\n                                panel.__da = maxWidth - panel.__width;\n                            }\n                            return { left: panel.$splitter.position().left + panel.__da };\n                        },\n                        \"right\": function right(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent ? e.originalEvent.changedTouches[0] : e;\n\n                            panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n                            var minWidth = panel.minWidth || 0;\n                            var maxWidth = panel.maxWidth || item.targetDimension.width - getDockPanelOuterSize[\"width\"](item, item.dockPanel.left) - getDockPanelOuterSize[\"width\"](item, item.dockPanel.right);\n\n                            if (panel.__width - panel.__da < minWidth) {\n                                panel.__da = panel.__width - minWidth;\n                            } else if (maxWidth < panel.__width - panel.__da) {\n                                panel.__da = -maxWidth + panel.__width;\n                            }\n                            return { left: panel.$splitter.position().left + panel.__da };\n                        },\n                        \"top\": function top(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent ? e.originalEvent.changedTouches[0] : e;\n\n                            panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n                            var minHeight = panel.minHeight || 0;\n                            var maxHeight = panel.maxHeight || item.targetDimension.height - getDockPanelOuterSize[\"height\"](item, item.dockPanel.top) - getDockPanelOuterSize[\"height\"](item, item.dockPanel.bottom);\n\n                            if (panel.__height + panel.__da < minHeight) {\n                                panel.__da = -panel.__height + minHeight;\n                            } else if (maxHeight < panel.__height + panel.__da) {\n                                panel.__da = maxHeight - panel.__height;\n                            }\n                            return { top: panel.$splitter.position().top + panel.__da };\n                        },\n                        \"bottom\": function bottom(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent ? e.originalEvent.changedTouches[0] : e;\n\n                            panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n                            var minHeight = panel.minHeight || 0;\n                            var maxHeight = panel.maxHeight || item.targetDimension.height - getDockPanelOuterSize[\"height\"](item, item.dockPanel.top) - getDockPanelOuterSize[\"height\"](item, item.dockPanel.bottom);\n\n                            if (panel.__height - panel.__da < minHeight) {\n                                panel.__da = panel.__height - minHeight;\n                            } else if (maxHeight < panel.__height - panel.__da) {\n                                panel.__da = -maxHeight + panel.__height;\n                            }\n                            return { top: panel.$splitter.position().top + panel.__da };\n                        },\n                        \"split\": function split(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent ? e.originalEvent.changedTouches[0] : e;\n\n                            if (item.orientation == \"horizontal\") {\n                                panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n\n                                var prevPanel = item.splitPanel[panel.panelIndex - 1];\n                                var nextPanel = item.splitPanel[panel.panelIndex + 1];\n\n                                var prePanelMinHeight = prevPanel.minHeight || 0;\n                                var nextPanelMinHeight = nextPanel.minHeight || 0;\n\n                                if (panel.offsetStart + panel.__da < prevPanel.offsetStart + prePanelMinHeight) {\n                                    panel.__da = prevPanel.offsetStart - panel.offsetStart + prePanelMinHeight;\n                                } else if (panel.offsetStart + panel.__da > nextPanel.offsetEnd - nextPanelMinHeight) {\n                                    panel.__da = nextPanel.offsetEnd - panel.offsetEnd - nextPanelMinHeight;\n                                }\n\n                                return { top: panel.$target.position().top + panel.__da };\n                            } else {\n                                /// todo : min & max 범위 정하기\n                                panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n\n                                var prevPanel = item.splitPanel[panel.panelIndex - 1];\n                                var nextPanel = item.splitPanel[panel.panelIndex + 1];\n                                var prePanelMinWidth = prevPanel.minWidth || 0;\n                                var nextPanelMinWidth = nextPanel.minWidth || 0;\n\n                                if (panel.offsetStart + panel.__da < prevPanel.offsetStart + prePanelMinWidth) {\n                                    panel.__da = prevPanel.offsetStart - panel.offsetStart + prePanelMinWidth;\n                                } else if (panel.offsetStart + panel.__da > nextPanel.offsetEnd - nextPanelMinWidth) {\n                                    panel.__da = nextPanel.offsetEnd - panel.offsetEnd - nextPanelMinWidth;\n                                }\n                                return { left: Number(panel.$target.position().left) + Number(panel.__da) };\n                            }\n                        }\n                    };\n                    panel.__da = 0; // 패널의 변화량\n\n                    jQuery(document.body).bind(ENM[\"mousemove\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                        if (!self.resizer) {\n\n                            self.resizer = jQuery('<div class=\"ax5layout-resizer panel-' + panel.resizerType + '\" ondragstart=\"return false;\"></div>');\n                            self.resizer.css({\n                                left: splitterOffset.left,\n                                top: splitterOffset.top,\n                                width: splitterBox.width,\n                                height: splitterBox.height\n                            });\n                            item.$target.append(self.resizer);\n                        }\n                        self.resizer.css(getResizerPosition[panel.resizerType](e));\n                    }).bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                        resizeSplitter.off.call(self, queIdx, panel, $splitter);\n                    }).bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                        resizeSplitter.off.call(self, queIdx, panel, $splitter);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off(queIdx, panel, $splitter) {\n                    var item = this.queue[queIdx];\n                    var setPanelSize = {\n                        \"dock-panel\": {\n                            \"left\": function left(queIdx, panel) {\n                                panel.__width += panel.__da;\n                            },\n                            \"right\": function right() {\n                                panel.__width -= panel.__da;\n                            },\n                            \"top\": function top() {\n                                panel.__height += panel.__da;\n                            },\n                            \"bottom\": function bottom() {\n                                panel.__height -= panel.__da;\n                            }\n                        },\n                        \"split-panel\": {\n                            \"split\": function split() {\n                                if (item.orientation == \"horizontal\") {\n                                    // 앞과 뒤의 높이 조절\n                                    item.splitPanel[panel.panelIndex - 1].__height += panel.__da;\n                                    item.splitPanel[panel.panelIndex + 1].__height -= panel.__da;\n                                } else {\n                                    // 앞과 뒤의 높이 조절\n\n                                    item.splitPanel[panel.panelIndex - 1].__width += panel.__da;\n                                    item.splitPanel[panel.panelIndex + 1].__width -= panel.__da;\n                                }\n                            }\n                        },\n                        \"tab-panel\": {}\n                    };\n\n                    if (self.resizer) {\n                        self.resizer.remove();\n                        self.resizer = null;\n                        setPanelSize[this.queue[queIdx].layout][panel.resizerType].call(this, queIdx, panel);\n                        alignLayout.call(this, queIdx);\n                    }\n\n                    jQuery(document.body).unbind(ENM[\"mousemove\"] + \".ax5layout-\" + this.instanceId).unbind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId).unbind(\"mouseleave.ax5layout-\" + this.instanceId);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            },\n                tabControl = {\n                \"open\": function open(queIdx, layout, panelIndex) {\n                    if (layout.activePanelIndex != panelIndex) {\n                        layout.tabPanel[panelIndex].active = true;\n                        layout.tabPanel[layout.activePanelIndex].active = false;\n                        layout.$target.find('[data-tab-panel-label=\"' + panelIndex + '\"]').attr(\"data-tab-active\", \"true\");\n                        layout.$target.find('[data-tab-panel-label=\"' + layout.activePanelIndex + '\"]').removeAttr(\"data-tab-active\");\n                        layout.tabPanel[panelIndex].$target.attr(\"data-tab-active\", \"true\");\n                        layout.tabPanel[layout.activePanelIndex].$target.removeAttr(\"data-tab-active\");\n                        layout.activePanelIndex = panelIndex;\n\n                        if (layout.onOpenTab) {\n                            var that = {\n                                '$target': layout.$target,\n                                name: layout.name,\n                                id: layout.id,\n                                layout: layout.layout,\n                                activePanelIndex: layout.activePanelIndex,\n                                activePanel: layout.tabPanel[layout.activePanelIndex],\n                                tabPanel: layout.tabPanel\n                            };\n                            layout.onOpenTab.call(that);\n                        }\n                    }\n                }\n            },\n                getTabLabesTmpl = function getTabLabesTmpl() {\n                return '\\n<div data-tab-panel-label-holder=\"{{id}}\">\\n    <div data-tab-panel-label-border=\"{{id}}\"></div>\\n    <div data-tab-panel-label-table=\"{{id}}\">\\n        <div data-tab-panel-aside=\"left\"></div>\\n    {{#tabPanel}}\\n        <div data-tab-panel-label=\"{{panelIndex}}\" data-tab-active=\"{{active}}\">\\n            <div data-tab-label=\"{{panelIndex}}\">{{{label}}}</div>\\n        </div>\\n    {{/tabPanel}}\\n        <div data-tab-panel-aside=\"right\"></div>\\n    </div>\\n</div>\\n';\n            },\n                bindLayoutTarget = function () {\n\n                var applyLayout = {\n                    \"dock-panel\": function dockPanel(queIdx) {\n                        var item = this.queue[queIdx];\n                        item.dockPanel = {};\n                        item.$target.find('>[data-dock-panel]').each(function () {\n\n                            var panelInfo = {};\n                            (function (data) {\n                                if (U.isObject(data) && !data.error) {\n                                    panelInfo = jQuery.extend(true, panelInfo, data);\n                                }\n                            })(U.parseJson(this.getAttribute(\"data-dock-panel\"), true));\n\n                            if ('dock' in panelInfo) {\n                                panelInfo.$target = jQuery(this);\n                                panelInfo.$target.addClass(\"dock-panel-\" + panelInfo.dock);\n\n                                if (panelInfo.split = panelInfo.split && panelInfo.split.toString() == \"true\") {\n                                    panelInfo.$splitter = jQuery('<div data-splitter=\"\" class=\"dock-panel-' + panelInfo.dock + '\"></div>');\n                                    panelInfo.$splitter.bind(ENM[\"mousedown\"], function (e) {\n                                        panelInfo.mousePosition = getMousePosition(e);\n                                        resizeSplitter.on.call(self, queIdx, panelInfo, panelInfo.$splitter);\n                                    }).bind(\"dragstart\", function (e) {\n                                        U.stopEvent(e);\n                                        return false;\n                                    });\n                                    item.$target.append(panelInfo.$splitter);\n                                }\n\n                                if (panelInfo.dock == \"top\" || panelInfo.dock == \"bottom\") {\n                                    panelInfo.__height = getPixel(panelInfo.height, item.targetDimension.height);\n                                } else {\n                                    panelInfo.__width = getPixel(panelInfo.width, item.targetDimension.width);\n                                }\n                                panelInfo.resizerType = panelInfo.dock;\n                                item.dockPanel[panelInfo.dock] = panelInfo;\n                            }\n                        });\n                    },\n                    \"split-panel\": function splitPanel(queIdx) {\n                        var item = this.queue[queIdx];\n                        item.splitPanel = [];\n                        item.$target.find('>[data-split-panel], >[data-splitter]').each(function (ELIndex) {\n\n                            var panelInfo = {};\n                            (function (data) {\n                                if (U.isObject(data) && !data.error) {\n                                    panelInfo = jQuery.extend(true, panelInfo, data);\n                                }\n                            })(U.parseJson(this.getAttribute(\"data-split-panel\") || this.getAttribute(\"data-splitter\"), true));\n\n                            panelInfo.$target = jQuery(this);\n                            panelInfo.$target.addClass(\"split-panel-\" + item.orientation);\n                            panelInfo.panelIndex = ELIndex;\n\n                            if (this.getAttribute(\"data-splitter\")) {\n\n                                panelInfo.splitter = true;\n                                panelInfo.$target.bind(ENM[\"mousedown\"], function (e) {\n                                    if (panelInfo.panelIndex > 0 && panelInfo.panelIndex < item.splitPanel.length - 1) {\n                                        panelInfo.mousePosition = getMousePosition(e);\n                                        resizeSplitter.on.call(self, queIdx, panelInfo, panelInfo.$target);\n                                    }\n                                }).bind(\"dragstart\", function (e) {\n                                    U.stopEvent(e);\n                                    return false;\n                                });\n                                panelInfo.resizerType = \"split\";\n                            } else {\n\n                                if (item.orientation == \"horizontal\") {\n                                    panelInfo.__height = getPixel(panelInfo.height, item.targetDimension.height);\n                                } else {\n                                    item.orientation = \"vertical\";\n                                    panelInfo.__width = getPixel(panelInfo.width, item.targetDimension.width);\n                                }\n                            }\n\n                            item.splitPanel.push(panelInfo);\n                        });\n                    },\n                    \"tab-panel\": function tabPanel(queIdx) {\n                        var item = this.queue[queIdx];\n\n                        var hasActivePanel = false;\n                        var activePanelIndex = -1;\n                        item.tabPanel = [];\n                        item.$target.find('>[data-tab-panel]').each(function (ELIndex) {\n                            var panelInfo = {};\n                            (function (data) {\n                                if (U.isObject(data) && !data.error) {\n                                    panelInfo = jQuery.extend(true, panelInfo, data);\n                                }\n                            })(U.parseJson(this.getAttribute(\"data-tab-panel\"), true));\n\n                            if (hasActivePanel) {\n                                panelInfo.active = false;\n                            }\n\n                            panelInfo.$target = jQuery(this);\n\n                            if (panelInfo.active && panelInfo.active != \"false\") {\n                                hasActivePanel = true;\n                                item.activePanelIndex = ELIndex;\n                                panelInfo.$target.attr(\"data-tab-active\", \"true\");\n                            }\n\n                            panelInfo.panelIndex = ELIndex;\n                            item.tabPanel.push(panelInfo);\n                        });\n\n                        if (!hasActivePanel) {\n                            item.tabPanel[0].active = true;\n                            item.tabPanel[0].$target.attr(\"data-tab-active\", \"true\");\n                            item.activePanelIndex = 0;\n                        }\n\n                        // make tabLabel\n                        item.$target.append(jQuery(ax5.mustache.render(getTabLabesTmpl.call(this, queIdx), item)));\n                        item.$target.on(\"click\", '[data-tab-panel-label]', function (e) {\n                            var index = this.getAttribute(\"data-tab-panel-label\");\n                            tabControl.open.call(self, queIdx, item, index);\n                        });\n                    }\n                };\n\n                return function (queIdx) {\n                    var item = this.queue[queIdx];\n                    var data = {};\n\n                    // 레이아웃 타겟의 CSS속성을 미리 저장해 둡니다. 왜? 패널별로 크기 계산 할 때 쓰려고\n                    item.targetDimension = {\n                        height: item.$target.innerHeight(),\n                        width: item.$target.innerWidth()\n                    };\n\n                    // 부모 컨테이너가 ax5layout인지 판단 필요.\n                    if (item.$target.parents(\"[data-ax5layout]\").get(0)) {\n                        hooksResizeLayout.call(this, item.$target.parents(\"[data-ax5layout]\").get(0), queIdx);\n                    }\n\n                    if (item.layout in applyLayout) {\n                        applyLayout[item.layout].call(this, queIdx);\n                    }\n                    alignLayout.call(this, queIdx);\n                };\n            }(),\n                getQueIdx = function getQueIdx(boundID) {\n                if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-ax5layout-id\");\n                }\n                if (!U.isString(boundID)) {\n                    //console.log(ax5.info.getError(\"ax5layout\", \"402\", \"getQueIdx\"));\n                    return -1;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            },\n                hooksResizeLayout = function hooksResizeLayout(boundID, childQueIdx) {\n                var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                if (!this.queue[queIdx].childQueIdxs) this.queue[queIdx].childQueIdxs = [];\n                this.queue[queIdx].childQueIdxs.push(childQueIdx);\n                this.queue[childQueIdx].parentQueIdx = queIdx;\n            };\n            /// private end\n            /**\n             * Preferences of layout UI\n             * @method ax5layout.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.animateTime=250]\n             * @param {Object} [config.splitter]\n             * @param {Number} [config.splitter.size=4]\n             * @param {Boolean} [config.autoResize=true]\n             * @returns {ax5layout}\n             * @example\n             * ```js\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                jQuery(window).bind(\"resize.ax5layout-\" + this.instanceId, function () {\n                    alignLayoutAll.call(this);\n                }.bind(this));\n            };\n\n            /**\n             * @method ax5layout.bind\n             * @param {Object} item\n             * @param {String} [item.layout]\n             * @param {String} [item.theme]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @param {Object} [item.splitter]\n             * @param {Number} [item.splitter.size=4]\n             * @param {Boolean} [item.autoResize=true]\n             * @returns {ax5layout}\n             */\n            this.bind = function (item) {\n                var UIConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, UIConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5layout-id\");\n                if (!item.id) {\n                    item.id = 'ax5layout-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5layout-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5layout\");\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindLayoutTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindLayoutTarget.call(this, queIdx);\n                }\n\n                UIConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * @method ax5layout.align\n             * @param boundID\n             * @param {Function} [callback]\n             * @param {String} [windowResize]\n             * @returns {ax5layout}\n             */\n            this.align = function (boundID, windowResize) {\n                var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n\n                if (queIdx === -1) {\n                    var i = this.queue.length;\n                    while (i--) {\n                        alignLayout.call(this, i, null, windowResize);\n                    }\n                } else {\n                    alignLayout.call(this, queIdx, null, windowResize);\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5layout.onResize\n             * @param boundID\n             * @param fn\n             * @returns {ax5layout}\n             */\n            this.onResize = function (boundID, fn) {\n                var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"402\", \"onResize\"));\n                    return;\n                }\n                this.queue[queIdx].onResize = fn;\n                return this;\n            };\n\n            /**\n             * @method ax5layout.resize\n             * @param boundID\n             * @param {Object} resizeOption\n             * @param {Function} [callback]\n             * @returns {ax5layout}\n             */\n            this.resize = function () {\n\n                var resizeLayoutPanel = {\n                    \"dock-panel\": function dockPanel(item, resizeOption) {\n                        [\"top\", \"bottom\", \"left\", \"right\"].forEach(function (dock) {\n                            if (resizeOption[dock] && item.dockPanel[dock]) {\n                                if (dock == \"top\" || dock == \"bottom\") {\n                                    item.dockPanel[dock].__height = U.isObject(resizeOption[dock]) ? resizeOption[dock].height : resizeOption[dock];\n                                } else if (dock == \"left\" || dock == \"right\") {\n                                    item.dockPanel[dock].__width = U.isObject(resizeOption[dock]) ? resizeOption[dock].width : resizeOption[dock];\n                                }\n                            }\n                        });\n                    },\n                    \"split-panel\": function splitPanel() {},\n                    \"tab-panel\": function tabPanel() {}\n                };\n\n                return function (boundID, resizeOption, callback) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        var i = this.queue.length;\n                        while (i--) {\n                            resizeLayoutPanel[this.queue[i].layout].call(this, this.queue[i], resizeOption);\n                            alignLayout.call(this, i, callback);\n                        }\n                    } else {\n                        if (this.queue[queIdx]) {\n                            resizeLayoutPanel[this.queue[queIdx].layout].call(this, this.queue[queIdx], resizeOption);\n                            alignLayout.call(this, queIdx, callback);\n                        }\n                    }\n\n                    return this;\n                };\n            }();\n\n            this.reset = function () {\n\n                var resetLayoutPanel = {\n                    \"dock-panel\": function dockPanel(item) {\n                        [\"top\", \"bottom\", \"left\", \"right\"].forEach(function (dock) {\n                            if (item.dockPanel[dock]) {\n                                if (dock == \"top\" || dock == \"bottom\") {\n                                    item.dockPanel[dock].__height = item.dockPanel[dock].height;\n                                } else if (dock == \"left\" || dock == \"right\") {\n                                    item.dockPanel[dock].__width = item.dockPanel[dock].width;\n                                }\n                            }\n                        });\n                    },\n                    \"split-panel\": function splitPanel(item) {\n                        item.splitPanel.forEach(function (panel) {\n                            if (item.orientation == \"vertical\") {\n                                panel.__width = getPixel(panel.width, item.targetDimension.width);\n                            } else if (item.orientation == \"horizontal\") {\n                                panel.__height = getPixel(panel.height, item.targetDimension.height);\n                            }\n                        });\n                    },\n                    \"tab-panel\": function tabPanel() {}\n                };\n\n                return function (boundID, callback) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {} else {\n                        resetLayoutPanel[this.queue[queIdx].layout].call(this, this.queue[queIdx]);\n                        alignLayout.call(this, queIdx, callback);\n                    }\n\n                    return this;\n                };\n            }();\n\n            this.hide = function () {};\n\n            /**\n             * @method ax5layout.tabOpen\n             * @param boundID\n             * @param tabIndex\n             * @returns {ax5.ui.ax5layout}\n             */\n            this.tabOpen = function () {\n                return function (boundID, tabIndex) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5layout\", \"402\", \"tabOpen\"));\n                        return;\n                    }\n\n                    tabControl.open.call(this, queIdx, this.queue[queIdx], tabIndex);\n                    return this;\n                };\n            }();\n\n            /// 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5layout;\n    }());\n})();\n\nax5.ui.layout_instance = new ax5.ui.layout();\n\n/**\n * ax5layout jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5layout\n * @param {String} methodName\n * @example\n * ```js\n * jQuery('[data-ax5layout=\"ax1\"]').ax5layout();\n * ```\n */\n\njQuery.fn.ax5layout = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"align\":\n                    return ax5.ui.layout_instance.align(this, arguments[1]);\n                    break;\n                case \"resize\":\n                    return ax5.ui.layout_instance.resize(this, arguments[1], arguments[2]);\n                    break;\n                case \"reset\":\n                    return ax5.ui.layout_instance.reset(this, arguments[1]);\n                    break;\n                case \"hide\":\n                    return ax5.ui.layout_instance.hide(this, arguments[1]);\n                    break;\n                case \"onResize\":\n                    return ax5.ui.layout_instance.onResize(this, arguments[1]);\n                    break;\n                case \"tabOpen\":\n                    return ax5.ui.layout_instance.tabOpen(this, arguments[1]);\n                    break;\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.layout_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n// ax5.ui.binder\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n\n    UI.addClass({\n        className: \"binder\",\n        version: \"1.3.66\"\n    }, function () {\n\n        /**\n         * @class ax5binder\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var obj = {\n         *     name: \"Thomas Jang\",\n         *     alias: \"tom\",\n         *     tel: \"010-8881-9137\",\n         *     email: \"tom@axisj.com\",\n         *     sex: \"M\",\n         *     hobby: [\"sport\"],\n         *     useYn: \"N\",\n         *     description: \"http://www.axisj.com\",\n         *     list: [\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 10,\n         *             cost: 100\n         *         },\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 20,\n         *             cost: 100\n         *         }\n         * ]\n         * };\n         *\n         * var myBinder = new ax5.ui.binder();\n         * myBinder.setModel(obj, $('#form-target'));\n         * ```\n         */\n        var ax5binder = function ax5binder() {\n\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {};\n            cfg = this.config;\n\n            this.model = {};\n            this.tmpl = {};\n            this.view_target = null;\n            this.change_trigger = {};\n            this.click_trigger = {};\n            this.update_trigger = {};\n            this.onerror = null;\n\n            var _toString = Object.prototype.toString,\n                get_type = function get_type(O) {\n                var typeName;\n                if (O != null && O == O.window) {\n                    typeName = \"window\";\n                } else if (!!(O && O.nodeType == 1)) {\n                    typeName = \"element\";\n                } else if (!!(O && O.nodeType == 11)) {\n                    typeName = \"fragment\";\n                } else if (typeof O === \"undefined\") {\n                    typeName = \"undefined\";\n                } else if (_toString.call(O) == \"[object Object]\") {\n                    typeName = \"object\";\n                } else if (_toString.call(O) == \"[object Array]\") {\n                    typeName = \"array\";\n                } else if (_toString.call(O) == \"[object String]\") {\n                    typeName = \"string\";\n                } else if (_toString.call(O) == \"[object Number]\") {\n                    typeName = \"number\";\n                } else if (_toString.call(O) == \"[object NodeList]\") {\n                    typeName = \"nodelist\";\n                } else if (typeof O === \"function\") {\n                    typeName = \"function\";\n                }\n                return typeName;\n            },\n                get_mix_path = function get_mix_path(dataPath, index, item_path) {\n                return dataPath + \"[\" + index + \"]\" + (item_path == \".\" ? \"\" : \".\" + item_path);\n            },\n                get_real_path = function get_real_path(_dataPath) {\n                var path = [];\n                var _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n                _path.forEach(function (n) {\n                    if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n                });\n                _path = null;\n                return path.join(\"\");\n                /*\n                var path = [];\n                var _path = [].concat(dataPath.split(/[\\.\\[\\]]/g));\n                 _path.forEach(function (n) {\n                    if (n !== \"\") path.push(n);\n                });\n                _path = null;\n                return \"'\" + path.join(\"']['\") + \"'\";\n                */\n            };\n\n            /**\n             * 바인딩할 자바스크립트 오브젝트로 제이쿼리로 검색된 HTML dom 엘리먼트 에 바인딩합니다. 바인딩된 모델을 반환합니다.\n             * @method ax5binder.setModel\n             * @param {Object} model\n             * @param {jQueryObject} [view_target]\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * var myModel = new ax5.ui.binder();\n             * myModel.setModel({}, $(\"#...\"));\n             * ```\n             */\n            this.setModel = function (model, view_target) {\n                this.model = model;\n                if (!this.view_target && view_target) {\n                    this.view_target = view_target;\n                    this._binding();\n                } else {\n                    this._binding(\"update\");\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 변경한다. value의 타입은 (String, Number, Array, Object)를 지원.\n             * @method ax5binder.set\n             * @param {String} dataPath\n             * @param {Object} value\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.set(\"name\", \"Seowoo\");\n             * myModel.set(\"obj.path\", {a:1});\n             * ```\n             */\n            this.set = function (dataPath, value) {\n                var _this = this,\n                    obj_type,\n                    i,\n                    this_type;\n\n                Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(this.model, value);\n                obj_type = get_type(value);\n\n                if (obj_type == \"object\") {\n                    for (var k in value) {\n                        this.set(dataPath + \".\" + k, value[k]);\n                    }\n                } else if (obj_type == \"array\") {\n                    this.view_target.find('[data-ax-path=\"' + dataPath + '\"]').each(function () {\n                        this_type = (this.type || \"\").toLowerCase();\n                        if (this_type == \"checkbox\" || this_type == \"radio\") _this.set_els_value(this, this.tagName.toLowerCase(), this_type, value, dataPath, \"change\");\n                    });\n                    i = value.length;\n                    while (i--) {\n                        this.set(dataPath + \"[\" + i + \"]\", value[i]);\n                    }\n                } else {\n                    // apply data value to els\n                    this.view_target.find('[data-ax-path=\"' + dataPath + '\"]').each(function () {\n                        _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath, \"change\");\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 반환한다. data_path 가 없으면 전체 Object를 반환한다.\n             * @method ax5binder.get\n             * @param dataPath\n             * @returns {*}\n             */\n            this.get = function (dataPath) {\n                if (typeof dataPath == \"undefined\") {\n                    return this.model;\n                } else {\n                    return Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                }\n            };\n\n            /**\n             * data_path에 값이 변경되는 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onChange\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onChange(\"name\", function () {\n             *       console.log(this);\n             *       // el: domElement - 변경이 발생한 엘리먼트, 엘리먼트로 부터 다양한 속성을 추출할 수 있다.\n             *       // jquery : jQueryObject\n             *       // tagname: \"input\"\n             *       // value: \"changed value\"\n             *       console.log(this.el.id);\n             *   });\n             *   myModel.onChange(\"*\", function (n) {\n             *       console.log(n);\n             *       // console.log(this); 와 동일\n             *   });\n             * ```\n             */\n            this.onChange = function (dataPath, callback) {\n                this.change_trigger[dataPath || \"*\"] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 속성이 부여된 엘리먼트 하위에 태그중에 data-ax-repeat-click 속성을 가진 아이템에 대해 클릭 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onClick\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onclick(\"list\", function () {\n             *       console.log(this);\n             *       // el: domElement\n             *       // jquery: jQueryObject\n             *       // item: Object - repeat item\n             *       // item_index: \"0\" - index of item\n             *       // item_path: \"list[0]\" - repeat data_path\n             *       // repeat_path: \"list\"\n             *       // tagname: \"button\"\n             *       // value: \"add\"\n             *   });\n             * ```\n             */\n            this.onClick = function (dataPath, callback) {\n                this.click_trigger[dataPath] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위아이템을 추가합니다.\n             * @method ax5binder.add\n             * @param dataPath\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.add(\"list\", {a:1});\n             * ```\n             */\n            this.add = function (dataPath, item) {\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                item['@i'] = list.length;\n                item['@r'] = list.length;\n                item.__ADDED__ = true;\n                Function(\"val\", \"this\" + get_real_path(dataPath) + \".push(val);\").call(this.model, item);\n\n                // 다중 템플릿 처리\n                for (var t in tmpl) {\n                    var fragdom = $(ax5.mustache.render(tmpl[t].content, item));\n                    fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                    fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                    this.bind_event_tmpl(fragdom, dataPath);\n                    tmpl[t].container.append(fragdom);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl: tmpl,\n                        list: list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 제거합니다. 단! 이 때 ADDED 값을 가진 아이템은 제거하고 그렇지 않은 아이템은 DELETED 값을 아이템에 추가합니다.\n             * @method ax5binder.remove\n             * @param dataPath\n             * @param index\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.remove(\"list\", 0);\n             * ```\n             */\n            this.remove = function (dataPath, index) {\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index == \"undefined\") index = list.length - 1;\n                var remove_item = list[index];\n                if (remove_item.__ADDED__) {\n                    list.splice(index, 1);\n                } else {\n                    list[index].__DELETED__ = true;\n                }\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl: tmpl,\n                        list: list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 교체합니다.\n             * @method ax5binder.update\n             * @param dataPath\n             * @param index\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.update(\"list\", 0, {a:1});\n             * ```\n             */\n            this.update = function (dataPath, index, item) {\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index != \"undefined\" && item) list.splice(index, 1, item);\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl: tmpl,\n                        list: list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5binder.childAdd\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_item\n             */\n            this.childAdd = function (dataPath, index, child_path, child_item) {\n                var _list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\").call(this.model);\n                child_item.__ADDED__ = true;\n                list.push(child_item);\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * ax5binder.childRemove\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             */\n            this.childRemove = function (dataPath, index, child_path, child_index) {\n                var _list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\").call(this.model);\n                var remove_item = list[child_index];\n                if (remove_item.__ADDED__) {\n                    list.splice(child_index, 1);\n                } else {\n                    list[child_index].__DELETED__ = true;\n                }\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childUpdate\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             * @param child_item\n             */\n            this.childUpdate = function (dataPath, index, child_path, child_index, child_item) {\n                var _list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\").call(this.model);\n                list[child_index] = child_item;\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childSet\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param value\n             * @returns {ax5binder}\n             */\n            this.childSet = function (dataPath, index, child_path, value) {\n                var _this = this,\n                    i;\n                Function(\"val\", \"this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \" = val;\").call(this.model, value);\n\n                // apply data value to els\n                this.view_target.find('[data-ax-repeat=\"' + dataPath + '\"]').find('[data-ax-repeat-i=\"' + index + '\"]').find('[data-ax-item-path=\"' + child_path + '\"]').each(function () {\n                    _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath + \"[\" + index + \"].\" + child_path);\n                });\n                return this;\n            };\n\n            /**\n             * @method ax5binder.onUpdate\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             *  this.model.onupdate(\"moderator\", function () {\n             *      $('#moderator-add').val('');\n             *      $moderator.find('[data-role-user-btn]')\n             *          .unbind(\"click\")\n             *          .bind(\"click\", role_user_btn_onclick);\n             *  });\n             * ```\n             */\n            this.onUpdate = function (dataPath, callback) {\n                this.update_trigger[dataPath] = callback;\n                return this;\n            };\n\n            this._binding = function (isupdate) {\n                var _this = this;\n\n                // apply data value to els\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this),\n                        dataPath = dom.attr(\"data-ax-path\"),\n                        this_type = (this.type || \"\").toLowerCase();\n\n                    var val;\n                    try {\n                        val = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + get_real_path(dataPath) + \"]\");\n                    }\n\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", dataPath);\n                });\n\n                if (typeof isupdate == \"undefined\") {\n                    // collect tmpl\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this),\n                            dataPath = dom.attr(\"data-ax-repeat\"),\n                            repeat_idx = dom.attr(\"data-ax-repeat-idx\");\n\n                        if (typeof _this.tmpl[dataPath] == \"undefined\") _this.tmpl[dataPath] = {};\n                        if (typeof repeat_idx != \"undefined\") {\n                            _this.tmpl[dataPath][repeat_idx] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        } else {\n                            _this.tmpl[dataPath][\"0\"] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        }\n                        //dom.empty().show();\n                        dom.empty();\n                    });\n                } else {\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this);\n                        dom.empty().show();\n                    });\n                }\n\n                // binding event to els\n                this.view_target.find('[data-ax-path]').unbind(\"change.axbinder\").bind(\"change.axbinder\", function (e) {\n\n                    var i,\n                        hasItem = false,\n                        checked,\n                        new_value = [],\n                        dom = $(e.target),\n                        dataPath = dom.attr(\"data-ax-path\"),\n                        origin_value = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(_this.model),\n                        this_type = (this.type || \"\").toLowerCase(),\n                        value_type = get_type(origin_value),\n                        setAllow = true;\n\n                    if (value_type == \"object\" || value_type == \"array\") {\n                        setAllow = false;\n                    }\n\n                    if (this_type == \"checkbox\") {\n                        // 동일한 체크박스가 여러개 인지 판단합니다.\n                        if (_this.view_target.find('[data-ax-path=\"' + dataPath + '\"]').length > 1) {\n\n                            if (get_type(origin_value) != \"array\") {\n                                if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];else origin_value = [].concat(origin_value);\n                            }\n                            i = origin_value.length, hasItem = false, checked = this.checked;\n                            while (i--) {\n                                if (origin_value[i] == this.value) {\n                                    hasItem = true;\n                                }\n                            }\n\n                            if (checked) {\n                                if (!hasItem) origin_value.push(this.value);\n                            } else {\n                                i = origin_value.length;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        //hasItemIndex = i;\n                                    } else {\n                                        new_value.push(origin_value[i]);\n                                    }\n                                }\n                                origin_value = new_value;\n                            }\n                        } else {\n                            origin_value = this.checked ? this.value : \"\";\n                        }\n\n                        Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(_this.model, origin_value);\n                        _this.change(dataPath, {\n                            el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                        });\n                    } else {\n                        if (setAllow) {\n                            Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(_this.model, this.value);\n                            _this.change(dataPath, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                            });\n                        }\n                    }\n\n                    dom.data(\"changedTime\", new Date().getTime());\n                });\n                /*\n                 this.view_target.find('[data-ax-path]').unbind(\"blur.axbinder\").bind(\"blur.axbinder\", function (e) {\n                 var dom = $(e.target);\n                 if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < (new Date()).getTime() - 10) dom.trigger(\"change\");\n                 });\n                 */\n\n                //_this.tmpl\n                var callback;\n                for (var tk in _this.tmpl) {\n                    for (var ix in _this.tmpl[tk]) {\n                        // console.log(_this.tmpl[tk][ix].content);\n                        this.print_tmpl(tk, _this.tmpl[tk][ix], \"isInit\");\n                    }\n\n                    if (callback = this.update_trigger[tk]) {\n                        var that = {\n                            repeat_path: tk,\n                            tmpl: _this.tmpl[tk],\n                            list: Function(\"\", \"return this.\" + tk + \";\").call(this.model)\n                        };\n                        callback.call(that, that);\n                    }\n                }\n            };\n\n            this.set_els_value = function (el, tagname, type, value, dataPath, callChange) {\n                if (typeof value === \"undefined\") value = [];else value = [].concat(value);\n                var options, i;\n\n                if (tagname == \"input\") {\n                    if (type == \"checkbox\" || type == \"radio\") {\n                        i = value.length;\n                        var checked = false;\n                        try {\n                            if (i > 0) {\n                                while (i--) {\n                                    if (typeof value[i] !== \"undefined\" && el.value === value[i].toString()) {\n                                        checked = true;\n                                    }\n                                }\n                            }\n                        } catch (e) {\n                            console.log(e);\n                        }\n\n                        el.checked = checked;\n                    } else {\n                        el.value = value.join('');\n                    }\n                } else if (tagname == \"select\") {\n                    options = el.options, i = options.length;\n                    var vi,\n                        option_matched = false;\n\n                    while (i--) {\n                        vi = value.length;\n                        while (vi--) {\n                            if (typeof value[vi] !== \"undefined\" && options[i].value === value[vi].toString()) {\n                                options[i].selected = true;\n                                option_matched = true;\n                                break;\n                            }\n                        }\n                        if (option_matched) break;\n                    }\n                    if (!option_matched) {\n                        if (options[0]) {\n                            options[0].selected = true;\n                            Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(this.model, options[0].value);\n                        } else {\n                            Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(this.model, \"\");\n                        }\n                    }\n\n                    if (window.AXSelect) {\n                        // AXISJ 사용가능\n                        $(typeof value !== \"undefined\" && el).bindSelectSetValue(value[value.length - 1]);\n                    }\n                } else if (tagname == \"textarea\") {\n                    el.value = value.join('') || \"\";\n                } else {\n                    if (el.innerText) {\n                        el.innerText = value.join(\"\");\n                    } else {\n                        el.innerHTML = value.join(\"\");\n                    }\n                }\n\n                if (callChange) {\n                    this.change(dataPath, { el: el, tagname: tagname, value: value });\n                }\n                return this;\n            };\n\n            this.change = function (dataPath, that) {\n                var callback = this.change_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n                if (dataPath != \"*\" && this.change_trigger[\"*\"]) {\n                    this.change_trigger[\"*\"].call(that, that);\n                }\n            };\n\n            this.click = function (dataPath, that) {\n                var callback = this.click_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n            };\n\n            this.sync_model = function () {};\n\n            this.print_tmpl = function (dataPath, tmpl, isInit) {\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                if (list && get_type(list) == \"array\") {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        var item = list[i];\n                        if (jQuery.isPlainObject(item)) {\n                            item['@i'] = i;\n                            item['@r'] = i;\n                            if (i === 0) item['@first'] = true;\n                        } else {\n                            item = {\n                                \"@i\": i,\n                                \"@value\": item\n                            };\n                            if (i === 0) item['@first'] = true;\n                            console.log(item);\n                        }\n\n                        if (!item.__DELETED__) {\n                            var fragdom = $(ax5.mustache.render(tmpl.content, item));\n                            fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                            fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                            this.bind_event_tmpl(fragdom, dataPath);\n                            tmpl.container.append(fragdom);\n                        }\n                    }\n                }\n            };\n\n            this.bind_event_tmpl = function (target, dataPath) {\n                var _this = this,\n                    index = target.attr(\"data-ax-repeat-i\");\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n\n                target.find('[data-ax-repeat-click]').unbind(\"click.axbinder\").bind(\"click.axbinder\", function (e) {\n                    var target = ax5.util.findParentNode(e.target, function (el) {\n                        return el.getAttribute(\"data-ax-repeat-click\");\n                    });\n                    if (target) {\n                        var dom = $(target),\n                            value = dom.attr(\"data-ax-repeat-click\"),\n                            repeat_path = dom.attr(\"data-ax-repeat-path\");\n\n                        var that = {\n                            el: target,\n                            jquery: dom,\n                            tagname: target.tagName.toLowerCase(),\n                            value: value,\n                            repeat_path: dataPath,\n                            item: list[index],\n                            item_index: index,\n                            item_path: dataPath + \"[\" + index + \"]\"\n                        };\n                        _this.click(dataPath, that);\n                    }\n                });\n\n                // apply data value to els\n                target.find('[data-ax-item-path]').each(function () {\n                    var dom = $(this),\n                        item_path = dom.attr(\"data-ax-item-path\"),\n                        mix_path = get_mix_path(dataPath, index, item_path),\n                        val,\n                        this_type = (this.type || \"\").toLowerCase();\n\n                    try {\n                        val = Function(\"\", \"return this.\" + mix_path + \";\").call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + mix_path + \"]\");\n                    }\n                    //if (typeof val !== \"undefined\") _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val, mix_path);\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", mix_path);\n                });\n\n                // binding event to els\n                target.find('[data-ax-item-path]').unbind(\"change.axbinder\").bind(\"change.axbinder\", function (e) {\n                    var i,\n                        hasItem = false,\n                        checked,\n                        new_value = [],\n                        this_type = (this.type || \"\").toLowerCase(),\n                        dom = $(e.target),\n                        item_path = dom.attr(\"data-ax-item-path\"),\n                        mix_path = get_mix_path(dataPath, index, item_path),\n                        origin_value = Function(\"\", \"return this.\" + mix_path + \";\").call(_this.model),\n                        value_type = get_type(origin_value),\n                        setAllow = true;\n\n                    if (value_type == \"object\" || value_type == \"array\") {\n                        setAllow = false;\n                    }\n\n                    if (this_type == \"checkbox\") {\n                        if (target.find('[data-ax-item-path=\"' + item_path + '\"]').length > 1) {\n                            if (get_type(origin_value) != \"array\") {\n                                if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];else origin_value = [].concat(origin_value);\n                            }\n                            i = origin_value.length, hasItem = false, checked = this.checked;\n                            while (i--) {\n                                if (origin_value[i] == this.value) {\n                                    hasItem = true;\n                                }\n                            }\n\n                            if (checked) {\n                                if (!hasItem) origin_value.push(this.value);\n                            } else {\n                                i = origin_value.length;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        //hasItemIndex = i;\n                                    } else {\n                                        new_value.push(origin_value[i]);\n                                    }\n                                }\n                                origin_value = new_value;\n                            }\n                        } else {\n                            origin_value = this.checked ? this.value : \"\";\n                        }\n\n                        Function(\"val\", \"this.\" + mix_path + \" = val;\").call(_this.model, origin_value);\n                        _this.change(mix_path, {\n                            el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                        });\n                    } else {\n                        if (setAllow) {\n                            Function(\"val\", \"this.\" + mix_path + \" = val;\").call(_this.model, this.value);\n                            _this.change(mix_path, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                            });\n                        }\n                    }\n\n                    dom.data(\"changedTime\", new Date().getTime());\n                });\n                target.find('[data-ax-item-path]').unbind(\"blur.axbinder\").bind(\"blur.axbinder\", function (e) {\n                    var dom = $(e.target);\n                    if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < new Date().getTime() - 10) dom.trigger(\"change\");\n                });\n            };\n\n            /**\n             * @method ax5binder.focus\n             * @param dataPath\n             * @returns {ax5binder}\n             */\n            this.focus = function (dataPath) {\n                this.view_target.find('[data-ax-path=\"' + dataPath + '\"]').focus();\n                //this.view_target.find('[data-ax-item-path=\"' + get_real_path(dataPath) + '\"]').focus();\n                return this;\n            };\n\n            /**\n             * @method ax5binder.validate\n             * @returns {*}\n             * @example\n             * ```html\n             * <input type=\"text\" data-ax-path=\"q\" data-ax-validate=\"required\" title=\"이름\" maxlength=\"8\" value=\"\"/>\n             * ```\n             * ```js\n             * var rs = myModel.validate(), _s;\n             * console.log(rs); // 결과를 체크 해보세요\n             * if(rs.error) {\n             *      _s = rs.error[0].jquery.attr(\"title\");\n             *      alert(\"\" + _s + \"(은)는 필수 입력사항입니다.\" + _s + \"(을)를 입력하세요\");\n             *      rs.error[0].el.focus();\n             *      return;\n             *  }\n             * ```\n             */\n            this.validate = function () {\n                var _this = this;\n                var errors = [];\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this),\n                        dataPath = dom.attr(\"data-ax-path\"),\n                        is_validate = dom.attr(\"data-ax-validate\"),\n                        pattern = dom.attr(\"pattern\");\n\n                    if (is_validate) {\n                        var val, _val, is_error;\n\n                        val = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(_this.model);\n                        if (typeof val === \"undefined\") val = \"\";\n                        _val = val.toString();\n                        is_error = false;\n\n                        if (is_validate == \"required\" && _val.trim() == \"\") {\n                            is_error = true;\n                        } else if (is_validate == \"pattern\") {\n                            is_error = !new RegExp(pattern).test(_val);\n                        } else if (is_validate == \"email\") {\n                            is_error = !/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/.test(_val);\n                        } else if (!/\\D.?/g.test(is_validate) && _val.trim().length < is_validate.number()) {\n                            is_error = true;\n                        }\n\n                        if (is_error) {\n                            errors.push({\n                                type: is_validate,\n                                dataPath: dataPath,\n                                el: this,\n                                jquery: dom,\n                                value: val\n                            });\n                        }\n                    }\n                });\n                this.view_target.find('[data-ax-repeat-path]').each(function () {\n\n                    var dom = $(this),\n                        dataPath = dom.attr(\"data-ax-repeat-path\"),\n                        repeat_idx = dom.attr(\"data-ax-repeat-i\");\n\n                    dom.find('[data-ax-validate]').each(function () {\n                        var dom = $(this),\n                            is_validate = dom.attr(\"data-ax-validate\"),\n                            item_path = dom.attr(\"data-ax-item-path\");\n                        var val = Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + repeat_idx + \"].\" + item_path + \";\").call(_this.model);\n                        if (typeof val === \"undefined\") val = \"\";\n                        var _val = val.toString();\n\n                        if (is_validate) {\n                            var is_error = false;\n                            if (is_validate == \"required\" && _val.trim() == \"\") {\n                                is_error = true;\n                            } else if (is_validate == \"pattern\") {\n                                is_error = !new RegExp(pattern).test(_val);\n                            } else if (is_validate == \"email\") {\n                                is_error = !/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/.test(_val);\n                            } else if (!/\\D.?/g.test(is_validate) && _val.trim().length < is_validate.number()) {\n                                is_error = true;\n                            }\n\n                            if (is_error) {\n                                errors.push({\n                                    type: is_validate,\n                                    dataPath: dataPath,\n                                    el: this,\n                                    jquery: dom,\n                                    value: val\n                                });\n                            }\n                        }\n                    });\n                });\n\n                if (errors.length > 0) {\n                    return {\n                        error: errors\n                    };\n                } else {\n                    return {};\n                }\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5binder;\n    }());\n})();\n// ax5.ui.autocomplete\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var AUTOCOMPLETE;\n\n    UI.addClass({\n        className: \"autocomplete\",\n        version: \"1.3.66\"\n    }, function () {\n        /**\n         * @class ax5autocomplete\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * options.push({value: \"1\", text: \"string\"});\n         * options.push({value: \"2\", text: \"number\"});\n         * options.push({value: \"3\", text: \"substr\"});\n         * options.push({value: \"4\", text: \"substring\"});\n         * options.push({value: \"5\", text: \"search\"});\n         * options.push({value: \"6\", text: \"parseInt\"});\n         * options.push({value: \"7\", text: \"toFixed\"});\n         * options.push({value: \"8\", text: \"min\"});\n         * options.push({value: \"9\", text: \"max\"});\n         * options.push({value: \"10\", text: \"장기영\"});\n         * options.push({value: \"11\", text: \"장서우\"});\n         * options.push({value: \"12\", text: \"이영희\"});\n         * options.push({value: \"13\", text: \"황인서\"});\n         * options.push({value: \"14\", text: \"황세진\"});\n         * options.push({value: \"15\", text: \"이서연\"});\n         * options.push({value: \"16\", text: \"액시스제이\"});\n         * options.push({value: \"17\", text: \"ax5\"});\n         * options.push({value: \"18\", text: \"ax5grid\"});\n         * options.push({value: \"19\", text: \"ax5combobox\"});\n         * options.push({value: \"20\", text: \"ax5autocomplete\"});\n         * options.push({value: \"21\", text: \"ax5binder\"});\n         * options.push({value: \"22\", text: \"ax5select\"});\n         * options.push({value: \"23\", text: \"ax5mask\"});\n         * options.push({value: \"24\", text: \"ax5toast\"});\n         * options.push({value: \"25\", text: \"ax5dialog\"});\n         * options.push({value: \"26\", text: \"ax5modal\"});\n          * var myUI = new ax5.ui.autocomplete({\n         *      theme: \"danger\",\n         *      removeIcon: '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>'\n         * });\n         * ```\n         */\n        var ax5autocomplete = function ax5autocomplete() {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                removeIcon: 'X',\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'Now Processing'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n\n            this.queue = [];\n            this.activeautocompleteOptionGroup = null;\n            this.activeautocompleteQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var ctrlKeys = {\n                \"18\": \"KEY_ALT\",\n                //\"8\": \"KEY_BACKSPACE\",\n                \"17\": \"KEY_CONTROL\",\n                \"46\": \"KEY_DELETE\",\n                \"40\": \"KEY_DOWN\",\n                \"35\": \"KEY_END\",\n                \"187\": \"KEY_EQUAL\",\n                //\"27\": \"KEY_ESC\",\n                \"36\": \"KEY_HOME\",\n                \"45\": \"KEY_INSERT\",\n                \"37\": \"KEY_LEFT\",\n                \"189\": \"KEY_MINUS\",\n                \"34\": \"KEY_PAGEDOWN\",\n                \"33\": \"KEY_PAGEUP\",\n                // \"190\": \"KEY_PERIOD\",\n                //\"13\": \"KEY_RETURN\",\n                \"39\": \"KEY_RIGHT\",\n                \"16\": \"KEY_SHIFT\",\n                // \"32\": \"KEY_SPACE\",\n                \"9\": \"KEY_TAB\",\n                \"38\": \"KEY_UP\",\n                \"91\": \"KEY_WINDOW\"\n                //\"107\" : \"NUMPAD_ADD\",\n                //\"194\" : \"NUMPAD_COMMA\",\n                //\"110\" : \"NUMPAD_DECIMAL\",\n                //\"111\" : \"NUMPAD_DIVIDE\",\n                //\"12\" : \"NUMPAD_EQUAL\",\n                //\"106\" : \"NUMPAD_MULTIPLY\",\n                //\"109\" : \"NUMPAD_SUBTRACT\"\n            },\n                onStateChanged = function onStateChanged(item, that) {\n                if (item && item.onStateChanged) {\n                    item.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                if (that.state == \"changeValue\") {\n                    if (item && item.onChange) {\n                        item.onChange.call(that, that);\n                    } else if (this.onChange) {\n                        this.onChange.call(that, that);\n                    }\n                }\n\n                item = null;\n                that = null;\n                return true;\n            },\n                alignAutocompleteDisplay = function alignAutocompleteDisplay() {\n                var i = this.queue.length,\n                    w;\n\n                while (i--) {\n                    var item = this.queue[i];\n                    if (item.$display) {\n                        w = Math.max(item.$select.outerWidth(), U.number(item.minWidth));\n                        item.$display.css({\n                            \"min-width\": w\n                        });\n                        if (item.reset) {\n                            item.$display.find(\".addon-icon-reset\").css({\n                                \"line-height\": this.queue[i].$display.height() + \"px\"\n                            });\n                        }\n\n                        // 높이조절 처리\n                        if (item.multiple) {\n                            var displayTableHeightAdjust = function () {\n                                return U.number(item.$display.css(\"border-top-width\")) + U.number(item.$display.css(\"border-bottom-width\"));\n                            }.call(this);\n                            item.$target.height('');\n                            item.$display.height('');\n\n                            var displayTableHeight = item.$displayTable.outerHeight();\n                            if (Math.abs(displayTableHeight - item.$target.height()) > displayTableHeightAdjust) {\n                                item.$target.css({ height: displayTableHeight + displayTableHeightAdjust + 4 });\n                                item.$display.css({ height: displayTableHeight + displayTableHeightAdjust + 4 });\n                            }\n                        }\n                    }\n                }\n\n                i = null;\n                w = null;\n                return this;\n            },\n                alignAutocompleteOptionGroup = function alignAutocompleteOptionGroup(append) {\n                if (append && !this.activeautocompleteOptionGroup) return this;\n\n                var item = this.queue[this.activeautocompleteQueueIndex],\n                    pos = {},\n                    positionMargin = 0,\n                    dim = {},\n                    pickerDim = {},\n                    pickerDirection;\n\n                if (!item) return this;\n                if (append) jQuery(document.body).append(this.activeautocompleteOptionGroup);\n\n                pos = item.$target.offset();\n                dim = {\n                    width: item.$target.outerWidth(),\n                    height: item.$target.outerHeight()\n                };\n                pickerDim = {\n                    winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                    winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                    width: this.activeautocompleteOptionGroup.outerWidth(),\n                    height: this.activeautocompleteOptionGroup.outerHeight()\n                };\n\n                // picker css(width, left, top) & direction 결정\n                if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                    // set direction\n                    pickerDirection = \"top\";\n\n                    if (pos.top - pickerDim.height - positionMargin < 0) {\n                        pickerDirection = \"top\";\n                    } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                        pickerDirection = \"bottom\";\n                    }\n                } else {\n                    pickerDirection = item.direction;\n                }\n\n                if (append) {\n                    this.activeautocompleteOptionGroup.addClass(\"direction-\" + pickerDirection);\n                }\n                this.activeautocompleteOptionGroup.css(function () {\n                    if (pickerDirection == \"top\") {\n                        if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                            var newTop = pos.top + pickerDim.height;\n                            if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                newTop = 0;\n                            }\n                            if (newTop < 0) {\n                                newTop = 0;\n                            }\n\n                            return {\n                                left: pos.left,\n                                top: newTop,\n                                width: dim.width\n                            };\n                        }\n                        return {\n                            left: pos.left,\n                            top: pos.top + dim.height + 1,\n                            width: dim.width\n                        };\n                    } else if (pickerDirection == \"bottom\") {\n                        return {\n                            left: pos.left,\n                            top: pos.top - pickerDim.height - 1,\n                            width: dim.width\n                        };\n                    }\n                }.call(this));\n            },\n                onBodyClick = function onBodyClick(e, target) {\n                if (!this.activeautocompleteOptionGroup) return this;\n\n                var item = this.queue[this.activeautocompleteQueueIndex],\n                    clickEl = \"display\";\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-option-value\")) {\n                        clickEl = \"optionItem\";\n                        return true;\n                    } else if (item.$target.get(0) == target) {\n                        clickEl = \"display\";\n                        return true;\n                    }\n                });\n\n                if (!target) {\n                    this.close();\n                    return this;\n                } else if (clickEl === \"optionItem\") {\n                    setSelected.call(this, item.id, {\n                        optionIndex: {\n                            index: target.getAttribute(\"data-option-index\")\n                        }\n                    }, undefined, \"optionItemClick\");\n                    alignAutocompleteDisplay.call(this);\n                    alignAutocompleteOptionGroup.call(this);\n                    if (!item.multiple) {\n                        this.close();\n                    }\n                } else {}\n\n                return this;\n            },\n                getLabel = function getLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                // 템플릿에 전달 해야할 데이터 선언\n                var data = {};\n                data.id = item.id;\n                data.theme = item.theme;\n                data.size = \"ax5autocomplete-option-group-\" + item.size;\n                data.multiple = item.multiple;\n                data.lang = item.lang;\n                data.options = item.options;\n                data.selected = item.selected;\n                data.hasSelected = data.selected && data.selected.length > 0;\n                data.removeIcon = item.removeIcon;\n\n                return AUTOCOMPLETE.tmpl.get.call(this, \"label\", data, item.columnKeys);\n            },\n                syncLabel = function syncLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                if (!item.multiple && item.selected && item.selected.length > 0) {\n                    item.selected = [].concat(item.selected[item.selected.length - 1]);\n                }\n\n                item.selected.forEach(function (n, nindex) {\n                    n[\"@index\"] = nindex;\n                });\n\n                item.$select.html(AUTOCOMPLETE.tmpl.get.call(this, \"formSelectOptions\", {\n                    selected: item.selected\n                }, item.columnKeys));\n            },\n                printLabel = function printLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                item.$displayLabel.find('[data-ax5autocomplete-selected-label]').remove();\n                item.$displayLabelInput.before(getLabel.call(this, queIdx));\n            },\n                focusLabel = function focusLabel(queIdx) {\n                if (this.queue[queIdx].disabled) return this;\n\n                this.queue[queIdx].$displayLabel.trigger(\"focus\");\n                this.queue[queIdx].$displayLabelInput.focus();\n            },\n                clearLabel = function clearLabel(queIdx) {\n                this.queue[queIdx].$displayLabelInput.val('');\n            },\n                blurLabel = function blurLabel(queIdx) {\n                this.queue[queIdx].$displayLabel.trigger(\"blur\");\n            },\n                onSearch = function onSearch(queIdx, searchWord) {\n                if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n                searchWord = searchWord.replace(regExp, \"\");\n\n                this.queue[queIdx].waitOptions = true;\n                this.queue[queIdx].onSearch.call({\n                    self: this,\n                    item: this.queue[queIdx],\n                    searchWord: searchWord\n                }, function (O) {\n\n                    var data = {};\n                    var item = this.queue[this.activeautocompleteQueueIndex];\n                    if (!item) return false;\n\n                    /// 현재 selected 검증후 처리\n                    (function (item, O) {\n                        var optionsMap = {};\n                        O.options.forEach(function (_O, _OIndex) {\n                            _O[\"@index\"] = _OIndex;\n                            _O[\"@findex\"] = _OIndex;\n                            optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                        });\n                        if (U.isArray(item.selected)) {\n                            item.selected.forEach(function (_O) {\n                                if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                    O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                }\n                            });\n                        }\n                    })(item, O);\n\n                    item.options = O.options;\n\n                    alignAutocompleteDisplay.call(this);\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5autocomplete-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n                    data.lang = item.lang;\n                    data.options = item.options;\n                    this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n\n                    focusWord.call(this, this.activeautocompleteQueueIndex, searchWord);\n                    alignAutocompleteOptionGroup.call(this);\n\n                    setTimeout(function () {\n                        alignAutocompleteOptionGroup.call(this);\n                    }.bind(this));\n                }.bind(this));\n            },\n                focusWord = function focusWord(queIdx, searchWord) {\n                if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                var collect_options = [],\n                    i = -1,\n                    l = this.queue[queIdx].options.length - 1,\n                    n;\n                if (searchWord != \"\") {\n                    while (l - i++) {\n                        n = this.queue[queIdx].options[i];\n\n                        if (('' + n.text).toLowerCase() == searchWord.toLowerCase()) {\n                            collect_options = [{ '@findex': n['@findex'], optionsSort: 0 }];\n                            break;\n                        } else {\n                            var sort = ('' + n.text).toLowerCase().search(searchWord.toLowerCase());\n                            if (sort > -1) {\n                                collect_options.push({ '@findex': n['@findex'], optionsSort: sort });\n                                if (collect_options.length > 2) break;\n                            }\n                            sort = null;\n                        }\n                    }\n                    collect_options.sort(function (a, b) {\n                        return a.optionsSort - b.optionsSort;\n                    });\n                }\n\n                if (collect_options && collect_options.length > 0) {\n                    focusMove.call(this, queIdx, undefined, collect_options[0]['@findex']);\n                } else {\n                    focusClear.call(this, queIdx);\n                }\n            },\n                focusClear = function focusClear(queIdx) {\n                if (this.activeautocompleteOptionGroup) {\n                    this.activeautocompleteOptionGroup.find('[data-option-focus-index]').removeClass(\"hover\").removeAttr(\"data-option-selected\");\n                }\n\n                this.queue[queIdx].optionFocusIndex = -1;\n            },\n                focusMove = function focusMove(queIdx, direction, findex) {\n                var _focusIndex, _prevFocusIndex, focusOptionEl, optionGroupScrollContainer;\n                var item = this.queue[queIdx];\n\n                if (this.activeautocompleteOptionGroup && item.options && item.options.length > 0) {\n\n                    if (typeof findex !== \"undefined\") {\n                        _focusIndex = findex;\n                    } else {\n                        _prevFocusIndex = item.optionFocusIndex == -1 ? item.optionSelectedIndex || -1 : item.optionFocusIndex;\n                        if (_prevFocusIndex == -1) {\n                            _focusIndex = 0;\n                            //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n                        } else {\n                            _focusIndex = _prevFocusIndex + direction;\n                            if (_focusIndex < 0) _focusIndex = 0;else if (_focusIndex > item.optionItemLength - 1) _focusIndex = item.optionItemLength - 1;\n                        }\n                    }\n\n                    item.optionFocusIndex = _focusIndex;\n\n                    // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n                    if (item.options[_focusIndex] && item.options[_focusIndex].hide) {\n                        // 옵션이 없는 값이 선택된 경우\n                        if (typeof direction === \"undefined\") {\n                            return this;\n                        } else {\n                            var isStrop = false;\n                            while (item.options[_focusIndex].hide) {\n                                _focusIndex = _focusIndex + direction;\n                                if (_focusIndex < 0) {\n                                    _focusIndex = 0;\n                                    break;\n                                } else if (_focusIndex > item.optionItemLength - 1) {\n                                    _focusIndex = item.optionItemLength - 1;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (typeof _focusIndex !== \"undefined\") {\n                        this.activeautocompleteOptionGroup.find('[data-option-focus-index]').removeClass(\"hover\");\n\n                        focusOptionEl = this.activeautocompleteOptionGroup.find('[data-option-focus-index=\"' + _focusIndex + '\"]').addClass(\"hover\");\n\n                        optionGroupScrollContainer = this.activeautocompleteOptionGroup.find('[data-els=\"content\"]');\n\n                        if (focusOptionEl.get(0)) {\n                            var focusOptionElHeight = focusOptionEl.outerHeight(),\n                                optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                                optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                                focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                            if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                                optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                            } else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                                optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                            }\n                            // optionGroup scroll check\n\n                            if (typeof direction !== \"undefined\") {\n                                item.$displayLabelInput.val(item.options[_focusIndex].text);\n                            }\n                        }\n                    }\n                }\n            },\n                getQueIdx = function getQueIdx(boundID) {\n                if (boundID instanceof jQuery) {\n                    boundID = boundID.data(\"data-ax5autocomplete-id\");\n                } else if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-ax5autocomplete-id\");\n                }\n                if (!U.isString(boundID)) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"getQueIdx\"));\n                    return;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            },\n                getSelected = function getSelected(_item, o, selected) {\n                if (typeof selected === \"undefined\") {\n                    return _item.multiple ? !o : true;\n                } else {\n                    return selected;\n                }\n            },\n                clearSelected = function clearSelected(queIdx) {\n                this.queue[queIdx].options.forEach(function (n) {\n                    if (n.optgroup) {\n                        n.options.forEach(function (nn) {\n                            nn.selected = false;\n                        });\n                    } else {\n                        n.selected = false;\n                    }\n                });\n\n                this.queue[queIdx].selected = [];\n                this.queue[queIdx].$select.html(AUTOCOMPLETE.tmpl.get.call(this, \"formSelectOptions\", {\n                    selected: this.queue[queIdx].selected\n                }, this.queue[queIdx].columnKeys));\n            },\n                setSelected = function () {\n                var processor = {\n                    'selectedIndex': function selectedIndex(queIdx, value, selected, setValueType) {},\n                    'removeSelectedIndex': function removeSelectedIndex(queIdx, value, selected, setValueType) {\n                        var item = this.queue[queIdx],\n                            addOptions = {};\n                        var newSelectedArray = [],\n                            optionIndex = 0;\n                        for (var i = 0; i < item.selected.length; i++) {\n                            if (item.selected[i]['@index'] != value.removeSelectedIndex.index) {\n                                addOptions = { '@index': optionIndex, '@findex': optionIndex };\n                                addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                newSelectedArray.push(addOptions);\n                                optionIndex++;\n                            }\n                        }\n                        item.selected = newSelectedArray;\n                    },\n                    'optionIndex': function optionIndex(queIdx, value, selected, setValueType) {\n                        var item = this.queue[queIdx],\n                            addOptions = {};\n                        var optionIndex = item.selected.length;\n                        var pushOk = true;\n\n                        addOptions = {\n                            '@index': optionIndex, '@findex': optionIndex\n                        };\n                        addOptions[item.columnKeys.optionValue] = item.options[value.optionIndex.index][item.columnKeys.optionValue];\n                        addOptions[item.columnKeys.optionText] = item.options[value.optionIndex.index][item.columnKeys.optionText];\n\n                        for (var i = 0; i < item.selected.length; i++) {\n                            if (item.selected[i][item.columnKeys.optionValue] == addOptions[item.columnKeys.optionValue]) {\n                                pushOk = false;\n                            }\n                        }\n                        if (pushOk) item.selected.push(addOptions);\n                    },\n                    'arr': function arr(queIdx, values, selected, setValueType) {\n                        values.forEach(function (value) {\n                            if (U.isString(value) || U.isNumber(value)) {\n                                processor.text.call(self, queIdx, value, selected, \"justSetValue\");\n                            } else {\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(self, queIdx, value, selected, \"justSetValue\");\n                                        break;\n                                    }\n                                }\n                            }\n                        });\n                    },\n                    'value': function value(queIdx, _value4, selected, setValueType) {\n                        var item = this.queue[queIdx];\n                        var addOptions;\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionValue] == _value4.value[item.columnKeys.optionValue];\n                        });\n\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n                            if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n                                var appendOk = true;\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionValue] == item.options[optionIndex][cfg.columnKeys.optionValue]) {\n                                        appendOk = false;\n                                        break;\n                                    }\n                                }\n                                if (appendOk) {\n                                    addOptions = {};\n                                    addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n                                    addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n                                    item.selected.push(addOptions);\n                                }\n                            } else {\n                                var newSelectedArray = [];\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionValue] == item.options[optionIndex][cfg.columnKeys.optionValue]) {} else {\n                                        addOptions = {};\n                                        addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                        addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                        newSelectedArray.push(addOptions);\n                                    }\n                                }\n                                item.selected = newSelectedArray;\n                            }\n                        } else {\n                            // 새로운 값 추가\n                            var appendOk = true;\n                            for (var i = 0; i < item.selected.length; i++) {\n                                if (item.selected[i][cfg.columnKeys.optionValue] == _value4.value[cfg.columnKeys.optionValue]) {\n                                    appendOk = false;\n                                    break;\n                                }\n                            }\n\n                            if (appendOk) {\n                                addOptions = {};\n                                addOptions[item.columnKeys.optionValue] = _value4.value[cfg.columnKeys.optionValue];\n                                addOptions[item.columnKeys.optionText] = _value4.value[cfg.columnKeys.optionText];\n                                item.selected.push(addOptions);\n                            }\n                        }\n                    },\n                    'text': function text(queIdx, value, selected, setValueType) {\n                        var item = this.queue[queIdx];\n                        var addOptions;\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionText] == value;\n                        });\n\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n                            if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n                                var appendOk = true;\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionText] == item.options[optionIndex][cfg.columnKeys.optionText]) {\n                                        appendOk = false;\n                                        break;\n                                    }\n                                }\n                                if (appendOk) {\n                                    addOptions = {};\n                                    addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n                                    addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n                                    item.selected.push(addOptions);\n                                }\n                            } else {\n                                var newSelectedArray = [];\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionText] == item.options[optionIndex][cfg.columnKeys.optionText]) {} else {\n                                        addOptions = {};\n                                        addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                        addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                        newSelectedArray.push(addOptions);\n                                    }\n                                }\n                                item.selected = newSelectedArray;\n                            }\n                        } else {\n                            // 새로운 값 추가\n                            var appendOk = true;\n                            for (var i = 0; i < item.selected.length; i++) {\n                                if (item.selected[i][cfg.columnKeys.optionText] == value) {\n                                    appendOk = false;\n                                    break;\n                                }\n                            }\n\n                            if (appendOk) {\n                                addOptions = {};\n                                addOptions[item.columnKeys.optionValue] = value;\n                                addOptions[item.columnKeys.optionText] = value;\n                                item.selected.push(addOptions);\n                            }\n                        }\n                    },\n                    'clear': function clear(queIdx) {\n                        clearSelected.call(this, queIdx);\n                        focusClear.call(this, queIdx);\n\n                        if (this.activeautocompleteOptionGroup) {\n                            this.activeautocompleteOptionGroup.find('[data-option-index]').attr(\"data-option-Selected\", \"false\");\n                        }\n                        this.queue[queIdx].optionSelectedIndex = -1;\n                    }\n                };\n                return function (boundID, value, selected, _option) {\n\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                        return;\n                    }\n\n                    if (typeof value == \"undefined\") {\n                        throw \"error not found value\";\n                    } else if (U.isArray(value)) {\n                        processor.clear.call(this, queIdx);\n                        processor.arr.call(this, queIdx, this.queue[queIdx].multiple || value.length == 0 ? value : [value[value.length - 1]], selected);\n                    } else if (U.isString(value) || U.isNumber(value)) {\n                        if (typeof value !== \"undefined\" && value !== null && !this.queue[queIdx].multiple) {\n                            clearSelected.call(this, queIdx);\n                        }\n                        processor.text.call(this, queIdx, value, selected);\n                    } else {\n                        if (value === null) {\n                            processor.clear.call(this, queIdx);\n                        } else {\n                            if (!this.queue[queIdx].multiple) {\n                                clearSelected.call(this, queIdx);\n                            }\n                            for (var key in processor) {\n                                if (value[key]) {\n                                    processor[key].call(this, queIdx, value, selected);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    syncLabel.call(this, queIdx);\n                    printLabel.call(this, queIdx);\n                    focusLabel.call(this, queIdx);\n                    alignAutocompleteOptionGroup.call(this);\n\n                    if (typeof value !== \"undefined\") {\n                        if (_option && !_option.noStateChange) {\n                            onStateChanged.call(this, this.queue[queIdx], {\n                                self: this,\n                                item: this.queue[queIdx],\n                                state: \"changeValue\",\n                                value: this.queue[queIdx].selected\n                            });\n                        }\n                    }\n\n                    boundID = null;\n                    return this;\n                };\n            }();\n\n            /// private end\n\n            /**\n             * Preferences of autocomplete UI\n             * @method ax5autocomplete.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5autocomplete}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n                jQuery(window).bind(\"resize.ax5autocomplete-display-\" + this.instanceId, function () {\n                    alignAutocompleteDisplay.call(this);\n                }.bind(this));\n            };\n\n            /**\n             * bind autocomplete\n             * @method ax5autocomplete.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @returns {ax5autocomplete}\n             */\n            this.bind = function (item) {\n                var bindAutocompleteTarget = function () {\n                    var debouncedFocusWord = U.debounce(function (queIdx) {\n                        if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                        onSearch.call(self, queIdx, this.queue[queIdx].$displayLabelInput.val());\n                    }, 150);\n\n                    var blurLabel = function blurLabel(queIdx) {\n                        clearLabel.call(this, queIdx);\n                    };\n\n                    var autocompleteEvent = {\n                        'click': function click(queIdx, e) {\n                            var clickEl;\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-ax5autocomplete-remove\")) {\n                                    clickEl = \"optionItemRemove\";\n                                    return true;\n                                } else if (target.getAttribute(\"data-selected-clear\")) {\n                                    clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                if (clickEl === \"optionItemRemove\") {\n                                    var removeIndex = target.getAttribute(\"data-ax5autocomplete-remove-index\");\n                                    this.queue[queIdx].selected.splice(removeIndex, 1);\n                                    syncLabel.call(this, queIdx);\n                                    printLabel.call(this, queIdx);\n                                    focusLabel.call(this, queIdx);\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                    return this;\n                                } else if (clickEl === \"clear\") {\n                                    setSelected.call(this, queIdx, { clear: true });\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                }\n                            } else {\n                                if (self.activeautocompleteQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) {\n                                        // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                } else {\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyUp': function keyUp(queIdx, e) {\n                            /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n                            if (e.which == ax5.info.eventKeys.ESC && self.activeautocompleteQueueIndex === -1) {\n                                // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n                                U.stopEvent(e);\n                                return this;\n                            }\n                            if (e.which == ax5.info.eventKeys.TAB) {\n                                // nothing\n\n                                this.close();\n                                return this;\n                            }\n                            if (self.activeautocompleteQueueIndex != queIdx) {\n                                // 닫힌 상태 인경우\n                                self.open(queIdx); // open and align\n                            }\n                            if (ctrlKeys[e.which]) {\n                                U.stopEvent(e);\n                            } else {\n                                // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n                                if (e.which == ax5.info.eventKeys.BACKSPACE && this.queue[queIdx].$displayLabelInput.val() == \"\") {\n                                    // 마지막 아이템을 제거.\n                                    this.queue[queIdx].selected.pop();\n                                    syncLabel.call(this, queIdx);\n                                    printLabel.call(this, queIdx);\n                                    focusLabel.call(this, queIdx);\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                } else {\n                                    debouncedFocusWord.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyDown': function keyDown(queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                clearLabel.call(this, queIdx);\n                                this.close();\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.RETURN) {\n                                var inputValue = this.queue[queIdx].$displayLabelInput.val();\n                                if (item.optionFocusIndex > -1) {\n                                    setSelected.call(this, item.id, {\n                                        optionIndex: {\n                                            index: item.optionFocusIndex\n                                        }\n                                    }, undefined, \"optionItemClick\");\n                                } else if (inputValue != \"\") {\n                                    setSelected.call(this, queIdx, inputValue, true);\n                                }\n                                clearLabel.call(this, queIdx);\n                                alignAutocompleteDisplay.call(this);\n                                this.close();\n\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        'focus': function focus(queIdx, e) {\n                            // console.log(e);\n\n                        },\n                        'blur': function blur(queIdx, e) {\n                            blurLabel.call(this, queIdx);\n                            U.stopEvent(e);\n                        },\n                        'selectChange': function selectChange(queIdx, e) {\n                            setSelected.call(this, queIdx, { value: this.queue[queIdx].$select.val() }, true);\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = function () {\n                                return item.size ? \"input-\" + item.size : \"\";\n                            }();\n\n                            item.$display = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"autocompleteDisplay\", data, item.columnKeys));\n                            item.$displayTable = item.$display.find('[data-els=\"display-table\"]');\n                            item.$displayLabel = item.$display.find('[data-ax5autocomplete-display=\"label\"]');\n                            item.$displayLabelInput = item.$display.find('[data-ax5autocomplete-display=\"input\"]');\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                item.$select.attr(\"tabindex\", \"-1\").attr(\"class\", \"form-control \" + data.formSize);\n\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                item.$select.attr(\"multiple\", \"multiple\");\n                            } else {\n                                item.$select = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"formSelect\", data, item.columnKeys));\n                                item.$target.append(item.$select);\n                            }\n\n                            item.$target.append(item.$display);\n                        } else {\n                            printLabel.call(this, queIdx);\n                        }\n\n                        alignAutocompleteDisplay.call(this);\n\n                        item.$display.unbind('click.ax5autocomplete').bind('click.ax5autocomplete', autocompleteEvent.click.bind(this, queIdx));\n\n                        // autocomplete 태그에 대한 이벤트 감시\n\n                        item.$displayLabelInput.off(\"focus.ax5autocomplete\").on(\"focus.ax5autocomplete\", autocompleteEvent.focus.bind(this, queIdx)).off(\"blur.ax5autocomplete\").on(\"blur.ax5autocomplete\", autocompleteEvent.blur.bind(this, queIdx)).off(\"keydown.ax5autocomplete\").on(\"keydown.ax5autocomplete\", autocompleteEvent.keyUp.bind(this, queIdx)).off(\"keyup.ax5autocomplete\").on(\"keyup.ax5autocomplete\", autocompleteEvent.keyDown.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n\n                        item.$select.unbind('change.ax5autocomplete').bind('change.ax5autocomplete', autocompleteEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                }();\n\n                var autocompleteConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, autocompleteConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5autocomplete-id\");\n                if (!item.id) {\n                    item.id = 'ax5autocomplete-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5autocomplete-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5autocomplete\");\n\n                item.options = [];\n                item.selected = [];\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5autocomplete-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindAutocompleteTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindAutocompleteTarget.call(this, queIdx);\n                }\n\n                autocompleteConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of autocomplete\n             * @method ax5autocomplete.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5autocomplete}\n             */\n            this.open = function () {\n\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open autocomplete from the outside\n                     */\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {},\n                        focusTop,\n                        selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activeautocompleteOptionGroup) {\n                        if (this.activeautocompleteQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout(function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }.bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5autocomplete-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-autocomplete-option-group-opened\", \"true\");\n\n                    data.waitOptions = true;\n                    data.options = [];\n\n                    this.activeautocompleteOptionGroup = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"optionGroup\", data, item.columnKeys));\n                    this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n                    this.activeautocompleteQueueIndex = queIdx;\n\n                    alignAutocompleteOptionGroup.call(this, \"append\"); // alignAutocompleteOptionGroup 에서 body append\n                    jQuery(window).bind(\"resize.ax5autocomplete-\" + this.instanceId, function () {\n                        alignAutocompleteOptionGroup.call(this);\n                    }.bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activeautocompleteOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activeautocompleteOptionGroup.height() / 3;\n                            this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').stop().animate({ scrollTop: focusTop }, item.animateTime, 'swing', function () {});\n                        }\n                    }\n\n                    jQuery(window).bind(\"click.ax5autocomplete-\" + this.instanceId, function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }.bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5autocomplete.setValue\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _value\n             * @return {ax5autocomplete}\n             * @example\n             * ```js\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), {value:\"test\", text:\"test\"});\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), [{value:\"test1\", text:\"test1\"}, {value:\"test2\", text:\"test2\"}]);\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), null);\n             * ```\n             */\n            this.setValue = function (_boundID, _value) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n\n                clearSelected.call(this, queIdx);\n\n                if (U.isArray(_value)) {\n                    var _values = U.map(_value, function () {\n                        return { value: this };\n                    });\n                    setSelected.call(this, queIdx, _values, true, { noStateChange: true });\n                } else if (U.isObject(_value)) {\n                    setSelected.call(this, queIdx, { value: _value }, true, { noStateChange: true });\n                } else {\n                    printLabel.call(this, queIdx);\n                }\n\n                blurLabel.call(this, queIdx);\n                alignAutocompleteDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.setText\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _text\n             * @returns {ax5autocomplete}\n             * @example\n             * ```js\n             * myAutocomplete.setText($('[data-ax5autocomplete=\"autocomplete1\"]'), \"string\");\n             * myAutocomplete.setText($('[data-ax5autocomplete=\"autocomplete1\"]'), [\"substring\", \"search\"]);\n             * ```\n             */\n            this.setText = function (_boundID, _text) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n                this.queue[queIdx].selected = [];\n                clearSelected.call(this, queIdx);\n                setSelected.call(this, queIdx, _text, true, { noStateChange: true });\n                blurLabel.call(this, queIdx);\n                alignAutocompleteDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.getSelectedOption\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {Array}\n             */\n            this.getSelectedOption = function (_boundID) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n                return U.deepCopy(this.queue[queIdx].selected);\n            };\n\n            /**\n             * @method ax5autocomplete.close\n             * @returns {ax5autocomplete}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activeautocompleteOptionGroup) return this;\n\n                item = this.queue[this.activeautocompleteQueueIndex];\n                item.optionFocusIndex = -1;\n                item.$display.removeAttr(\"data-autocomplete-option-group-opened\").trigger(\"focus\");\n\n                this.activeautocompleteOptionGroup.addClass(\"destroy\");\n\n                jQuery(window).unbind(\"resize.ax5autocomplete-\" + this.instanceId).unbind(\"click.ax5autocomplete-\" + this.instanceId).unbind(\"keyup.ax5autocomplete-\" + this.instanceId);\n\n                this.closeTimer = setTimeout(function () {\n                    if (this.activeautocompleteOptionGroup) this.activeautocompleteOptionGroup.remove();\n                    this.activeautocompleteOptionGroup = null;\n                    this.activeautocompleteQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"close\"\n                    });\n                }.bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.blur\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.blur = function (_boundID) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n\n                blurLabel.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.enable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.enable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disable = false;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.removeAttr(\"disabled\");\n                        this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.removeAttr(\"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"enable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.disable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.disable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disable = true;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                        this.queue[queIdx].$displayLabelInput.attr(\"disabled\", \"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"disable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.align\n             */\n            this.align = function () {\n                alignAutocompleteDisplay.call(this);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5autocomplete;\n    }());\n\n    AUTOCOMPLETE = ax5.ui.autocomplete;\n})();\n\n/**\n * autocomplete jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5autocomplete\n * @param {String} methodName\n * @param [arguments]\n * @param [arguments]\n * @example\n * ```html\n * <div data-ax5autocomplete=\"ax1\" data-ax5autocomplete-config='{\n *  multiple: true,\n *  editable: true,\n *  size: \"\",\n *  theme:\"\"\n *  }'></div>\n * <script>\n * jQuery('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete();\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"getSelectedOption\");\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"setValue\", {value:\"test\", text:\"test\"});\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"enable\");\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"disable\");\n * </script>\n * ```\n */\nax5.ui.autocomplete_instance = new ax5.ui.autocomplete();\njQuery.fn.ax5autocomplete = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.autocomplete_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.autocomplete_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.autocomplete_instance.setValue(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"setText\":\n                    return ax5.ui.autocomplete_instance.setText(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"getSelectedOption\":\n                    return ax5.ui.autocomplete_instance.getSelectedOption(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.autocomplete_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.autocomplete_instance.disable(this);\n                    break;\n                case \"blur\":\n                    return ax5.ui.autocomplete_instance.blur(this);\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.autocomplete_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n\n// todo : editable 지원.\n// 아이템 박스 안에서 제거 할때 디스플레이 정렬\n// ax5.ui.autocomplete.tmpl\n(function () {\n    var AUTOCOMPLETE = ax5.ui.autocomplete;\n    var U = ax5.util;\n\n    var optionGroup = function optionGroup(columnKeys) {\n        return '\\n<div class=\"ax5autocomplete-option-group {{theme}} {{size}}\" data-ax5autocomplete-option-group=\"{{id}}\">\\n    <div class=\"ax-autocomplete-body\">\\n        <div class=\"ax-autocomplete-option-group-content\" data-els=\"content\"></div>\\n    </div>\\n    <div class=\"ax-autocomplete-arrow\"></div> \\n</div>\\n';\n    };\n\n    var autocompleteDisplay = function autocompleteDisplay(columnKeys) {\n        return ' \\n<input tabindex=\"-1\" type=\"text\" data-input-dummy=\"\" style=\"display: none;\" />\\n<div class=\"form-control {{formSize}} ax5autocomplete-display {{theme}}\" \\ndata-ax5autocomplete-display=\"{{id}}\" data-ax5autocomplete-instance=\"{{instanceId}}\">\\n    <div class=\"ax5autocomplete-display-table\" data-els=\"display-table\">\\n        <div data-ax5autocomplete-display=\"label-holder\"> \\n        <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}\\n        data-ax5autocomplete-display=\"label\"\\n        spellcheck=\"false\"><input type=\"text\"data-ax5autocomplete-display=\"input\" style=\"border:0px none;\" /></a>\\n        </div>\\n        <div data-ax5autocomplete-display=\"addon\"> \\n            {{#multiple}}{{#reset}}\\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\\n            {{/reset}}{{/multiple}}\\n        </div>\\n    </div>\\n</a>\\n';\n    };\n\n    var formSelect = function formSelect(columnKeys) {\n        return '\\n<select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" multiple=\"multiple\"></select>\\n';\n    };\n\n    var formSelectOptions = function formSelectOptions(columnKeys) {\n        return '\\n{{#selected}}\\n<option value=\"{{' + columnKeys.optionValue + '}}\" selected=\"true\">{{' + columnKeys.optionText + '}}</option>\\n{{/selected}}\\n';\n    };\n\n    var options = function options(columnKeys) {\n        return '\\n{{#waitOptions}}\\n    <div class=\"ax-autocomplete-option-item\">\\n            <div class=\"ax-autocomplete-option-item-holder\">\\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\\n                    {{{lang.loading}}}\\n                </span>\\n            </div>\\n        </div>\\n{{/waitOptions}}\\n{{^waitOptions}}\\n    {{#options}}\\n        {{^hide}}\\n        <div class=\"ax-autocomplete-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{' + columnKeys.optionValue + '}}\" {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n            <div class=\"ax-autocomplete-option-item-holder\">\\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">{{' + columnKeys.optionText + '}}</span>\\n            </div>\\n        </div>\\n        {{/hide}}\\n    {{/options}}\\n    {{^options}}\\n        <div class=\"ax-autocomplete-option-item\">\\n            <div class=\"ax-autocomplete-option-item-holder\">\\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\\n                    {{{lang.noOptions}}}\\n                </span>\\n            </div>\\n        </div>\\n    {{/options}}\\n{{/waitOptions}}\\n';\n    };\n\n    var label = function label(columnKeys) {\n        return '{{#selected}}<div tabindex=\"-1\" data-ax5autocomplete-selected-label=\"{{@i}}\" data-ax5autocomplete-selected-text=\"{{text}}\"><div data-ax5autocomplete-remove=\"true\" data-ax5autocomplete-remove-index=\"{{@i}}\">{{{removeIcon}}}</div><span>{{text}}</span></div>{{/selected}}';\n    };\n\n    AUTOCOMPLETE.tmpl = {\n        \"autocompleteDisplay\": autocompleteDisplay,\n        \"formSelect\": formSelect,\n        \"formSelectOptions\": formSelectOptions,\n        \"optionGroup\": optionGroup,\n        \"options\": options,\n        \"label\": label,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(AUTOCOMPLETE.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","(function () {\n    'use strict';\n\n    // root of function\n    var root = this, win = this;\n    var doc = (win) ? win.document : null, docElem = (win) ? win.document.documentElement : null;\n    var reIsJson = /^([\"'](\\\\.|[^\"\\\\\\n\\r])*?[\"']|[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t])+?$/,\n        reMs = /^-ms-/,\n        reSnakeCase = /[\\-_]([\\da-z])/gi,\n        reCamelCase = /([A-Z])/g,\n        reDot = /\\./,\n        reInt = /[-|+]?[\\D]/gi,\n        reNotNum = /\\D/gi,\n        reMoneySplit = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n        reAmp = /&/g,\n        reEq = /=/,\n        reClassNameSplit = /[ ]+/g,\n\n        /** @namespace {Object} ax5 */\n        ax5 = {}, info, U, dom;\n\n    /**\n     * guid\n     * @member {Number} ax5.guid\n     */\n    ax5.guid = 1;\n    /**\n     * ax5.guid를 구하고 증가시킵니다.\n     * @method ax5.getGuid\n     * @returns {Number} guid\n     */\n    ax5.getGuid = function () {\n        return ax5.guid++;\n    };\n\n    /**\n     * 상수모음\n     * @namespace ax5.info\n     */\n    ax5.info = info = (function () {\n        /**\n         * ax5 version\n         * @member {String} ax5.info.version\n         */\n        var version = \"1.3.66\";\n\n        /**\n         * ax5 library path\n         * @member {String} ax5.info.baseUrl\n         */\n        var baseUrl = \"\";\n\n        /**\n         * ax5 에러 출력메세지 사용자 재 정의\n         * @member {Object} ax5.info.onerror\n         * @examples\n         * ```\n         * ax5.info.onerror = function(){\n\t\t *  console.log(arguments);\n\t\t * }\n         * ```\n         */\n        var onerror = function () {\n            console.error(U.toArray(arguments).join(\":\"));\n        };\n\n        /**\n         * event keyCodes\n         * @member {Object} ax5.info.eventKeys\n         * @example\n         * ```\n         * {\n\t\t * \tBACKSPACE: 8, TAB: 9,\n\t\t * \tRETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n\t\t * \tHOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n\t\t * }\n         * ```\n         */\n        var eventKeys = {\n            BACKSPACE: 8, TAB: 9,\n            RETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n            HOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n        };\n\n        /**\n         * week names\n         * @member {Object[]} weekNames\n         * @member {string} weekNames[].label\n         *\n         * @example\n         * ```\n         * [\n         *  {label: \"SUN\"},{label: \"MON\"},{label: \"TUE\"},{label: \"WED\"},{label: \"THU\"},{label: \"FRI\"},{label: \"SAT\"}\n         * ]\n         * console.log( weekNames[0] );\n         * console.log( ax5.info.weekNames[(new Date()).getDay()].label )\n         * ```\n         */\n        var weekNames = [\n            {label: \"SUN\"},\n            {label: \"MON\"},\n            {label: \"TUE\"},\n            {label: \"WED\"},\n            {label: \"THU\"},\n            {label: \"FRI\"},\n            {label: \"SAT\"}\n        ];\n\n        /**\n         * 사용자 브라우저 식별용 오브젝트\n         * @member {Object} ax5.info.browser\n         * @example\n         * ```\n         * console.log( ax5.info.browser );\n         * //Object {name: \"chrome\", version: \"39.0.2171.71\", mobile: false}\n         * ```\n         */\n        var browser = (function (ua, mobile, browserName, match, browser, browserVersion) {\n            if (!win || !win.navigator) return {};\n\n            ua = navigator.userAgent.toLowerCase(), mobile = (ua.search(/mobile/g) != -1), browserName, match, browser, browserVersion;\n\n            if (ua.search(/iphone/g) != -1) {\n                return {name: \"iphone\", version: 0, mobile: true}\n            }\n            else if (ua.search(/ipad/g) != -1) {\n                return {name: \"ipad\", version: 0, mobile: true}\n            }\n            else if (ua.search(/android/g) != -1) {\n                match = /(android)[ \\/]([\\w.]+)/.exec(ua) || [];\n                browserVersion = (match[2] || \"0\");\n                return {name: \"android\", version: browserVersion, mobile: mobile}\n            }\n            else {\n                browserName = \"\";\n                match = /(opr)[ \\/]([\\w.]+)/.exec(ua) || /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n                browser = (match[1] || \"\");\n                browserVersion = (match[2] || \"0\");\n\n                if (browser == \"msie\") browser = \"ie\";\n                return {\n                    name: browser,\n                    version: browserVersion,\n                    mobile: mobile\n                }\n            }\n            ua = null, mobile = null, browserName = null, match = null, browser = null, browserVersion = null;\n        })();\n\n        /**\n         * 브라우저 여부\n         * @member {Boolean} ax5.info.isBrowser\n         */\n        var isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && win.document);\n\n        /**\n         * 브라우저에 따른 마우스 휠 이벤트이름\n         * @member {Object} ax5.info.wheelEnm\n         */\n        var wheelEnm = (win && (/Firefox/i.test(navigator.userAgent)) ? \"DOMMouseScroll\" : \"mousewheel\");\n\n        /**\n         * 첫번째 자리수 동사 - (필요한것이 없을때 : 4, 실행오류 : 5)\n         * 두번째 자리수 목적어 - 문자열 0, 숫자 1, 배열 2, 오브젝트 3, 함수 4, DOM 5, 파일 6, 기타 7\n         * 세번째 자리수 옵션\n         * @member {Object} ax5.info.errorMsg\n         */\n        var errorMsg = {};\n\n        /**\n         * 현재 페이지의 Url 정보를 리턴합니다.\n         * @method ax5.info.urlUtil\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.util.toJson( ax5.info.urlUtil() ) );\n         * {\n\t\t *\t\"baseUrl\": \"http://ax5:2018\",\n\t\t *\t\"href\": \"http://ax5:2018/samples/index.html?a=1&b=1#abc\",\n\t\t *\t\"param\": \"a=1&b=1\",\n\t\t *\t\"referrer\": \"\",\n\t\t *\t\"pathname\": \"/samples/index.html\",\n\t\t *\t\"hostname\": \"ax5\",\n\t\t *\t\"port\": \"2018\",\n\t\t *\t\"url\": \"http://ax5:2018/samples/index.html\",\n\t\t *\t\"hashdata\": \"abc\"\n\t\t * }\n         * ```\n         */\n        function urlUtil(url, urls) {\n            url = {\n                href: win.location.href,\n                param: win.location.search,\n                referrer: doc.referrer,\n                pathname: win.location.pathname,\n                hostname: win.location.hostname,\n                port: win.location.port\n            }, urls = url.href.split(/[\\?#]/);\n            url.param = url.param.replace(\"?\", \"\");\n            url.url = urls[0];\n            if (url.href.search(\"#\") > -1) {\n                url.hashdata = U.last(urls);\n            }\n            urls = null;\n            url.baseUrl = U.left(url.href, \"?\").replace(url.pathname, \"\");\n            return url;\n        }\n\n        /**\n         * ax5-error-msg.js 에 정의된 ax5 error를 반환합니다.\n         * @method ax5.info.getError\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.info.getError(\"single-uploader\", \"460\", \"upload\") );\n         *\n         * if(!this.selectedFile){\n\t\t *      if (cfg.onEvent) {\n\t\t *      \tvar that = {\n\t\t *      \t\taction: \"error\",\n\t\t *      \t\terror: ax5.info.getError(\"single-uploader\", \"460\", \"upload\")\n\t\t *      \t};\n\t\t *      \tcfg.onEvent.call(that, that);\n\t\t *      }\n\t\t *      return this;\n\t\t * }\n         * ```\n         */\n        function getError(className, errorCode, methodName) {\n            if (info.errorMsg && info.errorMsg[className]) {\n                return {\n                    className: className,\n                    errorCode: errorCode,\n                    methodName: methodName,\n                    msg: info.errorMsg[className][errorCode]\n                };\n            }\n            else {\n                return {className: className, errorCode: errorCode, methodName: methodName};\n            }\n        }\n\n        /**\n         * 브라우져의 터치 기능 유무를 확인합니다.\n         * @method ax5.info.supportTouch\n         * @returns {boolean}\n         * @example\n         * ```\n         * var chkFlag = ax5.info.supportTouch;\n         */\n        let supportTouch = (win) ? (('ontouchstart' in win) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)) : false;\n\n        let supportFileApi = (win) ? ( win.FileReader && win.File && win.FileList && win.Blob ) : false;\n\n        return {\n            errorMsg: errorMsg,\n            version: version,\n            baseUrl: baseUrl,\n            onerror: onerror,\n            eventKeys: eventKeys,\n            weekNames: weekNames,\n            browser: browser,\n            isBrowser: isBrowser,\n            supportTouch: supportTouch,\n            supportFileApi: supportFileApi,\n            wheelEnm: wheelEnm,\n            urlUtil: urlUtil,\n            getError: getError\n        };\n    })();\n\n    /**\n     * Refer to this by {@link ax5}.\n     * @namespace ax5.util\n     */\n    ax5['util'] = U = (function () {\n        var _toString = Object.prototype.toString;\n\n        /**\n         * Object나 Array의 아이템으로 사용자 함수를 호출합니다.\n         * @method ax5.util.each\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * axf.each([0,1,2], function(){\n\t\t * \t// with this\n\t\t * });\n         * axf.each({a:1, b:2}, function(){\n\t\t * \t// with this\n\t\t * });\n         * ```\n         */\n        function each(O, _fn) {\n            if (isNothing(O)) return [];\n            var key, i = 0, l = O.length,\n                isObj = l === undefined || typeof O === \"function\";\n            if (isObj) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\")\n                        if (_fn.call(O[key], key, O[key]) === false) break;\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\")\n                        if (_fn.call(O[i], i, O[i++]) === false) break;\n                }\n            }\n            return O;\n        }\n\n        // In addition to using the http://underscorejs.org : map, reduce, reduceRight, find\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값으로 이루어진 새로운 배열을 만듭니다.\n         * @method ax5.util.map\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4];\n         * var myObject = {a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n\t\t *    fn: function(abcdd){\n\t\t *        return abcdd;\n\t\t *    }\n\t\t * };\n         *\n         * var _arr = ax5.util.map( myArray,  function(index, I){\n\t\t *    return index+1;\n\t\t * });\n         * console.log(_arr);\n         * // [1, 2, 3, 4, 5]\n         *\n         * var _arr = ax5.util.map( myObject,  function(k, v){\n\t\t *    return v * 2;\n\t\t * });\n         * console.log(_arr);\n         * // [2, 4, NaN, NaN]\n         * ```\n         */\n        function map(O, _fn) {\n            if (isNothing(O)) return [];\n            var key, i = 0, l = O.length, results = [], fnResult;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[key], key, O[key])) === false) break;\n                        else results.push(fnResult);\n                    }\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[i], i, O[i++])) === false) break;\n                        else results.push(fnResult);\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값이 참인 아이템의 위치나 키값을 반환합니다.\n         * @method ax5.util.search\n         * @param {Object|Array} O\n         * @param {Function|String|Number} _fn - 함수 또는 값\n         * @returns {Number|String}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4,5,6];\n         * var myObject = {a:\"123\",\"b\":\"123\",c:123};\n         *\n         * ax5.util.search(myArray,  function(){\n\t\t *    return this > 3;\n\t\t * });\n         * // 4\n         * ax5.util.search(myObject,  function(k, v){\n\t\t *    return v === 123;\n\t\t * });\n         * // \"c\"\n         * ax5.util.search([1,2,3,4], 3);\n         * // 2\n         * ax5.util.search([1,2], 4);\n         * // -1\n         * ax5.util.search([\"name\",\"value\"], \"value\");\n         * // 1\n         * ax5.util.search([\"name\",\"value\"], \"values\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value2\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value\");\n         * // \"k2\"\n         * ```\n         */\n        function search(O, _fn) {\n            if (isNothing(O)) return -1;\n            var key, i = 0, l = O.length;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\" && isFunction(_fn) && _fn.call(O[key], key, O[key])) {\n                        return key;\n                        break;\n                    }\n                    else if (O[key] == _fn) {\n                        return key;\n                        break;\n                    }\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\" && isFunction(_fn) && _fn.call(O[i], i, O[i])) {\n                        return i;\n                        break;\n                    }\n                    else if (O[i] == _fn) {\n                        return i;\n                        break;\n                    }\n                    i++;\n                }\n            }\n            return -1;\n        }\n\n        /**\n         * @method ax5.util.sum\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.sum(arr, function () {\n         *  if(this.name == \"122\") {\n         *      return this.value;\n         *  }\n         * });\n         * console.log(rs); // 19\n         *\n         * console.log(ax5.util.sum(arr, 10, function () {\n         *   return this.value;\n         * }));\n         * // 40\n         * ```\n         */\n        function sum(O, defaultValue, _fn) {\n            var i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            }\n            else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            }\n            else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n\n        /**\n         * @method ax5.util.avg\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.avg(arr, function () {\n         *      return this.value;\n         * });\n         *\n         * console.log(rs); // 10\n         * ```\n         */\n        function avg(O, defaultValue, _fn) {\n            var i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            }\n            else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            }\n            else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * 배열의 왼쪽에서 오른쪽으로 연산을 진행하는데 수행한 결과가 왼쪽 값으로 반영되어 최종 왼쪽 값을 반환합니다.\n         * @method ax5.util.reduce\n         * @param {Array|Object} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduce( aarray, function(p, n){\n\t\t *   return p * n;\n\t\t * });\n         * console.log(result, aarray);\n         * // 120 [5, 4, 3, 2, 1]\n         *\n         * ax5.util.reduce({a:1, b:2}, function(p, n){\n\t\t *    return parseInt(p|0) + parseInt(n);\n\t\t * });\n         * // 3\n         * ```\n         */\n        function reduce(O, _fn) {\n            var i, l, tokenItem;\n            if (isArray(O)) {\n                i = 0, l = O.length, tokenItem = O[i];\n                for (; i < l - 1;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenItem = _fn.call(root, tokenItem, O[++i]) ) === false) break;\n                    }\n                }\n                return tokenItem;\n            }\n            else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenItem = _fn.call(root, tokenItem, O[i]) ) === false) break;\n                    }\n                }\n                return tokenItem;\n            }\n            else {\n                console.error(\"argument error : ax5.util.reduce - use Array or Object\");\n                return null;\n            }\n        }\n\n        /**\n         * 배열의 오른쪽에서 왼쪽으로 연산을 진행하는데 수행한 결과가 오른쪽 값으로 반영되어 최종 오른쪽 값을 반환합니다.\n         * @method ax5.util.reduceRight\n         * @param {Array} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduceRight( aarray, function(p, n){\n\t\t *    console.log( n );\n\t\t *    return p * n;\n\t\t * });\n         * console.log(result, aarray);\n         * 120 [5, 4, 3, 2, 1]\n         * ```\n         */\n        function reduceRight(O, _fn) {\n            var i = O.length - 1, tokenItem = O[i];\n            for (; i > 0;) {\n                if (typeof O[i] != \"undefined\") {\n                    if (( tokenItem = _fn.call(root, tokenItem, O[--i]) ) === false) break;\n                }\n            }\n            return tokenItem;\n        }\n\n        /**\n         * 배열또는 오브젝트의 각 아이템을 인자로 하는 사용자 함수의 결과가 참인 아이템들의 배열을 반환합니다.\n         * @method ax5.util.filter\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.filter( aarray, function(){\n\t\t *    return this % 2;\n\t\t * });\n         * console.log(result);\n         * // [5, 3, 1]\n         *\n         * var filObject = {a:1, s:\"string\", oa:{pickup:true, name:\"AXISJ\"}, os:{pickup:true, name:\"AX5\"}};\n         * result = ax5.util.filter( filObject, function(){\n\t\t * \treturn this.pickup;\n\t\t * });\n         * console.log( ax5.util.toJson(result) );\n         * // [{\"pickup\": , \"name\": \"AXISJ\"}, {\"pickup\": , \"name\": \"AX5\"}]\n         * ```\n         */\n        function filter(O, _fn) {\n            if (isNothing(O)) return [];\n            var k, i = 0, l = O.length, results = [], fnResult;\n            if (isObject(O)) {\n                for (k in O) {\n                    if (typeof O[k] != \"undefined\") {\n                        if (fnResult = _fn.call(O[k], k, O[k])) results.push(O[k]);\n                    }\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (fnResult = _fn.call(O[i], i, O[i])) results.push(O[i]);\n                        i++;\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * Object를 JSONString 으로 반환합니다.\n         * @method ax5.util.toJson\n         * @param {Object|Array} O\n         * @returns {String} JSON\n         * @example\n         * ```js\n         * var ax = ax5.util;\n         * var myObject = {\n\t\t *    a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n\t\t *    fn: function(abcdd){\n\t\t *        return abcdd;\n\t\t *    }\n\t\t * };\n         * console.log( ax.toJson(myObject) );\n         * ```\n         */\n        function toJson(O) {\n            var jsonString = \"\";\n            if (ax5.util.isArray(O)) {\n                var i = 0, l = O.length;\n                jsonString += \"[\";\n                for (; i < l; i++) {\n                    if (i > 0) jsonString += \",\";\n                    jsonString += toJson(O[i]);\n                }\n                jsonString += \"]\";\n            }\n            else if (ax5.util.isObject(O)) {\n                jsonString += \"{\";\n                var jsonObjectBody = [];\n                each(O, function (key, value) {\n                    jsonObjectBody.push('\"' + key + '\": ' + toJson(value));\n                });\n                jsonString += jsonObjectBody.join(\", \");\n                jsonString += \"}\";\n            }\n            else if (ax5.util.isString(O)) {\n                jsonString = '\"' + O + '\"';\n            }\n            else if (ax5.util.isNumber(O)) {\n                jsonString = O;\n            }\n            else if (ax5.util.isUndefined(O)) {\n                jsonString = \"undefined\";\n            }\n            else if (ax5.util.isFunction(O)) {\n                jsonString = '\"{Function}\"';\n            }\n            else {\n                jsonString = O;\n            }\n            return jsonString;\n        }\n\n        /**\n         * 관용의 JSON Parser\n         * @method ax5.util.parseJson\n         * @param {String} JSONString\n         * @param {Boolean} [force] - 강제 적용 여부 (json 문자열 검사를 무시하고 오브젝트 변환을 시도합니다.)\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log(ax5.util.parseJson('{\"a\":1}'));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':'b'}\"));\n         * // Object {a: 1, b: \"b\"}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':function(){return 1;}}\", true));\n         * // Object {a: 1, b: function}\n         * console.log(ax5.util.parseJson(\"{a:1}\"));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"[1,2,3]\"));\n         * // [1, 2, 3]\n         * console.log(ax5.util.parseJson(\"['1','2','3']\"));\n         * // [\"1\", \"2\", \"3\"]\n         * console.log(ax5.util.parseJson(\"[{'a':'99'},'2','3']\"));\n         * // [Object, \"2\", \"3\"]\n         * ```\n         */\n        function parseJson(str, force) {\n            if (force || (reIsJson).test(str)) {\n                try {\n                    return (new Function('', 'return ' + str))();\n                } catch (e) {\n                    return {error: 500, msg: 'syntax error'};\n                }\n            }\n            else {\n                return {error: 500, msg: 'syntax error'};\n            }\n        }\n\n        /**\n         * 인자의 타입을 반환합니다.\n         * @method ax5.util.getType\n         * @param {Object|Array|String|Number|Element|Etc} O\n         * @returns {String} window|element|object|array|function|string|number|undefined|nodelist\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * var a = 11;\n         * var b = \"11\";\n         * console.log( axf.getType(a) );\n         * console.log( axf.getType(b) );\n         * ```\n         */\n        function getType(O) {\n            var typeName;\n            if (O != null && O == O.window) {\n                typeName = \"window\";\n            }\n            else if (!!(O && O.nodeType == 1)) {\n                typeName = \"element\";\n            }\n            else if (!!(O && O.nodeType == 11)) {\n                typeName = \"fragment\";\n            }\n            else if (O === null) {\n                typeName = \"null\";\n            }\n            else if (typeof O === \"undefined\") {\n                typeName = \"undefined\";\n            }\n            else if (_toString.call(O) == \"[object Object]\") {\n                typeName = \"object\";\n            }\n            else if (_toString.call(O) == \"[object Array]\") {\n                typeName = \"array\";\n            }\n            else if (_toString.call(O) == \"[object String]\") {\n                typeName = \"string\";\n            }\n            else if (_toString.call(O) == \"[object Number]\") {\n                typeName = \"number\";\n            }\n            else if (_toString.call(O) == \"[object NodeList]\") {\n                typeName = \"nodelist\";\n            }\n            else if (typeof O === \"function\") {\n                typeName = \"function\";\n            }\n            return typeName;\n        }\n\n        /**\n         * 오브젝트가 window 인지 판단합니다.\n         * @method ax5.util.isWindow\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isWindow(O) {\n            return O != null && O == O.window;\n        }\n\n        /**\n         * 오브젝트가 HTML 엘리먼트여부인지 판단합니다.\n         * @method ax5.util.isElement\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isElement(O) {\n            return !!(O && (O.nodeType == 1 || O.nodeType == 11));\n        }\n\n        /**\n         * 오브젝트가 Object인지 판단합니다.\n         * @method ax5.util.isObject\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isObject(O) {\n            return _toString.call(O) == \"[object Object]\";\n        }\n\n        /**\n         * 오브젝트가 Array인지 판단합니다.\n         * @method ax5.util.isArray\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isArray(O) {\n            return _toString.call(O) == \"[object Array]\";\n        }\n\n        /**\n         * 오브젝트가 Function인지 판단합니다.\n         * @method ax5.util.isFunction\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isFunction(O) {\n            return typeof O === \"function\";\n        }\n\n        /**\n         * 오브젝트가 String인지 판단합니다.\n         * @method ax5.util.isString\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isString(O) {\n            return _toString.call(O) == \"[object String]\";\n        }\n\n        /**\n         * 오브젝트가 Number인지 판단합니다.\n         * @method ax5.util.isNumber\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNumber(O) {\n            return _toString.call(O) == \"[object Number]\";\n        }\n\n        /**\n         * 오브젝트가 NodeList인지 판단합니다.\n         * @method ax5.util.isNodelist\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNodelist(O) {\n            return !!(_toString.call(O) == \"[object NodeList]\" || (typeof O !== \"undefined\" && O && O[0] && O[0].nodeType == 1));\n        }\n\n        /**\n         * 오브젝트가 undefined인지 판단합니다.\n         * @method ax5.util.isUndefined\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isUndefined(O) {\n            return typeof O === \"undefined\";\n        }\n\n        /**\n         * 오브젝트가 undefined이거나 null이거나 빈값인지 판단합니다.\n         * @method ax5.util.isNothing\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNothing(O) {\n            return (typeof O === \"undefined\" || O === null || O === \"\");\n        }\n\n        /**\n         * 오브젝트가 날자값인지 판단합니다.\n         * @method ax5.util.isDate\n         * @param {Date} O\n         * @returns {Boolean}\n         * @example\n         * ```js\n         * ax5.util.isDate('2016-09-30');\n         * // false\n         * ax5.util.isDate( new Date('2016-09-30') );\n         * // true\n         * ```\n         */\n        function isDate(O) {\n            return (O instanceof Date && !isNaN(O.valueOf()));\n        }\n\n\n        function isDateFormat(O) {\n            var\n                result = false\n                ;\n            if (!O) {\n            }\n            else if (O instanceof Date && !isNaN(O.valueOf())) {\n                result = true;\n            }\n            else {\n                if (O.length > 7) {\n                    if (date(O) instanceof Date) {\n                        return true;\n                    }\n                }\n                O = O.replace(/\\D/g, '');\n                if (O.length > 7) {\n                    var\n                        mm = O.substr(4, 2),\n                        dd = O.substr(6, 2)\n                        ;\n                    O = date(O);\n                    if (O.getMonth() == (mm - 1) && O.getDate() == dd) {\n                        result = true;\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * 오브젝트의 첫번째 아이템을 반환합니다.\n         * @method ax5.util.first\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.first({a:1, b:2});\n         * // Object {a: 1}\n         * ax5.util.first([1,2,3,4]);\n         * // 1\n         * ```\n         */\n        function first(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[0]] = O[keys[0]];\n                return item;\n            }\n            else if (isArray(O)) {\n                return O[0];\n            }\n            else {\n                console.error(\"ax5.util.object.first\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 오브젝트의 마지막 아이템을 반환합니다.\n         * @method ax5.util.last\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.last({a:1, b:2});\n         * // Object {b: 2}\n         * ax5.util.last([1,2,3,4]);\n         * // 4\n         * ```\n         */\n        function last(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[keys.length - 1]] = O[keys[keys.length - 1]];\n                return item;\n            }\n            else if (isArray(O)) {\n                return O[O.length - 1];\n            }\n            else {\n                console.error(\"ax5.util.object.last\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 쿠키를 설정합니다.\n         * @method ax5.util.setCookie\n         * @param {String} cname - 쿠키이름\n         * @param {String} cvalue - 쿠키값\n         * @param {Number} [exdays] - 쿠키 유지일수\n         * @param {Object} [opts] - path, domain 설정 옵션\n         * @example\n         * ```js\n         * ax5.util.setCookie(\"jslib\", \"AX5\");\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3);\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3, {path:\"/\", domain:\".axisj.com\"});\n         * ```\n         */\n        function setCookie(cn, cv, exdays, opts) {\n            var expire;\n            if (typeof exdays === \"number\") {\n                expire = new Date();\n                expire.setDate(expire.getDate() + exdays);\n            }\n            opts = opts || {};\n            return (doc.cookie = [\n                escape(cn), '=', escape(cv),\n                expire ? \"; expires=\" + expire.toUTCString() : \"\", // use expires attribute, max-age is not supported by IE\n                opts.path ? \"; path=\" + opts.path : \"\",\n                opts.domain ? \"; domain=\" + opts.domain : \"\",\n                opts.secure ? \"; secure\" : \"\"\n            ].join(\"\"));\n        }\n\n        /**\n         * 쿠키를 가져옵니다.\n         * @method ax5.util.getCookie\n         * @param {String} cname\n         * @returns {String} cookie value\n         * @example\n         * ```js\n         * ax5.util.getCookie(\"jslib\");\n         * ```\n         */\n        function getCookie(cname) {\n            var name = cname + \"=\";\n            var ca = doc.cookie.split(';'), i = 0, l = ca.length;\n            for (; i < l; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') c = c.substring(1);\n                if (c.indexOf(name) != -1) return unescape(c.substring(name.length, c.length));\n            }\n            return \"\";\n        }\n\n        /**\n         * jsonString 으로 alert 합니다.\n         * @method ax5.util.alert\n         * @param {Object|Array|String|Number} O\n         * @returns {Object|Array|String|Number} O\n         * @example ```js\n         * ax5.util.alert({a:1,b:2});\n         * ax5.util.alert(\"정말?\");\n         * ```\n         */\n        function alert(O) {\n            win.alert(toJson(O));\n            return O;\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.left\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.left(\"abcd.efd\", 3);\n         * // abc\n         * ax5.util.left(\"abcd.efd\", \".\");\n         * // abcd\n         * ```\n         */\n        function left(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            if (isString(pos)) {\n                return (str.indexOf(pos) > -1) ? str.substr(0, str.indexOf(pos)) : \"\";\n            }\n            else if (isNumber(pos)) {\n                return str.substr(0, pos);\n            }\n            else {\n                return \"\";\n            }\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.right\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.right(\"abcd.efd\", 3);\n         * // efd\n         * ax5.util.right(\"abcd.efd\", \".\");\n         * // efd\n         * ```\n         */\n        function right(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            str = '' + str;\n            if (isString(pos)) {\n                return (str.lastIndexOf(pos) > -1) ? str.substr(str.lastIndexOf(pos) + 1) : \"\";\n            }\n            else if (isNumber(pos)) {\n                return str.substr(str.length - pos);\n            }\n            else {\n                return \"\";\n            }\n        }\n\n        /**\n         * css형 문자열이나 특수문자가 포함된 문자열을 카멜케이스로 바꾸어 반환합니다.\n         * @method ax5.util.camelCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.camelCase(\"inner-width\");\n         * ax5.util.camelCase(\"innerWidth\");\n         * // innerWidth\n         * ```\n         */\n        function camelCase(str) {\n            return str.replace(reMs, \"ms-\").replace(reSnakeCase, function (all, letter) {\n                return letter.toUpperCase();\n            });\n        }\n\n        /**\n         * css형 문자열이나 카멜케이스문자열을 스네이크 케이스 문자열로 바꾸어 반환합니다.\n         * @method ax5.util.snakeCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.snakeCase(\"innerWidth\");\n         * ax5.util.snakeCase(\"inner-Width\");\n         * ax5.util.snakeCase(\"innerWidth\");\n         * // inner-width\n         * ```\n         */\n        function snakeCase(str) {\n            return camelCase(str).replace(reCamelCase, function (all, letter) {\n                return \"-\" + letter.toLowerCase();\n            });\n        }\n\n        /**\n         * 문자열에서 -. 을 제외한 모든 문자열을 제거하고 숫자로 반환합니다. 옵션에 따라 원하는 형식의 숫자로 변환 할 수 도 있습니다.\n         * @method ax5.util.number\n         * @param {String|Number} str\n         * @param {Object} cond - 옵션\n         * @returns {String|Number}\n         * @example\n         * ```js\n         * var cond = {\n\t\t * \tround: {Number|Boolean} - 반올림할 자릿수,\n\t\t * \tmoney: {Boolean} - 통화,\n\t\t * \tabs: {Boolean} - 절대값,\n\t\t * \tbyte: {Boolean} - 바이트\n\t\t * }\n         *\n         * console.log(ax5.util.number(123456789.678, {round:1}));\n         * console.log(ax5.util.number(123456789.678, {round:1, money:true}));\n         * console.log(ax5.util.number(123456789.678, {round:2, byte:true}));\n         * console.log(ax5.util.number(-123456789.8888, {abs:true, round:2, money:true}));\n         * console.log(ax5.util.number(\"A-1234~~56789.8~888PX\", {abs:true, round:2, money:true}));\n         *\n         * //123456789.7\n         * //123,456,789.7\n         * //117.7MB\n         * //123,456,789.89\n         * //123,456,789.89\n         * ```\n         */\n        function number(str, cond) {\n            var result, pair = ('' + str).split(reDot), isMinus = (Number(pair[0]) < 0 || pair[0] == \"-0\"), returnValue = 0.0;\n            pair[0] = pair[0].replace(reInt, \"\");\n            if (pair[1]) {\n                pair[1] = pair[1].replace(reNotNum, \"\");\n                returnValue = Number(pair[0] + \".\" + pair[1]) || 0;\n            }\n            else {\n                returnValue = Number(pair[0]) || 0;\n            }\n            result = (isMinus) ? -returnValue : returnValue;\n\n            each(cond, function (k, c) {\n                if (k == \"round\") {\n                    if (isNumber(c)) {\n                        if (c < 0) {\n                            result = +(Math.round(result + \"e-\" + Math.abs(c)) + \"e+\" + Math.abs(c));\n                        }\n                        else {\n                            result = +(Math.round(result + \"e+\" + c) + \"e-\" + c);\n                        }\n                    }\n                    else {\n                        result = Math.round(result);\n                    }\n                }\n                if (k == \"floor\") {\n                    result = Math.floor(result);\n                }\n                if (k == \"ceil\") {\n                    result = Math.ceil(result);\n                }\n                else if (k == \"money\") {\n                    result = (function (val) {\n                        var txtNumber = '' + val;\n                        if (isNaN(txtNumber) || txtNumber == \"\") {\n                            return \"\";\n                        }\n                        else {\n                            var arrNumber = txtNumber.split('.');\n                            arrNumber[0] += '.';\n                            do {\n                                arrNumber[0] = arrNumber[0].replace(reMoneySplit, '$1,$2');\n                            } while (reMoneySplit.test(arrNumber[0]));\n                            if (arrNumber.length > 1) {\n                                return arrNumber.join('');\n                            }\n                            else {\n                                return arrNumber[0].split('.')[0];\n                            }\n                        }\n                    })(result);\n                }\n                else if (k == \"abs\") {\n                    result = Math.abs(Number(result));\n                }\n                else if (k == \"byte\") {\n                    result = (function (val) {\n                        val = Number(result);\n                        var nUnit = \"KB\";\n                        var myByte = val / 1024;\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"MB\";\n                            myByte = myByte / 1024;\n                        }\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"GB\";\n                            myByte = myByte / 1024;\n                        }\n                        return number(myByte, {round: 1}) + nUnit;\n                    })(result);\n                }\n            });\n\n            return result;\n        }\n\n        /**\n         * 배열 비슷한 오브젝트를 배열로 변환해줍니다.\n         * @method ax5.util.toArray\n         * @param {Object|Elements|Arguments} O\n         * @returns {Array}\n         * @example\n         * ```js\n         * ax5.util.toArray(arguments);\n         * //\n         * ```\n         */\n        function toArray(O) {\n            if (typeof O.length != \"undefined\") return Array.prototype.slice.call(O);\n            return [];\n        }\n\n        /**\n         * 첫번째 인자에 두번째 인자 아이템을 합쳐줍니다. concat과 같은 역할을 하지만. 인자가 Array타입이 아니어도 됩니다.\n         * @method ax5.util.merge\n         * @param {Array|ArrayLike} first\n         * @param {Array|ArrayLike} second\n         * @returns {Array} first\n         * @example\n         * ```\n         *\n         * ```\n         */\n        function merge(first, second) {\n            var l = second.length,\n                i = first.length,\n                j = 0;\n\n            if (typeof l === \"number\") {\n                for (; j < l; j++) {\n                    first[i++] = second[j];\n                }\n            }\n            else {\n                while (second[j] !== undefined) {\n                    first[i++] = second[j++];\n                }\n            }\n\n            first.length = i;\n\n            return first;\n        }\n\n        /**\n         * 오브젝트를 파라미터형식으로 또는 파라미터를 오브젝트 형식으로 변환합니다.\n         * @method ax5.util.param\n         * @param {Object|Array|String} O\n         * @param {String} [cond] - param|object\n         * @returns {Object|String}\n         * @example\n         * ```\n         * ax5.util.param({a:1,b:'1232'}, \"param\");\n         * ax5.util.param(\"a=1&b=1232\", \"param\");\n         * // \"a=1&b=1232\"\n         * ax5.util.param(\"a=1&b=1232\");\n         * // {a: \"1\", b: \"1232\"}\n         * ```\n         */\n        function param(O, cond) {\n            var p;\n            if (isString(O) && typeof cond !== \"undefined\" && cond == \"param\") {\n                return O;\n            }\n            else if ((isString(O) && typeof cond !== \"undefined\" && cond == \"object\") || (isString(O) && typeof cond === \"undefined\")) {\n                p = {};\n                each(O.split(reAmp), function () {\n                    var item = this.split(reEq);\n                    if (!p[item[0]]) p[item[0]] = item[1];\n                    else {\n                        if (isString(p[item[0]])) p[item[0]] = [p[item[0]]];\n                        p[item[0]].push(item[1]);\n                    }\n                });\n                return p;\n            }\n            else {\n                p = [];\n                each(O, function (k, v) {\n                    p.push(k + \"=\" + escape(v));\n                });\n                return p.join('&');\n            }\n        }\n\n        function encode(s) {\n            return encodeURIComponent(s);\n        }\n\n        function decode(s) {\n            return decodeURIComponent(s);\n        }\n\n        function error() {\n            ax5.info.onerror.apply(this, arguments);\n        }\n\n        function localDate(yy, mm, dd, hh, mi, ss) {\n            var utcD, localD;\n            localD = new Date();\n            if (typeof hh === \"undefined\") hh = 23;\n            if (typeof mi === \"undefined\") mi = 59;\n            utcD = new Date(Date.UTC(yy, mm, dd || 1, hh, mi, ss || 0));\n\n            if (mm == 0 && dd == 1 && utcD.getUTCHours() + (utcD.getTimezoneOffset() / 60) < 0) {\n                utcD.setUTCHours(0);\n            }\n            else {\n                utcD.setUTCHours(utcD.getUTCHours() + (utcD.getTimezoneOffset() / 60));\n            }\n            return utcD;\n        }\n\n        /**\n         * 날짜 형식의 문자열이나 Date객체를 조건에 맞게 처리 한 후 원하는 return 값으로 반환합니다.\n         * @method ax5.util.date\n         * @param {String|Date} d\n         * @param {Object} cond\n         * @returns {Date|String}\n         * @example\n         * ```js\n         * ax5.util.date('2013-01-01'); // Tue Jan 01 2013 23:59:00 GMT+0900 (KST)\n         * ax5.util.date((new Date()), {add:{d:10}, return:'yyyy/MM/dd'}); // \"2015/07/01\"\n         * ax5.util.date('1919-03-01', {add:{d:10}, return:'yyyy/MM/dd hh:mm:ss'}); // \"1919/03/11 23:59:00\"\n         * ```\n         */\n        function date(d, cond) {\n            var yy, mm, dd, hh, mi,\n                aDateTime, aTimes, aTime, aDate,\n                utcD, localD,\n                va;\n            var ISO_8601 = /^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$/i;\n            var ISO_8601_FULL = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\n\n            if (isString(d)) {\n                if (d.length == 0) {\n                    d = new Date();\n                }\n                else if (d.length > 15) {\n                    if (ISO_8601_FULL.test(d) || ISO_8601.test(d)) {\n                        d = new Date(d);\n                    } else {\n                        aDateTime = d.split(/ /g), aTimes, aTime,\n                            aDate = aDateTime[0].split(/\\D/g),\n                            yy = aDate[0];\n                        mm = parseFloat(aDate[1]);\n                        dd = parseFloat(aDate[2]);\n                        aTime = aDateTime[1] || \"09:00\";\n                        aTimes = aTime.substring(0, 5).split(\":\");\n                        hh = parseFloat(aTimes[0]);\n                        mi = parseFloat(aTimes[1]);\n                        if (right(aTime, 2) === \"AM\" || right(aTime, 2) === \"PM\") hh += 12;\n                        d = localDate(yy, mm - 1, dd, hh, mi);\n                    }\n                }\n                else if (d.length == 14) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)), number(va.substr(8, 2)), number(va.substr(10, 2)), number(va.substr(12, 2)));\n                }\n                else if (d.length > 7) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)));\n                }\n                else if (d.length > 4) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                }\n                else if (d.length > 2) {\n                    va = d.replace(/\\D/g, \"\");\n                    return localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                }\n                else {\n                    d = new Date();\n                }\n            }\n\n            if (typeof cond === \"undefined\") {\n                return d;\n            }\n            else {\n\n                if (\"add\" in cond) {\n                    d = (function (_d, opts) {\n                        var\n                            yy, mm, dd, mxdd,\n                            DyMilli = ((1000 * 60) * 60) * 24;\n\n                        if (typeof opts[\"d\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + (opts[\"d\"] * DyMilli));\n                        }\n                        else if (typeof opts[\"m\"] !== \"undefined\") {\n                            yy = _d.getFullYear();\n                            mm = _d.getMonth();\n                            dd = _d.getDate();\n                            yy = yy + parseInt(opts[\"m\"] / 12);\n                            mm += opts[\"m\"] % 12;\n                            mxdd = daysOfMonth(yy, mm);\n                            if (mxdd < dd) dd = mxdd;\n                            _d = new Date(yy, mm, dd, 12);\n                        }\n                        else if (typeof opts[\"y\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + ((opts[\"y\"] * 365) * DyMilli));\n                        }\n                        return _d;\n                    })(new Date(d), cond[\"add\"]);\n                }\n\n                if (\"set\" in cond) {\n                    d = (function (_d, opts) {\n                        var\n                            yy, mm, dd,\n                            processor = {\n                                \"firstDayOfMonth\": function (date) {\n                                    yy = date.getFullYear();\n                                    mm = date.getMonth();\n                                    dd = 1;\n                                    return new Date(yy, mm, dd, 12);\n                                },\n                                \"lastDayOfMonth\": function (date) {\n                                    yy = date.getFullYear();\n                                    mm = date.getMonth();\n                                    dd = daysOfMonth(yy, mm);\n                                    return new Date(yy, mm, dd, 12);\n                                }\n                            };\n                        if (opts in processor) {\n                            return processor[opts](_d);\n                        } else {\n                            return _d;\n                        }\n                    })(new Date(d), cond[\"set\"]);\n                }\n\n                if (\"return\" in cond) {\n                    return (function () {\n                        var fStr = cond[\"return\"], nY, nM, nD, nH, nMM, nS, nDW;\n\n                        nY = d.getUTCFullYear();\n                        nM = setDigit(d.getMonth() + 1, 2);\n                        nD = setDigit(d.getDate(), 2);\n                        nH = setDigit(d.getHours(), 2);\n                        nMM = setDigit(d.getMinutes(), 2);\n                        nS = setDigit(d.getSeconds(), 2);\n                        nDW = d.getDay();\n\n                        var yre = /[^y]*(yyyy)[^y]*/gi;\n                        yre.exec(fStr);\n                        var regY = RegExp.$1;\n                        var mre = /[^m]*(MM)[^m]*/g;\n                        mre.exec(fStr);\n                        var regM = RegExp.$1;\n                        var dre = /[^d]*(dd)[^d]*/gi;\n                        dre.exec(fStr);\n                        var regD = RegExp.$1;\n                        var hre = /[^h]*(hh)[^h]*/gi;\n                        hre.exec(fStr);\n                        var regH = RegExp.$1;\n                        var mire = /[^m]*(mm)[^i]*/g;\n                        mire.exec(fStr);\n                        var regMI = RegExp.$1;\n                        var sre = /[^s]*(ss)[^s]*/gi;\n                        sre.exec(fStr);\n                        var regS = RegExp.$1;\n                        var dwre = /[^d]*(dw)[^w]*/gi;\n                        dwre.exec(fStr);\n                        var regDW = RegExp.$1;\n\n                        if (regY === \"yyyy\") {\n                            fStr = fStr.replace(regY, right(nY, regY.length));\n                        }\n                        if (regM === \"MM\") {\n                            if (regM.length == 1) nM = (d.getMonth() + 1);\n                            fStr = fStr.replace(regM, nM);\n                        }\n                        if (regD === \"dd\") {\n                            if (regD.length == 1) nD = d.getDate();\n                            fStr = fStr.replace(regD, nD);\n                        }\n                        if (regH === \"hh\") {\n                            fStr = fStr.replace(regH, nH);\n                        }\n                        if (regMI === \"mm\") {\n                            fStr = fStr.replace(regMI, nMM);\n                        }\n                        if (regS === \"ss\") {\n                            fStr = fStr.replace(regS, nS);\n                        }\n                        if (regDW == \"dw\") {\n                            fStr = fStr.replace(regDW, info.weekNames[nDW].label);\n                        }\n                        return fStr;\n                    })();\n                }\n                else {\n                    return d;\n                }\n            }\n        }\n\n        /**\n         * 인자인 날짜가 오늘부터 몇일전인지 반환합니다. 또는 인자인 날짜가 가까운 미래에 몇일 후인지 반환합니다.\n         * @method ax5.util.dday\n         * @param {String|Data} d\n         * @param {Object} cond\n         * @returns {Number}\n         * @example\n         * ```js\n         * ax5.util.dday('2016-01-29');\n         * // 1\n         * ax5.util.dday('2016-01-29', {today:'2016-01-28'});\n         * // 1\n         * ax5.util.dday('1977-03-29', {today:'2016-01-28', age:true});\n         * // 39\n         * ```\n         */\n        function dday(d, cond) {\n            var memoryDay = date(d), DyMilli = ((1000 * 60) * 60) * 24, today = new Date(), diffnum, thisYearMemoryDay;\n\n            function getDayTime(_d) {\n                return Math.floor(_d.getTime() / DyMilli) * DyMilli;\n            }\n\n            if (typeof cond === \"undefined\") {\n                diffnum = number((( getDayTime(memoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                return diffnum;\n            }\n\n            else {\n                diffnum = number((( getDayTime(memoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                if (cond[\"today\"]) {\n                    today = date(cond.today);\n                    diffnum = number((( getDayTime(memoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                }\n                if (cond[\"thisYear\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = number((( getDayTime(thisYearMemoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                    if (diffnum < 0) {\n                        thisYearMemoryDay = new Date(today.getFullYear() + 1, memoryDay.getMonth(), memoryDay.getDate());\n                        diffnum = number((( getDayTime(thisYearMemoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                    }\n                }\n                if (cond[\"age\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = thisYearMemoryDay.getFullYear() - memoryDay.getFullYear();\n                }\n\n                return diffnum;\n            }\n        }\n\n        /**\n         * 인자인 날짜가 몇년 몇월의 몇번째 주차인지 반환합니다.\n         * @method ax5.util.weeksOfMonth\n         * @param {String|Data} d\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.weeksOfMonth(\"2015-10-01\"); // {year: 2015, month: 10, count: 1}\n         * ax5.util.weeksOfMonth(\"2015-09-19\"); // {year: 2015, month: 9, count: 3}\n         * ```\n         */\n        function weeksOfMonth(d) {\n            var myDate = date(d);\n            return {\n                year: myDate.getFullYear(),\n                month: myDate.getMonth() + 1,\n                count: parseInt(myDate.getDate() / 7 + 1)\n            };\n        }\n\n        /**\n         * 년월에 맞는 날자수를 반환합니다.\n         * (new Date()).getMonth() 기준으로 월값을 보냅니다. \"2월\" 인경우 \"1\" 을 넘기게 됩니다.\n         * @method ax5.util.daysOfMonth\n         * @param {Number} y\n         * @param {Number} m\n         * @returns {Number}\n         * @examples\n         * ```js\n         * ax5.util.daysOfMonth(2015, 11); // 31\n         * ax5.util.daysOfMonth(2015, 1); // 28\n         * ```\n         */\n        function daysOfMonth(y, m) {\n            if (m == 3 || m == 5 || m == 8 || m == 10) {\n                return 30;\n            }\n            else if (m == 1) {\n                return (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0)) ? 29 : 28;\n            }\n            else {\n                return 31;\n            }\n        }\n\n        /**\n         * 원하는 횟수 만큼 자릿수 맞춤 문자열을 포함한 문자열을 반환합니다.\n         * 문자열 길이보다 작은값을 보내면 무시됩니다.\n         * @method ax5.util.setDigit\n         * @param {String|Number} num\n         * @param {Number} length\n         * @param {String} [padder=0]\n         * @param {Number} [radix]\n         * @returns {String}\n         * @example\n         * ```\n         * ax5.util.setDigit(2016, 6)\n         * // \"002016\"\n         * ax5.util.setDigit(2016, 2)\n         * // \"2016\"\n         * ```\n         */\n        function setDigit(num, length, padder, radix) {\n            var s = num.toString(radix || 10);\n            return times((padder || '0'), (length - s.length)) + s;\n        }\n\n        /**\n         * 문자열을 지정된 수만큼 반복 합니다.\n         * @param {String} s\n         * @param {Number} count\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.times(2016, 2)\n         * //\"20162016\"\n         * ```\n         */\n        function times(s, count) {\n            return count < 1 ? '' : new Array(count + 1).join(s);\n        }\n\n        /**\n         * 타겟엘리먼트의 부모 엘리멘트 트리에서 원하는 조건의 엘리먼트를 얻습니다.\n         * @method ax5.util.findParentNode\n         * @param {Element} _target - target element\n         * @param {Object|Function} cond - 원하는 element를 찾을 조건\n         * @returns {Element}\n         * @example\n         * ```\n         * // cond 속성정의\n         * var cond = {\n\t\t * \ttagname: {String} - 태그명 (ex. a, div, span..),\n\t\t * \tclazz: {String} - 클래스명\n\t\t * \t[, 그 외 찾고 싶은 attribute명들]\n\t\t * };\n         * console.log(\n         * console.log(\n         *    ax5.util.findParentNode(e.target, {tagname:\"a\", clazz:\"ax-menu-handel\", \"data-custom-attr\":\"attr_value\"})\n         * );\n         * // cond 함수로 처리하기\n         * jQuery('#id').bind(\"click.app_expand\", function(e){\n\t\t * \tvar target = ax5.util.findParentNode(e.target, function(target){\n\t\t * \t\tif($(target).hasClass(\"aside\")){\n\t\t * \t\t\treturn true;\n\t\t * \t\t}\n\t\t * \t\telse{\n\t\t * \t\t\treturn true;\n\t\t * \t\t}\n\t\t * \t});\n\t\t * \t//client-aside\n\t\t * \tif(target.id !== \"client-aside\"){\n\t\t * \t\t// some action\n\t\t * \t}\n\t\t * });\n         * ```\n         */\n\n        function findParentNode(_target, cond) {\n            if (_target) {\n                while ((function () {\n                    var result = true;\n                    if (typeof cond === \"undefined\") {\n                        _target = (_target.parentNode) ? _target.parentNode : false;\n                    }\n                    else if (isFunction(cond)) {\n                        result = cond(_target);\n                    }\n                    else if (isObject(cond)) {\n                        for (var k in cond) {\n                            if (k === \"tagname\") {\n                                if (_target.tagName.toLocaleLowerCase() != cond[k]) {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                            else if (k === \"clazz\" || k === \"class_name\") {\n                                if (\"className\" in _target) {\n                                    var klasss = _target.className.split(reClassNameSplit);\n                                    var hasClass = false;\n                                    for (var a = 0; a < klasss.length; a++) {\n                                        if (klasss[a] == cond[k]) {\n                                            hasClass = true;\n                                            break;\n                                        }\n                                    }\n                                    result = hasClass;\n                                }\n                                else {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                            else { // 그외 속성값들.\n                                if (_target.getAttribute) {\n                                    if (_target.getAttribute(k) != cond[k]) {\n                                        result = false;\n                                        break;\n                                    }\n                                }\n                                else {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return !result;\n                })()) {\n                    if (_target.parentNode && _target.parentNode.parentNode) {\n                        _target = _target.parentNode;\n                    }\n                    else {\n                        _target = false;\n                        break;\n                    }\n                }\n            }\n            return _target;\n        }\n\n        /**\n         * @method ax5.util.cssNumber\n         * @param {String|Number} val\n         * @returns {String}\n         * @example\n         * ```\n         * console.log(ax5.util.cssNumber(\"100px\"))\n         * console.log(ax5.util.cssNumber(\"100%\"))\n         * console.log(ax5.util.cssNumber(\"100\"))\n         * console.log(ax5.util.cssNumber(100))\n         * console.log(ax5.util.cssNumber(\"!!100@#\"))\n         * ```\n         */\n        function cssNumber(val) {\n            var re = /\\D?(\\d+)([a-zA-Z%]*)/i,\n                found = ('' + val).match(re),\n                unit = found[2] || \"px\"\n                ;\n\n            return found[1] + unit;\n        }\n\n        /**\n         * css string 및 object 를 넘기면 object 및 string 으로 변환되어 리턴됩니다.\n         * @method ax5.util.css\n         * @param {Object|String} val - CSS String or CSS Object\n         * @returns {String|Object}\n         * @example\n         * ```\n         * console.log(ax5.util.css({background: \"#ccc\", padding: \"50px\", width: \"100px\"}));\n         * //\"background:#ccc;padding:50px;width:100px;\"\n         * console.log(ax5.util.css('width:100px;padding: 50px; background: #ccc'));\n         * // object {width: \"100px\", padding: \"50px\", background: \"#ccc\"}\n         * ```\n         */\n        function css(val) {\n            var returns;\n            if (isObject(val)) {\n                returns = '';\n                for (var k in val) {\n                    returns += k + ':' + val[k] + ';';\n                }\n                return returns;\n            }\n            else if (isString(val)) {\n                returns = {};\n                var valSplited = val.split(/[ ]*;[ ]*/g);\n                valSplited.forEach(function (v) {\n                    if ((v = v.trim()) !== \"\") {\n                        var vSplited = v.split(/[ ]*:[ ]*/g);\n                        returns[vSplited[0]] = vSplited[1];\n                    }\n                });\n                return returns;\n            }\n        }\n\n        /**\n         * @method ax5.util.stopEvent\n         * @param {Event} e\n         * @example\n         * ```\n         * ax5.util.stopEvent(e);\n         * ```\n         */\n        function stopEvent(e) {\n            // 이벤트 중지 구문\n            if (!e) var e = window.event;\n\n            //e.cancelBubble is supported by IE -\n            // this will kill the bubbling process.\n            e.cancelBubble = true;\n            e.returnValue = false;\n\n            //e.stopPropagation works only in Firefox.\n            if (e.stopPropagation) e.stopPropagation();\n            if (e.preventDefault) e.preventDefault();\n\n            return false;\n            // 이벤트 중지 구문 끝\n        }\n\n        /**\n         * @method ax5.util.selectRange\n         * @param {Element} el\n         * @param {Element} offset\n         * @example\n         * ```\n         * ax5.util.selectRange($(\"#select-test-0\")); // selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"selectAll\"); //selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"start\"); // focus on start\n         * ax5.util.selectRange($(\"#select-test-0\"), \"end\"); // focus on end\n         * ax5.util.selectRange($(\"#select-test-0\"), [1, 5]); // select 1~5\n         * ```\n         */\n        var selectRange = (function () {\n            var processor = {\n                'textRange': {\n                    'selectAll': function (el, range, offset) {\n\n                    },\n                    'arr': function (el, range, offset) {\n                        range.moveStart(\"character\", offset[0]); // todo ie node select 체크필요\n                        range.collapse();\n                        range.moveEnd(\"character\", offset[1]);\n                    },\n                    'start': function (el, range, offset) {\n                        range.moveStart(\"character\", 0);\n                        range.collapse();\n                    },\n                    'end': function (el, range, offset) {\n                        range.moveStart(\"character\", range.text.length);\n                        range.collapse();\n                    }\n                },\n                'range': {\n                    'selectAll': function (el, range, offset) {\n                        range.selectNodeContents(el);\n                    },\n                    'arr': function (el, range, offset) {\n                        if (isObject(offset[0])) {\n                            range.setStart(offset[0].node, offset[0].offset);\n                            range.setEnd(offset[1].node, offset[1].offset);\n                        }\n                        else {\n                            range.setStart(el.firstChild, offset[0]);\n                            range.setEnd(el.firstChild, offset[1]);\n                        }\n                    },\n                    'start': function (el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(true);\n                    },\n                    'end': function (el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(false);\n                    }\n                }\n            };\n            return function (el, offset) {\n                var range, rangeType, selection;\n\n                if (el instanceof jQuery) {\n                    el = el.get(0);\n                }\n                if (!el) return;\n\n                // 레인지 타입 선택\n                if (doc.body.createTextRange) {\n                    range = document.body.createTextRange();\n                    range.moveToElementText(el);\n                    rangeType = \"textRange\";\n                }\n                else if (window.getSelection) {\n                    selection = window.getSelection();\n                    range = document.createRange();\n                    rangeType = \"range\";\n                }\n\n                // range 적용\n                if (typeof offset == \"undefined\") {\n                    processor[rangeType].selectAll.call(this, el, range, offset);\n                }\n                else if (isArray(offset)) {\n                    processor[rangeType].arr.call(this, el, range, offset);\n                }\n                else {\n                    for (var key in processor[rangeType]) {\n                        if (offset == key) {\n                            processor[rangeType][key].call(this, el, range, offset);\n                            break;\n                        }\n                    }\n                }\n\n                // 포커스 및 셀렉트\n                if (doc.body.createTextRange) {\n                    range.select();\n                    el.focus();\n                }\n                else if (window.getSelection) {\n                    el.focus();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n\n            }\n        })();\n\n        /**\n         * 지정한 시간을 지연시켜 함수를 실행합니다.\n         * @method ax5.util.debounce\n         * @param {Function} func\n         * @param {Number} wait\n         * @param {Boolean} immediately\n         * @returns {debounced}\n         * @example\n         * ```js\n         * var debounceFn = ax5.util.debounce(function( val ) { console.log(val); }, 300);\n         * $(document.body).click(function(){\n         *  debounceFn(new Date());\n         * });\n         * ```\n         */\n        var debounce = function (func, wait, immediately) {\n            var timeout, removeTimeout;\n            var debounced = function () {\n                var args = toArray(arguments);\n\n                if (removeTimeout) clearTimeout(removeTimeout);\n                if (timeout) {\n                    // 두번째 호출\n                    if (timeout) clearTimeout(timeout);\n                    timeout = setTimeout((function (args) {\n                        func.apply(this, args);\n                    }).bind(this, args), wait);\n                } else {\n                    // 첫 호출\n                    timeout = setTimeout((function (args) {\n                        func.apply(this, args);\n                    }).bind(this, args), (immediately) ? 0 : wait);\n                }\n                removeTimeout = setTimeout(function () {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }, wait);\n            };\n            debounced.cancel = function () {\n                clearTimeout(timeout);\n                clearTimeout(removeTimeout);\n                timeout = null;\n            };\n\n            return debounced;\n        };\n\n\n        /**\n         * @method ax5.util.deepCopy\n         * @param {Object} obj\n         * @returns {Object}\n         * @example\n         * ```js\n         * var obj = [\n         *  {name:\"A\", child:[{name:\"a-1\"}]},\n         *  {name:\"B\", child:[{name:\"b-1\"}], callBack: function(){ console.log('callBack'); }}\n         * ];\n         * var copiedObj = ax5.util.deepCopy(obj)\n         * ```\n         */\n        function deepCopy(obj) {\n            var r, l;\n            if (typeof obj == 'object') {\n                if (U.isArray(obj)) {\n                    l = obj.length;\n                    r = new Array(l);\n                    for (var i = 0; i < l; i++) {\n                        r[i] = deepCopy(obj[i]);\n                    }\n                    return r;\n                } else {\n                    return jQuery.extend({}, obj);\n                }\n            }\n            return obj;\n        }\n\n        /**\n         * HTML 문자열을 escape 처리합니다.\n         * \"&lt;\" represents the < sign.\n         * \"&gt;\" represents the > sign.\n         * \"&amp;\" represents the & sign.\n         * \"&quot; represents the \" mark.\n         * [Character entity references](https://www.w3.org/TR/html401/charset.html#h-5.3)\n         * @method ax5.util.escapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.escapeHtml('HTML <span>string</span> & \"escape\"')\n         * //\"HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;\"\n         * ```\n         */\n        function escapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/[\\<\\>\\&\\\"]/gm, function (match) {\n                switch (match) {\n                    case \"<\":\n                        return \"&lt;\";\n                    case \">\":\n                        return \"&gt;\";\n                    case \"&\":\n                        return \"&amp;\";\n                    case \"\\\"\":\n                        return \"&quot;\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * HTML 문자열을 unescape 처리합니다.\n         * escapeHtml를 참고하세요.\n         * @method ax5.util.unescapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.unescapeHtml('HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;')\n         * //\"HTML <span>string</span> & \"escape\"\"\n         * ```\n         */\n        function unescapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/(&lt;)|(&gt;)|(&amp;)|(&quot;)/gm, function (match) {\n                switch (match) {\n                    case \"&lt;\":\n                        return \"<\";\n                    case \"&gt;\":\n                        return \">\";\n                    case \"&amp;\":\n                        return \"&\";\n                    case \"&quot;\":\n                        return \"\\\"\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * @method ax5.util.string\n         * @param {String} tmpl\n         * @param {*} args\n         * @return {ax5string}\n         * @example\n         * ```js\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format(\"ASP\", \"ASP.NET\");\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format([\"ASP\", \"ASP.NET\"]);\n         * ax5.util.stinrg(\"{0} counts\").format(100);\n         * ```\n         */\n        function string(_string) {\n            function ax5string(_string) {\n                this.value = _string;\n                this.toString = function () {\n                    return this.value;\n                };\n                /**\n                 * @method ax5.util.string.format\n                 * @returns {*}\n                 */\n                this.format = function () {\n                    var args = [];\n                    for(var i=0,l=arguments.length;i<l;i++){\n                        args = args.concat(arguments[i]);\n                    }\n                    return this.value.replace(/{(\\d+)}/g, function (match, number) {\n                        return typeof args[number] != 'undefined' ? args[number] : match;\n                    });\n                };\n                /**\n                 * @method ax5.util.string.escape\n                 * @returns {*}\n                 */\n                this.escape = function(){\n                    return escapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.unescape\n                 * @returns {*}\n                 */\n                this.unescape = function(){\n                    return unescapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.encode\n                 * @returns {*}\n                 */\n                this.encode = function(){\n                    return encode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.decode\n                 * @returns {*}\n                 */\n                this.decode = function(){\n                    return decode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.left\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.left = function(_pos){\n                    return left(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.right\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.right = function(_pos){\n                    return right(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.camelCase\n                 * @returns {*}\n                 */\n                this.camelCase = function(){\n                    return camelCase(this.value);\n                };\n                /**\n                 * @method ax5.util.string.snakeCase\n                 * @returns {*}\n                 */\n                this.snakeCase = function(){\n                    return snakeCase(this.value);\n                };\n            }\n            return new ax5string(_string);\n        }\n\n        return {\n            alert: alert,\n            each: each,\n            map: map,\n            search: search,\n            reduce: reduce,\n            reduceRight: reduceRight,\n            filter: filter,\n            sum: sum,\n            avg: avg,\n            toJson: toJson,\n            parseJson: parseJson,\n            first: first,\n            last: last,\n            deepCopy: deepCopy,\n\n            left: left,\n            right: right,\n            getType: getType,\n            isWindow: isWindow,\n            isElement: isElement,\n            isObject: isObject,\n            isArray: isArray,\n            isFunction: isFunction,\n            isString: isString,\n            isNumber: isNumber,\n            isNodelist: isNodelist,\n            isUndefined: isUndefined,\n            isNothing: isNothing,\n            setCookie: setCookie,\n            getCookie: getCookie,\n            camelCase: camelCase,\n            snakeCase: snakeCase,\n            number: number,\n            toArray: toArray,\n            merge: merge,\n            param: param,\n            error: error,\n            date: date,\n            dday: dday,\n            daysOfMonth: daysOfMonth,\n            weeksOfMonth: weeksOfMonth,\n            setDigit: setDigit,\n            times: times,\n            findParentNode: findParentNode,\n            cssNumber: cssNumber,\n            css: css,\n            isDate: isDate,\n            isDateFormat: isDateFormat,\n            stopEvent: stopEvent,\n            selectRange: selectRange,\n            debounce: debounce,\n            escapeHtml: escapeHtml,\n            unescapeHtml: unescapeHtml,\n\n            string: string\n        }\n    })();\n\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        module.exports = ax5;\n    } else {\n        root.ax5 = (function () {\n            return ax5;\n        })(); // ax5.ui에 연결\n    }\n\n}).call(typeof window !== \"undefined\" ? window : this);\n","ax5.def = {};","ax5.info.errorMsg[\"ax5dialog\"] = {\n    \"501\": \"Duplicate call error\"\n};\n\nax5.info.errorMsg[\"ax5picker\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find content key\"\n};\n\nax5.info.errorMsg[\"single-uploader\"] = {\n    \"460\": \"There are no files to be uploaded.\",\n    \"461\": \"There is no uploaded files.\"\n};\n\nax5.info.errorMsg[\"ax5calendar\"] = {\n    \"401\": \"Can not find target element\"\n};\n\nax5.info.errorMsg[\"ax5formatter\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find pattern\"\n};\n\nax5.info.errorMsg[\"ax5menu\"] = {\n    \"501\": \"Can not find menu item\"\n};\n\nax5.info.errorMsg[\"ax5select\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};\n\nax5.info.errorMsg[\"ax5combobox\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};","// 필수 Ployfill 확장 구문\n(function () {\n    'use strict';\n    \n    var root = this,\n        re_trim = /^\\s*|\\s*$/g;\n\n    // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n    if (!Object.keys) {\n        Object.keys = (function () {\n            var hwp = Object.prototype.hasOwnProperty,\n                hdeb = !({toString: null}).propertyIsEnumerable('toString'),\n                de = [\n                    'toString',\n                    'toLocaleString',\n                    'valueOf',\n                    'hasOwnProperty',\n                    'isPrototypeOf',\n                    'propertyIsEnumerable',\n                    'constructor'\n                ],\n                del = de.length;\n\n            return function (obj) {\n                if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) throw new TypeError('type err');\n                var r = [], prop, i;\n                for (prop in obj) if (hwp.call(obj, prop)) r.push(prop);\n                if (hdeb) {\n                    for (i = 0; i < del; i++) if (hwp.call(obj, de[i])) r.push(de[i]);\n                }\n                return r;\n            };\n        }());\n    }\n\n    // ES5 15.4.4.18 Array.prototype.forEach ( callbackfn [ , thisArg ] )\n    // From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\n    if (!Array.prototype.forEach) {\n        Array.prototype.forEach = function (fun /*, thisp */) {\n            if (this === void 0 || this === null) {\n                throw TypeError();\n            }\n            var t = Object(this);\n            var len = t.length >>> 0;\n            if (typeof fun !== \"function\") {\n                throw TypeError();\n            }\n            var thisp = arguments[1], i;\n            for (i = 0; i < len; i++) {\n                if (i in t) {\n                    fun.call(thisp, t[i], i, t);\n                }\n            }\n        };\n    }\n\n    // ES5 15.3.4.5 Function.prototype.bind ( thisArg [, arg1 [, arg2, ... ]] )\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (o) {\n            if (typeof this !== 'function') {\n                throw TypeError(\"function\");\n            }\n            var slice = [].slice,\n                args = slice.call(arguments, 1),\n                self = this,\n                bound = function () {\n                    return self.apply(this instanceof nop ? this : o,\n                        args.concat(slice.call(arguments)));\n                };\n\n            function nop() {}\n\n            nop.prototype = self.prototype;\n            bound.prototype = new nop();\n            return bound;\n        };\n    }\n\n    /*global document */\n    /**\n     * define document.querySelector & document.querySelectorAll for IE7\n     *\n     * A not very fast but small hack. The approach is taken from\n     * http://weblogs.asp.net/bleroy/archive/2009/08/31/queryselectorall-on-old-ie-versions-something-that-doesn-t-work.aspx\n     *\n     */\n    (function () {\n        if (document.querySelectorAll || document.querySelector) {\n            return;\n        }\n        if (!document.createStyleSheet) return;\n        var style = document.createStyleSheet(),\n            select = function (selector, maxCount) {\n                var\n                    all = document.all,\n                    l = all.length,\n                    i,\n                    resultSet = [];\n\n                style.addRule(selector, \"foo:bar\");\n                for (i = 0; i < l; i += 1) {\n                    if (all[i].currentStyle.foo === \"bar\") {\n                        resultSet.push(all[i]);\n                        if (resultSet.length > maxCount) {\n                            break;\n                        }\n                    }\n                }\n                style.removeRule(0);\n                return resultSet;\n            };\n\n        document.querySelectorAll = function (selector) {\n            return select(selector, Infinity);\n        };\n        document.querySelector = function (selector) {\n            return select(selector, 1)[0] || null;\n        };\n    }());\n\n    if (!String.prototype.trim) {\n        (function () {\n            String.prototype.trim = function () {\n                return this.replace(re_trim, '');\n            };\n        })();\n    }\n\n    if (!window.JSON) {\n        window.JSON = {\n            parse: function (sJSON) { return (new Function('', 'return ' + sJSON))(); },\n            stringify: (function () {\n                var r = /[\"]/g, f;\n                return f = function (vContent) {\n                    var result, i, j;\n                    switch (result = typeof vContent) {\n                        case'string':\n                            return '\"' + vContent.replace(r, '\\\\\"') + '\"';\n                        case'number':\n                        case'boolean':\n                            return vContent.toString();\n                        case'undefined':\n                            return 'undefined';\n                        case'function':\n                            return '\"\"';\n                        case'object':\n                            if (!vContent) return 'null';\n                            result = '';\n                            if (vContent.splice) {\n                                for (i = 0, j = vContent.length; i < j; i++) result += ',' + f(vContent[i]);\n                                return '[' + result.substr(1) + ']';\n                            }\n                            else {\n                                for (i in vContent) if (vContent.hasOwnProperty(i) && vContent[i] !== undefined && typeof vContent[i] != 'function') result += ',\"' + i + '\":' + f(vContent[i]);\n                                return '{' + result.substr(1) + '}';\n                            }\n                    }\n                };\n            })()\n        };\n    }\n\n    // splice ie8 <= polyfill\n    (function () {\n        if (!document.documentMode || document.documentMode >= 9) return false;\n        var _splice = Array.prototype.splice;\n        Array.prototype.splice = function () {\n            var args = Array.prototype.slice.call(arguments);\n            if (typeof args[1] === \"undefined\") args[1] = this.length - args[0];\n            return _splice.apply(this, args);\n        };\n    })();\n\n    /**\n     * Shim for \"fixing\" IE's lack of support (IE < 9) for applying slice\n     * on host objects like NamedNodeMap, NodeList, and HTMLCollection\n     * (technically, since host objects have been implementation-dependent,\n     * at least before ES6, IE hasn't needed to work this way).\n     * Also works on strings, fixes IE < 9 to allow an explicit undefined\n     * for the 2nd argument (as in Firefox), and prevents errors when\n     * called on other DOM objects.\n     */\n    (function () {\n        'use strict';\n        var _slice = Array.prototype.slice;\n\n        try {\n            // Can't be used with DOM elements in IE < 9\n            _slice.call(document.documentElement);\n        } catch (e) { // Fails in IE < 9\n            // This will work for genuine arrays, array-like objects,\n            // NamedNodeMap (attributes, entities, notations),\n            // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),\n            // and will not fail on other DOM objects (as do DOM elements in IE < 9)\n            Array.prototype.slice = function(begin, end) {\n                // IE < 9 gets unhappy with an undefined end argument\n                end = (typeof end !== 'undefined') ? end : this.length;\n\n                // For native Array objects, we use the native slice function\n                if (Object.prototype.toString.call(this) === '[object Array]'){\n                    return _slice.call(this, begin, end);\n                }\n\n                // For array like object we handle it ourselves.\n                var i, cloned = [],\n                    size, len = this.length;\n\n                // Handle negative value for \"begin\"\n                var start = begin || 0;\n                start = (start >= 0) ? start : Math.max(0, len + start);\n\n                // Handle negative value for \"end\"\n                var upTo = (typeof end == 'number') ? Math.min(end, len) : len;\n                if (end < 0) {\n                    upTo = len + end;\n                }\n \n                // Actual expected size of the slice\n                size = upTo - start;\n\n                if (size > 0) {\n                    cloned = new Array(size);\n                    if (this.charAt) {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this.charAt(start + i);\n                        }\n                    } else {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this[start + i];\n                        }\n                    }\n                }\n\n                return cloned;\n            };\n        }\n    }());\n\n    // Console-polyfill. MIT license. https://github.com/paulmillr/console-polyfill\n    // Make it safe to do console.log() always.\n    (function (con) {\n        var prop, method;\n        var empty = {};\n        var dummy = function () {};\n        var properties = 'memory'.split(',');\n        var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n        'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n        'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n        while (prop = properties.pop()) con[prop] = con[prop] || empty;\n        while (method = methods.pop()) con[method] = con[method] || dummy;\n    })(window.console || {}); // Using `this` for web workers.\n\n\n    // Modernizr style test\n    if (!(window.webkitMatchMedia || window.mozMatchMedia || window.oMatchMedia || window.msMatchMedia || window.matchMedia)) {\n        var root = document.getElementsByTagName( 'html' )[0];\n        root.className += ' no-matchmedia';\n    }\n\n    /*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */\n    window.matchMedia || (window.matchMedia = function() {\n        \"use strict\";\n\n        // For browsers that support matchMedium api such as IE 9 and webkit\n        var styleMedia = (window.styleMedia || window.media);\n\n        // For those that don't support matchMedium\n        if (!styleMedia) {\n            var style       = document.createElement('style'),\n                script      = document.getElementsByTagName('script')[0],\n                info        = null;\n\n            style.type  = 'text/css';\n            style.id    = 'matchmediajs-test';\n\n            script.parentNode.insertBefore(style, script);\n\n            // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n            info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n            styleMedia = {\n                matchMedium: function(media) {\n                    var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n                    // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                    if (style.styleSheet) {\n                        style.styleSheet.cssText = text;\n                    } else {\n                        style.textContent = text;\n                    }\n\n                    // Test if media query is true or false\n                    return info.width === '1px';\n                }\n            };\n        }\n\n        return function(media) {\n            return {\n                matches: styleMedia.matchMedium(media || 'all'),\n                media: media || 'all'\n            };\n        };\n    }());\n\n    /*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */\n    (function(){\n        // Bail out for browsers that have addListener support\n        if (window.matchMedia && window.matchMedia('all').addListener) {\n            return false;\n        }\n\n        var localMatchMedia = window.matchMedia,\n            hasMediaQueries = localMatchMedia('only all').matches,\n            isListening     = false,\n            timeoutID       = 0,    // setTimeout for debouncing 'handleChange'\n            queries         = [],   // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n            handleChange    = function(evt) {\n                // Debounce\n                clearTimeout(timeoutID);\n\n                timeoutID = setTimeout(function() {\n                    for (var i = 0, il = queries.length; i < il; i++) {\n                        var mql         = queries[i].mql,\n                            listeners   = queries[i].listeners || [],\n                            matches     = localMatchMedia(mql.media).matches;\n\n                        // Update mql.matches value and call listeners\n                        // Fire listeners only if transitioning to or from matched state\n                        if (matches !== mql.matches) {\n                            mql.matches = matches;\n\n                            for (var j = 0, jl = listeners.length; j < jl; j++) {\n                                listeners[j].call(window, mql);\n                            }\n                        }\n                    }\n                }, 30);\n            };\n\n        window.matchMedia = function(media) {\n            var mql         = localMatchMedia(media),\n                listeners   = [],\n                index       = 0;\n\n            mql.addListener = function(listener) {\n                // Changes would not occur to css media type so return now (Affects IE <= 8)\n                if (!hasMediaQueries) {\n                    return;\n                }\n\n                // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n                // There should only ever be 1 resize listener running for performance\n                if (!isListening) {\n                    isListening = true;\n                    window.addEventListener('resize', handleChange, true);\n                }\n\n                // Push object only if it has not been pushed already\n                if (index === 0) {\n                    index = queries.push({\n                        mql         : mql,\n                        listeners   : listeners\n                    });\n                }\n\n                listeners.push(listener);\n            };\n\n            mql.removeListener = function(listener) {\n                for (var i = 0, il = listeners.length; i < il; i++){\n                    if (listeners[i] === listener){\n                        listeners.splice(i, 1);\n                    }\n                }\n            };\n\n            return mql;\n        };\n    }());\n\n    // extend innerWidth ..\n    var html = document.getElementsByTagName('html')[0];\n    var body = document.getElementsByTagName('body')[0];\n\n    /*\n    if (!window.innerWidth) window.innerWidth = html.clientWidth;\n    if (!window.innerHeight) window.innerHeight = html.clientHeight;\n    if (!window.scrollX) window.scrollX = window.pageXOffset || html.scrollLeft;\n    if (!window.scrollY) window.scrollY = window.pageYOffset || html.scrollTop;\n    */\n}.call(window));","/**\n * Refer to this by {@link ax5}.\n * @namespace ax5.ui\n */\n\n/**\n * @class ax5.ui.root\n * @classdesc ax5 ui class\n * @author tom@axisj.com\n * @example\n * ```\n * var myui = new ax5.ui.root();\n * ```\n */\nax5.ui = (function () {\n\n    function axUi() {\n        this.config = {};\n        this.name = \"root\";\n\n        /**\n         * 클래스의 속성 정의 메소드 속성 확장후에 내부에 init 함수를 호출합니다.\n         * @method ax5.ui.root.setConfig\n         * @param {Object} config - 클래스 속성값\n         * @param {Boolean} [callInit=true] - init 함수 호출 여부\n         * @returns {ax5.ui.axUi}\n         * @example\n         * ```\n         * var myui = new ax5.ui.root();\n         * myui.setConfig({\n\t\t * \tid:\"abcd\"\n\t\t * });\n         * ```\n         */\n        this.setConfig = function (cfg, callInit) {\n            jQuery.extend(true, this.config, cfg);\n            if (typeof callInit == \"undefined\" || callInit === true) {\n                this.init();\n            }\n            return this;\n        };\n        this.init = function () {\n            console.log(this.config);\n        };\n\n        this.bindWindowResize = function (callBack) {\n            setTimeout((function () {\n                jQuery(window).resize((function () {\n                    if (this.bindWindowResize__) clearTimeout(this.bindWindowResize__);\n                    this.bindWindowResize__ = setTimeout((function () {\n                        callBack.call(this);\n                    }).bind(this), 10);\n                }).bind(this));\n            }).bind(this), 100);\n        };\n\n        this.stopEvent = function (e) {\n            if (e.preventDefault) e.preventDefault();\n            if (e.stopPropagation) e.stopPropagation();\n            e.cancelBubble = true;\n            return false;\n        };\n\n        this.toString = function () {\n            return this.name + '@' + this.version;\n        };\n\n        // instance init\n        this.main = (function () {\n\n        }).apply(this, arguments);\n\n    }\n\n    /**\n     * @method ax5.ui.addClass\n     * @param {Object} config\n     * @param {String} config.className - name of Class\n     * @param {String} [config.version=\"\"] - version of Class\n     * @param {Object} [config.classStore=ax5.ui] - 클래스가 저장될 경로\n     * @param {Function} [config.superClass=ax5.ui.root]\n     * @param {Function} cls - Class Function\n     */\n    function addClass(config, cls) {\n        if (!config || !config.className) throw 'invalid call';\n        var classStore = (config.classStore) ? config.classStore : ax5.ui;\n        if (!classStore)  throw 'invalid classStore';\n\n        // make ui definition variable\n        ax5.def[config.className] = {\n            version: config.version\n        };\n\n        var factory = function (cls, arg) {\n            switch (arg.length) {\n                case 0:\n                    return new cls();\n                    break;\n                case 1:\n                    return new cls(arg[0]);\n                    break;\n                case 2:\n                    return new cls(arg[0], arg[1]);\n                    break;\n                case 3:\n                    return new cls(arg[0], arg[1], arg[2]);\n                    break;\n            }\n        };\n        var initInstance = function (name, version, instance) {\n            instance.name = name;\n            instance.version = version;\n            instance.instanceId = ax5.getGuid();\n            return instance;\n        };\n        var initPrototype = function (cls) {\n            var superClass = (config.superClass) ? config.superClass : ax5.ui.root;\n            if (!ax5.util.isFunction(superClass)) throw 'invalid superClass';\n            superClass.call(this); // 부모호출\n            cls.prototype = new superClass(); // 상속\n        };\n        var wrapper = function () {\n            if (!this || !(this instanceof wrapper)) throw 'invalid call';\n            var instance = factory(cls, arguments);\n            return initInstance(config.className, config.version || \"\", instance);\n        };\n        initPrototype.call(this, cls);\n        classStore[config.className] = wrapper;\n    }\n\n    return {\n        root: axUi,\n        addClass: addClass\n    }\n})();\n","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n * https://github.com/thomasJang/mustache.js -- imporove some variables\n */\n\n(function defineMustache(global, factory) {\n\n    factory(global.mustache = {});\n\n}(window.ax5, function mustacheFactory(mustache) {\n\n    var objectToString = Object.prototype.toString;\n    var isArray = Array.isArray || function isArrayPolyfill(object) {\n            return objectToString.call(object) === '[object Array]';\n        };\n\n    function isFunction(object) {\n        return typeof object === 'function';\n    }\n\n    /**\n     * More correct typeof string handling array\n     * which normally returns typeof 'object'\n     */\n    function typeStr(obj) {\n        return isArray(obj) ? 'array' : typeof obj;\n    }\n\n    function escapeRegExp(string) {\n        return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    /**\n     * Null safe way of checking whether or not an object,\n     * including its prototype, has a given property\n     */\n    function hasProperty(obj, propName) {\n        return obj != null && typeof obj === 'object' && (propName in obj);\n    }\n\n    // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n    // See https://github.com/janl/mustache.js/issues/189\n    var regExpTest = RegExp.prototype.test;\n\n    function testRegExp(re, string) {\n        return regExpTest.call(re, string);\n    }\n\n    var nonSpaceRe = /\\S/;\n\n    function isWhitespace(string) {\n        return !testRegExp(nonSpaceRe, string);\n    }\n\n    var entityMap = {\n        '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#39;', '/': '&#x2F;'\n    };\n\n    function escapeHtml(string) {\n        return String(string).replace(/[&<>\"'\\/]/g, function fromEntityMap(s) {\n            return entityMap[s];\n        });\n    }\n\n    var whiteRe = /\\s*/;\n    var spaceRe = /\\s+/;\n    var equalsRe = /\\s*=/;\n    var curlyRe = /\\s*\\}/;\n    var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n    /**\n     * Breaks up the given `template` string into a tree of tokens. If the `tags`\n     * argument is given here it must be an array with two string values: the\n     * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n     * course, the default is to use mustaches (i.e. mustache.tags).\n     *\n     * A token is an array with at least 4 elements. The first element is the\n     * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n     * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n     * all text that appears outside a symbol this element is \"text\".\n     *\n     * The second element of a token is its \"value\". For mustache tags this is\n     * whatever else was inside the tag besides the opening symbol. For text tokens\n     * this is the text itself.\n     *\n     * The third and fourth elements of the token are the start and end indices,\n     * respectively, of the token in the original template.\n     *\n     * Tokens that are the root node of a subtree contain two more elements: 1) an\n     * array of tokens in the subtree and 2) the index in the original template at\n     * which the closing tag for that section begins.\n     */\n    function parseTemplate(template, tags) {\n        if (!template)\n            return [];\n\n        var sections = [];     // Stack to hold section tokens\n        var tokens = [];       // Buffer to hold the tokens\n        var spaces = [];       // Indices of whitespace tokens on the current line\n        var hasTag = false;    // Is there a {{tag}} on the current line?\n        var nonSpace = false;  // Is there a non-space char on the current line?\n\n        // Strips all whitespace tokens array for the current line\n        // if there was a {{#tag}} on it and otherwise only space.\n        function stripSpace() {\n            if (hasTag && !nonSpace) {\n                while (spaces.length)\n                    delete tokens[spaces.pop()];\n            }\n            else {\n                spaces = [];\n            }\n\n            hasTag = false;\n            nonSpace = false;\n        }\n\n        var openingTagRe, closingTagRe, closingCurlyRe;\n\n        function compileTags(tagsToCompile) {\n            if (typeof tagsToCompile === 'string')\n                tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n            if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n                throw new Error('Invalid tags: ' + tagsToCompile);\n\n            openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n            closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n            closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n        }\n\n        compileTags(tags || mustache.tags);\n\n        var scanner = new Scanner(template);\n\n        var start, type, value, chr, token, openSection;\n        while (!scanner.eos()) {\n            start = scanner.pos;\n\n            // Match any text between tags.\n            value = scanner.scanUntil(openingTagRe);\n\n            if (value) {\n                for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n                    chr = value.charAt(i);\n\n                    if (isWhitespace(chr)) {\n                        spaces.push(tokens.length);\n                    }\n                    else {\n                        nonSpace = true;\n                    }\n\n                    tokens.push(['text', chr, start, start + 1]);\n                    start += 1;\n\n                    // Check for whitespace on the current line.\n                    if (chr === '\\n')\n                        stripSpace();\n                }\n            }\n\n            // Match the opening tag.\n            if (!scanner.scan(openingTagRe))\n                break;\n\n            hasTag = true;\n\n            // Get the tag type.\n            type = scanner.scan(tagRe) || 'name';\n            scanner.scan(whiteRe);\n\n            // Get the tag value.\n            if (type === '=') {\n                value = scanner.scanUntil(equalsRe);\n                scanner.scan(equalsRe);\n                scanner.scanUntil(closingTagRe);\n            }\n            else if (type === '{') {\n                value = scanner.scanUntil(closingCurlyRe);\n                scanner.scan(curlyRe);\n                scanner.scanUntil(closingTagRe);\n                type = '&';\n            }\n            else {\n                value = scanner.scanUntil(closingTagRe);\n            }\n\n            // Match the closing tag.\n            if (!scanner.scan(closingTagRe))\n                throw new Error('Unclosed tag at ' + scanner.pos);\n\n            token = [type, value, start, scanner.pos];\n            tokens.push(token);\n\n            if (type === '#' || type === '^') {\n                sections.push(token);\n            }\n            else if (type === '/') {\n                // Check section nesting.\n                openSection = sections.pop();\n\n                if (!openSection)\n                    throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n                if (openSection[1] !== value)\n                    throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n            }\n            else if (type === 'name' || type === '{' || type === '&') {\n                nonSpace = true;\n            }\n            else if (type === '=') {\n                // Set the tags for the next time around.\n                compileTags(value);\n            }\n        }\n\n        // Make sure there are no open sections when we're done.\n        openSection = sections.pop();\n\n        if (openSection)\n            throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n        return nestTokens(squashTokens(tokens));\n    }\n\n    /**\n     * Combines the values of consecutive text tokens in the given `tokens` array\n     * to a single token.\n     */\n    function squashTokens(tokens) {\n        var squashedTokens = [];\n\n        var token, lastToken;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            if (token) {\n                if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n                    lastToken[1] += token[1];\n                    lastToken[3] = token[3];\n                }\n                else {\n                    squashedTokens.push(token);\n                    lastToken = token;\n                }\n            }\n        }\n\n        return squashedTokens;\n    }\n\n    /**\n     * Forms the given array of `tokens` into a nested tree structure where\n     * tokens that represent a section have two additional items: 1) an array of\n     * all tokens that appear in that section and 2) the index in the original\n     * template that represents the end of that section.\n     */\n    function nestTokens(tokens) {\n        var nestedTokens = [];\n        var collector = nestedTokens;\n        var sections = [];\n\n        var token, section;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            switch (token[0]) {\n                case '#':\n                case '^':\n                    collector.push(token);\n                    sections.push(token);\n                    collector = token[4] = [];\n                    break;\n                case '/':\n                    section = sections.pop();\n                    section[5] = token[2];\n                    collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n                    break;\n                default:\n                    collector.push(token);\n            }\n        }\n\n        return nestedTokens;\n    }\n\n    /**\n     * A simple string scanner that is used by the template parser to find\n     * tokens in template strings.\n     */\n    function Scanner(string) {\n        this.string = string;\n        this.tail = string;\n        this.pos = 0;\n    }\n\n    /**\n     * Returns `true` if the tail is empty (end of string).\n     */\n    Scanner.prototype.eos = function eos() {\n        return this.tail === '';\n    };\n\n    /**\n     * Tries to match the given regular expression at the current position.\n     * Returns the matched text if it can match, the empty string otherwise.\n     */\n    Scanner.prototype.scan = function scan(re) {\n        var match = this.tail.match(re);\n\n        if (!match || match.index !== 0)\n            return '';\n\n        var string = match[0];\n\n        this.tail = this.tail.substring(string.length);\n        this.pos += string.length;\n\n        return string;\n    };\n\n    /**\n     * Skips all text until the given regular expression can be matched. Returns\n     * the skipped string, which is the entire tail if no match can be made.\n     */\n    Scanner.prototype.scanUntil = function scanUntil(re) {\n        var index = this.tail.search(re), match;\n\n        switch (index) {\n            case -1:\n                match = this.tail;\n                this.tail = '';\n                break;\n            case 0:\n                match = '';\n                break;\n            default:\n                match = this.tail.substring(0, index);\n                this.tail = this.tail.substring(index);\n        }\n\n        this.pos += match.length;\n\n        return match;\n    };\n\n    /**\n     * Represents a rendering context by wrapping a view object and\n     * maintaining a reference to the parent context.\n     */\n    function Context(view, parentContext) {\n        this.view = view;\n        this.cache = {\n            '.': this.view,\n            '@each': function () {\n                var returns = [];\n                for (var k in this) {\n                    returns.push({'@key': k, '@value': this[k]});\n                }\n                return returns;\n            }\n        };\n        this.parent = parentContext;\n    }\n\n    /**\n     * Creates a new context using the given view with this context\n     * as the parent.\n     */\n    Context.prototype.push = function push(view) {\n        return new Context(view, this);\n    };\n\n    /**\n     * Returns the value of the given name in this context, traversing\n     * up the context hierarchy if the value is absent in this context's view.\n     */\n    Context.prototype.lookup = function lookup(name) {\n        var cache = this.cache;\n\n        var value;\n        if (cache.hasOwnProperty(name)) {\n            value = cache[name];\n        }\n        else {\n            var context = this, names, index, lookupHit = false;\n\n            while (context) {\n                if (name.indexOf('.') > 0) {\n                    value = context.view;\n                    names = name.split('.');\n                    index = 0;\n\n                    /**\n                     * Using the dot notion path in `name`, we descend through the\n                     * nested objects.\n                     *\n                     * To be certain that the lookup has been successful, we have to\n                     * check if the last object in the path actually has the property\n                     * we are looking for. We store the result in `lookupHit`.\n                     *\n                     * This is specially necessary for when the value has been set to\n                     * `undefined` and we want to avoid looking up parent contexts.\n                     **/\n                    while (value != null && index < names.length) {\n                        if (index === names.length - 1)\n                            lookupHit = hasProperty(value, names[index]);\n\n                        value = value[names[index++]];\n                    }\n                }\n                else {\n                    value = context.view[name];\n                    lookupHit = hasProperty(context.view, name);\n                }\n\n                if (lookupHit)\n                    break;\n\n                context = context.parent;\n            }\n\n            cache[name] = value;\n        }\n\n        if (isFunction(value))\n            value = value.call(this.view);\n\n        return value;\n    };\n\n    /**\n     * A Writer knows how to take a stream of tokens and render them to a\n     * string, given a context. It also maintains a cache of templates to\n     * avoid the need to parse the same template twice.\n     */\n    function Writer() {\n        this.cache = {};\n    }\n\n    /**\n     * Clears all cached templates in this writer.\n     */\n    Writer.prototype.clearCache = function clearCache() {\n        this.cache = {};\n    };\n\n    /**\n     * Parses and caches the given `template` and returns the array of tokens\n     * that is generated from the parse.\n     */\n    Writer.prototype.parse = function parse(template, tags) {\n        var cache = this.cache;\n        var tokens = cache[template];\n\n        if (tokens == null)\n            tokens = cache[template] = parseTemplate(template, tags);\n\n        return tokens;\n    };\n\n    /**\n     * High-level method that is used to render the given `template` with\n     * the given `view`.\n     *\n     * The optional `partials` argument may be an object that contains the\n     * names and templates of partials that are used in the template. It may\n     * also be a function that is used to load partial templates on the fly\n     * that takes a single argument: the name of the partial.\n     */\n    Writer.prototype.render = function render(template, view, partials) {\n        var tokens = this.parse(template);\n        var context = (view instanceof Context) ? view : new Context(view);\n        return this.renderTokens(tokens, context, partials, template);\n    };\n\n    /**\n     * Low-level method that renders the given array of `tokens` using\n     * the given `context` and `partials`.\n     *\n     * Note: The `originalTemplate` is only ever used to extract the portion\n     * of the original template that was contained in a higher-order section.\n     * If the template doesn't use higher-order sections, this argument may\n     * be omitted.\n     */\n    Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate) {\n        var buffer = '';\n        var token, symbol, value;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            value = undefined;\n            token = tokens[i];\n            symbol = token[0];\n\n            if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n            else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n            else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n            else if (symbol === '&') value = this.unescapedValue(token, context);\n            else if (symbol === 'name') value = this.escapedValue(token, context);\n            else if (symbol === 'text') value = this.rawValue(token);\n\n            if (value !== undefined)\n                buffer += value;\n        }\n\n        return buffer;\n    };\n\n    Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n        var self = this;\n        var buffer = '';\n\n        var value = context.lookup(token[1]);\n\n        // This function is used to render an arbitrary template\n        // in the current context by higher-order sections.\n        function subRender(template) {\n            return self.render(template, context, partials);\n        }\n\n        if (!value) return;\n\n        if (isArray(value)) {\n            for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n                if (value[j]) {\n                    if (typeof value[j] === 'object') {\n                        value[j]['@i'] = j;\n                        value[j]['@first'] = (j === 0);\n                    }\n\n                    buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n                }\n            }\n        }\n        else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n            buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        }\n        else if (isFunction(value)) {\n            if (typeof originalTemplate !== 'string')\n                throw new Error('Cannot use higher-order sections without the original template');\n\n            // Extract the portion of the original template that the section contains.\n            value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n            if (value != null)\n                buffer += value;\n        }\n        else {\n            buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n        return buffer;\n    };\n\n    Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n        var value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || (isArray(value) && value.length === 0))\n            return this.renderTokens(token[4], context, partials, originalTemplate);\n    };\n\n    Writer.prototype.renderPartial = function renderPartial(token, context, partials) {\n        if (!partials) return;\n\n        var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null)\n            return this.renderTokens(this.parse(value), context, partials, value);\n    };\n\n    Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null)\n            return value;\n    };\n\n    Writer.prototype.escapedValue = function escapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null)\n            return mustache.escape(value);\n    };\n\n    Writer.prototype.rawValue = function rawValue(token) {\n        return token[1];\n    };\n\n    mustache.name = 'mustache.js';\n    mustache.version = '2.1.3';\n    mustache.tags = ['{{', '}}'];\n\n    // All high-level mustache.* functions use this writer.\n    var defaultWriter = new Writer();\n\n    /**\n     * Clears all cached templates in the default writer.\n     */\n    mustache.clearCache = function clearCache() {\n        return defaultWriter.clearCache();\n    };\n\n    /**\n     * Parses and caches the given template in the default writer and returns the\n     * array of tokens it contains. Doing this ahead of time avoids the need to\n     * parse templates on the fly as they are rendered.\n     */\n    mustache.parse = function parse(template, tags) {\n        return defaultWriter.parse(template, tags);\n    };\n\n    /**\n     * Renders the `template` with the given `view` and `partials` using the\n     * default writer.\n     */\n    mustache.render = function render(template, view, partials) {\n        if (typeof template !== 'string') {\n            throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n        }\n\n        return defaultWriter.render(template, view, partials);\n    };\n\n    // This is here for backwards compatibility with 0.4.x.,\n    /*eslint-disable */ // eslint wants camel cased function name\n    mustache.to_html = function to_html(template, view, partials, send) {\n        /*eslint-enable*/\n\n        var result = mustache.render(template, view, partials);\n\n        if (isFunction(send)) {\n            send(result);\n        }\n        else {\n            return result;\n        }\n    };\n\n    // Export the escaping function so that the user may override it.\n    // See https://github.com/janl/mustache.js/issues/244\n    mustache.escape = escapeHtml;\n\n    // Export these mainly for testing, but also for advanced usage.\n    mustache.Scanner = Scanner;\n    mustache.Context = Context;\n    mustache.Writer = Writer;\n\n}));","// ax5.ui.dialog\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var DIALOG;\n\n    UI.addClass({\n        className: \"dialog\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5dialog\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var dialog = new ax5.ui.dialog();\n         * var mask = new ax5.ui.mask();\n         * dialog.setConfig({\n         *     zIndex: 5000,\n         *     onStateChanged: function () {\n         *         if (this.state === \"open\") {\n         *             mask.open();\n         *         }\n         *         else if (this.state === \"close\") {\n         *             mask.close();\n         *         }\n         *     }\n         * });\n         *\n         * dialog.alert({\n         *     theme: 'default',\n         *     title: 'Alert default',\n         *     msg: theme + ' color'\n         * }, function () {\n         *     console.log(this);\n         * });\n         * ```\n         */\n        var ax5dialog = function () {\n            var\n                self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-dialog-' + this.instanceId,\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                title: '',\n                msg: '',\n                lang: {\n                    \"ok\": \"ok\", \"cancel\": \"cancel\"\n                },\n                animateTime: 150\n            };\n            this.activeDialog = null;\n            cfg = this.config;\n\n            var\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    that = null;\n                    return true;\n                },\n                /**\n                 * @method ax5dialog.getContent\n                 * @param {String} dialogId\n                 * @param {Object} opts\n                 * @returns dialogDisplay\n                 */\n                getContent = function (dialogId, opts) {\n                    var\n                        data = {\n                            dialogId: dialogId,\n                            title: (opts.title || cfg.title || \"\"),\n                            msg: (opts.msg || cfg.msg || \"\").replace(/\\n/g, \"<br/>\"),\n                            input: opts.input,\n                            btns: opts.btns,\n                            '_crlf': function () {\n                                return this.replace(/\\n/g, \"<br/>\");\n                            }\n                        };\n\n                    try {\n                        return DIALOG.tmpl.get.call(this, \"dialogDisplay\", data);\n                    }\n                    finally {\n                        data = null;\n                    }\n                },\n                /**\n                 * @method ax5dialog.open\n                 * @param {Object} opts\n                 * @param callback\n                 */\n                open = function (opts, callback) {\n                    var pos = {}, box;\n\n                    opts.id = (opts.id || cfg.id);\n\n                    box = {\n                        width: opts.width\n                    };\n                    jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                    this.activeDialog = jQuery('#' + opts.id);\n                    this.activeDialog.css({width: box.width});\n\n                    // dialog 높이 구하기 - 너비가 정해지면 높이가 변경 될 것.\n                    opts.height = box.height = this.activeDialog.height();\n\n                    //- position 정렬\n                    if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n                        pos.top = jQuery(window).height() / 2 - box.height / 2;\n                        pos.left = jQuery(window).width() / 2 - box.width / 2;\n                    }\n                    else {\n                        pos.left = opts.position.left || 0;\n                        pos.top = opts.position.top || 0;\n                    }\n                    if (cfg.zIndex) {\n                        pos[\"z-index\"] = cfg.zIndex;\n                    }\n                    this.activeDialog.css(pos);\n\n                    // bind button event\n                    if (opts.dialogType === \"prompt\") {\n                        this.activeDialog.find(\"[data-dialog-prompt]\").get(0).focus();\n                    }\n                    else {\n                        this.activeDialog.find(\"[data-dialog-btn]\").get(0).focus();\n                    }\n\n                    this.activeDialog.find(\"[data-dialog-btn]\").on(cfg.clickEventName, (function (e) {\n                        btnOnClick.call(this, e || window.event, opts, callback);\n                    }).bind(this));\n\n                    // bind key event\n                    jQuery(window).bind(\"keydown.ax5dialog\", (function (e) {\n                        onKeyup.call(this, e || window.event, opts, callback);\n                    }).bind(this));\n\n                    jQuery(window).bind(\"resize.ax5dialog\", (function (e) {\n                        align.call(this, e || window.event);\n                    }).bind(this));\n\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"open\"\n                    });\n\n                    pos = null;\n                    box = null;\n                },\n                align = function (e) {\n                    if (!this.activeDialog) return this;\n                    var\n                        opts = self.dialogConfig,\n                        box = {\n                            width: opts.width,\n                            height: opts.height\n                        };\n                    //- position 정렬\n                    if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n                        box.top = window.innerHeight / 2 - box.height / 2;\n                        box.left = window.innerWidth / 2 - box.width / 2;\n                    }\n                    else {\n                        box.left = opts.position.left || 0;\n                        box.top = opts.position.top || 0;\n                    }\n                    if (box.left < 0) box.left = 0;\n                    if (box.top < 0) box.top = 0;\n\n                    this.activeDialog.css(box);\n\n                    opts = null;\n                    box = null;\n\n                    return this;\n                },\n                btnOnClick = function (e, opts, callback, target, k) {\n                    var that;\n                    if (e.srcElement) e.target = e.srcElement;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-dialog-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        k = target.getAttribute(\"data-dialog-btn\");\n\n                        that = {\n                            self: this,\n                            key: k, value: opts.btns[k],\n                            dialogId: opts.id,\n                            btnTarget: target\n                        };\n                        if (opts.dialogType === \"prompt\") {\n                            var emptyKey = null;\n                            for (var oi in opts.input) {\n                                that[oi] = this.activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n                                if (that[oi] == \"\" || that[oi] == null) {\n                                    emptyKey = oi;\n                                    break;\n                                }\n                            }\n                        }\n                        if (opts.btns[k].onClick) {\n                            opts.btns[k].onClick.call(that, k);\n                        }\n                        else if (opts.dialogType === \"alert\") {\n                            if (callback) callback.call(that, k);\n                            this.close({doNotCallback: true});\n                        }\n                        else if (opts.dialogType === \"confirm\") {\n                            if (callback) callback.call(that, k);\n                            this.close({doNotCallback: true});\n                        }\n                        else if (opts.dialogType === \"prompt\") {\n                            if (k === 'ok') {\n                                if (emptyKey) {\n                                    this.activeDialog.find('[data-dialog-prompt=\"' + emptyKey + '\"]').get(0).focus();\n                                    return false;\n                                }\n                            }\n                            if (callback) callback.call(that, k);\n                            this.close({doNotCallback: true});\n                        }\n                    }\n\n                    that = null;\n                    opts = null;\n                    callback = null;\n                    target = null;\n                    k = null;\n                },\n                onKeyup = function (e, opts, callback, target, k) {\n                    var\n                        that,\n                        emptyKey = null;\n\n                    if (e.keyCode == ax5.info.eventKeys.ESC) {\n                        this.close();\n                    }\n                    if (opts.dialogType === \"prompt\") {\n                        if (e.keyCode == ax5.info.eventKeys.RETURN) {\n                            that = {\n                                self: this,\n                                key: k, value: opts.btns[k],\n                                dialogId: opts.id,\n                                btnTarget: target\n                            };\n\n                            for (var oi in opts.input) {\n                                that[oi] = this.activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n                                if (that[oi] == \"\" || that[oi] == null) {\n                                    emptyKey = oi;\n                                    break;\n                                }\n                            }\n                            if (emptyKey) {\n                                that = null;\n                                emptyKey = null;\n                                return false;\n                            }\n                            if (callback) callback.call(that, k);\n                            this.close({doNotCallback: true});\n                        }\n                    }\n\n                    that = null;\n                    emptyKey = null;\n                    opts = null;\n                    callback = null;\n                    target = null;\n                    k = null;\n                };\n\n            /**\n             * Preferences of dialog UI\n             * @method ax5dialog.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n\n                this.onStateChanged = cfg.onStateChanged;\n                // this.onLoad = cfg.onLoad;\n\n            };\n\n            /**\n             * open the dialog of alert type\n             * @method ax5dialog.alert\n             * @param {Object|String} [{theme, title, msg, btns}|msg] - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.alert({\n             *  title: 'app title',\n             *  msg: 'alert'\n             * }, function(){});\n             * ```\n             */\n            this.alert = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n\n                if (this.activeDialog) {\n                    // try one more\n                    if (!tryCount) {\n                        setTimeout((function () {\n                            this.alert(opts, callback, 1);\n                        }).bind(this), Number(cfg.animateTime) + 100);\n                    } else {\n                        console.log(ax5.info.getError(\"ax5dialog\", \"501\", \"alert\"));\n                    }\n                    return this;\n                }\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n\n                opts.dialogType = \"alert\";\n                opts.theme = (opts.theme || cfg.theme || \"\");\n                opts.callback = callback;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: {label: cfg.lang[\"ok\"], theme: opts.theme}\n                    };\n                }\n                open.call(this, opts, callback);\n\n                return this;\n            };\n\n            /**\n             * open the dialog of confirm type\n             * @method ax5dialog.confirm\n             * @param {Object|String} [{theme, title, msg, btns}|msg] - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.confirm({\n             *  title: 'app title',\n             *  msg: 'confirm'\n             * }, function(){});\n             * ```\n             */\n            this.confirm = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n\n                if (this.activeDialog) {\n                    // try one more\n                    if (!tryCount) {\n                        setTimeout((function () {\n                            this.confirm(opts, callback, 1);\n                        }).bind(this), Number(cfg.animateTime) + 100);\n                    } else {\n                        console.log(ax5.info.getError(\"ax5dialog\", \"501\", \"confirm\"));\n                    }\n                    return this;\n                }\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                opts.dialogType = \"confirm\";\n                opts.theme = (opts.theme || cfg.theme || \"\");\n                opts.callback = callback;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: {label: cfg.lang[\"ok\"], theme: opts.theme},\n                        cancel: {label: cfg.lang[\"cancel\"]}\n                    };\n                }\n                open.call(this, opts, callback);\n\n                return this;\n            };\n\n            /**\n             * open the dialog of prompt type\n             * @method ax5dialog.prompt\n             * @param {Object|String} [{theme, title, msg, btns, input}|msg] - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.prompt({\n             *  title: 'app title',\n             *  msg: 'alert'\n             * }, function(){});\n             * ```\n             */\n            this.prompt = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n\n                if (this.activeDialog) {\n                    // try one more\n                    if (!tryCount) {\n                        setTimeout((function () {\n                            this.prompt(opts, callback, 1);\n                        }).bind(this), Number(cfg.animateTime) + 100);\n                    } else {\n                        console.log(ax5.info.getError(\"ax5dialog\", \"501\", \"prompt\"));\n                    }\n                    return this;\n                }\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n                opts.dialogType = \"prompt\";\n                opts.theme = (opts.theme || cfg.theme || \"\");\n                opts.callback = callback;\n\n                if (typeof opts.input === \"undefined\") {\n                    opts.input = {\n                        value: {label: \"\"}\n                    };\n                }\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: {label: cfg.lang[\"ok\"], theme: opts.theme},\n                        cancel: {label: cfg.lang[\"cancel\"]}\n                    };\n                }\n                open.call(this, opts, callback);\n\n                return this;\n            };\n\n            /**\n             * close the dialog\n             * @method ax5dialog.close\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.close();\n             * ```\n             */\n            this.close = function (_option) {\n                var opts, that;\n                if (this.activeDialog) {\n                    opts = self.dialogConfig;\n                    this.activeDialog.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax5dialog\");\n                    jQuery(window).unbind(\"resize.ax5dialog\");\n\n                    setTimeout((function () {\n                        if (this.activeDialog) {\n                            this.activeDialog.remove();\n                            this.activeDialog = null;\n                        }\n\n                        that = {\n                            self: this,\n                            state: \"close\",\n                            dialogId: opts.id\n                        };\n\n                        if (opts.callback && (!_option || !_option.doNotCallback)) {\n                            opts.callback.call(that);\n                        }\n\n                        if (opts && opts.onStateChanged) {\n                            opts.onStateChanged.call(that, that);\n                        }\n                        else if (this.onStateChanged) {\n                            this.onStateChanged.call(that, that);\n                        }\n\n                        opts = null;\n                        that = null;\n                    }).bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.dialog_instance = UI.dialog_instance || [];\n                UI.dialog_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5dialog;\n    })());\n    DIALOG = ax5.ui.dialog;\n})();\n","// ax5.ui.dialog.tmpl\n(function () {\n\n    var DIALOG = ax5.ui.dialog;\n\n    var dialogDisplay = function(columnKeys) {\n        return ` \n        <div id=\"{{dialogId}}\" data-ax5-ui=\"dialog\" class=\"ax5-ui-dialog {{theme}}\">\n            <div class=\"ax-dialog-header\">\n                {{{title}}}\n            </div>\n            <div class=\"ax-dialog-body\">\n                <div class=\"ax-dialog-msg\">{{{msg}}}</div>\n                \n                {{#input}}\n                <div class=\"ax-dialog-prompt\">\n                    {{#@each}}\n                    <div class=\"form-group\">\n                    {{#@value.label}}\n                    <label>{{#_crlf}}{{{.}}}{{/_crlf}}</label>\n                    {{/@value.label}}\n                    <input type=\"{{@value.type}}\" placeholder=\"{{@value.placeholder}}\" class=\"form-control {{@value.theme}}\" data-dialog-prompt=\"{{@key}}\" style=\"width:100%;\" value=\"{{@value.value}}\" />\n                    {{#@value.help}}\n                    <p class=\"help-block\">{{#_crlf}}{{.}}{{/_crlf}}</p>\n                    {{/@value.help}}\n                    </div>\n                    {{/@each}}\n                </div>\n                {{/input}}\n                \n                <div class=\"ax-dialog-buttons\">\n                    <div class=\"ax-button-wrap\">\n                    {{#btns}}\n                        {{#@each}}\n                        <button type=\"button\" data-dialog-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{@value.label}}</button>\n                        {{/@each}}\n                    {{/btns}}\n                    </div>\n                </div>\n            </div>\n        </div>  \n        `;\n    };\n\n    DIALOG.tmpl = {\n        \"dialogDisplay\": dialogDisplay,\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(DIALOG.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.mask\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MASK;\n\n    UI.addClass({\n        className: \"mask\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5mask\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var customMask = function customMask() {\n         *     var cTmpl = '' +\n         *         '<div class=\"ax-mask\" id=\"{{maskId}}\" >' +\n         *         '    <div class=\"ax-mask-bg\" style=\"background-color:red !important;\"></div>' +\n         *         '    <div class=\"ax-mask-content\">' +\n         *         '        {{{body}}}' +\n         *         '    </div>' +\n         *         '</div>';\n         *     return cTmpl;\n         * };\n         * ax5.ui.mask.tmpl.customMask = customMask;\n         *\n         * var mask = new ax5.ui.mask();\n         *\n         * mask.open({\n         *     templateName: 'customMask',\n         *     content: 'custom MASK on target',\n         *     target: $(\"#user-content\").get(0),\n         *     onClick: function(){\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        var ax5mask = function () {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: '',\n                target: jQuery(document.body).get(0),\n                animateTime: 250\n            };\n            this.maskContent = '';\n            this.status = \"off\";\n\n            cfg = this.config;\n\n            var\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    opts = null;\n                    that = null;\n                    return true;\n                },\n                getBodyTmpl = function (data) {\n                    if (typeof data.templateName === \"undefined\") data.templateName = \"defaultMask\";\n                    return MASK.tmpl.get.call(this, data.templateName, data);\n                },\n                setBody = function (content) {\n                    this.maskContent = content;\n                };\n\n            /**\n             * Preferences of Mask UI\n             * @method ax5mask.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5mask}\n             * @example\n             * ```\n             * setConfig({\n             *      target : {Element|AX5 nodelist}, // 마스크 처리할 대상\n             *      content : {String}, // 마스크안에 들어가는 내용물\n             *      onStateChanged: function(){} // 마스크 상태변경 시 호출되는 함수 this.type으로 예외처리 가능\n             * }\n             * ```\n             */\n            this.init = function () {\n                // after setConfig();\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                if (this.config.content) setBody.call(this, this.config.content);\n            };\n\n            /**\n             * open mask\n             * target 을 주지 않으면 기본적으로 body 에 마스크가 적용되고 원하는 타겟을 지정해서 마스크를 씌울 수 있습니다.\n             * 기본 정의된 마스크 외에 사용자가 템플릿을 정의해서 마스크를 사용 가능합니다.\n             * @method ax5mask.open\n             * @param {Object} config\n             * @param {String} config\n             * @returns {ax5mask}\n             * @example\n             * ```js\n             * my_mask.open({\n             *     target: document.body,\n             *     content: \"<h1>Loading..</h1>\",\n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             *\n             * my_mask.open({\n             *     target: $(\"#mask-target\").get(0), // dom Element\n             *     content: \"<h1>Loading..</h1>\",\n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             *\n             *\n             * var customMask = function customMask() {\n             *     var cTmpl = '' +\n             *             '<div class=\"ax-mask\" id=\"{{maskId}}\" >' +\n             *             '    <div class=\"ax-mask-bg\" style=\"background-color:red   !important;\"></div>' +\n             *             '    <div class=\"ax-mask-content\">' +\n             *             '        {{{body}}}' +\n             *             '    </div>' +\n             *             '</div>';\n             *     return cTmpl;\n             * };\n             * ax5.ui.mask.tmpl.customMask = customMask;\n             *\n             * my_mask.open({\n             *     target: $(\"#mask-target\").get(0), // dom Element\n             *     content: \"<h1>Loading..</h1>\",\n             *     \n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             * ```\n             */\n            this.open = function (options) {\n\n                if (this.status === \"on\") this.close();\n                if (options && options.content) setBody.call(this, options.content);\n                if (options && typeof options.templateName === \"undefined\") options.templateName = \"defaultMask\";\n                self.maskConfig = {};\n\n                jQuery.extend(true, self.maskConfig, this.config, options);\n\n                var _cfg = self.maskConfig,\n                    target = _cfg.target,\n                    $target = jQuery(target),\n                    maskId = 'ax-mask-' + ax5.getGuid(),\n                    $mask,\n                    css = {},\n                    that = {},\n                    templateName = _cfg.templateName,\n                    /*\n                     bodyTmpl = getBodyTmpl(),\n                     body = ax5.mustache.render(bodyTmpl, {\n                     theme: _cfg.theme,\n                     maskId: maskId,\n                     body: this.maskContent\n                     });\n                     */\n                    body = getBodyTmpl({\n                        theme: _cfg.theme,\n                        maskId: maskId,\n                        body: this.maskContent,\n                        templateName: templateName\n                    });\n\n                jQuery(document.body).append(body);\n\n\n                // 마스크의 타겟이 html body 가 아니라면\n                if (target && target !== jQuery(document.body).get(0)) {\n                    css = {\n                        position: _cfg.position || \"absolute\",\n                        left: $target.offset().left,\n                        top: $target.offset().top,\n                        width: $target.outerWidth(),\n                        height: $target.outerHeight()\n                    };\n\n                    if (typeof self.maskConfig.zIndex !== \"undefined\") {\n                        css[\"z-index\"] = self.maskConfig.zIndex;\n                    }\n                    $target.addClass(\"ax-masking\");\n\n                    // 마스크의 타겟이 html body가 아닌경우 window resize 이벤트를 추적하여 엘리먼트 마스크의 CSS 속성 변경\n                    jQuery(window).bind(\"resize.ax5mask-\" + this.instanceId, (function (_$target) {\n                        this.align();\n                    }).bind(this));\n                }\n\n                this.$mask = $mask = jQuery(\"#\" + maskId);\n                this.$target = $target;\n                this.status = \"on\";\n                $mask.css(css);\n\n                if (_cfg.onClick) {\n                    $mask.on(\"click\", function (e) {\n                        that = {\n                            self: self,\n                            state: \"open\",\n                            type: \"click\"\n                        };\n                        self.maskConfig.onClick.call(that, that);\n                    });\n                }\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"open\"\n                });\n\n                options = null;\n                _cfg = null;\n                target = null;\n                $target = null;\n                maskId = null;\n                $mask = null;\n                css = null;\n                that = null;\n                templateName = null;\n                body = null;\n\n                return this;\n            };\n\n            /**\n             * close mask\n             * @method ax5mask.close\n             * @param {Number} [_delay=0]\n             * @returns {ax5mask}\n             * @example\n             * ```\n             * my_mask.close();\n             * ```\n             */\n            this.close = function (_delay) {\n                if (this.$mask) {\n                    let _close = function () {\n                        this.status = \"off\";\n                        this.$mask.remove();\n                        this.$target.removeClass(\"ax-masking\");\n\n                        onStateChanged.call(this, null, {\n                            self: this,\n                            state: \"close\"\n                        });\n\n                        jQuery(window).unbind(\"resize.ax5mask-\" + this.instanceId);\n                    };\n\n                    if (_delay) {\n                        setTimeout((function () {\n                            _close.call(this);\n                        }).bind(this), _delay);\n                    } else {\n                        _close.call(this);\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5mask.fadeOut\n             * @returns {ax5mask}\n             */\n            this.fadeOut = function () {\n                if (this.$mask) {\n                    let _close = function () {\n                        this.status = \"off\";\n                        this.$mask.remove();\n                        this.$target.removeClass(\"ax-masking\");\n\n                        onStateChanged.call(this, null, {\n                            self: this,\n                            state: \"close\"\n                        });\n\n                        jQuery(window).unbind(\"resize.ax5mask-\" + this.instanceId);\n                    };\n\n\n                    this.$mask.addClass(\"fade-out\");\n                    setTimeout((function () {\n                        _close.call(this);\n                    }).bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5mask.align\n             * @returns {ax5mask}\n             */\n            this.align = function () {\n                if (this.maskConfig && this.maskConfig.target && this.maskConfig.target !== jQuery(document.body).get(0)) {\n                    try {\n                        var css = {\n                            position: this.maskConfig.position || \"absolute\",\n                            left: this.$target.offset().left,\n                            top: this.$target.offset().top,\n                            width: this.$target.outerWidth(),\n                            height: this.$target.outerHeight()\n                        };\n                        this.$mask.css(css);\n                    } catch (e) {\n\n                    }\n                }\n                return this;\n            };\n\n\n            this.pullRequest = function () {\n                console.log(\"test pullRequest01\");\n                console.log(\"test pullRequest02\");\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.mask_instance = UI.mask_instance || [];\n                UI.mask_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5mask;\n    })());\n    MASK = ax5.ui.mask;\n})();","// ax5.ui.mask.tmpl\n(function () {\n\n    var MASK = ax5.ui.mask;\n\n    var defaultMask = function(columnKeys) {\n        return `\n            <div class=\"ax-mask {{theme}}\" id=\"{{maskId}}\">\n                <div class=\"ax-mask-bg\"></div>\n                <div class=\"ax-mask-content\">\n                    <div class=\"ax-mask-body\">\n                    {{{body}}}\n                    </div>\n                </div>\n            </div>\n        `;\n    };\n\n    MASK.tmpl = {\n        \"defaultMask\": defaultMask,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MASK.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.toast\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var TOAST;\n\n    UI.addClass({\n        className: \"toast\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5toast\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * ```js\n         * var toast = new ax5.ui.toast();\n         * toast.setConfig({\n         *     icon: '<i class=\"fa fa-bug\"></i>',\n         *     containerPosition: \"bottom-right\",\n         *     closeIcon: '<i class=\"fa fa-times\"></i>'\n         * });\n         *\n         * toast.onStateChanged = function(){\n         *     console.log(this);\n         * };\n         *\n         * toast.push({\n         *     icon: '<i class=\"fa fa-book\"></i>',\n         *     msg:\"999999\"\n         * });\n         *\n         * toast.push({\n         *     theme: theme,\n         *     msg: 'toast message'\n         * });\n         * ```\n         */\n        var ax5toast = function () {\n            var\n                self = this,\n                cfg,\n                toastSeq = 0, toastSeqClear = null;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                icon: '',\n                closeIcon: '',\n                msg: '',\n                lang: {\n                    \"ok\": \"ok\", \"cancel\": \"cancel\"\n                },\n                displayTime: 3000,\n                animateTime: 250,\n                containerPosition: \"bottom-left\"\n            };\n            this.toastContainer = null;\n            this.queue = [];\n\n            cfg = this.config;\n\n            var\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    opts = null;\n                    that = null;\n                    return true;\n                },\n                /**\n                 * @method ax5toast.getContent\n                 * @param {String} toastId\n                 * @param {Object} opts\n                 * @returns toastDisplay\n                 * @example\n                 * ```js\n                 * ax5toast.getContent('ax5-toast-3-1', opts);\n                 * ```\n                 */\n                getContent = function (toastId, opts) {\n\n                    var\n                        data = {\n                            toastId: toastId,\n                            theme: opts.theme,\n                            icon: opts.icon,\n                            msg: (opts.msg || \"\").replace(/\\n/g, \"<br/>\"),\n                            btns: opts.btns,\n                            closeIcon: opts.closeIcon\n                        };\n\n                    try {\n                        return TOAST.tmpl.get.call(this, \"toastDisplay\", data);\n                    }\n                    finally {\n                        toastId = null;\n                        data = null;\n                    }\n                },\n                /**\n                 * @method ax5toast.open\n                 * @param opts\n                 * @param callBack\n                 * @returns {ax5toast}\n                 */\n                open = function (opts, callBack) {\n                    if (toastSeqClear) clearTimeout(toastSeqClear);\n\n                    var\n                        toastBox,\n                        box = {\n                            width: opts.width\n                        };\n\n                    opts.id = 'ax5-toast-' + self.containerId + '-' + (++toastSeq);\n                    if (jQuery('#' + opts.id).get(0)) return this;\n\n                    if (U.left(cfg.containerPosition, '-') == 'bottom') {\n                        this.toastContainer.append(getContent(opts.id, opts));\n                    }\n                    else {\n                        this.toastContainer.prepend(getContent(opts.id, opts));\n                    }\n\n                    toastBox = jQuery('#' + opts.id);\n                    toastBox.css({width: box.width});\n                    opts.toastBox = toastBox;\n                    this.queue.push(opts);\n\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"open\",\n                        toastId: opts.id\n                    });\n\n                    if (opts.toastType === \"push\") {\n                        // 자동 제거 타이머 시작\n                        setTimeout((function () {\n                            this.close(opts, callBack);\n                        }).bind(this), cfg.displayTime);\n\n                        toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, (function (e) {\n                            btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                        }).bind(this));\n                    }\n                    else if (opts.toastType === \"confirm\") {\n                        toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, (function (e) {\n                            btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                        }).bind(this));\n                    }\n\n                    box = null;\n                },\n                btnOnClick = function (e, opts, toastBox, callBack, target, k) {\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-ax-toast-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        k = target.getAttribute(\"data-ax-toast-btn\");\n\n                        var that = {\n                            key: k, value: (opts.btns) ? opts.btns[k] : k,\n                            toastId: opts.id,\n                            btn_target: target\n                        };\n\n                        if (opts.btns && opts.btns[k].onClick) {\n                            opts.btns[k].onClick.call(that, k);\n                        }\n                        else if (opts.toastType === \"push\") {\n                            if (callBack) callBack.call(that, k);\n                            this.close(opts, callBack);\n                        }\n                        else if (opts.toastType === \"confirm\") {\n                            if (callBack) callBack.call(that, k);\n                            this.close(opts, callBack);\n                        }\n                    }\n\n                    e = null;\n                    opts = null;\n                    toastBox = null;\n                    callBack = null;\n                    target = null;\n                    k = null;\n                };\n\n            /**\n             * Preferences of toast UI\n             * @method ax5toast.set_config\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                // after set_config();\n                self.containerId = ax5.getGuid();\n                var styles = [];\n                if (cfg.zIndex) {\n                    styles.push(\"z-index:\" + cfg.zIndex);\n                }\n                jQuery(document.body).append('<div class=\"ax5-ui-toast-container ' + cfg.containerPosition + '\" data-toast-container=\"' +\n                    '' + self.containerId + '\" style=\"' + styles.join(\";\") + '\"></div>');\n                this.toastContainer = jQuery('[data-toast-container=\"' + self.containerId + '\"]');\n            };\n\n            /**\n             * @method ax5toast.push\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.push = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n                opts.toastType = \"push\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * @method ax5toast.confirm\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.confirm = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n                opts.toastType = \"confirm\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: {label: cfg.lang[\"ok\"], theme: opts.theme}\n                    };\n                }\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * close the toast\n             * @method ax5toast.close\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * my_toast.close();\n             * ```\n             */\n            this.close = function (opts, callBack) {\n                if (typeof opts === \"undefined\") {\n                    opts = U.last(this.queue);\n                }\n\n                var toastBox = opts.toastBox;\n                toastBox.addClass((opts.toastType == \"push\") ? \"removed\" : \"destroy\");\n                this.queue = U.filter(this.queue, function () {\n                    return opts.id != this.id;\n                });\n                setTimeout((function () {\n                    var that = {\n                        toastId: opts.id\n                    };\n\n                    toastBox.remove();\n                    if (callBack) callBack.call(that);\n\n                    that = {\n                        self: this,\n                        state: \"close\",\n                        toastId: opts.id\n                    };\n                    onStateChanged.call(this, opts, that);\n\n                    // 3초후에도 아무 일이 없다면 완전히 제거\n                    if (this.queue.length === 0) {\n                        if (toastSeqClear) clearTimeout(toastSeqClear);\n                        toastSeqClear = setTimeout((function () {\n                            /// console.log(\"try clear seq\");\n                            if (this.queue.length === 0) toastSeq = 0;\n                        }).bind(this), 3000);\n                    }\n\n                    that = null;\n                    opts = null;\n                    callBack = null;\n                    toastBox = null;\n                }).bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.toast_instance = UI.toast_instance || [];\n                UI.toast_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5toast;\n    })());\n    TOAST = ax5.ui.toast;\n})();","// ax5.ui.toast.tmpl\n(function () {\n\n    var TOAST = ax5.ui.toast;\n\n    var toastDisplay = function(columnKeys) {\n        return `\n        <div id=\"{{toastId}}\" data-ax5-ui=\"toast\" class=\"ax5-ui-toast {{theme}}\">\n            {{#icon}}\n            <div class=\"ax-toast-icon\">{{{.}}}</div>\n            {{/icon}}\n            <div class=\"ax-toast-body\">{{{msg}}}</div>\n            {{#btns}}\n            <div class=\"ax-toast-buttons\">\n                <div class=\"ax-button-wrap\">\n                    {{#@each}}\n                    <button type=\"button\" data-ax-toast-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{{@value.label}}}</button>\n                    {{/@each}}\n                </div>\n            </div>\n            {{/btns}}\n            {{^btns}}\n                <a class=\"ax-toast-close\" data-ax-toast-btn=\"ok\">{{{closeIcon}}}</a>\n            {{/btns}}\n            <div style=\"clear:both;\"></div>\n        </div>`;\n    };\n\n    TOAST.tmpl = {\n        \"toastDisplay\": toastDisplay,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(TOAST.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.modal\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MODAL;\n\n    UI.addClass({\n        className: \"modal\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5modal\n         * @alias ax5.ui.modal\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var modal = new ax5.ui.modal({\n         *     iframeLoadingMsg: '<i class=\"fa fa-spinner fa-5x fa-spin\" aria-hidden=\"true\"></i>',\n         *     header: {\n         *         title: \"MODAL TITLE\",\n         *         btns: {\n         *             minimize: {\n         *                 label: '<i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.minimize();\n         *                 }\n         *             },\n         *             maximize: {\n         *                 label: '<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.maximize();\n         *                 }\n         *             },\n         *             close: {\n         *                 label: '<i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.close();\n         *                 }\n         *             }\n         *         }\n         *     }\n         * });\n         *\n         * modal.open({\n         *     width: 800,\n         *     height: 600,\n         *     fullScreen: function(){\n         *         return ($(window).width() < 600);\n         *     },\n         *     iframe: {\n         *         method: \"get\",\n         *         url: \"http://chequer-app:2017/html/login.html\",\n         *         param: \"callback=modalCallback\"\n         *     }\n         * });\n         * ```\n         */\n        var ax5modal = function () {\n            let self = this,\n                cfg,\n                ENM = {\n                    \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n                    \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n                    \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n                },\n                getMousePosition = function (e) {\n                    let mouseObj = e;\n                    if ('changedTouches' in e) {\n                        mouseObj = e.changedTouches[0];\n                    }\n                    return {\n                        clientX: mouseObj.clientX,\n                        clientY: mouseObj.clientY\n                    }\n                };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-modal-' + this.instanceId,\n                position: {\n                    left: \"center\",\n                    top: \"middle\",\n                    margin: 10\n                },\n                minimizePosition: \"bottom-right\",\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                height: 400,\n                closeToEsc: true,\n                disableDrag: false,\n                animateTime: 250\n            };\n            this.activeModal = null;\n            this.watingModal = false;\n            this.$ = {}; // UI inside of the jQuery object store\n\n            cfg = this.config; // extended config copy cfg\n\n            let onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n                    return true;\n                },\n                getContent = function (modalId, opts) {\n                    let data = {\n                        modalId: modalId,\n                        theme: opts.theme,\n                        header: opts.header,\n                        fullScreen: (opts.fullScreen ? \"fullscreen\" : \"\"),\n                        styles: \"\",\n                        iframe: opts.iframe,\n                        iframeLoadingMsg: opts.iframeLoadingMsg\n                    };\n\n                    if (opts.zIndex) {\n                        data.styles += \"z-index:\" + opts.zIndex + \";\";\n                    }\n                    if (opts.absolute) {\n                        data.styles += \"position:absolute;\";\n                    }\n\n                    if (data.iframe && typeof data.iframe.param === \"string\") {\n                        data.iframe.param = ax5.util.param(data.iframe.param);\n                    }\n\n                    return MODAL.tmpl.get.call(this, \"content\", data, {});\n                },\n                open = function (opts, callback) {\n                    let that;\n                    jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                    this.activeModal = jQuery('#' + opts.id);\n\n                    // 파트수집\n                    this.$ = {\n                        \"root\": this.activeModal,\n                        \"header\": this.activeModal.find('[data-modal-els=\"header\"]'),\n                        \"body\": this.activeModal.find('[data-modal-els=\"body\"]')\n                    };\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"] = this.activeModal.find('[data-modal-els=\"iframe-wrap\"]');\n                        this.$[\"iframe\"] = this.activeModal.find('[data-modal-els=\"iframe\"]');\n                        this.$[\"iframe-form\"] = this.activeModal.find('[data-modal-els=\"iframe-form\"]');\n                        this.$[\"iframe-loading\"] = this.activeModal.find('[data-modal-els=\"iframe-loading\"]');\n                    }\n\n                    //- position 정렬\n                    this.align();\n\n                    that = {\n                        self: this,\n                        id: opts.id,\n                        theme: opts.theme,\n                        width: opts.width,\n                        height: opts.height,\n                        state: \"open\",\n                        $: this.$\n                    };\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({height: opts.height});\n                        this.$[\"iframe\"].css({height: opts.height});\n\n                        // iframe content load\n                        this.$[\"iframe-form\"].attr({\"method\": opts.iframe.method});\n                        this.$[\"iframe-form\"].attr({\"target\": opts.id + \"-frame\"});\n                        this.$[\"iframe-form\"].attr({\"action\": opts.iframe.url});\n                        this.$[\"iframe\"].on(\"load\", (function () {\n                            that.state = \"load\";\n                            if (opts.iframeLoadingMsg) {\n                                this.$[\"iframe-loading\"].hide();\n                            }\n                            onStateChanged.call(this, opts, that);\n                        }).bind(this));\n                        if (!opts.iframeLoadingMsg) {\n                            this.$[\"iframe\"].show();\n                        }\n                        this.$[\"iframe-form\"].submit();\n                    }\n\n                    if (callback) callback.call(that);\n\n                    if (!this.watingModal) {\n                        onStateChanged.call(this, opts, that);\n                    }\n\n                    // bind key event\n                    if (opts.closeToEsc) {\n                        jQuery(window).bind(\"keydown.ax-modal\", (function (e) {\n                            onkeyup.call(this, e || window.event);\n                        }).bind(this));\n                    }\n                    jQuery(window).bind(\"resize.ax-modal\", (function (e) {\n                        this.align(null, e || window.event);\n                    }).bind(this));\n\n                    this.activeModal.find(\"[data-modal-header-btn]\").on(cfg.clickEventName, (function (e) {\n                        btnOnClick.call(this, e || window.event, opts);\n                    }).bind(this));\n\n                    this.$.header\n                        .bind(ENM[\"mousedown\"], function (e) {\n                            if (opts.isFullScreen) return false;\n\n                            /// 이벤트 필터링 추가 : 버튼엘리먼트로 부터 발생된 이벤트이면 moveModal 시작하지 않도록 필터링\n                            let isButton = U.findParentNode(e.target, function (_target) {\n                                if (_target.getAttribute(\"data-modal-header-btn\")) {\n                                    return true;\n                                }\n                            });\n\n                            if (!isButton && opts.disableDrag != true) {\n                                self.mousePosition = getMousePosition(e);\n                                moveModal.on.call(self);\n                            }\n                        })\n                        .bind(\"dragstart\", function (e) {\n                            U.stopEvent(e);\n                            return false;\n                        });\n                },\n                btnOnClick = function (e, opts, callback, target, k) {\n                    let that;\n                    if (e.srcElement) e.target = e.srcElement;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-modal-header-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        k = target.getAttribute(\"data-modal-header-btn\");\n\n                        that = {\n                            self: this,\n                            key: k, value: opts.header.btns[k],\n                            dialogId: opts.id,\n                            btnTarget: target\n                        };\n\n                        if (opts.header.btns[k].onClick) {\n                            opts.header.btns[k].onClick.call(that, k);\n                        }\n                    }\n\n                    that = null;\n                    opts = null;\n                    callback = null;\n                    target = null;\n                    k = null;\n                },\n                onkeyup = function (e) {\n                    if (e.keyCode == ax5.info.eventKeys.ESC) {\n                        this.close();\n                    }\n                },\n                alignProcessor = {\n                    \"top-left\": function () {\n                        this.align({left: \"left\", top: \"top\"});\n                    },\n                    \"top-right\": function () {\n                        this.align({left: \"right\", top: \"top\"});\n                    },\n                    \"bottom-left\": function () {\n                        this.align({left: \"left\", top: \"bottom\"});\n                    },\n                    \"bottom-right\": function () {\n                        this.align({left: \"right\", top: \"bottom\"});\n                    },\n                    \"center-middle\": function () {\n                        this.align({left: \"center\", top: \"middle\"});\n                    }\n                },\n                moveModal = {\n                    \"on\": function () {\n                        let modalZIndex = this.activeModal.css(\"z-index\"),\n                            modalOffset = this.activeModal.position(),\n                            modalBox = {\n                                width: this.activeModal.outerWidth(), height: this.activeModal.outerHeight()\n                            },\n                            windowBox = {\n                                width: jQuery(window).width(),\n                                height: jQuery(window).height()\n                            },\n                            getResizerPosition = function (e) {\n                                self.__dx = e.clientX - self.mousePosition.clientX;\n                                self.__dy = e.clientY - self.mousePosition.clientY;\n\n                                var minX = 0;\n                                var maxX = windowBox.width - modalBox.width;\n                                var minY = 0;\n                                var maxY = windowBox.height - modalBox.height;\n\n                                if (minX > modalOffset.left + self.__dx) {\n                                    self.__dx = -modalOffset.left;\n                                }\n                                else if (maxX < modalOffset.left + self.__dx) {\n                                    self.__dx = (maxX) - modalOffset.left;\n                                }\n\n                                if (minY > modalOffset.top + self.__dy) {\n                                    self.__dy = -modalOffset.top;\n                                }\n                                else if (maxY < modalOffset.top + self.__dy) {\n                                    self.__dy = (maxY) - modalOffset.top;\n                                }\n\n                                return {\n                                    left: modalOffset.left + self.__dx + $(document).scrollLeft(),\n                                    top: modalOffset.top + self.__dy + $(document).scrollTop()\n                                };\n                            };\n\n                        self.__dx = 0; // 변화량 X\n                        self.__dy = 0; // 변화량 Y\n\n                        if (!self.resizer) {\n                            // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                            self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                            self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                            self.resizerBg.css({zIndex: modalZIndex});\n                            self.resizer.css({\n                                left: modalOffset.left,\n                                top: modalOffset.top,\n                                width: modalBox.width,\n                                height: modalBox.height,\n                                zIndex: modalZIndex + 1\n                            });\n                            jQuery(document.body)\n                                .append(self.resizerBg)\n                                .append(self.resizer);\n                            self.activeModal.addClass(\"draged\");\n                        }\n\n                        jQuery(document.body)\n                            .bind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id, function (e) {\n                                self.resizer.css(getResizerPosition(e));\n                            })\n                            .bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                                moveModal.off.call(self);\n                            })\n                            .bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                                moveModal.off.call(self);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n                    },\n                    \"off\": function () {\n                        let setModalPosition = function () {\n                            let box = this.activeModal.offset();\n                            box.left += this.__dx - $(document).scrollLeft();\n                            box.top += this.__dy - $(document).scrollTop();\n                            this.activeModal.css(box);\n                        };\n\n                        if (this.resizer) {\n                            this.activeModal.removeClass(\"draged\");\n                            this.resizer.remove();\n                            this.resizer = null;\n                            this.resizerBg.remove();\n                            this.resizerBg = null;\n                            setModalPosition.call(this);\n                            //this.align();\n                        }\n\n                        jQuery(document.body)\n                            .unbind(ENM[\"mousemove\"] + \".ax5modal-\" + cfg.id)\n                            .unbind(ENM[\"mouseup\"] + \".ax5modal-\" + cfg.id)\n                            .unbind(\"mouseleave.ax5modal-\" + cfg.id);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n\n                    }\n                };\n\n            /// private end\n\n            /**\n             * Preferences of modal UI\n             * @method ax5modal.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @param {Boolean} [config.absolute=false]\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * open the modal\n             * @method ax5modal.open\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.open();\n             * ```\n             */\n            this.open = function (opts, callback, tryCount) {\n                if (typeof tryCount === \"undefined\") tryCount = 0;\n                if (!this.activeModal) {\n                    opts = self.modalConfig = jQuery.extend(true, {}, cfg, opts);\n                    open.call(this, opts, callback);\n                    this.watingModal = false;\n                }\n                else if (tryCount < 3) {\n                    // 3번까지 재 시도\n                    this.watingModal = true;\n                    setTimeout((function () {\n                        this.open(opts, callback, tryCount + 1);\n                    }).bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * close the modal\n             * @method ax5modal.close\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.close();\n             * ```\n             */\n            this.close = function (opts) {\n                if (this.activeModal) {\n                    opts = self.modalConfig;\n                    this.activeModal.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax-modal\");\n                    jQuery(window).unbind(\"resize.ax-modal\");\n\n                    setTimeout((function () {\n                        if (this.activeModal) {\n\n                            // 프레임 제거\n                            if (opts.iframe) {\n                                var $iframe = this.$[\"iframe\"]; // iframe jQuery Object\n                                if ($iframe) {\n                                    var iframeObject = $iframe.get(0),\n                                        idoc = (iframeObject.contentDocument) ? iframeObject.contentDocument : iframeObject.contentWindow.document;\n\n                                    try {\n                                        $(idoc.body).children().each(function () {\n                                            $(this).remove();\n                                        });\n                                    } catch (e) {\n\n                                    }\n                                    idoc.innerHTML = \"\";\n                                    $iframe\n                                        .attr('src', 'about:blank')\n                                        .remove();\n\n                                    // force garbarge collection for IE only\n                                    window.CollectGarbage && window.CollectGarbage();\n                                }\n                            }\n\n                            this.activeModal.remove();\n                            this.activeModal = null;\n                        }\n                        // 모달 오픈 대기중이면 닫기 상태 전달 안함.\n                        if (!this.watingModal) {\n                            onStateChanged.call(this, opts, {\n                                self: this,\n                                state: \"close\"\n                            });\n                        }\n                    }).bind(this), cfg.animateTime);\n                }\n\n                this.minimized = false; // hoksi\n\n                return this;\n            };\n\n            /**\n             * @method ax5modal.minimize\n             * @returns {ax5modal}\n             */\n            this.minimize = (function () {\n\n                return function (minimizePosition) {\n\n                    if (this.minimized !== true) {\n\n                        var opts = self.modalConfig;\n                        if (typeof minimizePosition === \"undefined\") minimizePosition = cfg.minimizePosition;\n\n                        this.minimized = true;\n                        this.$.body.hide();\n                        self.modalConfig.originalHeight = opts.height;\n                        self.modalConfig.height = 0;\n                        alignProcessor[minimizePosition].call(this);\n\n                        onStateChanged.call(this, opts, {\n                            self: this,\n                            state: \"minimize\"\n                        });\n                    }\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5modal.maximize\n             * @returns {ax5modal}\n             */\n            this.maximize = function () {\n                var opts = self.modalConfig;\n                if (this.minimized) {\n                    this.minimized = false;\n                    this.$.body.show();\n                    self.modalConfig.height = self.modalConfig.originalHeight;\n                    self.modalConfig.originalHeight = undefined;\n\n                    this.align({left: \"center\", top: \"middle\"});\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"restore\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * setCSS\n             * @method ax5modal.css\n             * @param {Object} css -\n             * @returns {ax5modal}\n             */\n            this.css = function (css) {\n                if (this.activeModal && !self.fullScreen) {\n                    this.activeModal.css(css);\n                    if (css.width) {\n                        self.modalConfig.width = this.activeModal.width();\n                    }\n                    if (css.height) {\n                        self.modalConfig.height = this.activeModal.height();\n                        if (this.$[\"iframe\"]) {\n                            this.$[\"iframe-wrap\"].css({height: self.modalConfig.height});\n                            this.$[\"iframe\"].css({height: self.modalConfig.height});\n                        }\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5modal.setModalConfig\n             * @param _config\n             * @returns {ax5.ui.ax5modal}\n             */\n            this.setModalConfig = function (_config) {\n                self.modalConfig = jQuery.extend({}, self.modalConfig, _config);\n                this.align();\n                return this;\n            };\n\n            /**\n             * @method ax5modal.align\n             * @param position\n             * @param e\n             * @returns {ax5modal}\n             */\n            this.align = (function () {\n\n                return function (position, e) {\n                    if (!this.activeModal) return this;\n\n                    var opts = self.modalConfig,\n                        box = {\n                            width: opts.width,\n                            height: opts.height\n                        };\n\n                    var fullScreen = opts.isFullScreen = (function (_fullScreen) {\n                        if (typeof _fullScreen === \"undefined\") {\n                            return false;\n                        } else if (U.isFunction(_fullScreen)) {\n                            return _fullScreen();\n                        }\n                    })(opts.fullScreen);\n\n                    if (fullScreen) {\n                        if (opts.header) this.$.header.show();\n                        box.width = jQuery(window).width();\n                        box.height = opts.height;\n                        box.left = 0;\n                        box.top = 0;\n                    }\n                    else {\n                        if (opts.header) this.$.header.show();\n                        if (position) {\n                            jQuery.extend(true, opts.position, position);\n                        }\n\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n\n                        //- position 정렬\n                        if (opts.position.left == \"left\") {\n                            box.left = (opts.position.margin || 0);\n                        }\n                        else if (opts.position.left == \"right\") {\n                            // window.innerWidth;\n                            box.left = jQuery(window).width() - box.width - (opts.position.margin || 0);\n                        }\n                        else if (opts.position.left == \"center\") {\n                            box.left = jQuery(window).width() / 2 - box.width / 2;\n                        }\n                        else {\n                            box.left = opts.position.left || 0;\n                        }\n\n                        if (opts.position.top == \"top\") {\n                            box.top = (opts.position.margin || 0);\n                        }\n                        else if (opts.position.top == \"bottom\") {\n                            box.top = jQuery(window).height() - box.height - (opts.position.margin || 0);\n                        }\n                        else if (opts.position.top == \"middle\") {\n                            box.top = jQuery(window).height() / 2 - box.height / 2;\n                        }\n                        else {\n                            box.top = opts.position.top || 0;\n                        }\n                        if (box.left < 0) box.left = 0;\n                        if (box.top < 0) box.top = 0;\n                    }\n\n                    this.activeModal.css(box);\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({height: box.height - opts.headerHeight});\n                        this.$[\"iframe\"].css({height: box.height - opts.headerHeight});\n                    }\n                    return this;\n                };\n            })();\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.modal_instance = UI.modal_instance || [];\n                UI.modal_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n\n            }).apply(this, arguments);\n        };\n        return ax5modal;\n    })());\n\n    MODAL = ax5.ui.modal;\n})();\n","// ax5.ui.modal.tmpl\n(function () {\n    var MODAL = ax5.ui.modal;\n    \n    var content = function () {\n        return ` \n        <div id=\"{{modalId}}\" data-modal-els=\"root\" class=\"ax5modal {{theme}} {{fullscreen}}\" style=\"{{styles}}\">\n            {{#header}}\n            <div class=\"ax-modal-header\" data-modal-els=\"header\">\n                {{{title}}}\n                {{#btns}}\n                    <div class=\"ax-modal-header-addon\">\n                    {{#@each}}\n                    <button tabindex=\"-1\" data-modal-header-btn=\"{{@key}}\" class=\"{{@value.theme}}\">{{{@value.label}}}</button>\n                    {{/@each}}\n                    </div>\n                {{/btns}}\n            </div>\n            {{/header}}\n            <div class=\"ax-modal-body\" data-modal-els=\"body\">\n            {{#iframe}}\n            \n                <div data-modal-els=\"iframe-wrap\" style=\"-webkit-overflow-scrolling: touch; overflow: auto;position: relative;\">\n                    <table data-modal-els=\"iframe-loading\" style=\"width:100%;height:100%;\"><tr><td style=\"text-align: center;vertical-align: middle\">{{{iframeLoadingMsg}}}</td></tr></table>\n                    <iframe name=\"{{modalId}}-frame\" src=\"\" width=\"100%\" height=\"100%\" frameborder=\"0\" data-modal-els=\"iframe\" style=\"position: absolute;left:0;top:0;\"></iframe>\n                </div>\n                <form name=\"{{modalId}}-form\" data-modal-els=\"iframe-form\">\n                <input type=\"hidden\" name=\"modalId\" value=\"{{modalId}}\" />\n                {{#param}}\n                {{#@each}}\n                <input type=\"hidden\" name=\"{{@key}}\" value=\"{{@value}}\" />\n                {{/@each}}\n                {{/param}}\n                </form>\n            {{/iframe}}\n            </div>\n            <div class=\"ax-modal-body-mask\"></div>\n        </div>\n        `;\n    };\n\n    MODAL.tmpl = {\n        \"content\" : content,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MODAL.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","// ax5.ui.calendar\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var CALENDAR;\n\n    UI.addClass({\n        className: \"calendar\",\n        version: \"1.3.66\"\n    }, (function () {\n\n        /**\n         * @class ax5calendar\n         * @classdesc\n         * @author tom@axisj.com\n         * @logs\n         * 2014-06-21 tom : 시작\n         * @example\n         * ```js\n         * ax5.info.months = [\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\"];\n         * ax5.info.weekNames = [\n         *     {label: \"일\"},\n         *     {label: \"월\"},\n         *     {label: \"화\"},\n         *     {label: \"수\"},\n         *     {label: \"목\"},\n         *     {label: \"금\"},\n         *     {label: \"토\"}\n         * ];\n         *\n         * var myCalendar = new ax5.ui.calendar({\n         *     control: {\n         *         left: '≪',\n         *         yearTmpl: '%s',\n         *         monthTmpl: '%s',\n         *         right: '≫',\n         *         yearFirst: true\n         *     },\n         *\n         *     dimensions: {\n         *         itemPadding: 1,\n         *         height: 200\n         *     },\n         *\n         *         target: document.getElementById(\"calendar-target\"),\n         *         displayDate: (new Date()),\n         *         mode: \"day\",\n         *         selectMode: \"day\",\n         *\n         *         marker: (function () {\n         *             var marker = {};\n         *             marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: -1}})] = true;\n         *             marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: 0}})] = true;\n         *             marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: 1}})] = true;\n         *\n\t     *             return marker;\n         *         })(),\n         *         onClick: function () {\n         *             console.log(myCalendar.getSelection());\n         *         },\n         *         onStateChanged: function () {\n         *             console.log(this);\n         *         }\n         *         , multipleSelect: 2\n         *     });\n         * ```\n         */\n        var ax5calendar = function () {\n            var\n                self = this,\n                cfg,\n                selectableCount = 1\n                ;\n\n            this.instanceId = ax5.getGuid();\n            this.target = null;\n            this.selection = [];\n            this.selectionMap = {};\n            this.selectableMap = {};\n            this.markerMap = {};\n            this.printedDay = {\n                start: \"\", end: \"\"\n            };\n            this.config = {\n                clickEventName: \"click\",\n                theme: 'default',\n                startOfWeek: 0,\n                mode: 'day', // day|month|year,\n                dateFormat: 'yyyy-MM-dd',\n                displayDate: (new Date()),\n                animateTime: 100,\n                dimensions: {\n                    controlHeight: '40',\n                    controlButtonWidth: '40',\n                    colHeadHeight: '30',\n                    itemPadding: 2\n                },\n                lang: {\n                    yearHeading: \"Choose the year\",\n                    monthHeading: \"Choose the month\",\n                    yearTmpl: \"%s\",\n                    months: ax5.info.months || ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n                    dayTmpl: \"%s\"\n                },\n                multipleSelect: false,\n                selectMode: 'day',\n                defaultMarkerTheme: 'holiday',\n                defaultPeriodTheme: 'period'\n            };\n\n            cfg = this.config;\n\n            var\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    that = null;\n                },\n                getFrame = function () {\n                    var\n                        data = jQuery.extend(true, {}, cfg, {\n                            controlCSS: {},\n                            controlButtonCSS: {}\n                        });\n\n                    data.controlButtonCSS[\"height\"] = data.controlCSS[\"height\"] = U.cssNumber(cfg.dimensions.controlHeight);\n                    data.controlButtonCSS[\"line-height\"] = data.controlCSS[\"line-height\"] = U.cssNumber(cfg.dimensions.controlHeight);\n                    data.controlButtonCSS[\"width\"] = U.cssNumber(cfg.dimensions.controlHeight);\n\n                    data.controlCSS = U.css(data.controlCSS);\n                    data.controlButtonCSS = U.css(data.controlButtonCSS);\n\n                    try {\n                        return CALENDAR.tmpl.get.call(this, \"frameTmpl\", data);\n                    }\n                    finally {\n                        data = null;\n                    }\n                },\n                setDisplay = function () {\n                    var\n                        myDate = U.date(cfg.displayDate),\n                        yy = \"\",\n                        mm = \"\",\n                        yy1, yy2;\n\n                    if (cfg.control) {\n                        if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                            yy = (cfg.control.yearTmpl) ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n                            mm = (cfg.control.monthTmpl) ? cfg.control.monthTmpl.replace('%s', cfg.lang.months[myDate.getMonth()]) : cfg.lang.months[myDate.getMonth()];\n\n                            this.$[\"control-display\"].html((function () {\n                                if (cfg.control.yearFirst) {\n                                    return '<span data-calendar-display=\"year\">' + yy + '</span>' +\n                                        '<span data-calendar-display=\"month\">' + mm + '</span>';\n                                }\n                                else {\n                                    return '<span data-calendar-display=\"month\">' + mm + '</span>' +\n                                        '<span data-calendar-display=\"year\">' + yy + '</span>';\n                                }\n\n                            })());\n                        }\n                        else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                            yy = (cfg.control.yearTmpl) ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n                            this.$[\"control-display\"].html('<span data-calendar-display=\"year\">' + yy + '</span>');\n                        }\n                        else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                            yy1 = (cfg.control.yearTmpl) ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear() - 10) : myDate.getFullYear() - 10;\n                            yy2 = (cfg.control.yearTmpl) ? cfg.control.yearTmpl.replace('%s', Number(myDate.getFullYear()) + 9) : Number(myDate.getFullYear()) + 9;\n                            this.$[\"control-display\"].html(yy1 + ' ~ ' + yy2);\n                        }\n\n                        this.$[\"control-display\"].find('[data-calendar-display]').on(cfg.clickEventName, (function (e) {\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-calendar-display\")) {\n                                    return true;\n                                }\n                            }), mode;\n                            if (target) {\n                                mode = target.getAttribute(\"data-calendar-display\");\n                                this.changeMode(mode);\n                            }\n                            target = null;\n                            mode = null;\n                        }).bind(this));\n                    }\n\n                    myDate = null;\n                    yy = null;\n                    mm = null;\n                    yy1 = null;\n                    yy2 = null;\n                    return this;\n                },\n                printDay = function (nowDate) {\n                    var\n                        dotDate = U.date(nowDate),\n                        monthStratDate = new Date(dotDate.getFullYear(), dotDate.getMonth(), 1, 12),\n                        _today = cfg.displayDate,\n                        tableStartDate = (function () {\n                            var day = monthStratDate.getDay();\n                            if (day == 0) day = 7;\n                            day -= cfg.startOfWeek;\n\n                            try {\n                                return U.date(monthStratDate, {add: {d: -day}});\n                            }\n                            finally {\n                                day = null;\n                            }\n                        })(),\n                        loopDate,\n                        thisMonth = dotDate.getMonth(),\n                        itemStyles = {},\n                        i,\n                        k, _k,\n                        frameWidth = this.$[\"body\"].width(),\n                        frameHeight = Math.floor(frameWidth * (6 / 7)), // 1week = 7days, 1month = 6weeks\n                        data,\n                        tmpl;\n\n                    if (cfg.dimensions.height) {\n                        frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                    }\n\n                    itemStyles['height'] = Math.floor(frameHeight / 6) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                    itemStyles['line-height'] = itemStyles['height'];\n                    itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                    data = {\n                        weekNames: [].concat(ax5.info.weekNames),\n                        list: []\n                    };\n\n                    if(cfg.startOfWeek) {\n                        data.weekNames = data.weekNames.concat(data.weekNames.slice(0, cfg.startOfWeek)).splice(cfg.startOfWeek);\n                    }\n\n                    data.weekNames.forEach(function (n) {\n                        n.colHeadHeight = U.cssNumber(cfg.dimensions.colHeadHeight);\n                    });\n\n                    loopDate = tableStartDate;\n                    i = 0;\n                    while (i < 6) {\n                        k = 0;\n                        while (k < 7) {\n                            _k = (7 + (k - cfg.startOfWeek)) % 7;\n                            var\n                                thisDate = '' + U.date(loopDate, {\"return\": cfg.dateFormat}),\n                                _date = {\n                                    'row': i,\n                                    'col': k,\n                                    isStartOfWeek: (k == 0),\n                                    thisDate: '' + thisDate,\n                                    thisDataLabel: cfg.lang.dayTmpl.replace('%s', loopDate.getDate()),\n                                    itemStyles: U.css(itemStyles),\n                                    addClass: (function () {\n\n                                        var classNames = \"\";\n\n                                        if (cfg.selectable) {\n                                            if (self.selectableMap[thisDate]) {\n                                                classNames += ( loopDate.getMonth() == thisMonth ) ? \" live\" : \"\";\n                                            }\n                                            else {\n                                                classNames += \" disable\";\n                                            }\n                                        }\n                                        else {\n                                            if(loopDate.getMonth() == thisMonth){\n                                                if(thisDate == U.date(_today, {\"return\": \"yyyyMMdd\"})){\n                                                    classNames += \" focus\";\n                                                }else{\n                                                    classNames += \" live\";\n                                                }\n\n                                                if(loopDate.getDay() == 0){\n                                                    classNames += \" sunday\";\n                                                }\n                                                if(loopDate.getDay() == 6){\n                                                    classNames += \" saturday\";\n                                                }\n                                            }\n                                        }\n\n                                        return classNames;\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return (self.markerMap[thisDate]) ? self.markerMap[thisDate].theme || cfg.defaultMarkerTheme : '';\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return (self.selectionMap[thisDate]) ? \"selected-day\" : '';\n                                    })()\n                                };\n                            data.list.push(_date);\n\n                            k++;\n                            loopDate = U.date(loopDate, {add: {d: 1}});\n\n                            thisDate = null;\n                            _date = null;\n                        }\n                        i++;\n                    }\n                    tmpl = CALENDAR.tmpl.get.call(this, \"dayTmpl\", data);\n                    this.$[\"body\"].html(tmpl);\n                    this.$[\"body\"].find('[data-calendar-item-date]').on(cfg.clickEventName, function (e) {\n                        e = e || window.event;\n                        onclick.call(self, e, 'date');\n                        U.stopEvent(e);\n                    });\n\n                    this.printedDay = {\n                        start: tableStartDate, end: loopDate\n                    };\n\n                    onStateChanged.call(this, null, {\n                        self: this,\n                        action: \"printDay\",\n                        printedDay: this.printedDay\n                    });\n                    setDisplay.call(this);\n\n                    dotDate = null;\n                    monthStratDate = null;\n                    _today = null;\n                    tableStartDate = null;\n                    loopDate = null;\n                    thisMonth = null;\n                    itemStyles = null;\n                    i = null;\n                    k = null;\n                    frameWidth = null;\n                    frameHeight = null;\n                    data = null;\n                    tmpl = null;\n                },\n                printMonth = function (nowDate) {\n                    var\n                        dotDate = U.date(nowDate),\n                        nMonth = dotDate.getMonth(),\n                        itemStyles = {},\n                        i,\n                        k,\n                        m,\n                        tableStartMonth,\n                        frameWidth = this.$[\"body\"].width(),\n                        frameHeight = Math.floor(frameWidth * (6 / 7)),\n                        data,\n                        tmpl;\n\n                    if (cfg.dimensions.height) {\n                        frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                    }\n\n                    itemStyles['height'] = Math.floor(frameHeight / 4) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                    itemStyles['line-height'] = itemStyles['height'];\n                    itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                    data = {\n                        colHeadHeight: U.cssNumber(cfg.dimensions.colHeadHeight),\n                        colHeadLabel: cfg.lang.monthHeading,\n                        list: []\n                    };\n\n                    tableStartMonth = 0;\n                    m = 0;\n                    i = 0;\n                    while (i < 4) {\n                        k = 0;\n                        while (k < 3) {\n                            var\n                                _month = {\n                                    row: i,\n                                    col: k,\n                                    isStartOfRow: (k == 0),\n                                    thisMonth: dotDate.getFullYear() + '-' + U.setDigit(m + 1, 2) + '-' + U.setDigit(dotDate.getDate(), 2),\n                                    thisMonthLabel: cfg.lang.months[m],\n                                    itemStyles: U.css(itemStyles),\n                                    addClass: (function () {\n                                        if (cfg.selectable) {\n                                            return (self.selectableMap[m]) ? 'live' : 'disable';\n                                        }\n                                        else {\n                                            return 'live';\n                                        }\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return ( m == nMonth ) ? \"focus\" : \"\";\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return (self.markerMap[m]) ? self.markerMap[m].theme || cfg.defaultMarkerTheme : '';\n                                    })()\n                                };\n                            data.list.push(_month);\n                            m++;\n                            k++;\n                            _month = null;\n                        }\n                        i++;\n                    }\n                    tmpl = CALENDAR.tmpl.get.call(this, \"monthTmpl\", data);\n                    this.$[\"body\"].html(tmpl);\n                    this.$[\"body\"].find('[data-calendar-item-month]').on(cfg.clickEventName, function (e) {\n                        e = e || window.event;\n                        onclick.call(self, e, 'month');\n                        U.stopEvent(e);\n                    });\n\n                    this.printedDay = {\n                        start: dotDate.getFullYear() + '-' + U.setDigit(tableStartMonth + 1, 2),\n                        end: dotDate.getFullYear() + '-' + U.setDigit(m, 2)\n                    };\n\n                    onStateChanged.call(this, null, {\n                        self: this,\n                        action: \"printMonth\",\n                        printedDay: this.printedDay\n                    });\n                    setDisplay.call(this);\n\n                    dotDate = null;\n                    nMonth = null;\n                    itemStyles = null;\n                    i = null;\n                    k = null;\n                    m = null;\n                    tableStartMonth = null;\n                    frameWidth = null;\n                    frameHeight = null;\n                    data = null;\n                    tmpl = null;\n                },\n                printYear = function (nowDate) {\n                    var\n                        dotDate = U.date(nowDate),\n                        nYear = dotDate.getFullYear(),\n                        itemStyles = {},\n                        i,\n                        k,\n                        y,\n                        tableStartYear,\n                        frameWidth = this.$[\"body\"].width(),\n                        frameHeight = Math.floor(frameWidth * (6 / 7)),\n                        data,\n                        tmpl;\n\n                    if (cfg.dimensions.height) {\n                        frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                    }\n\n                    itemStyles['height'] = Math.floor(frameHeight / 5) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                    itemStyles['line-height'] = itemStyles['height'];\n                    itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                    data = {\n                        colHeadHeight: U.cssNumber(cfg.dimensions.colHeadHeight),\n                        colHeadLabel: cfg.lang.yearHeading,\n                        list: []\n                    };\n\n                    tableStartYear = nYear - 10;\n                    y = nYear - 10;\n                    i = 0;\n                    while (i < 5) {\n                        k = 0;\n                        while (k < 4) {\n                            var\n                                _year = {\n                                    row: i,\n                                    col: k,\n                                    isStartOfRow: (k == 0),\n                                    thisYear: y + '-' + U.setDigit(dotDate.getMonth() + 1, 2) + '-' + U.setDigit(dotDate.getDate(), 2),\n                                    thisYearLabel: cfg.lang.yearTmpl.replace('%s', (y)),\n                                    itemStyles: U.css(itemStyles),\n                                    addClass: (function () {\n                                        if (cfg.selectable) {\n                                            return (self.selectableMap[y]) ? 'live' : 'disable';\n                                        }\n                                        else {\n                                            return 'live';\n                                        }\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return ( y == nYear ) ? \"focus\" : \"\";\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return (self.selectableMap[y]) ? self.selectableMap[y].theme || cfg.defaultMarkerTheme : '';\n                                    })()\n                                };\n                            data.list.push(_year);\n                            y++;\n                            k++;\n                            _year = null;\n                        }\n                        i++;\n                    }\n                    tmpl = CALENDAR.tmpl.get.call(this, \"yearTmpl\", data);\n                    this.$[\"body\"].html(tmpl);\n                    this.$[\"body\"].find('[data-calendar-item-year]').on(cfg.clickEventName, function (e) {\n                        e = (e || window.event);\n                        onclick.call(this, e, 'year');\n                        U.stopEvent(e);\n                    });\n\n                    this.printedDay = {\n                        start: tableStartYear, end: y - 1\n                    };\n\n                    onStateChanged.call(this, null, {\n                        self: this,\n                        action: \"printYear\",\n                        printedDay: this.printedDay\n                    });\n                    setDisplay.call(this);\n\n                    dotDate = null;\n                    nYear = null;\n                    itemStyles = null;\n                    i = null;\n                    k = null;\n                    y = null;\n                    tableStartYear = null;\n                    frameWidth = null;\n                    frameHeight = null;\n                    data = null;\n                    tmpl = null;\n                },\n                onclick = function (e, mode, target, value) {\n                    var\n                        removed,\n                        dt,\n                        selectable;\n\n                    mode = mode || \"date\";\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-calendar-item-\" + mode)) {\n                            return true;\n                        }\n                    });\n                    if (target) {\n                        value = target.getAttribute(\"data-calendar-item-\" + mode);\n\n                        dt = U.date(value, {\"return\": cfg.dateFormat});\n                        selectable = true;\n                        selectableCount = (cfg.multipleSelect) ? (U.isNumber(cfg.multipleSelect)) ? cfg.multipleSelect : 2 : 1;\n\n                        if (cfg.selectable) {\n                            if (!self.selectableMap[dt]) selectable = false;\n                        }\n\n                        if (mode == \"date\") {\n                            if (selectable) {\n\n                                if (self.selection.length >= selectableCount) {\n                                    removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                    removed.forEach(function (d) {\n                                        self.$[\"body\"].find('[data-calendar-item-date=\"' + U.date(d, {\"return\": cfg.dateFormat}) + '\"]').removeClass(\"selected-day\");\n                                    });\n                                }\n\n                                jQuery(target).addClass(\"selected-day\");\n                                self.selection.push(value);\n\n                                if (self.onClick) {\n                                    self.onClick.call({\n                                        self: this, date: value, target: this.target, dateElement: target\n                                    });\n                                }\n                            }\n                        }\n                        else if (mode == \"month\") {\n                            if (cfg.selectMode == \"month\") {\n                                if (selectable) {\n                                    if (self.selection.length >= selectableCount) {\n                                        removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                        removed.forEach(function (d) {\n                                            self.$[\"body\"].find('[data-calendar-item-month=\"' + U.date(d, {\"return\": 'yyyy-MM-dd'}) + '\"]').removeClass(\"selected-month\");\n                                        });\n                                    }\n\n                                    jQuery(target).addClass(\"selected-month\");\n                                    self.selection.push(value);\n\n                                    if (self.onClick) {\n                                        self.onClick.call({\n                                            self: this, date: value, target: this.target, dateElement: target\n                                        });\n                                    }\n                                }\n                            }\n                            else {\n                                self.changeMode(\"day\", value);\n                            }\n                        }\n                        else if (mode == \"year\") {\n                            if (cfg.selectMode == \"year\") {\n                                if (selectable) {\n                                    if (self.selection.length >= selectableCount) {\n                                        removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                        removed.forEach(function (d) {\n                                            self.$[\"body\"].find('[data-calendar-item-year=\"' + U.date(d, {\"return\": 'yyyy-MM-dd'}) + '\"]').removeClass(\"selected-year\");\n                                        });\n                                    }\n\n                                    jQuery(target).addClass(\"selected-year\");\n                                    self.selection.push(value);\n\n                                    if (self.onClick) {\n                                        self.onClick.call({\n                                            self: this, date: value, target: this.target, dateElement: target\n                                        });\n                                    }\n                                }\n                            }\n                            else {\n                                self.changeMode(\"month\", value);\n                            }\n                        }\n                    }\n\n                    mode = null;\n                    target = null;\n                    value = null;\n                    removed = null;\n                    dt = null;\n                    selectable = null;\n                },\n                move = function (e, target, value) {\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-calendar-move\")) {\n                            return true;\n                        }\n                    });\n                    if (target) {\n                        value = target.getAttribute(\"data-calendar-move\");\n                        if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                            if (value == \"left\") {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {m: -1}});\n                            }\n                            else {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {m: 1}});\n                            }\n                            printDay.call(this, cfg.displayDate);\n                        }\n                        else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                            if (value == \"left\") {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {y: -1}});\n                            }\n                            else {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {y: 1}});\n                            }\n                            printMonth.call(this, cfg.displayDate);\n                        }\n                        else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                            if (value == \"left\") {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {y: -10}});\n                            }\n                            else {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {y: 10}});\n                            }\n                            printYear.call(this, cfg.displayDate);\n                        }\n                    }\n\n                    target = null;\n                    value = null;\n                },\n                applyMarkerMap = function () {\n                    setTimeout((function () {\n                        if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                            for (var k in this.markerMap) {\n                                this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.markerMap[k].theme || cfg.defaultMarkerTheme);\n                            }\n                        }\n                    }).bind(this));\n                },\n                applySelectionMap = function () {\n                    setTimeout((function () {\n                        for (var k in this.selectionMap) {\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(\"selected-day\");\n                        }\n                    }).bind(this));\n                },\n                applyPeriodMap = function () {\n                    setTimeout((function () {\n                        if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                            for (var k in this.periodMap) {\n                                if (this.periodMap[k].label) {\n                                    this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").html(this.periodMap[k].label);\n                                }\n                                this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.periodMap[k].theme);\n                            }\n                        }\n                    }).bind(this));\n                },\n                clearPeriodMap = function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        for (var k in this.periodMap) {\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").empty();\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').removeClass(this.periodMap[k].theme);\n                        }\n                    }\n                };\n\n            /**\n             * Preferences of calendar UI\n             * @method ax5calendar.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Element|nodelist} config.target\n             * @param {String} [config.mode=day|month|year]\n             * @param {Function} [config.onClick}\n             * @returns {ax5calendar}\n             * @example\n             * ```js\n             * var myCalendar = new ax5.ui.calendar();\n             * myCalendar.setConfig({\n             *  target: $(\"#target\"),\n             *  mode: \"day\"\n             * });\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                // after setConfig();\n\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5calendar\", \"401\", \"setConfig\"));\n                }\n                this.target = jQuery(cfg.target);\n\n                cfg.displayDate = U.date(cfg.displayDate);\n                this.target.html(getFrame.call(this));\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.target.find('[data-calendar-els=\"root\"]'),\n                    \"control\": this.target.find('[data-calendar-els=\"control\"]'),\n                    \"control-display\": this.target.find('[data-calendar-els=\"control-display\"]'),\n                    \"body\": this.target.find('[data-calendar-els=\"body\"]')\n                };\n\n                if (cfg.control) {\n                    this.$[\"root\"].on(cfg.clickEventName, '[data-calendar-move]', (function (e) {\n                        move.call(this, e || window.event);\n                    }).bind(this));\n                }\n\n                // collect selectableMap\n                if (cfg.selection) {\n                    this.setSelection(cfg.selection, false);\n                }\n                // collect selectableMap\n                if (cfg.selectable) {\n                    this.setSelectable(cfg.selectable, false);\n                }\n                // collect markerMap\n                if (cfg.marker) {\n                    this.setMarker(cfg.marker, false);\n                }\n\n                setTimeout((function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        printDay.call(this, cfg.displayDate);\n                    }\n                    else if (cfg.mode === \"month\" || cfg.mode === \"m\") {\n                        printMonth.call(this, cfg.displayDate);\n                    }\n                    else if (cfg.mode === \"year\" || cfg.mode === \"y\") {\n                        printYear.call(this, cfg.displayDate);\n                    }\n                }).bind(this));\n            };\n\n            /**\n             * @method ax5calendar.changeMode\n             * @param {String} mode\n             * @param {String} changeDate\n             * @returns {ax5calendar}\n             */\n            this.changeMode = function (mode, changeDate) {\n                if (typeof changeDate != \"undefined\") cfg.displayDate = changeDate;\n                if (mode) cfg.mode = mode;\n\n                this.$[\"body\"].removeClass(\"fadein\").addClass(\"fadeout\");\n                setTimeout((function () {\n                    if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                        printDay.call(this, cfg.displayDate);\n                    }\n                    else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                        printMonth.call(this, cfg.displayDate);\n                    }\n                    else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                        printYear.call(this, cfg.displayDate);\n                    }\n                    this.$[\"body\"].removeClass(\"fadeout\").addClass(\"fadein\");\n                }).bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            /**\n             * @method ax5calendar.setSelection\n             * @param {Array} selection\n             * @returns {ax5calendar}\n             * @example\n             * ```\n             *\n             * ```\n             */\n            this.setSelection = (function () {\n                self.selectionMap = {};\n                var processor = {\n                    'arr': function (v, map, count) {\n                        map = {};\n                        if (!U.isArray(v)) return map;\n                        self.selection = v = v.splice(0, count);\n                        v.forEach(function (n) {\n                            if (U.isDate(n))\n                                n = U.date(n, {'return': cfg.dateFormat});\n                            map[n] = true;\n                        });\n                        return map;\n                    }\n                };\n\n                return function (selection, isPrint) {\n                    var\n                        result = {}\n                        ;\n                    selectableCount = (cfg.multipleSelect) ? (U.isNumber(cfg.multipleSelect)) ? cfg.multipleSelect : 2 : 1;\n\n                    if (cfg.selection = selection) {\n                        if (U.isArray(selection)) {\n                            result = processor.arr(selection, {}, selectableCount);\n                        } else {\n                            return this;\n                        }\n                    }\n\n                    this.selectionMap = jQuery.extend({}, result);\n                    // 변경내용 적용하여 출력\n\n                    if (isPrint !== false) applySelectionMap.call(this);\n\n                    result = null;\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5calendar.getSelection\n             */\n            this.getSelection = function () {\n                return this.selection;\n            };\n\n            /**\n             * @method ax5calendar.setSelectable\n             */\n            this.setSelectable = (function () {\n                self.selectableMap = {};\n                var processor = {\n                    'arr': function (v, map) {\n                        map = {};\n                        if (!U.isArray(v)) return map;\n                        v.forEach(function (n) {\n                            if (U.isDate(n))\n                                n = U.date(n, {'return': cfg.dateFormat});\n                            map[n] = true;\n                        });\n                        return map;\n                    },\n                    'obj': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (v.range) return map;\n                        for (var k in v) {\n                            map[k] = v[k];\n                        }\n                        return map;\n                    },\n                    'range': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    map[U.date(d, {\"return\": cfg.dateFormat})] = true;\n                                }\n                            }\n                            else {\n                                for (var i = n.from; i <= n.to; i++) {\n                                    map[i] = true;\n                                }\n                            }\n                        });\n\n                        return map;\n                    }\n                };\n\n                return function (selectable, isPrint) {\n\n                    var\n                        key,\n                        result = {}\n                        ;\n\n                    if (cfg.selectable = selectable) {\n                        if (U.isArray(selectable)) {\n                            result = processor.arr(selectable);\n                        }\n                        else {\n                            for (key in processor) {\n                                if (selectable[key]) {\n                                    result = processor[key](selectable);\n                                    break;\n                                }\n                            }\n                            if (Object.keys(result).length === 0) {\n                                result = processor.obj(selectable);\n                            }\n                        }\n                    }\n\n                    this.selectableMap = result;\n                    // 변경내용 적용하여 출력\n                    if (isPrint !== false) this.changeMode();\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5calendar.setMarker\n             */\n            this.setMarker = (function () {\n                self.markerMap = {};\n                var processor = {\n                    'obj': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (v.range) return map;\n                        for (var k in v) {\n                            map[k] = v[k];\n                        }\n\n                        v = null;\n                        return map;\n                    },\n                    'range': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    map[U.date(d, {\"return\": cfg.dateFormat})] = {theme: n.theme, label: n.label};\n                                }\n                            }\n                            else {\n                                for (var i = n.from; i <= n.to; i++) {\n                                    map[i] = {theme: n.theme, label: n.label};\n                                }\n                            }\n                        });\n\n                        v = null;\n                        return map;\n                    }\n                };\n\n                return function (marker, isApply) {\n\n                    var\n                        key,\n                        result = {}\n                        ;\n\n                    if (cfg.marker = marker) {\n                        for (key in processor) {\n                            if (marker[key]) {\n                                result = processor[key](marker);\n                                break;\n                            }\n                        }\n                        if (Object.keys(result).length === 0) {\n                            result = processor.obj(marker);\n                        }\n                    }\n\n                    this.markerMap = result;\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) applyMarkerMap.call(this);\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5calendar.setPeriod\n             */\n            this.setPeriod = (function () {\n                self.periodMap = {};\n\n                var processor = {\n                    'range': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = new Date(U.date(n.from)); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    if (d.getTime() == U.date(n.from).getTime()) {\n                                        map[U.date(d, {\"return\": cfg.dateFormat})] = {theme: n.theme || cfg.defaultPeriodTheme, label: n.fromLabel};\n                                    } else if (d.getTime() == U.date(n.to).getTime()) {\n                                        map[U.date(d, {\"return\": cfg.dateFormat})] = {theme: n.theme || cfg.defaultPeriodTheme, label: n.toLabel};\n                                    } else {\n                                        map[U.date(d, {\"return\": cfg.dateFormat})] = {theme: n.theme || cfg.defaultPeriodTheme};\n                                    }\n                                }\n                            }\n                        });\n\n                        v = null;\n                        return map;\n                    }\n                };\n\n                return function (period, isApply) {\n\n                    var\n                        key,\n                        result = {}\n                        ;\n\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) {\n                        clearPeriodMap.call(this);\n                    }\n\n                    if (cfg.period = period) {\n                        result = processor.range(period);\n                    }\n\n                    this.periodMap = result;\n\n                    //console.log(this.periodMap);\n\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) {\n                        applyPeriodMap.call(this);\n                    }\n                    return this;\n                };\n            })();\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.calendar_instance = UI.calendar_instance || [];\n                UI.calendar_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5calendar;\n    })());\n    CALENDAR = ax5.ui.calendar;\n})();","// ax5.ui.calendar.tmpl\n(function () {\n\n    var CALENDAR = ax5.ui.calendar;\n\n    var frameTmpl = function (columnKeys) {\n        return `\n                <div class=\"ax5-ui-calendar {{theme}}\" data-calendar-els=\"root\" onselectstart=\"return false;\">\n                    {{#control}}\n                    <div class=\"calendar-control\" data-calendar-els=\"control\" style=\"{{controlCSS}}\">\n                        <a class=\"date-move-left\" data-calendar-move=\"left\" style=\"{{controlButtonCSS}}\">{{{left}}}</a>\n                        <div class=\"date-display\" data-calendar-els=\"control-display\" style=\"{{controlCSS}}\"></div>\n                        <a class=\"date-move-right\" data-calendar-move=\"right\" style=\"{{controlButtonCSS}}\">{{{right}}}</a>\n                    </div>\n                    {{/control}}\n                    <div class=\"calendar-body\" data-calendar-els=\"body\"></div>\n                </div>\n                `;\n    };\n    var dayTmpl = function (columnKeys) {\n        return `\n                <table data-calendar-table=\"day\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\n                    <thead>\n                        <tr>\n                        {{#weekNames}}\n                            <td class=\"calendar-col-{{col}}\" style=\"height: {{colHeadHeight}}\">\n                            {{label}}\n                            </td>\n                        {{/weekNames}}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {{#list}}    \n                            {{#isStartOfWeek}}\n                            {{^@first}}\n                        </tr>\n                        <tr>\n                            {{/@first}}\n                            {{/isStartOfWeek}}\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\n                                <a class=\"calendar-item-day {{addClass}}\" data-calendar-item-date=\"{{thisDate}}\">\n                                    <span class=\"addon addon-header\"></span>\n                                    {{thisDataLabel}}\n                                    <span class=\"addon addon-footer\"></span>\n                                </a>\n                            </td>\n                            {{/list}}\n                        </tr>\n                    </tbody>\n                </table>\n                `;\n    };\n    var monthTmpl = function (columnKeys) {\n        return `\n                <table data-calendar-table=\"month\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\n                    <thead>\n                        <tr>\n                            <td class=\"calendar-col-0\" colspan=\"3\" style=\"height: {{colHeadHeight}}\">\n                            {{colHeadLabel}}\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {{#list}}    \n                            {{#isStartOfRow}}\n                            {{^@first}}\n                        </tr>\n                        <tr>\n                            {{/@first}}\n                            {{/isStartOfRow}}\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\n                                <a class=\"calendar-item-month {{addClass}}\" data-calendar-item-month=\"{{thisMonth}}\">\n                                    <span class=\"addon\"></span>\n                                    {{thisMonthLabel}}\n                                    <span class=\"lunar\"></span>\n                                </a>\n                            </td>\n                            {{/list}}\n                        </tr>\n                    </tbody>\n                </table>\n                `;\n    };\n    var yearTmpl = function (columnKeys) {\n        return `\n                <table data-calendar-table=\"year\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\n                    <thead>\n                        <tr>\n                            <td class=\"calendar-col-0\" colspan=\"4\" style=\"height: {{colHeadHeight}}\">\n                            {{colHeadLabel}}\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {{#list}}    \n                            {{#isStartOfRow}}\n                            {{^@first}}\n                        </tr>\n                        <tr>\n                            {{/@first}}\n                            {{/isStartOfRow}}\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\n                                <a class=\"calendar-item-year {{addClass}}\" data-calendar-item-year=\"{{thisYear}}\">\n                                    <span class=\"addon\"></span>\n                                    {{thisYearLabel}}\n                                    <span class=\"lunar\"></span>\n                                </a>\n                            </td>\n                            {{/list}}\n                        </tr>\n                    </tbody>\n                </table>\n                `;\n    };\n\n    CALENDAR.tmpl = {\n        \"frameTmpl\": frameTmpl,\n        \"dayTmpl\": dayTmpl,\n        \"monthTmpl\": monthTmpl,\n        \"yearTmpl\": yearTmpl,\n        \n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(CALENDAR.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.picker\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var PICKER;\n\n    UI.addClass({\n        className: \"picker\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5picker\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * ax5.def.picker.date_leftArrow = '<i class=\"fa fa-chevron-left\"></i>';\n         * ax5.def.picker.date_yearTmpl = '%s';\n         * ax5.def.picker.date_monthTmpl = '%s';\n         * def.picker.date_rightArrow = '<i class=\"fa fa-chevron-right\"></i>';\n         *\n         * var picker = new ax5.ui.picker({\n         *     onStateChanged: function () {\n         *         console.log(this);\n         *     }\n         * });\n         *\n         * picker.bind({\n         *     target: $('[data-picker-date]'),\n         *     direction: \"auto\",\n         *     content: {\n         *         type: 'date',\n         *         formatter: {\n         *             pattern: 'date'\n         *         }\n         *     }\n         * });\n         * ```\n         */\n        var ax5picker = function () {\n            let self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                title: '',\n                lang: {\n                    \"ok\": \"ok\",\n                    \"cancel\": \"cancel\"\n                },\n                animateTime: 100,\n                calendar: {\n                    multipleSelect: false,\n                    control: {\n                        left: ax5.def.picker.date_leftArrow || '&#x02190',\n                        yearTmpl: ax5.def.picker.date_yearTmpl || '%s',\n                        monthTmpl: ax5.def.picker.date_monthTmpl || '%s',\n                        right: ax5.def.picker.date_rightArrow || '&#x02192',\n                        yearFirst: true\n                    }\n                }\n            };\n            this.queue = [];\n            this.activePicker = null;\n            this.activePickerQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n\n            cfg = this.config;\n\n            let onStateChanged = function (item, that) {\n                    if (item && item.onStateChanged) {\n                        item.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n                    return true;\n                },\n                bindPickerTarget = (function () {\n\n                    var pickerEvent = {\n                        'focus': function (queIdx, e) {\n                            this.open(queIdx);\n                        },\n                        'click': function (queIdx, e) {\n                            this.open(queIdx);\n                        }\n                    };\n\n                    var pickerType = {\n                        '@fn': function (queIdx, _input) {\n                            var item = this.queue[queIdx],\n                                inputLength = _input.length,\n                                config = {\n                                    inputLength: inputLength || 1\n                                };\n\n                            if (inputLength > 1) {\n                                config.btns = {\n                                    ok: {label: cfg.lang[\"ok\"], theme: cfg.theme}\n                                };\n                            }\n\n                            this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                            config = null;\n                            inputLength = null;\n                        },\n                        'date': function (queIdx, _input) {\n                            // 1. 이벤트 바인딩\n                            // 2. ui 준비\n\n                            var item = this.queue[queIdx],\n                                contentWidth = (item.content) ? item.content.width || 270 : 270,\n                                contentMargin = (item.content) ? item.content.margin || 5 : 5,\n                                inputLength = _input.length,\n                                config = {\n                                    contentWidth: (contentWidth * inputLength) + ((inputLength - 1) * contentMargin),\n                                    content: {width: contentWidth, margin: contentMargin},\n                                    inputLength: inputLength || 1\n                                };\n\n                            if (inputLength > 1 && !item.btns) {\n                                config.btns = {\n                                    ok: {label: cfg.lang[\"ok\"], theme: cfg.theme}\n                                };\n                            }\n\n                            this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                            contentWidth = null;\n                            contentMargin = null;\n                            config = null;\n                            inputLength = null;\n                        },\n                        'secure-num': function (queIdx, _input) {\n                            var item = this.queue[queIdx],\n                                inputLength = _input.length,\n                                config = {\n                                    inputLength: inputLength || 1\n                                };\n\n                            this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                            config = null;\n                            inputLength = null;\n                        },\n                        'keyboard': function (queIdx, _input) {\n                            var item = this.queue[queIdx],\n                                inputLength = _input.length,\n                                config = {\n                                    inputLength: inputLength || 1\n                                };\n\n                            this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                            config = null;\n                            inputLength = null;\n                        },\n                        'numpad': function (queIdx, _input) {\n                            var item = this.queue[queIdx],\n                                inputLength = _input.length,\n                                config = {\n                                    inputLength: inputLength || 1\n                                };\n\n                            this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                            config = null;\n                            inputLength = null;\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx],\n                            input;\n\n                        if (!item.content) {\n                            console.log(ax5.info.getError(\"ax5picker\", \"501\", \"bind\"));\n                            return this;\n                        }\n\n                        input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : item.$target.find('input[type]');\n\n                        // 함수타입\n                        if (U.isFunction(item.content)) {\n                            pickerType[\"@fn\"].call(this, queIdx, input);\n                        }\n                        else {\n                            for (var key in pickerType) {\n                                if (item.content.type == key) {\n                                    pickerType[key].call(this, queIdx, input);\n                                    break;\n                                }\n                            }\n                        }\n\n                        input\n                            .unbind('focus.ax5picker')\n                            .unbind('click.ax5picker')\n                            .bind('focus.ax5picker', pickerEvent.focus.bind(this, queIdx))\n                            .bind('click.ax5picker', pickerEvent.click.bind(this, queIdx));\n\n                        item.$target\n                            .find('.input-group-addon')\n                            .unbind('click.ax5picker')\n                            .bind('click.ax5picker', pickerEvent.click.bind(this, queIdx));\n\n                        if (item.content.formatter && ax5.ui.formatter) {\n                            input.ax5formatter(item.content.formatter);\n                        }\n\n                        input = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    }\n\n                })(),\n\n                alignPicker = function (append) {\n                    if (!this.activePicker) return this;\n\n                    var _alignPicker = function (item) {\n                        var $window = jQuery(window), $body = jQuery(document.body);\n                        var pos = {}, positionMargin = 12,\n                            dim = {}, pickerDim = {},\n                            pickerDirection;\n\n                        pos = item.$target.offset();\n                        dim = {\n                            width: item.$target.outerWidth(),\n                            height: item.$target.outerHeight()\n                        };\n                        pickerDim = {\n                            winWidth: Math.max($window.width(), $body.width()),\n                            winHeight: Math.max($window.height(), $body.height()),\n                            width: this.activePicker.outerWidth(),\n                            height: this.activePicker.outerHeight()\n                        };\n\n                        // picker css(width, left, top) & direction 결정\n\n                        if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                            // set direction\n                            pickerDirection = \"top\";\n                            if (pos.top - pickerDim.height - positionMargin < 0) {\n                                pickerDirection = \"top\";\n                            } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                pickerDirection = \"bottom\";\n                            }\n                        } else {\n                            pickerDirection = item.direction;\n                        }\n\n                        if (append) {\n                            this.activePicker\n                                .addClass(\"direction-\" + pickerDirection);\n                        }\n\n                        var positionCSS = (function () {\n                            var css = {left: 0, top: 0};\n                            switch (pickerDirection) {\n                                case \"top\":\n                                    css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                    css.top = pos.top + dim.height + positionMargin;\n                                    break;\n                                case \"bottom\":\n                                    css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                    css.top = pos.top - pickerDim.height - positionMargin;\n                                    break;\n                                case \"left\":\n                                    css.left = pos.left + dim.width + positionMargin;\n                                    css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                    break;\n                                case \"right\":\n                                    css.left = pos.left - pickerDim.width - positionMargin;\n                                    css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                    break;\n                            }\n                            return css;\n                        })();\n\n                        (function () {\n                            if (pickerDirection == \"top\" || pickerDirection == \"bottom\") {\n                                if (positionCSS.left < 0) {\n                                    positionCSS.left = positionMargin;\n                                    this.activePickerArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n                                } else if (positionCSS.left + pickerDim.width > pickerDim.winWidth) {\n                                    positionCSS.left = pickerDim.winWidth - pickerDim.width - positionMargin;\n                                    this.activePickerArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n                                }\n                            }\n                        }).call(this);\n\n                        this.activePicker\n                            .css(positionCSS);\n                    };\n\n                    var item = this.queue[this.activePickerQueueIndex];\n\n                    this.activePicker.css({top: -999});\n\n                    if (append) jQuery(document.body).append(this.activePicker);\n                    setTimeout((function () {\n                        _alignPicker.call(this, item);\n                    }).bind(this));\n                },\n                onBodyClick = function (e, target) {\n                    if (!this.activePicker) return this;\n\n                    var\n                        item = this.queue[this.activePickerQueueIndex]\n                        ;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-picker-els\")) {\n                            return true;\n                        }\n                        else if (item.$target.get(0) == target) {\n                            return true;\n                        }\n                    });\n                    if (!target) {\n                        //console.log(\"i'm not picker\");\n                        this.close();\n                        return this;\n                    }\n                    //console.log(\"i'm picker\");\n                    return this;\n                },\n                onBtnClick = function (e, target) {\n                    // console.log('btn click');\n                    if (e.srcElement) e.target = e.srcElement;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-picker-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        let\n                            item = this.queue[this.activePickerQueueIndex],\n                            k = target.getAttribute(\"data-picker-btn\")\n                            ;\n\n                        if (item.btns && item.btns[k].onClick) {\n                            let that = {\n                                key: k,\n                                value: item.btns[k],\n                                self: this,\n                                item: item\n                            };\n                            item.btns[k].onClick.call(that, k);\n                        }\n                        else {\n                            this.close();\n                        }\n                    }\n                },\n                onBodyKeyup = function (e) {\n                    if (e.keyCode == ax5.info.eventKeys.ESC) {\n                        this.close();\n                    }\n                },\n                getQueIdx = function (boundID) {\n                    if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-axpicker-id\");\n                    }\n                    if (!U.isString(boundID)) {\n                        console.log(ax5.info.getError(\"ax5picker\", \"402\", \"getQueIdx\"));\n                        return;\n                    }\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                };\n            /// private end\n\n            /**\n             * Preferences of picker UI\n             * @method ax5picker.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5picker}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * bind picker UI\n             * @method ax5picker.bind\n             * @param {Object} item\n             * @param {Element} item.target\n             * @param {String} item.direction - top|left|right|bottom|auto\n             * @param {Number} item.contentWidth\n             * @param {Boolean} item.disableChangeTrigger\n             * @param {Function} item.onStateChanged\n             * @param {Object} item.btns\n             * @param {Object} item.content\n             * @param {Number} item.content.width\n             * @param {Number} item.content.margin\n             * @param {String} item.content.type\n             * @param {Object} item.content.config - binded UI config\n             * @param {Object} item.content.formatter\n             * @param {String} item.content.formatter.pattern\n             * @returns {ax5picker}\n             * @example\n             * ```js\n             * var picker = new ax5.ui.picker();\n             * $(document.body).ready(function () {\n             *   picker.bind({\n             *       target: $('[data-ax5picker=\"basic\"]'),\n             *       direction: \"top\",\n             *       content: {\n             *           width: 270,\n             *           margin: 10,\n             *           type: 'date',\n             *           config: {\n             *               control: {\n             *                   left: '<i class=\"fa fa-chevron-left\"></i>',\n             *                   yearTmpl: '%s',\n             *                   monthTmpl: '%s',\n             *                   right: '<i class=\"fa fa-chevron-right\"></i>'\n             *               },\n             *               lang: {\n             *                   yearTmpl: \"%s년\",\n             *                   months: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\n             *                   dayTmpl: \"%s\"\n             *               }\n             *           },\n             *           formatter: {\n             *               pattern: 'date'\n             *           }\n             *       },\n             *       onStateChanged: function () {\n             *\n             *       }\n             *   });\n             * });\n             * ```\n             */\n            this.bind = function (item) {\n                let pickerConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, pickerConfig, cfg, item);\n\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"401\", \"bind\"));\n                    return this;\n                }\n                item.$target = jQuery(item.target);\n\n                if (!item.$target.get(0)) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                if (!item.id) item.id = item.$target.data(\"data-axpicker-id\");\n\n                if (!item.id) {\n                    item.id = 'ax5-picker-' + ax5.getGuid();\n                    item.$target.data(\"data-axpicker-id\", item.id);\n                }\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindPickerTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindPickerTarget.call(this, queIdx);\n                }\n\n                pickerConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * @method ax5picker.setContentValue\n             * @param {String} boundID\n             * @param {Number} inputIndex\n             * @param {String} val\n             * @returns {ax5picker} this\n             */\n            this.setContentValue = (function () {\n\n                var multipleInputProcessor = {\n                    \"date\": function (_item, _inputIndex, _val) {\n                        var values = [],\n                            diffDay, prevInputValue, nextInputValue;\n\n                        if (_item.$target.get(0).tagName.toUpperCase() !== \"INPUT\") {\n                            _item.$target.find('input[type]').each(function () {\n                                values.push(this.value);\n                            });\n                        }\n\n                        if (_inputIndex == 0) {\n                            if (values.length > 1 && values[1] !== \"\") {\n                                // 값 검증\n                                diffDay = ax5.util.dday(values[1], {today: values[0]});\n                                if (diffDay < 0) {\n                                    // 다음날짜 달력을 변경합니다.\n                                    nextInputValue = _val;\n                                }else{\n\n                                }\n                            }else{\n                                nextInputValue = _val;\n                            }\n\n                            if(nextInputValue) {\n                                _item.pickerCalendar[1].ax5uiInstance.setSelection([nextInputValue], false).changeMode(\"d\", nextInputValue);\n                                this.setContentValue(_item.id, 1, nextInputValue);\n                            }\n\n                            return _val;\n\n                        } else if (_inputIndex == 1) {\n                            if (values.length > 1) {\n                                // 값 검증\n                                diffDay = ax5.util.dday(values[1], {today: values[0]});\n                                if (diffDay < 0) {\n                                    // 다음날짜 달력을 변경합니다.\n                                    prevInputValue = values[1];\n                                }\n                            }\n\n                            if(prevInputValue) {\n                                _item.pickerCalendar[0].ax5uiInstance.setSelection([prevInputValue], false).changeMode(\"d\", prevInputValue);\n                                this.setContentValue(_item.id, 0, prevInputValue);\n                            }\n\n                            return _val;\n                        }\n                    }\n                };\n\n                return function (boundID, inputIndex, val) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var _input;\n\n                    if (item) {\n\n                        _input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : jQuery(item.$target.find('input[type]').get(inputIndex));\n                        _input.val(val);\n\n                        if (!item.disableChangeTrigger) {\n                            _input.trigger(\"change\");\n                        }\n\n                        // picker의 입력이 2개이상인 경우\n                        //console.log(item.inputLength);\n                        if (item.inputLength > 1) {\n                            // 경우에 따라 첫번 선택에 따라 해야할 일들 처리\n                            if (multipleInputProcessor[item.content.type]) {\n                                val = multipleInputProcessor[item.content.type].call(this, item, inputIndex, val);\n                            }\n                        }\n\n                        var that = {\n                            self: self,\n                            state: \"changeValue\",\n                            item: item,\n                            inputIndex: inputIndex,\n                            value: val,\n                            values: [val]\n                        };\n                        if (item.$target.get(0).tagName.toUpperCase() !== \"INPUT\") {\n                            that.values = [];\n                            item.$target.find('input[type]').each(function () {\n                                that.values.push(this.value);\n                            });\n                        }\n\n                        onStateChanged.call(this, item, that);\n\n                        if (item.inputLength == 1) {\n                            this.close();\n                        }\n                    }\n\n                    item = null;\n                    boundID = null;\n                    inputIndex = null;\n                    val = null;\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5picker.open\n             * @param {String} boundObjectId\n             * @returns {ax5picker} this\n             */\n            this.open = (function () {\n\n                var pickerContent = {\n                    '@fn': function (queIdx, callback) {\n                        var item = this.queue[queIdx];\n                        item.content.call(item, function (html) {\n                            callback(html);\n                        });\n                        return true;\n                    },\n                    'date': function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div '\n                                + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" '\n                                + 'class=\"ax-picker-content-box\" '\n                                + 'data-calendar-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        var calendarConfig = jQuery.extend({}, cfg.calendar, {displayDate: (new Date())});\n                        var input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : item.$target.find('input[type]');\n\n                        // calendar bind\n                        item.pickerCalendar = [];\n                        item.pickerContent.find('[data-calendar-target]').each(function () {\n\n                            // calendarConfig extend ~\n                            var\n                                idx = this.getAttribute(\"data-calendar-target\"),\n                                dValue = input.get(idx).value,\n                                d = ax5.util.date(dValue);\n\n                            calendarConfig.displayDate = d;\n                            if (dValue) calendarConfig.selection = [d];\n                            calendarConfig = jQuery.extend(true, calendarConfig, item.content.config || {});\n                            calendarConfig.target = this;\n                            calendarConfig.onClick = function () {\n                                self.setContentValue(item.id, idx, this.date);\n                            };\n\n                            item.pickerCalendar.push({\n                                itemId: item.id,\n                                inputIndex: idx,\n                                ax5uiInstance: new ax5.ui.calendar(calendarConfig)\n                            });\n                        });\n\n                    },\n                    'secure-num': function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div '\n                                + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" '\n                                + 'class=\"ax-picker-content-box\" '\n                                + 'data-secure-num-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-secure-num-target]').each(function () {\n                            var idx = this.getAttribute(\"data-secure-num-target\"),\n                                po = [];\n\n                            var numArray = (function (a) {\n                                var j, x, i;\n                                for (i = a.length; i; i -= 1) {\n                                    j = Math.floor(Math.random() * i);\n                                    x = a[i - 1];\n                                    a[i - 1] = a[j];\n                                    a[j] = x;\n                                }\n                                return a;\n                            })([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n                            var specialArray = [\n                                {label: \"&#x02190\", fn: \"back\"}, {label: \"C\", fn: \"clear\"}\n                            ];\n\n                            numArray.forEach(function (n) {\n                                po.push('<div style=\"float:left;' + item.content.config.btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + item.content.config.btnTheme + '\" '\n                                    + 'style=\"' + item.content.config.btnStyle + '\" data-secure-num-value=\"' + n + '\">' + n + '</button>');\n                                po.push('</div>');\n                            });\n                            specialArray.forEach(function (n) {\n                                po.push('<div style=\"float:left;' + item.content.config.btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + item.content.config.specialBtnTheme + '\" '\n                                    + 'style=\"' + item.content.config.btnStyle + '\" data-secure-num-value=\"' + n.fn + '\">' + n.label + '</button>');\n                                po.push('</div>');\n                            });\n\n                            po.push('<div style=\"clear:both;\"></div>');\n\n                            $(this).html(po.join('')).on(\"click\", '[data-secure-num-value]', function () {\n                                var act = this.getAttribute(\"data-secure-num-value\");\n                                var _input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : jQuery(item.$target.find('input[type]').get(idx));\n                                var val = _input.val();\n\n                                if (act == \"back\") {\n                                    _input.val(val.substring(0, val.length - 1));\n                                }\n                                else if (act == \"clear\") {\n                                    _input.val('');\n                                }\n                                else {\n                                    _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: \"changeValue\",\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'keyboard': function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div '\n                                + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" '\n                                + 'class=\"ax-picker-content-box\" '\n                                + 'data-keyboard-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        var keyArray = [\n                            [\n                                {value: \"`\", shiftValue: \"~\"},\n                                {value: \"1\", shiftValue: \"!\"},\n                                {value: \"2\", shiftValue: \"@\"},\n                                {value: \"3\", shiftValue: \"#\"},\n                                {value: \"4\", shiftValue: \"$\"},\n                                {value: \"5\", shiftValue: \"%\"},\n                                {value: \"6\", shiftValue: \"^\"},\n                                {value: \"7\", shiftValue: \"&\"},\n                                {value: \"8\", shiftValue: \"*\"},\n                                {value: \"9\", shiftValue: \"(\"},\n                                {value: \"0\", shiftValue: \")\"},\n                                {value: \"-\", shiftValue: \"_\"},\n                                {value: \"=\", shiftValue: \"+\"},\n                                {label: \"&#x02190\", fn: \"back\"}\n                            ],\n                            [\n                                {value: \"q\", shiftValue: \"Q\"},\n                                {value: \"w\", shiftValue: \"W\"},\n                                {value: \"e\", shiftValue: \"E\"},\n                                {value: \"r\", shiftValue: \"R\"},\n                                {value: \"t\", shiftValue: \"T\"},\n                                {value: \"y\", shiftValue: \"Y\"},\n                                {value: \"u\", shiftValue: \"U\"},\n                                {value: \"i\", shiftValue: \"I\"},\n                                {value: \"o\", shiftValue: \"O\"},\n                                {value: \"p\", shiftValue: \"P\"},\n                                {value: \"[\", shiftValue: \"{\"},\n                                {value: \"]\", shiftValue: \"}\"},\n                                {value: \"\\\\\", shiftValue: \"|\"}\n                            ],\n                            [\n                                {label: \"Clear\", fn: \"clear\"},\n                                {value: \"a\", shiftValue: \"A\"},\n                                {value: \"s\", shiftValue: \"S\"},\n                                {value: \"d\", shiftValue: \"D\"},\n                                {value: \"f\", shiftValue: \"F\"},\n                                {value: \"g\", shiftValue: \"G\"},\n                                {value: \"h\", shiftValue: \"H\"},\n                                {value: \"j\", shiftValue: \"J\"},\n                                {value: \"k\", shiftValue: \"K\"},\n                                {value: \"l\", shiftValue: \"L\"},\n                                {value: \";\", shiftValue: \":\"},\n                                {value: \"'\", shiftValue: \"\\\"\"}\n\n\n                            ],\n                            [\n                                {label: \"Shift\", fn: \"shift\"},\n                                {value: \"z\", shiftValue: \"Z\"},\n                                {value: \"x\", shiftValue: \"X\"},\n                                {value: \"c\", shiftValue: \"C\"},\n                                {value: \"v\", shiftValue: \"V\"},\n                                {value: \"b\", shiftValue: \"B\"},\n                                {value: \"n\", shiftValue: \"N\"},\n                                {value: \"m\", shiftValue: \"M\"},\n                                {value: \",\", shiftValue: \"<\"},\n                                {value: \".\", shiftValue: \">\"},\n                                {value: \"/\", shiftValue: \"?\"},\n                                {label: \"Close\", fn: \"close\"}\n                            ]\n                        ];\n                        var specialArray = [\n                            {label: \"&#x02190\", fn: \"back\"}, {label: \"C\", fn: \"clear\"}\n                        ];\n\n                        var getKeyBoard = function (isShiftKey) {\n                            var po = [];\n                            keyArray.forEach(function (row) {\n                                po.push('<div style=\"display: table;margin:0 auto;\">');\n                                row.forEach(function (n) {\n\n                                    var keyValue, keyLabel, btnWrapStyle, btnTheme, btnStyle;\n                                    if (n.fn) {\n                                        keyValue = n.fn;\n                                        keyLabel = n.label;\n                                        btnWrapStyle = item.content.config.specialBtnWrapStyle;\n                                        btnTheme = item.content.config.specialBtnTheme;\n                                        btnStyle = item.content.config.specialBtnStyle;\n                                    } else {\n                                        keyLabel = keyValue = ((isShiftKey) ? n.shiftValue : n.value);\n                                        btnWrapStyle = item.content.config.btnWrapStyle;\n                                        btnTheme = item.content.config.btnTheme;\n                                        btnStyle = item.content.config.btnStyle;\n                                    }\n\n                                    po.push('<div style=\"display: table-cell;' + btnWrapStyle + '\">');\n                                    po.push('<button class=\"btn btn-default btn-' + btnTheme + '\" '\n                                        + 'style=\"' + btnStyle + '\" data-keyboard-value=\"' + keyValue + '\">' + keyLabel + '</button>');\n                                    po.push('</div>');\n                                });\n                                po.push('</div>');\n                            });\n                            return po.join('');\n                        };\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-keyboard-target]').each(function () {\n                            var idx = this.getAttribute(\"data-keyboard-target\");\n                            var $this = $(this);\n                            var isShiftKey = false;\n                            var toggleShift = function () {\n                                isShiftKey = !isShiftKey;\n                                $this.html(getKeyBoard(isShiftKey));\n                            };\n                            $this.html(getKeyBoard(isShiftKey)).on(\"mousedown\", '[data-keyboard-value]', function () {\n                                var act = this.getAttribute(\"data-keyboard-value\");\n                                var _input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : jQuery(item.$target.find('input[type]').get(idx));\n                                var val = _input.val();\n\n                                switch (act) {\n                                    case \"back\":\n                                        _input.val(val.substring(0, val.length - 1));\n                                        break;\n                                    case \"clear\":\n                                        _input.val('');\n                                        break;\n                                    case \"shift\":\n                                        toggleShift();\n                                        return false;\n                                        break;\n                                    case \"close\":\n                                        self.close();\n                                        return false;\n                                        break;\n                                    default:\n                                        _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: \"changeValue\",\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'numpad': function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div '\n                                + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" '\n                                + 'class=\"ax-picker-content-box\" '\n                                + 'data-numpad-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-numpad-target]').each(function () {\n                            var idx = this.getAttribute(\"data-numpad-target\"),\n                                po = [];\n\n                            var keyArray = item.content.config.keyArray || [\n                                    {value: \"7\"},\n                                    {value: \"8\"},\n                                    {value: \"9\"},\n                                    {label: \"BS\", fn: \"back\"},\n                                    {value: \"4\"},\n                                    {value: \"5\"},\n                                    {value: \"6\"},\n                                    {label: \"CLS\", fn: \"clear\"},\n                                    {value: \"1\"},\n                                    {value: \"2\"},\n                                    {value: \"3\"},\n                                    {value: \"\"},\n                                    {value: \".\"},\n                                    {value: \"0\"},\n                                    {value: \"\"},\n                                    {label: \"OK\", fn: \"enter\"}\n                                ];\n\n                            keyArray.forEach(function (n) {\n                                var keyValue, keyLabel, btnWrapStyle, btnTheme, btnStyle;\n\n                                if (n.fn) {\n                                    keyValue = n.fn;\n                                    keyLabel = n.label;\n                                    btnTheme = item.content.config.specialBtnTheme;\n                                    btnWrapStyle = item.content.config.specialBtnWrapStyle;\n                                    btnStyle = item.content.config.specialBtnStyle;\n                                } else {\n                                    keyLabel = keyValue = n.value;\n                                    btnTheme = (keyValue) ? item.content.config.btnTheme : \"\";\n                                    btnWrapStyle = item.content.config.btnWrapStyle;\n                                    btnStyle = item.content.config.btnStyle;\n                                }\n\n                                po.push('<div style=\"float:left;' + btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + btnTheme + '\" '\n                                    + 'style=\"' + btnStyle + '\" data-numpad-value=\"' + keyValue + '\">' + (keyLabel || \"&nbsp;\") + '</button>');\n                                po.push('</div>');\n                            });\n\n                            po.push('<div style=\"clear:both;\"></div>');\n\n                            $(this).html(po.join('')).on(\"mousedown\", '[data-numpad-value]', function () {\n                                var act = this.getAttribute(\"data-numpad-value\");\n                                var _input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : jQuery(item.$target.find('input[type]').get(idx));\n                                var val = _input.val();\n                                var state = \"\";\n\n                                switch (act) {\n                                    case \"back\":\n                                        state = \"changeValue\";\n                                        _input.val(val.substring(0, val.length - 1));\n                                        break;\n                                    case \"clear\":\n                                        state = \"changeValue\";\n                                        _input.val('');\n                                        break;\n                                    case \"enter\":\n                                        self.close(item, \"enter\");\n                                        return false;\n                                        break;\n                                    case \"close\":\n                                        self.close();\n                                        return false;\n                                        break;\n                                    default:\n                                        state = \"changeValue\";\n                                        _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: state,\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    }\n                };\n\n                return function (boundID, tryCount) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n\n                    /**\n                     다른 피커가 있는 경우와 다른 피커를 닫고 다시 오픈 명령이 내려진 경우에 대한 예외 처리 구문\n                     */\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activePicker) {\n                        if (this.activePickerQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout((function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }).bind(this), cfg.animateTime);\n                        return this;\n                    }\n\n                    this.activePicker = jQuery(PICKER.tmpl.get.call(this, \"pickerTmpl\", item));\n                    this.activePickerArrow = this.activePicker.find(\".ax-picker-arrow\");\n                    this.activePickerQueueIndex = queIdx;\n                    item.pickerContent = this.activePicker.find('[data-picker-els=\"content\"]');\n\n                    if (U.isFunction(item.content)) {\n                        // 함수타입\n                        item.pickerContent.html(\"Loading..\");\n                        pickerContent[\"@fn\"].call(this, queIdx, function (html) {\n                            item.pickerContent.html(html);\n                        });\n                    }\n                    else {\n                        if (item.content.type in pickerContent) {\n                            pickerContent[item.content.type].call(this, queIdx);\n                        }\n                    }\n\n                    // bind event picker btns\n                    this.activePicker.find(\"[data-picker-btn]\").on(cfg.clickEventName, (function (e) {\n                        onBtnClick.call(this, e || window.event, queIdx);\n                    }).bind(this));\n\n                    alignPicker.call(this, \"append\");\n\n                    jQuery(window).bind(\"resize.ax5picker\", (function () {\n                        alignPicker.call(this);\n                    }).bind(this));\n\n                    // bind key event\n                    jQuery(window).bind(\"keyup.ax5picker\", (function (e) {\n                        e = e || window.event;\n                        onBodyKeyup.call(this, e);\n                        U.stopEvent(e);\n                    }).bind(this));\n\n                    jQuery(window).bind(\"click.ax5picker\", (function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }).bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5picker.close\n             * @returns {ax5picker} this\n             */\n            this.close = function (item, state) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activePicker) return this;\n\n                item = this.queue[this.activePickerQueueIndex];\n\n                this.activePicker.addClass(\"destroy\");\n                jQuery(window).unbind(\"resize.ax5picker\");\n                jQuery(window).unbind(\"click.ax5picker\");\n                jQuery(window).unbind(\"keyup.ax5picker\");\n\n                this.closeTimer = setTimeout((function () {\n                    if (this.activePicker) this.activePicker.remove();\n                    this.activePicker = null;\n                    this.activePickerQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: state || \"close\"\n                    });\n\n                }).bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5picker;\n    })());\n\n    PICKER = ax5.ui.picker;\n})();\n\n/**\n * ax5.ui.picker_instance\n * @type {ax5picker}\n * @example\n * ```js\n * // picker 기본 속성을 변경해야 한다면\n * ax5.ui.picker_instance.setConfig({\n * });\n *\n * ```\n */\nax5.ui.picker_instance = new ax5.ui.picker();\n\njQuery.fn.ax5picker = (function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.picker_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.picker_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.picker_instance.setContentValue(this, arguments[1], arguments[2]);\n                    break;\n                default:\n                    return this;\n            }\n        }\n        else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend(true, config, defaultConfig);\n                ax5.ui.picker_instance.bind(config);\n            });\n        }\n        return this;\n    };\n})();","// ax5.ui.picker.tmpl\n(function () {\n    var PICKER = ax5.ui.picker;\n    var U = ax5.util;\n\n    var pickerTmpl = function () {\n        return `\n<div class=\"ax5-ui-picker {{theme}}\" id=\"{{id}}\" data-picker-els=\"root\" {{#zIndex}}style=\"z-index:{{zIndex}};\"{{/zIndex}}>\n    {{#title}}\n        <div class=\"ax-picker-heading\">{{title}}</div>\n    {{/title}}\n    <div class=\"ax-picker-body\">\n        <div class=\"ax-picker-content\" data-picker-els=\"content\" style=\"width:{{contentWidth}}px;\"></div>\n        {{#btns}}\n            <div class=\"ax-picker-buttons\">\n            {{#btns}}\n                {{#@each}}\n                <button data-picker-btn=\"{{@key}}\" class=\"btn btn-default {{@value.theme}}\">{{@value.label}}</button>\n                {{/@each}}\n            {{/btns}}\n            </div>\n        {{/btns}}\n    </div>\n    <div class=\"ax-picker-arrow\"></div>\n</div>\n`;\n    };\n\n    PICKER.tmpl = {\n        \"pickerTmpl\": pickerTmpl,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(PICKER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","// ax5.ui.formatter\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var FORMATTER;\n\n    UI.addClass({\n        className: \"formatter\",\n        version: \"1.3.66\"\n    }, (function () {\n        var TODAY = new Date();\n        var setSelectionRange = function (input, pos) {\n            if (typeof pos == \"undefined\") {\n                pos = input.value.length;\n            }\n            if (input.setSelectionRange) {\n                input.focus();\n                input.setSelectionRange(pos, pos);\n            }\n            else if (input.createTextRange) {\n                var range = input.createTextRange();\n                range.collapse(true);\n                range.moveEnd('character', pos);\n                range.moveStart('character', pos);\n                range.select();\n            }\n            else if (input.selectionStart) {\n                input.focus();\n                input.selectionStart = pos;\n                input.selectionEnd = pos;\n            }\n        };\n\n        /**\n         * @class ax5formatter\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * $('#idInputTime').attr('data-ax5formatter', 'time').ax5formatter();\n         * $('#idInputMoney').attr('data-ax5formatter', 'money').ax5formatter();\n         * $('#idInputPhone').attr('data-ax5formatter', 'phone').ax5formatter();\n         * $('#idInputDate').attr('data-ax5formatter', 'date').ax5formatter();\n         *\n         * $('#ax5formatter-custom').ax5formatter({\n         *     pattern: \"custom\",\n         *     getEnterableKeyCodes: function(){\n         *         return {\n         *             '65':'a',\n         *             '66':'b',\n         *             '67':'c',\n         *             '68':'d',\n         *             '69':'e',\n         *             '70':'f'\n         *         };\n         *     },\n         *     getPatternValue: function(obj){\n         *         return obj.value.replace(/./g, \"*\");\n         *     }\n         * });\n         * ```\n         */\n        var ax5formatter = function () {\n            var\n                self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                animateTime: 250\n            };\n\n            this.queue = [];\n            this.openTimer = null;\n            this.closeTimer = null;\n\n            cfg = this.config;\n\n            var\n                formatterEvent = {\n                    'focus': function (opts, optIdx, e) {\n                        if (!opts.$input.data(\"__originValue__\")) opts.$input.data(\"__originValue__\", opts.$input.val());\n                    },\n                    /* 키 다운 이벤트에서 입력할 수 없는 키 입력을 방어 */\n                    'keydown': function (opts, optIdx, e) {\n                        var isStop = false;\n                        if (!opts.enterableKeyCodes) {\n\n                        }\n                        else if (e.which && opts.enterableKeyCodes[e.which]) {\n\n                        }\n                        else if (!e.metaKey && !e.ctrlKey && !e.shiftKey) {\n                            //console.log(e.which, opts.enterableKeyCodes);\n                            isStop = true;\n                        }\n                        if (isStop) ax5.util.stopEvent(e);\n                    },\n                    /* 키 업 이벤트에서 패턴을 적용 */\n                    'keyup': function (opts, optIdx, e) {\n                        var elem = opts.$input.get(0),\n                            elemFocusPosition,\n                            beforeValue,\n                            newValue,\n                            selection, selectionLength\n                            ;\n\n                        if ('selectionStart' in elem) {\n                            // Standard-compliant browsers\n                            elemFocusPosition = elem.selectionStart;\n                        }\n                        else if (document.selection) {\n                            // IE\n                            //elem.focus();\n                            selection = document.selection.createRange();\n                            selectionLength = document.selection.createRange().text.length;\n                            selection.moveStart('character', -elem.value.length);\n                            elemFocusPosition = selection.text.length - selectionLength;\n                        }\n\n                        beforeValue = elem.value;\n                        if (opts.pattern in FORMATTER.formatter) {\n                            newValue = FORMATTER.formatter[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value);\n                        } else {\n                            newValue = beforeValue\n                        }\n\n                        if (newValue != beforeValue) {\n                            opts.$input.val(newValue).trigger(\"change\");\n                            setSelectionRange(elem, elemFocusPosition + newValue.length - beforeValue.length);\n                        }\n                    },\n                    'blur': function (opts, optIdx, e, _force) {\n                        var elem = opts.$input.get(0),\n                            beforeValue,\n                            newValue\n                            ;\n\n                        opts.$input.removeData(\"__originValue__\");\n\n                        beforeValue = elem.value;\n                        if (opts.pattern in FORMATTER.formatter) {\n                            newValue = FORMATTER.formatter[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value, 'blur');\n                        } else {\n                            newValue = beforeValue\n                        }\n\n                        if (_force) {\n                            opts.$input.val(newValue);\n                        } else {\n                            if (newValue != beforeValue) {\n                                opts.$input.val(newValue).trigger(\"change\");\n                            }\n                        }\n                    }\n                },\n                bindFormatterTarget = function (opts, optIdx) {\n\n                    if (!opts.pattern) {\n                        if (opts.$target.get(0).tagName == \"INPUT\") {\n                            opts.pattern = opts.$target\n                                .attr('data-ax5formatter');\n                        }\n                        else {\n                            opts.pattern = opts.$target\n                                .find('input[type=\"text\"]')\n                                .attr('data-ax5formatter');\n                        }\n                        if (!opts.pattern) {\n                            console.log(ax5.info.getError(\"ax5formatter\", \"501\", \"bind\"));\n                            console.log(opts.target);\n                            return this;\n                        }\n                    }\n\n                    var re = /[^\\(^\\))]+/gi,\n                        matched = opts.pattern.match(re);\n\n                    opts.pattern = matched[0];\n                    opts.patternArgument = matched[1] || \"\";\n\n                    // 함수타입\n                    if (opts.pattern in FORMATTER.formatter) {\n                        opts.enterableKeyCodes = FORMATTER.formatter[opts.pattern].getEnterableKeyCodes.call(this, opts, optIdx);\n                    }\n\n                    opts.$input\n                        .unbind('focus.ax5formatter')\n                        .bind('focus.ax5formatter', formatterEvent.focus.bind(this, this.queue[optIdx], optIdx));\n\n                    opts.$input\n                        .unbind('keydown.ax5formatter')\n                        .bind('keydown.ax5formatter', formatterEvent.keydown.bind(this, this.queue[optIdx], optIdx));\n\n                    opts.$input\n                        .unbind('keyup.ax5formatter')\n                        .bind('keyup.ax5formatter', formatterEvent.keyup.bind(this, this.queue[optIdx], optIdx));\n\n                    opts.$input\n                        .unbind('blur.ax5formatter')\n                        .bind('blur.ax5formatter', formatterEvent.blur.bind(this, this.queue[optIdx], optIdx));\n\n                    formatterEvent.blur.call(this, this.queue[optIdx], optIdx);\n\n                    return this;\n\n                },\n                getQueIdx = function (boundID) {\n                    if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-formatter\");\n                    }\n                    /*\n                     if (!U.isString(boundID)) {\n                     console.log(ax5.info.getError(\"ax5formatter\", \"402\", \"getQueIdx\"));\n                     return;\n                     }\n                     */\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                };\n\n            /**\n             * Preferences of formatter UI\n             * @method ax5formatter.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5.ui.formatter}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n\n            };\n\n            this.bind = function (opts) {\n                var\n                    formatterConfig = {},\n                    optIdx;\n\n                jQuery.extend(true, formatterConfig, cfg);\n                if (opts) jQuery.extend(true, formatterConfig, opts);\n                opts = formatterConfig;\n\n                if (!opts.target) {\n                    console.log(ax5.info.getError(\"ax5formatter\", \"401\", \"bind\"));\n                    return this;\n                }\n                opts.$target = jQuery(opts.target);\n\n                if (opts.$target.get(0).tagName == \"INPUT\") {\n                    opts.$input = opts.$target;\n                }\n                else {\n                    opts.$input = opts.$target.find('input[type=\"text\"]');\n                    if (opts.$input.length > 1) {\n                        opts.$input.each(function () {\n                            opts.target = this;\n                            self.bind(opts);\n                        });\n                        return this;\n                    }\n                }\n\n                opts.$input = (opts.$target.get(0).tagName == \"INPUT\") ? opts.$target : opts.$target.find('input[type=\"text\"]');\n                if (!opts.id) opts.id = opts.$input.data(\"ax5-formatter\");\n\n                if (!opts.id) {\n                    opts.id = 'ax5-formatter-' + ax5.getGuid();\n                    opts.$input.data(\"ax5-formatter\", opts.id);\n                }\n                optIdx = U.search(this.queue, function () {\n                    return this.id == opts.id;\n                });\n\n                if (optIdx === -1) {\n                    this.queue.push(opts);\n                    bindFormatterTarget.call(this, this.queue[this.queue.length - 1], this.queue.length - 1);\n                }\n                else {\n                    this.queue[optIdx] = opts;\n                    bindFormatterTarget.call(this, this.queue[optIdx], optIdx);\n                }\n\n                return this;\n            };\n\n            /**\n             * formatter value 를 다시 적용합니다.\n             * @method ax5formatter.formatting\n             * @returns {ax5formatter}\n             * @example\n             * ```js\n             * $('[data-ax5formatter=\"time\"]').ax5formatter(\"formatting\"); // 하나만\n             * $('[data-ax5formatter]').ax5formatter(\"formatting\"); // 모두\n             * ```\n             */\n            this.formatting = function (boundID) {\n                var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                if (queIdx === -1) {\n                    var i = this.queue.length;\n                    while (i--) {\n                        formatterEvent.blur.call(this, this.queue[i], i, null, true);\n                    }\n                } else {\n                    formatterEvent.blur.call(this, this.queue[queIdx], queIdx, null, true);\n                }\n                return this;\n            };\n\n            this.unbind = function () {\n// 구현해야함.\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5formatter;\n    })());\n\n    FORMATTER = ax5.ui.formatter;\n})();\n\nax5.ui.formatter_instance = new ax5.ui.formatter();\n\njQuery.fn.ax5formatter = (function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"formatting\":\n                    return ax5.ui.formatter_instance.formatting(this);\n                    break;\n\n                case \"unbind\":\n                    return ax5.ui.formatter_instance.unbind(this);\n                    break;\n\n                default:\n                    return this;\n            }\n        }\n        else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.formatter_instance.bind(config);\n            });\n        }\n        return this;\n    }\n})();\n","// ax5.ui.formatter.formatter\n(function () {\n\n    var FORMATTER = ax5.ui.formatter;\n    var U = ax5.util;\n    var ctrlKeys = {\n        \"18\": \"KEY_ALT\",\n        \"8\": \"KEY_BACKSPACE\",\n        \"17\": \"KEY_CONTROL\",\n        \"46\": \"KEY_DELETE\",\n        \"40\": \"KEY_DOWN\",\n        \"35\": \"KEY_END\",\n        \"187\": \"KEY_EQUAL\",\n        \"27\": \"KEY_ESC\",\n        \"36\": \"KEY_HOME\",\n        \"45\": \"KEY_INSERT\",\n        \"37\": \"KEY_LEFT\",\n        \"189\": \"KEY_MINUS\",\n        \"34\": \"KEY_PAGEDOWN\",\n        \"33\": \"KEY_PAGEUP\",\n        // \"190\": \"KEY_PERIOD\",\n        \"13\": \"KEY_RETURN\",\n        \"39\": \"KEY_RIGHT\",\n        \"16\": \"KEY_SHIFT\",\n        // \"32\": \"KEY_SPACE\",\n        \"9\": \"KEY_TAB\",\n        \"38\": \"KEY_UP\",\n        \"91\": \"KEY_WINDOW\"\n        //\"107\" : \"NUMPAD_ADD\",\n        //\"194\" : \"NUMPAD_COMMA\",\n        //\"110\" : \"NUMPAD_DECIMAL\",\n        //\"111\" : \"NUMPAD_DIVIDE\",\n        //\"12\" : \"NUMPAD_EQUAL\",\n        //\"106\" : \"NUMPAD_MULTIPLY\",\n        //\"109\" : \"NUMPAD_SUBTRACT\"\n    };\n    var numKeys = {\n        '48': 1, '49': 1, '50': 1, '51': 1, '52': 1, '53': 1, '54': 1, '55': 1, '56': 1, '57': 1,\n        '96': 1, '97': 1, '98': 1, '99': 1, '100': 1, '101': 1, '102': 1, '103': 1, '104': 1, '105': 1\n    };\n    var pattern_money = {\n        getEnterableKeyCodes: function (_opts) {\n            var enterableKeyCodes = {\n                '188': ','\n            };\n            if (_opts.patternArgument == \"int\") {\n                // 소수점 입력 안됨\n            }\n            else {\n                enterableKeyCodes['190'] = \".\"; // 소수점 입력 허용\n            }\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function (_opts, optIdx, e, val, eType) {\n            val = val.replace(/[^0-9^\\.^\\-]/g, \"\");\n            var regExpPattern = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n                arrNumber = val.split('.'),\n                returnValue;\n\n            arrNumber[0] += '.';\n\n            do {\n                arrNumber[0] = arrNumber[0].replace(regExpPattern, '$1,$2');\n            } while (regExpPattern.test(arrNumber[0]));\n\n            if (arrNumber.length > 1) {\n                if (U.isNumber(_opts.maxRound)) {\n                    returnValue = arrNumber[0] + U.left(arrNumber[1], _opts.maxRound);\n                }\n                else {\n                    returnValue = arrNumber.join('');\n                }\n            }\n            else {\n                returnValue = arrNumber[0].split('.')[0];\n            }\n\n            return returnValue;\n        }\n    };\n\n    var pattern_number = {\n        getEnterableKeyCodes: function (_opts) {\n            var enterableKeyCodes = {\n                '190': '.'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function (_opts, optIdx, e, val, eType) {\n            val = val.replace(/[^0-9^\\.^\\-]/g, \"\");\n            var arrNumber = val.split('.'),\n                returnValue\n                ;\n\n            if (arrNumber.length > 1) {\n                if (U.isNumber(_opts.maxRound)) {\n                    returnValue = arrNumber[0] + U.left(arrNumber[1], _opts.maxRound);\n                }\n                else {\n                    returnValue = arrNumber.join('');\n                }\n            }\n            else {\n                returnValue = arrNumber[0].split('.')[0];\n            }\n\n            return returnValue;\n        }\n    };\n\n    var pattern_date = {\n        getEnterableKeyCodes: function (_opts) {\n            var enterableKeyCodes = {\n                '189': '-', '191': '/'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function (_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            if (val == \"\") return val;\n            var regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?\\-?([0-9]{1,2})?.*$/;\n\n            if (_opts.patternArgument == \"time\") {\n                regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?\\-?([0-9]{1,2})? ?([0-9]{1,2})?:?([0-9]{1,2})?:?([0-9]{1,2})?.*$/;\n            }\n\n            var matchedPattern = val.match(regExpPattern),\n                returnValue = \"\",\n                inspectValue = function (val, format, inspect, data) {\n                    var _val = {\n                        'Y': function (v) {\n                            if (typeof v == \"undefined\") v = TODAY.getFullYear();\n                            if (v == '' || v == '0000')  v = TODAY.getFullYear();\n                            return (v.length < 4) ? U.setDigit(v, 4) : v;\n                        },\n                        'M': function (v) {\n                            if (typeof v == \"undefined\") v = TODAY.getMonth() + 1;\n                            return v > 12 ? 12 : v == 0 ? '01' : U.setDigit(v, 2);\n                        },\n                        'D': function (v) {\n                            if (typeof v == \"undefined\") v = TODAY.getDate() + 1;\n                            var dLen = U.daysOfMonth(data[1], data[2] - 1);\n                            return v > dLen ? dLen : v == 0 ? '01' : U.setDigit(v, 2);\n                        },\n                        'h': function (v) {\n                            if (!v) v = 0;\n                            return v > 23 ? 23 : U.setDigit(v, 2);\n                        },\n                        'm': function (v) {\n                            if (!v) v = 0;\n                            return v > 59 ? 59 : U.setDigit(v, 2);\n                        },\n                        's': function (v) {\n                            if (!v) v = 0;\n                            return v > 59 ? 59 : U.setDigit(v, 2);\n                        }\n                    };\n                    return (inspect) ? _val[format](val) : val;\n                };\n\n            returnValue = val.replace(regExpPattern, function (a, b) {\n                var nval = [inspectValue(arguments[1], \"Y\", eType)];\n                if (arguments[2] || eType) nval.push('-' + inspectValue(arguments[2], \"M\", eType));\n                if (arguments[3] || eType) nval.push('-' + inspectValue(arguments[3], \"D\", eType, arguments));\n                if (_opts.patternArgument == \"time\") {\n                    if (arguments[4] || eType) nval.push(' ' + inspectValue(arguments[4], \"h\", eType));\n                    if (arguments[5] || eType) nval.push(':' + inspectValue(arguments[5], \"m\", eType));\n                    if (arguments[6] || eType) nval.push(':' + inspectValue(arguments[6], \"s\", eType));\n                }\n                return nval.join('');\n            });\n\n            if (eType == 'blur' && !matchedPattern) {\n                returnValue = (function () {\n                    var nval = [inspectValue(returnValue, \"Y\", eType)];\n                    nval.push('-' + inspectValue(0, \"M\", eType));\n                    nval.push('-' + inspectValue(0, \"D\", eType, arguments));\n                    if (_opts.patternArgument == \"time\") {\n                        nval.push(' ' + inspectValue(0, \"h\", eType));\n                        nval.push(':' + inspectValue(0, \"m\", eType));\n                        nval.push(':' + inspectValue(0, \"s\", eType));\n                    }\n                    return nval.join('');\n                })();\n            }\n            else if (!matchedPattern) returnValue = (returnValue.length > 4) ? U.left(returnValue, 4) : returnValue;\n\n            return returnValue;\n        }\n    };\n\n    var pattern_time = {\n        getEnterableKeyCodes: function (_opts) {\n            var enterableKeyCodes = {\n                '186': ':'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function (_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            var regExpPattern = /^([0-9]{1,2})?:?([0-9]{1,2})?:?([0-9]{1,2})?.*$/;\n\n            var matchedPattern = val.match(regExpPattern),\n                returnValue = val.replace(regExpPattern, function (a, b) {\n                    var nval = [arguments[1]];\n                    if (arguments[2]) nval.push(':' + arguments[2]);\n                    if (arguments[3]) nval.push(':' + arguments[3]);\n                    return nval.join('');\n                });\n\n            if (!matchedPattern) returnValue = (returnValue.length > 2) ? U.left(returnValue, 2) : returnValue;\n\n            return returnValue;\n        }\n    };\n\n    var pattern_bizno = {\n        getEnterableKeyCodes: function (_opts) {\n            var enterableKeyCodes = {\n                '189': '-'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function (_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            var regExpPattern = /^([0-9]{3})\\-?([0-9]{1,2})?\\-?([0-9]{1,5})?.*$/,\n                returnValue = val.replace(regExpPattern, function (a, b) {\n                    var nval = [arguments[1]];\n                    if (arguments[2]) nval.push(arguments[2]);\n                    if (arguments[3]) nval.push(arguments[3]);\n                    return nval.join(\"-\");\n                });\n\n            return returnValue;\n        }\n    };\n\n    var pattern_phone = {\n        getEnterableKeyCodes: function (_opts) {\n            var enterableKeyCodes = {\n                '189': '-', '188': ','\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function (_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            var regExpPattern3 = /^([0-9]{3})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n            if (val.substr(0, 2) == \"02\") {\n                regExpPattern3 = /^([0-9]{2})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n            }\n\n            var returnValue = val.replace(regExpPattern3, function (a, b) {\n                var nval = [arguments[1]];\n                if (arguments[2]) nval.push(arguments[2]);\n                if (arguments[3]) nval.push(arguments[3]);\n                if (arguments[4]) nval.push(arguments[4]);\n                if (arguments[5]) nval.push(arguments[5]);\n                return nval.join(\"-\");\n            });\n            return returnValue;\n        }\n    };\n\n    var pattern_credit = {\n        getEnterableKeyCodes: function (_opts) {\n            var enterableKeyCodes = {\n                '189': '-'\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function (_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\").substring(0, 16);\n\n            var regExpPattern3 = /^([0-9]{4})\\-?([0-9]{4})?\\-?([0-9]{4})?\\-?([0-9]{4})?/,\n                returnValue = val.replace(regExpPattern3, function (a, b) {\n                    var nval = [arguments[1]];\n                    if (arguments[2]) nval.push(arguments[2]);\n                    if (arguments[3]) nval.push(arguments[3]);\n                    if (arguments[4]) nval.push(arguments[4]);\n                    return nval.join(\"-\");\n                });\n            return returnValue;\n        }\n    };\n\n    var pattern_custom = {\n        getEnterableKeyCodes: function (_opts) {\n            if (_opts.getEnterableKeyCodes) {\n                return _opts.getEnterableKeyCodes.call(_opts, {$input: _opts.$input});\n            }\n            else {\n                return null;\n            }\n        },\n        getPatternValue: function (_opts, optIdx, e, val, eType) {\n            if (_opts.getPatternValue) {\n                return _opts.getPatternValue.call(_opts, {event: e, $input: _opts.$input, value: val});\n            }\n        }\n    };\n\n    FORMATTER.formatter = {\n        ctrlKeys: ctrlKeys,\n        numKeys: numKeys,\n        money: pattern_money,\n        number: pattern_number,\n        date: pattern_date,\n        time: pattern_time,\n        bizno: pattern_bizno,\n        phone: pattern_phone,\n        credit: pattern_credit,\n        custom: pattern_custom\n    };\n\n})();","// ax5.ui.menu\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MENU;\n\n    UI.addClass({\n        className: \"menu\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5.ui.menu\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var menu = new ax5.ui.menu({\n         *     theme: 'primary',\n         *     iconWidth: 20,\n         *     acceleratorWidth: 100,\n         *     itemClickAndClose: false,\n         *     icons: {\n         *         'arrow': '<i class=\"fa fa-caret-right\"></i>'\n         *     },\n         *     columnKeys: {\n         *         label: 'name',\n         *         items: 'chidren'\n         *     },\n         *     items: [\n         *         {\n         *             icon: '<i class=\"fa fa-archive\"></i>',\n         *             name: \"Menu Parent 0\",\n         *             chidren: [\n         *                 {\n         *                     check: {\n         *                         type: 'checkbox',\n         *                         name: 'A',\n         *                         value: '0',\n         *                         checked: false\n         *                     },\n         *                     name: \"Menu Z\",\n         *                     data: {},\n         *                     role: \"\",\n         *                     accelerator: \"CmdOrCtrl+Z\"\n         *                 },\n         *                 {\n         *                     check: {\n         *                         type: 'checkbox',\n         *                         name: 'A',\n         *                         value: '1',\n         *                         checked: true\n         *                     },\n         *                     name: \"Menu A\",\n         *                     data: {},\n         *                     role: \"\"\n         *                 }\n         *             ],\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             divide: true,\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             icon: '<i class=\"fa fa-mixcloud\"></i>',\n         *             name: \"Menu Parent 1\",\n         *             chidren: [\n         *                 {\n         *                     name: \"Menu Z\",\n         *                     data: {},\n         *                     role: \"\",\n         *                     chidren: [\n         *                         {\n         *                             name: \"Menu Z\",\n         *                             data: {},\n         *                             role: \"\"\n         *                         },\n         *                         {\n         *                             name: \"Menu A\",\n         *                             data: {},\n         *                             role: \"\"\n         *                         }\n         *                     ]\n         *                 },\n         *                 {\n         *                     name: \"Menu A\",\n         *                     data: {},\n         *                     role: \"\"\n         *                 }\n         *             ],\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '1',\n         *                 checked: false\n         *             },\n         *             icon: '<i class=\"fa fa-bluetooth\"></i>',\n         *             name: \"Menu Parent 2\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '2',\n         *                 checked: false\n         *             },\n         *             name: \"Menu Parent 3\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '3',\n         *                 checked: false\n         *             },\n         *             name: \"Menu Parent 4\"\n         *         },\n         *         {divide: true},\n         *         {\n         *             html: function () {\n         *                 return '<div style=\"text-align: center;\">' +\n         *                     '<button class=\"btn btn-primary\" data-menu-btn=\"OK\">OK</button> ' +\n         *                     '<button class=\"btn btn-danger\" data-menu-btn=\"CANCEL\">CANCEL</button>' +\n         *                     '</div>';\n         *             }\n         *         }\n         *     ]\n         * });\n         * ```\n         */\n        var ax5menu = function () {\n            var\n                self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: \"default\",\n                iconWidth: 22,\n                acceleratorWidth: 100,\n                menuBodyPadding: 5,\n                //direction: \"top\", // top|bottom\n                offset: {left: 0, top: 0},\n                position: \"fixed\",\n                animateTime: 250,\n                items: [],\n                itemClickAndClose: true,\n                columnKeys: {\n                    label: 'label',\n                    items: 'items'\n                }\n            };\n\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.queue = [];\n            this.menuBar = {};\n            this.state = undefined;\n\n            cfg = this.config;\n\n            var\n                appEventAttach = function (active) {\n                    if (active) {\n                        jQuery(document).unbind(\"click.ax5menu-\" + this.menuId).bind(\"click.ax5menu-\" + this.menuId, clickItem.bind(this));\n                        jQuery(window).unbind(\"keydown.ax5menu-\" + this.menuId).bind(\"keydown.ax5menu-\" + this.menuId, function (e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                self.close();\n                            }\n                        });\n                        jQuery(window).unbind(\"resize.ax5menu-\" + this.menuId).bind(\"resize.ax5menu-\" + this.menuId, function (e) {\n                            self.close();\n                        });\n                    }\n                    else {\n                        jQuery(document).unbind(\"click.ax5menu-\" + this.menuId);\n                        jQuery(window).unbind(\"keydown.ax5menu-\" + this.menuId);\n                        jQuery(window).unbind(\"resize.ax5menu-\" + this.menuId);\n                    }\n                },\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    self.state = that.state;\n                    opts = null;\n                    that = null;\n                    return true;\n                },\n                onLoad = function (that) {\n                    if (this.onLoad) {\n                        this.onLoad.call(that, that);\n                    }\n\n                    that = null;\n                    return true;\n                },\n                popup = function (opt, items, depth, path) {\n                    var\n                        data = opt,\n                        activeMenu,\n                        removed\n                        ;\n\n                    data.theme = opt.theme || cfg.theme;\n                    data.cfg = {\n                        icons: jQuery.extend({}, cfg.icons),\n                        iconWidth: opt.iconWidth || cfg.iconWidth,\n                        acceleratorWidth: opt.acceleratorWidth || cfg.acceleratorWidth\n                    };\n\n                    items.forEach(function (n) {\n                        if (n.html || n.divide) {\n                            n['@isMenu'] = false;\n                            if (n.html) {\n                                n['@html'] = n.html.call({\n                                    item: n,\n                                    config: cfg,\n                                    opt: opt\n                                });\n                            }\n                        }\n                        else {\n                            n['@isMenu'] = true;\n                        }\n                    });\n\n                    data[cfg.columnKeys.items] = items;\n                    data['@depth'] = depth;\n                    data['@path'] = path || \"root\";\n                    data['@hasChild'] = function () {\n                        return this[cfg.columnKeys.items] && this[cfg.columnKeys.items].length > 0;\n                    };\n                    activeMenu = jQuery(MENU.tmpl.get.call(this, \"tmpl\", data, cfg.columnKeys));\n                    jQuery(document.body).append(activeMenu);\n\n                    // remove queue\n\n                    removed = this.queue.splice(depth);\n                    removed.forEach(function (n) {\n                        n.$target.remove();\n                    });\n\n                    this.queue.push({\n                        '$target': activeMenu,\n                        'data': jQuery.extend({}, data)\n                    });\n\n                    activeMenu.find('[data-menu-item-index]').bind(\"mouseover\", function () {\n                        var\n                            depth = this.getAttribute(\"data-menu-item-depth\"),\n                            index = this.getAttribute(\"data-menu-item-index\"),\n                            path = this.getAttribute(\"data-menu-item-path\"),\n                            $this,\n                            offset,\n                            scrollTop,\n                            childOpt,\n                            _items,\n                            _activeMenu;\n\n                        if (depth != null && typeof depth != \"undefined\") {\n                            _items = self.queue[depth].data[cfg.columnKeys.items][index][cfg.columnKeys.items];\n                            _activeMenu = self.queue[depth].$target;\n                            _activeMenu.find('[data-menu-item-index]').removeClass(\"hover\");\n                            jQuery(this).addClass(\"hover\");\n\n                            if (_activeMenu.attr(\"data-selected-menu-item-index\") != index) {\n                                _activeMenu.attr(\"data-selected-menu-item-index\", index);\n\n                                if (_items && _items.length > 0) {\n\n                                    $this = jQuery(this);\n                                    offset = $this.offset();\n                                    scrollTop = (cfg.position == \"fixed\" ? jQuery(document).scrollTop() : 0);\n                                    childOpt = {\n                                        '@parent': {\n                                            left: offset.left,\n                                            top: offset.top,\n                                            width: $this.outerWidth(),\n                                            height: $this.outerHeight()\n                                        },\n                                        left: offset.left + $this.outerWidth() - cfg.menuBodyPadding,\n                                        top: offset.top - cfg.menuBodyPadding - 1 - scrollTop\n                                    };\n\n                                    childOpt = jQuery.extend(true, opt, childOpt);\n                                    popup.call(self, childOpt, _items, (Number(depth) + 1), path);\n                                }\n                                else {\n                                    self.queue.splice(Number(depth) + 1).forEach(function (n) {\n                                        n.$target.remove();\n                                    });\n                                }\n                            }\n                        }\n\n                        depth = null;\n                        index = null;\n                        path = null;\n                        $this = null;\n                        offset = null;\n                        scrollTop = null;\n                        childOpt = null;\n                        _items = null;\n                        _activeMenu = null;\n                    });\n\n                    // mouse out\n                    activeMenu.find('[data-menu-item-index]').bind(\"mouseout\", function () {\n                        var depth = this.getAttribute(\"data-menu-item-depth\"),\n                            index = this.getAttribute(\"data-menu-item-index\"),\n                            path = this.getAttribute(\"data-menu-item-path\"),\n                            _items;\n\n                        _items = self.queue[depth].data[cfg.columnKeys.items][index][cfg.columnKeys.items];\n                        if (_items && _items.length > 0) {\n\n                        }else{\n                            jQuery(this).removeClass(\"hover\");\n                        }\n                    });\n\n                    // is Root\n                    if (depth == 0) {\n                        if (data.direction) activeMenu.addClass(\"direction-\" + data.direction);\n                        onStateChanged.call(this, null, {\n                            self: this,\n                            items: items,\n                            parent: (function (path) {\n                                if (!path) return false;\n                                var item = null;\n                                try {\n                                    item = (Function(\"\", \"return this.config.items[\" + path.substring(5).replace(/\\./g, '].items[') + \"];\")).call(self);\n                                } catch (e) {\n\n                                }\n                                return item;\n                            })(data['@path']),\n                            state: \"popup\"\n                        });\n                    }\n\n                    align.call(this, activeMenu, data);\n                    onLoad.call(this, {\n                        self: this,\n                        items: items,\n                        element: activeMenu.get(0)\n                    });\n\n                    data = null;\n                    activeMenu = null;\n                    removed = null;\n                    opt = null;\n                    items = null;\n                    depth = null;\n                    path = null;\n\n                    return this;\n                },\n                clickItem = function (e, target, item) {\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-menu-item-index\")) {\n                            return true;\n                        }\n                    });\n                    if (target) {\n                        item = (function (path) {\n                            if (!path) return false;\n                            var item;\n                            try {\n                                item = (Function(\"\", \"return this.config.items[\" + path.substring(5).replace(/\\./g, '].' + cfg.columnKeys.items + '[') + \"];\")).call(self);\n                            } catch (e) {\n                                console.log(ax5.info.getError(\"ax5menu\", \"501\", \"menuItemClick\"));\n                            }\n\n                            try {\n                                return item;\n                            }\n                            finally {\n                                item = null;\n                            }\n                        })(target.getAttribute(\"data-menu-item-path\"));\n\n                        if (!item) return this;\n\n                        if (item.check) {\n                            (function (items) {\n                                var setValue = {\n                                    'checkbox': function (value) {\n                                        this.checked = !value;\n                                    },\n                                    'radio': function (value) {\n                                        var name = this.name;\n                                        items.forEach(function (n) {\n                                            if (n.check && n.check.type === 'radio' && n.check.name == name) {\n                                                n.check.checked = false;\n                                            }\n                                        });\n                                        this.checked = !value;\n                                    }\n                                };\n                                if (setValue[this.type]) setValue[this.type].call(this, this.checked);\n                                setValue = null;\n                            }).call(item.check, cfg.items);\n\n                            if (!cfg.itemClickAndClose) {\n                                self.queue.forEach(function (n) {\n                                    n.$target.find('[data-menu-item-index]').each(function () {\n                                        var item = n.data[cfg.columnKeys.items][this.getAttribute(\"data-menu-item-index\")];\n                                        if (item.check) {\n                                            jQuery(this).find(\".item-checkbox-wrap\").attr(\"data-item-checked\", item.check.checked);\n                                        }\n                                    });\n                                });\n                            }\n                        }\n\n                        if (self.onClick) {\n                            self.onClick.call(item, item);\n                        }\n                        if ((!item[cfg.columnKeys.items] || item[cfg.columnKeys.items].length == 0) && cfg.itemClickAndClose) self.close();\n                    }\n                    else {\n                        self.close();\n                    }\n\n                    target = null;\n                    item = null;\n                    return this;\n                },\n                align = function (activeMenu, data) {\n                    //console.log(data['@parent']);\n                    var\n                        $window = jQuery(window),\n                        $document = jQuery(document),\n                        wh = (cfg.position == \"fixed\") ? $window.height() : $document.height(),\n                        ww = $window.width(),\n                        h = activeMenu.outerHeight(),\n                        w = activeMenu.outerWidth(),\n                        l = data.left,\n                        t = data.top,\n                        position = cfg.position || \"fixed\";\n\n                    if (l + w > ww) {\n                        if (data['@parent']) {\n                            l = data['@parent'].left - w + cfg.menuBodyPadding;\n                        }\n                        else {\n                            l = ww - w;\n                        }\n                    }\n\n                    if (t + h > wh) {\n                        t = wh - h;\n                    }\n\n                    activeMenu.css({left: l, top: t, position: position});\n\n                    activeMenu = null;\n                    data = null;\n                    $window = null;\n                    $document = null;\n                    wh = null;\n                    ww = null;\n                    h = null;\n                    w = null;\n                    l = null;\n                    t = null;\n                    position = null;\n                    return this;\n                };\n\n            /// private end\n\n            this.init = function () {\n                self.menuId = ax5.getGuid();\n\n                /**\n                 * config에 선언된 이벤트 함수들을 this로 이동시켜 주어 나중에 인스턴스.on... 으로 처리 가능 하도록 변경\n                 */\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"init\"\n                });\n            };\n\n            /**\n             * @method ax5.ui.menu.popup\n             * @param {Event|Object} e - Event or Object\n             * @param {Object} [opt]\n             * @param {String} [opt.theme]\n             * @param {Function} [opt.filter]\n             * @returns {ax5.ui.menu} this\n             */\n            this.popup = (function () {\n\n                var getOption = {\n                    'event': function (e, opt) {\n                        //var xOffset = Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);\n                        //var yOffset = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n                        //console.log(e.pageY);\n\n                        e = {\n                            left: e.clientX,\n                            top: (cfg.position == \"fixed\") ? e.clientY : e.pageY,\n                            width: cfg.width,\n                            theme: cfg.theme\n                        };\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) e.left += cfg.offset.left;\n                            if (cfg.offset.top) e.top += cfg.offset.top;\n                        }\n                        opt = jQuery.extend(true, e, opt);\n\n                        try {\n                            return opt;\n                        }\n                        finally {\n                            e = null;\n                            //opt = null;\n                        }\n                    },\n                    'object': function (e, opt) {\n                        e = {\n                            left: e.left,\n                            top: e.top,\n                            width: e.width || cfg.width,\n                            theme: e.theme || cfg.theme\n                        };\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) e.left += cfg.offset.left;\n                            if (cfg.offset.top) e.top += cfg.offset.top;\n                        }\n\n                        opt = jQuery.extend(true, e, opt);\n\n                        try {\n                            return opt;\n                        }\n                        finally {\n                            e = null;\n                            //opt = null;\n                        }\n                    }\n                };\n                var updateTheme = function (theme) {\n                    if (theme) cfg.theme = theme;\n                };\n\n                return function (e, opt) {\n\n                    if (!e) return this;\n                    opt = getOption[((typeof e.clientX == \"undefined\") ? \"object\" : \"event\")].call(this, e, opt);\n                    updateTheme(opt.theme);\n\n                    var items = [].concat(cfg.items);\n                    if (opt.filter) {\n                        var filteringItem = function (_items) {\n                            var arr = [];\n                            _items.forEach(function (n) {\n                                if (n.items && n.items.length > 0) {\n                                    n.items = filteringItem(n.items);\n                                }\n                                if (opt.filter.call(n)) {\n                                    arr.push(n);\n                                }\n                            });\n                            return arr;\n                        };\n                        items = filteringItem(items);\n                    }\n\n                    if (items.length) {\n                        popup.call(this, opt, items, 0); // 0 is seq of queue\n                        appEventAttach.call(this, true); // 이벤트 연결\n                    }\n\n                    e = null;\n                    //opt = null;\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5.ui.menu.attach\n             * @param {Element|jQueryObject} el\n             * @returns {ax5.ui.menu} this\n             */\n            this.attach = (function () {\n\n                var getOption = {\n                    'object': function (e, opt) {\n                        e = {\n                            left: e.left,\n                            top: e.top,\n                            width: e.width || cfg.width,\n                            theme: e.theme || cfg.theme,\n                            direction: e.direction || cfg.direction\n                        };\n                        opt = jQuery.extend(true, opt, e);\n\n                        try {\n                            return opt;\n                        }\n                        finally {\n                            e = null;\n                            opt = null;\n                        }\n                    }\n                };\n\n                var popUpChildMenu = function (target, opt, eType) {\n                    var\n                        $target = jQuery(target),\n                        offset = $target.offset(),\n                        height = $target.outerHeight(),\n                        index = Number(target.getAttribute(\"data-menu-item-index\")),\n                        scrollTop = (cfg.position == \"fixed\") ? jQuery(document).scrollTop() : 0;\n\n\n                    if (cfg.items && cfg.items[index][cfg.columnKeys.items] && cfg.items[index][cfg.columnKeys.items].length) {\n\n                        if (self.menuBar.openedIndex == index) {\n                            if (eType == \"click\") self.close();\n                            return false;\n                        }\n\n                        self.menuBar.target.find('[data-menu-item-index]').removeClass(\"hover\");\n                        self.menuBar.opened = true;\n                        self.menuBar.openedIndex = index;\n\n                        $target.attr(\"data-menu-item-opened\", \"true\");\n                        $target.addClass(\"hover\");\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) offset.left += cfg.offset.left;\n                            if (cfg.offset.top) offset.top += cfg.offset.top;\n                        }\n\n                        opt = getOption[\"object\"].call(this, {left: offset.left, top: offset.top + height - scrollTop}, opt);\n\n                        popup.call(self, opt, cfg.items[index][cfg.columnKeys.items], 0, 'root.' + target.getAttribute(\"data-menu-item-index\")); // 0 is seq of queue\n                        appEventAttach.call(self, true); // 이벤트 연결\n                    }\n\n                    target = null;\n                    opt = null;\n                    $target = null;\n                    offset = null;\n                    height = null;\n                    index = null;\n                    scrollTop = null;\n                };\n                var clickParentMenu = function (target, opt, eType) {\n                    var\n                        $target = jQuery(target),\n                        offset = $target.offset(),\n                        height = $target.outerHeight(),\n                        index = Number(target.getAttribute(\"data-menu-item-index\")),\n                        scrollTop = (cfg.position == \"fixed\") ? jQuery(document).scrollTop() : 0;\n                    if (cfg.items && (!cfg.items[index][cfg.columnKeys.items] || cfg.items[index][cfg.columnKeys.items].length == 0)) {\n                        if (self.onClick) {\n                            self.onClick.call(cfg.items[index], cfg.items[index]);\n                        }\n                    }\n                };\n\n                return function (el, opt) {\n                    var\n                        data = {},\n                        items = cfg.items,\n                        activeMenu;\n\n                    if (typeof opt === \"undefined\") opt = {};\n\n                    data.theme = opt.theme || cfg.theme;\n                    data.cfg = {\n                        icons: jQuery.extend({}, cfg.icons),\n                        iconWidth: opt.iconWidth || cfg.iconWidth,\n                        acceleratorWidth: opt.acceleratorWidth || cfg.acceleratorWidth\n                    };\n\n                    items.forEach(function (n) {\n                        if (n.html || n.divide) {\n                            n['@isMenu'] = false;\n                            if (n.html) {\n                                n['@html'] = n.html.call({\n                                    item: n,\n                                    config: cfg,\n                                    opt: opt\n                                });\n                            }\n                        }\n                        else {\n                            n['@isMenu'] = true;\n                        }\n                    });\n\n                    data[cfg.columnKeys.items] = items;\n\n                    activeMenu = jQuery(MENU.tmpl.get.call(this, \"tmplMenubar\", data, cfg.columnKeys));\n                    self.menuBar = {\n                        target: jQuery(el),\n                        opened: false\n                    };\n                    self.menuBar.target.html(activeMenu);\n\n                    // click, mouseover\n                    self.menuBar.target.bind(\"click\", function (e) {\n                        if (!e) return this;\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-menu-item-index\")) {\n                                return true;\n                            }\n                        });\n                        if (target) {\n                            clickParentMenu(target, opt, \"click\");\n                            popUpChildMenu(target, opt, \"click\");\n                        }\n\n                        target = null;\n                    });\n                    self.menuBar.target.bind(\"mouseover\", function (e) {\n                        if (!self.menuBar.opened) return false;\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-menu-item-index\")) {\n                                return true;\n                            }\n                        });\n                        if (target) popUpChildMenu(target, opt, \"mouseover\");\n\n                        target = null;\n                    });\n\n                    el = null;\n                    opt = null;\n                    data = null;\n                    items = null;\n                    activeMenu = null;\n\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5.ui.menu.close\n             * @returns {ax5.ui.menu} this\n             */\n            this.close = function () {\n\n                if (self.menuBar && self.menuBar.target) {\n                    self.menuBar.target.find('[data-menu-item-index]').removeClass(\"hover\");\n                    self.menuBar.opened = false;\n                    self.menuBar.openedIndex = null;\n                }\n\n                appEventAttach.call(this, false); // 이벤트 제거\n\n                this.queue.forEach(function (n) {\n                    n.$target.remove();\n                });\n                this.queue = [];\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                return this;\n            };\n\n            /**\n             * @method ax5.ui.menu.getCheckValue\n             * @returns {Object} statusCheckItem\n             */\n            this.getCheckValue = function () {\n                var checkItems = {},\n                    collectItem = function (items) {\n                        var i = items.length;\n                        while (i--) {\n                            if (items[i].check && items[i].check.checked) {\n                                if (!checkItems[items[i].check.name]) checkItems[items[i].check.name] = items[i].check.value;\n                                else {\n                                    if (U.isString(checkItems[items[i].check.name])) checkItems[items[i].check.name] = [checkItems[items[i].check.name]];\n                                    checkItems[items[i].check.name].push(items[i].check.value);\n                                }\n                            }\n                            if (items[i].items && items[i].items.length > 0) collectItem(items[i].items);\n                        }\n                    };\n\n                collectItem(cfg.items);\n\n                try {\n                    return checkItems;\n                }\n                finally {\n                    checkItems = null;\n                    collectItem = null;\n                }\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.menu_instance = UI.menu_instance || [];\n                UI.menu_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5menu;\n    })());\n\n    MENU = ax5.ui.menu;\n})();\n\n// todo : menu 드랍다운 아이콘 설정 기능 추가","// ax5.ui.menu.tmpl\n(function () {\n    var MENU = ax5.ui.menu;\n    \n    var tmpl = function (columnKeys) {\n        return `\n        <div class=\"ax5-ui-menu {{theme}}\" {{#width}}style=\"width:{{width}}px;\"{{/width}}>\n            <div class=\"ax-menu-body\">\n                {{#${columnKeys.items}}}\n                    {{^@isMenu}}\n                        {{#divide}}\n                        <div class=\"ax-menu-item-divide\" data-menu-item-index=\"{{@i}}\"></div>\n                        {{/divide}}\n                        {{#html}}\n                        <div class=\"ax-menu-item-html\" data-menu-item-index=\"{{@i}}\">{{{@html}}}</div>\n                        {{/html}}\n                    {{/@isMenu}}\n                    {{#@isMenu}}\n                    <div class=\"ax-menu-item\" data-menu-item-depth=\"{{@depth}}\" data-menu-item-index=\"{{@i}}\" data-menu-item-path=\"{{@path}}.{{@i}}\">\n                        <span class=\"ax-menu-item-cell ax-menu-item-checkbox\">\n                            {{#check}}\n                            <span class=\"item-checkbox-wrap useCheckBox\" {{#checked}}data-item-checked=\"true\"{{/checked}}></span>\n                            {{/check}}\n                            {{^check}}\n                            <span class=\"item-checkbox-wrap\"></span>\n                            {{/check}}\n                        </span>\n                        {{#icon}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-icon\" style=\"width:{{cfg.iconWidth}}px;\">{{{.}}}</span>\n                        {{/icon}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-label\">{{{${columnKeys.label}}}}</span>\n                        {{#accelerator}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-accelerator\" style=\"width:{{cfg.acceleratorWidth}}px;\"><span class=\"item-wrap\">{{.}}</span></span>\n                        {{/accelerator}}\n                        {{#@hasChild}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-handle\">{{{cfg.icons.arrow}}}</span>\n                        {{/@hasChild}}\n                    </div>\n                    {{/@isMenu}}\n\n                {{/${columnKeys.items}}}\n            </div>\n            <div class=\"ax-menu-arrow\"></div>\n        </div>\n        `;\n    };\n    var tmplMenubar =  function (columnKeys) {\n        return `\n        <div class=\"ax5-ui-menubar {{theme}}\">\n            <div class=\"ax-menu-body\">\n                {{#${columnKeys.items}}}\n                    {{^@isMenu}}\n                        {{#divide}}\n                        <div class=\"ax-menu-item-divide\" data-menu-item-index=\"{{@i}}\"></div>\n                        {{/divide}}\n                        {{#html}}\n                        <div class=\"ax-menu-item-html\" data-menu-item-index=\"{{@i}}\">{{{@html}}}</div>\n                        {{/html}}\n                    {{/@isMenu}}\n                    {{#@isMenu}}\n                    <div class=\"ax-menu-item\" data-menu-item-index=\"{{@i}}\">\n                        {{#icon}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-icon\" style=\"width:{{cfg.iconWidth}}px;\">{{{.}}}</span>\n                        {{/icon}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-label\">{{{${columnKeys.label}}}}</span>\n                    </div>\n                    {{/@isMenu}}\n                {{/${columnKeys.items}}}\n            </div>\n        </div>\n        `;\n    };\n\n    MENU.tmpl = {\n        \"tmpl\" : tmpl,\n        \"tmplMenubar\" : tmplMenubar,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MENU.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","// ax5.ui.select\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var SELECT;\n\n    UI.addClass({\n        className: \"select\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5select\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * for (var i = 0; i < 20; i++) {\n         *     options.push({value: i, text: \"optionText\" + i});\n         * }\n\n         * var mySelect = new ax5.ui.select({\n         *     theme: \"danger\"\n         * });\n\n         * mySelect.bind({\n         *     theme: \"primary\",\n         *     target: $('[data-ax5select=\"select1\"]'),\n         *     options: options,\n         *     onChange: function () {\n         *         console.log(this);\n         *     },\n         *     onClose: function () {\n         *         console.log(this);\n         *     },\n         *     onStateChanged: function () {\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        var ax5select = function () {\n            var\n                self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 100,\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'now loading..',\n                    multipleLabel: '\"{{label}}\"외 {{length}}건'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n            this.queue = [];\n            this.activeSelectOptionGroup = null;\n            this.activeSelectQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n            this.xvar = {};\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var\n                ctrlKeys = {\n                    \"18\": \"KEY_ALT\",\n                    \"8\": \"KEY_BACKSPACE\",\n                    \"17\": \"KEY_CONTROL\",\n                    \"46\": \"KEY_DELETE\",\n                    \"40\": \"KEY_DOWN\",\n                    \"35\": \"KEY_END\",\n                    \"187\": \"KEY_EQUAL\",\n                    \"27\": \"KEY_ESC\",\n                    \"36\": \"KEY_HOME\",\n                    \"45\": \"KEY_INSERT\",\n                    \"37\": \"KEY_LEFT\",\n                    \"189\": \"KEY_MINUS\",\n                    \"34\": \"KEY_PAGEDOWN\",\n                    \"33\": \"KEY_PAGEUP\",\n                    // \"190\": \"KEY_PERIOD\",\n                    \"13\": \"KEY_RETURN\",\n                    \"39\": \"KEY_RIGHT\",\n                    \"16\": \"KEY_SHIFT\",\n                    // \"32\": \"KEY_SPACE\",\n                    \"9\": \"KEY_TAB\",\n                    \"38\": \"KEY_UP\",\n                    \"91\": \"KEY_WINDOW\"\n                    //\"107\" : \"NUMPAD_ADD\",\n                    //\"194\" : \"NUMPAD_COMMA\",\n                    //\"110\" : \"NUMPAD_DECIMAL\",\n                    //\"111\" : \"NUMPAD_DIVIDE\",\n                    //\"12\" : \"NUMPAD_EQUAL\",\n                    //\"106\" : \"NUMPAD_MULTIPLY\",\n                    //\"109\" : \"NUMPAD_SUBTRACT\"\n                },\n                onStateChanged = function (item, that) {\n                    if (item && item.onStateChanged) {\n                        item.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    if (that.state == \"changeValue\") {\n                        if (item && item.onChange) {\n                            item.onChange.call(that, that);\n                        }\n                        else if (this.onChange) {\n                            this.onChange.call(that, that);\n                        }\n                    }\n\n                    item = null;\n                    that = null;\n                    return true;\n                },\n                alignSelectDisplay = function () {\n                    var i = this.queue.length, w;\n                    while (i--) {\n                        if (this.queue[i].$display) {\n                            w = Math.max(this.queue[i].$select.outerWidth(), U.number(this.queue[i].minWidth));\n                            this.queue[i].$display.css({\n                                \"min-width\": w\n                            });\n                            if (this.queue[i].reset) {\n                                this.queue[i].$display.find(\".addon-icon-reset\").css({\n                                    \"line-height\": this.queue[i].$display.height() + \"px\"\n                                });\n                            }\n                        }\n                    }\n\n                    i = null;\n                    w = null;\n                    return this;\n                },\n                alignSelectOptionGroup = function (append) {\n                    if (!this.activeSelectOptionGroup) return this;\n\n                    var item = this.queue[this.activeSelectQueueIndex],\n                        pos = {}, positionMargin = 0,\n                        dim = {}, pickerDim = {},\n                        pickerDirection;\n\n                    if (append) jQuery(document.body).append(this.activeSelectOptionGroup);\n\n                    pos = item.$target.offset();\n                    dim = {\n                        width: item.$target.outerWidth(),\n                        height: item.$target.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                        winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                        width: this.activeSelectOptionGroup.outerWidth(),\n                        height: this.activeSelectOptionGroup.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = item.direction;\n                    }\n                    // todo : 표현할 공간이 없다면..\n                    if (append) {\n                        this.activeSelectOptionGroup\n                            .addClass(\"direction-\" + pickerDirection);\n                    }\n                    this.activeSelectOptionGroup\n                        .css((function () {\n                            if (pickerDirection == \"top\") {\n                                if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                                    var newTop = pos.top + dim.height / 2 - pickerDim.height / 2;\n                                    if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                        newTop = 0;\n                                    }\n                                    if(newTop < 0){\n                                        newTop = 0;\n                                    }\n\n                                    return {\n                                        left: pos.left,\n                                        top: newTop,\n                                        width: dim.width\n                                    }\n                                }\n                                return {\n                                    left: pos.left,\n                                    top: pos.top + dim.height + 1,\n                                    width: dim.width\n                                }\n                            }\n                            else if (pickerDirection == \"bottom\") {\n                                return {\n                                    left: pos.left,\n                                    top: pos.top - pickerDim.height - 1,\n                                    width: dim.width\n                                }\n                            }\n                        }).call(this));\n                },\n                onBodyClick = function (e, target) {\n                    if (!this.activeSelectOptionGroup) return this;\n\n                    var\n                        item = this.queue[this.activeSelectQueueIndex],\n                        clickEl = \"display\"\n                        ;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-option-value\")) {\n                            clickEl = \"optionItem\";\n                            return true;\n                        }\n                        else if (item.$target.get(0) == target) {\n                            clickEl = \"display\";\n                            return true;\n                        }\n                    });\n\n                    if (!target) {\n                        this.close();\n                        return this;\n                    }\n                    else if (clickEl === \"optionItem\") {\n                        this.val(item.id, {\n                            index: {\n                                gindex: target.getAttribute(\"data-option-group-index\"),\n                                index: target.getAttribute(\"data-option-index\")\n                            }\n                        }, undefined, \"internal\");\n                        item.$select.trigger(\"change\");\n                        item.$display.focus();\n                        if (!item.multiple) this.close();\n                    }\n                    else {\n                        //open and display click\n                        //console.log(this.instanceId);\n                    }\n\n                    return this;\n                },\n                onBodyKeyup = function (e) {\n                    if (e.keyCode == ax5.info.eventKeys.ESC) {\n                        this.close();\n                    }\n                    else if (e.which == ax5.info.eventKeys.RETURN) {\n                        if (this.queue[this.activeSelectQueueIndex].optionFocusIndex > -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                            var $option = this.activeSelectOptionGroup.find('[data-option-focus-index=\"' + this.queue[this.activeSelectQueueIndex].optionFocusIndex + '\"]');\n                            this.val(this.queue[this.activeSelectQueueIndex].id, {\n                                index: {\n                                    gindex: $option.attr(\"data-option-group-index\"),\n                                    index: $option.attr(\"data-option-index\")\n                                }\n                            }, undefined, \"internal\");\n                            this.queue[this.activeSelectQueueIndex].$select.trigger(\"change\");\n                            if (!this.queue[this.activeSelectQueueIndex].multiple) this.close();\n                        } else {\n                            this.close();\n                        }\n                    }\n                },\n                getLabel = function (queIdx) {\n                    var item = this.queue[queIdx];\n                    var labels = [];\n\n                    if (U.isArray(item.selected) && item.selected.length > 0) {\n                        item.selected.forEach(function (n) {\n                            if (n.selected) labels.push(n[item.columnKeys.optionText]);\n                        });\n                    }\n                    else {\n                        if (!item.multiple && item.options && item.options[0]) {\n                            if (item.options[0].optgroup) {\n                                labels[0] = item.options[0].options[0][item.columnKeys.optionText];\n                            }\n                            else {\n                                labels[0] = item.options[0][item.columnKeys.optionText];\n                            }\n                        }\n                        else {\n                            labels[0] = item.lang.noSelected;\n                        }\n                    }\n\n                    return (function () {\n                        if (item.multiple && labels.length > 1) {\n                            var data = {\n                                label: labels[0],\n                                length: labels.length - 1\n                            };\n                            return ax5.mustache.render(item.lang.multipleLabel, data);\n                        }\n                        else {\n                            return labels[0];\n                        }\n                    })();\n                },\n                syncLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabel\n                        .html(getLabel.call(this, queIdx));\n                },\n                focusWord = function (queIdx, searchWord) {\n                    var options = [], i = -1, l = this.queue[queIdx].indexedOptions.length - 1, n;\n                    if (searchWord) {\n                        while (l - i++) {\n                            n = this.queue[queIdx].indexedOptions[i];\n                            if (('' + n.value).toLowerCase() == searchWord.toLowerCase()) {\n                                options = [{'@findex': n['@findex'], optionsSort: 0}];\n                                break;\n                            } else {\n                                var sort = ('' + n.value).toLowerCase().search(searchWord.toLowerCase());\n                                if (sort > -1) {\n                                    options.push({'@findex': n['@findex'], optionsSort: sort});\n                                    if (options.length > 2) break;\n                                }\n                                sort = null;\n                            }\n                        }\n                        options.sort(function (a, b) {\n                            return a.optionsSort - b.optionsSort;\n                        });\n                    }\n                    if (options && options.length > 0) {\n                        focusMove.call(this, queIdx, undefined, options[0]['@findex']);\n                    }\n\n                    try {\n                        return options;\n                    } finally {\n                        options = null;\n                        i = null;\n                        l = null;\n                        n = null;\n                    }\n                },\n                focusMove = function (queIdx, direction, findex) {\n                    var _focusIndex,\n                        _prevFocusIndex,\n                        focusOptionEl,\n                        optionGroupScrollContainer;\n                    if (this.activeSelectOptionGroup && this.queue[queIdx].options && this.queue[queIdx].options.length > 0) {\n\n                        if (typeof findex !== \"undefined\") {\n                            _focusIndex = findex\n                        }\n                        else {\n                            _prevFocusIndex = (this.queue[queIdx].optionFocusIndex == -1) ? this.queue[queIdx].optionSelectedIndex || -1 : this.queue[queIdx].optionFocusIndex;\n                            if (_prevFocusIndex == -1) {\n                                _focusIndex = (direction > 0) ? 0 : this.queue[queIdx].optionItemLength - 1;\n                            }\n                            else {\n                                _focusIndex = _prevFocusIndex + direction;\n                                if (_focusIndex < 0) _focusIndex = 0;\n                                else if (_focusIndex > this.queue[queIdx].optionItemLength - 1) _focusIndex = this.queue[queIdx].optionItemLength - 1;\n                            }\n                        }\n\n                        this.queue[queIdx].optionFocusIndex = _focusIndex;\n\n                        this.activeSelectOptionGroup\n                            .find('[data-option-focus-index]')\n                            .removeClass(\"hover\");\n\n                        focusOptionEl = this.activeSelectOptionGroup\n                            .find('[data-option-focus-index=\"' + _focusIndex + '\"]')\n                            .addClass(\"hover\");\n\n                        optionGroupScrollContainer = this.activeSelectOptionGroup.find('[data-els=\"content\"]');\n\n                        let focusOptionElHeight = focusOptionEl.outerHeight(),\n                            optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                            optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                            focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                        if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                            optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                        }\n                        else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                            optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                        }\n                        // optionGroup scroll check\n                    }\n                },\n                bindSelectTarget = (function () {\n                    var focusWordCall = U.debounce(function (searchWord, queIdx) {\n                        focusWord.call(self, queIdx, searchWord);\n                        self.queue[queIdx].$displayInput.val('');\n                    }, 300);\n\n                    var selectEvent = {\n                        'click': function (queIdx, e) {\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-selected-clear\")) {\n                                    //clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                this.val(queIdx, {clear: true});\n                            }\n                            else {\n                                if (self.activeSelectQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                }\n                                else {\n                                    self.open(queIdx);\n                                    U.stopEvent(e);\n                                }\n                            }\n                        },\n                        'keyUp': function (queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.SPACE) {\n                                selectEvent.click.call(this, queIdx, e);\n                            }\n                            else if (!ctrlKeys[e.which]) {\n                                // 사용자 입력이 뜸해지면 찾고 검색 값 제거...\n                                focusWordCall(this.queue[queIdx].$displayInput.val(), queIdx);\n                            }\n                        },\n                        'keyDown': function (queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        'blur': function (queIdx, e) {\n\n                        },\n                        'selectChange': function (queIdx, e) {\n                            this.val(queIdx, this.queue[queIdx].$select.val(), true);\n                        }\n                    };\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n                        item.selected = [];\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = (function () {\n                                return (item.size) ? \"input-\" + item.size : \"\";\n                            })();\n\n                            item.$display = SELECT.tmpl.get.call(this, \"tmpl\", data);\n                            item.$displayLabel = item.$display.find('[data-ax5select-display=\"label\"]');\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                // select 속성만 변경\n                                item.$select\n                                    .attr(\"tabindex\", \"-1\")\n                                    .attr(\"class\", \"form-control \" + data.formSize);\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                if (data.multiple) {\n                                    item.$select.attr(\"multiple\", \"multiple\");\n                                }\n                            }\n                            else {\n                                item.$select = SELECT.tmpl.get.call(this, \"selectTmpl\", data);\n                                item.$target.append(item.$select);\n                                // select append\n                            }\n\n                            item.$target.append(item.$display);\n                            item.$displayInput = item.$display.find('[data-ax5select-display=\"input\"]'); // 사용자 입력값을 받기위한 숨음 입력필드\n                            item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n                            alignSelectDisplay.call(this);\n\n                            item.$displayInput\n                                .unbind(\"blur.ax5select\")\n                                .bind(\"blur.ax5select\", selectEvent.blur.bind(this, queIdx))\n                                .unbind('keyup.ax5select')\n                                .bind('keyup.ax5select', selectEvent.keyUp.bind(this, queIdx))\n                                .unbind(\"keydown.ax5select\")\n                                .bind(\"keydown.ax5select\", selectEvent.keyDown.bind(this, queIdx));\n                        }\n                        else {\n                            item.$displayLabel\n                                .html(getLabel.call(this, queIdx));\n                            item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n                            alignSelectDisplay.call(this);\n                        }\n\n                        item.$display\n                            .unbind('click.ax5select')\n                            .bind('click.ax5select', selectEvent.click.bind(this, queIdx))\n                            .unbind('keyup.ax5select')\n                            .bind('keyup.ax5select', selectEvent.keyUp.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n                        item.$select\n                            .unbind('change.ax5select')\n                            .bind('change.ax5select', selectEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                })(),\n                syncSelectOptions = (function () {\n                    var setSelected = function (queIdx, O) {\n                        if (!O) {\n                            this.queue[queIdx].selected = [];\n                        }\n                        else {\n                            if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                            else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n                        }\n                    };\n\n                    return function (queIdx, options) {\n                        var item = this.queue[queIdx];\n                        var po, elementOptions, newOptions, focusIndex = 0;\n                        setSelected.call(this, queIdx, false); // item.selected 초기화\n\n                        if (options) {\n                            item.options = options;\n                            item.indexedOptions = [];\n\n                            // select options 태그 생성\n                            po = [];\n                            item.options.forEach(function (O, OIndex) {\n                                if (O.optgroup) {\n                                    // todo\n                                    O['@gindex'] = OIndex;\n                                    O.options.forEach(function (OO, OOIndex) {\n                                        OO['@index'] = OOIndex;\n                                        OO['@findex'] = focusIndex;\n                                        po.push('<option value=\"' + OO[item.columnKeys.optionValue] + '\" '\n                                            + (OO[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                                            + OO[item.columnKeys.optionText] + '</option>');\n                                        if (OO[item.columnKeys.optionSelected]) {\n                                            setSelected.call(self, queIdx, OO);\n                                        }\n\n                                        item.indexedOptions.push({\n                                            '@findex': focusIndex, value: OO[item.columnKeys.optionValue], text: OO[item.columnKeys.optionText]\n                                        });\n                                        focusIndex++;\n                                    });\n                                }\n                                else {\n                                    O['@index'] = OIndex;\n                                    O['@findex'] = focusIndex;\n                                    po.push('<option value=\"' + O[item.columnKeys.optionValue] + '\" '\n                                        + (O[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                                        + O[item.columnKeys.optionText] + '</option>');\n                                    if (O[item.columnKeys.optionSelected]) {\n                                        setSelected.call(self, queIdx, O);\n                                    }\n\n                                    item.indexedOptions.push({\n                                        '@findex': focusIndex, value: O[item.columnKeys.optionValue], text: O[item.columnKeys.optionText]\n                                    });\n                                    focusIndex++;\n                                }\n                            });\n\n                            item.optionItemLength = focusIndex;\n                            item.$select.html(po.join(''));\n                        }\n                        else {\n                            /// select > options 태그로 스크립트 options를 만들어주는 역할\n                            elementOptions = U.toArray(item.$select.get(0).options);\n                            // select option 스크립트 생성\n                            newOptions = [];\n                            elementOptions.forEach(function (O, OIndex) {\n                                var option = {};\n                                //if (O.value != \"\") {\n                                option[item.columnKeys.optionValue] = O.value;\n                                option[item.columnKeys.optionText] = O.text;\n                                option[item.columnKeys.optionSelected] = O.selected;\n                                option['@index'] = OIndex;\n                                option['@findex'] = OIndex;\n                                if (O.selected) setSelected.call(self, queIdx, option);\n                                newOptions.push(option);\n                                //}\n                                option = null;\n                            });\n                            item.options = newOptions;\n                            item.indexedOptions = newOptions;\n                        }\n\n                        if (!item.multiple && item.selected.length == 0 && item.options && item.options[0]) {\n                            if (item.options[0].optgroup) {\n                                item.options[0].options[0][item.columnKeys.optionSelected] = true;\n                                item.selected.push(jQuery.extend({}, item.options[0].options[0]));\n                            }\n                            else {\n                                item.options[0][item.columnKeys.optionSelected] = true;\n                                item.selected.push(jQuery.extend({}, item.options[0]));\n                            }\n                        }\n\n                        po = null;\n                        elementOptions = null;\n                        newOptions = null;\n                        return item.options;\n                    }\n                })(),\n                getQueIdx = function (boundID) {\n                    if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-ax5select-id\");\n                    }\n                    if (!U.isString(boundID)) {\n                        console.log(ax5.info.getError(\"ax5select\", \"402\", \"getQueIdx\"));\n                        return;\n                    }\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                };\n            /// private end\n\n            /**\n             * Preferences of select UI\n             * @method ax5select.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5select}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n\n                jQuery(window).bind(\"resize.ax5select-display-\" + this.instanceId, (function () {\n                    alignSelectDisplay.call(this);\n                }).bind(this));\n            };\n\n            /**\n             * bind select\n             * @method ax5select.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @returns {ax5select}\n             */\n            this.bind = function (item) {\n                var\n                    selectConfig = {},\n                    queIdx;\n\n\n                item = jQuery.extend(true, selectConfig, cfg, item);\n\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5select\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5select-id\");\n                if (!item.id) {\n                    item.id = 'ax5select-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5select-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5select\");\n\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5select-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindSelectTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx].selected = [];\n                    this.queue[queIdx].options = item.options;\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindSelectTarget.call(this, queIdx);\n                }\n\n                selectConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of select\n             * @method ax5select.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5select}\n             */\n            this.open = (function () {\n\n                var onExpand = function (item) {\n                    item.onExpand.call({\n                        self: this,\n                        item: item\n                    }, (function (O) {\n                        if (this.waitOptionsCallback) {\n                            var data = {};\n                            var item = this.queue[this.activeSelectQueueIndex];\n\n                            /// 현재 selected 검증후 처리\n                            (function (item, O) {\n                                var optionsMap = {};\n                                O.options.forEach(function (_O, _OIndex) {\n                                    _O[\"@index\"] = _OIndex;\n                                    optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                                });\n                                if (U.isArray(item.selected)) {\n                                    item.selected.forEach(function (_O) {\n                                        if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                            O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                        }\n                                    });\n                                }\n                            })(item, O);\n\n\n                            item.$displayLabel\n                                .html(getLabel.call(this, this.activeSelectQueueIndex));\n                            item.options = syncSelectOptions.call(this, this.activeSelectQueueIndex, O.options);\n\n                            alignSelectDisplay.call(this);\n\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.id = item.id;\n                            data.theme = item.theme;\n                            data.size = \"ax5select-option-group-\" + item.size;\n                            data.multiple = item.multiple;\n                            data.lang = item.lang;\n                            data.options = item.options;\n                            this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(SELECT.tmpl.get.call(this, \"optionsTmpl\", data, item.columnKeys));\n                        }\n                    }).bind(this));\n                };\n\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open select from the outside\n                     */\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {}, focusTop, selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activeSelectOptionGroup) {\n                        if (this.activeSelectQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout((function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }).bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5select-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-select-option-group-opened\", \"true\");\n                    //console.log(data.lang);\n\n                    if (item.onExpand) {\n                        // onExpand 인 경우 UI 대기모드 추가\n                        data.waitOptions = true;\n                    }\n\n                    data.options = item.options;\n                    this.activeSelectOptionGroup = SELECT.tmpl.get.call(this, \"optionGroupTmpl\", data);\n                    this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(SELECT.tmpl.get.call(this, \"optionsTmpl\", data, item.columnKeys));\n                    this.activeSelectQueueIndex = queIdx;\n\n                    alignSelectOptionGroup.call(this, \"append\"); // alignSelectOptionGroup 에서 body append\n                    jQuery(window).bind(\"resize.ax5select-\" + this.instanceId, (function () {\n                        alignSelectOptionGroup.call(this);\n                    }).bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activeSelectOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activeSelectOptionGroup.height() / 3;\n                            this.activeSelectOptionGroup.find('[data-els=\"content\"]')\n                                .stop().animate({scrollTop: focusTop}, item.animateTime, 'swing', function () {\n                            });\n                        }\n                    }\n\n                    /// 사용자 입력으로 옵션을 검색하기 위한 시나리오\n                    // 옵션그룹이 활성화 되면 사용자 입력을 받기위한 input 값 초기화 및 포커스 다른 select가 닫히면서 display focus 이벤트와 충돌하는 문제가 있으므로\n                    // 1밀리세컨 지연후 포커스 처리. input에 포커스가 되므로 input value로 options를 검색 할 수 있게 됩니다.\n                    item.$displayInput.val('');\n\n                    setTimeout((function () {\n                        item.$displayInput.trigger(\"focus\");\n\n                        jQuery(window).bind(\"keyup.ax5select-\" + this.instanceId, (function (e) {\n                            e = e || window.event;\n                            onBodyKeyup.call(this, e);\n                            U.stopEvent(e);\n                        }).bind(this));\n\n                        jQuery(window).bind(\"click.ax5select-\" + this.instanceId, (function (e) {\n                            e = e || window.event;\n                            onBodyClick.call(this, e);\n                            U.stopEvent(e);\n                        }).bind(this));\n\n                    }).bind(this), 300);\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    // waitOption timer\n                    if (item.onExpand) {\n                        this.waitOptionsCallback = true;\n                        onExpand.call(this, item);\n                    }\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5select.update\n             * @param {(Object|String)} item\n             * @returns {ax5select}\n             */\n            this.update = function (_item) {\n                this.bind(_item);\n                return this;\n            };\n\n            /**\n             * @method ax5select.val\n             * @param {(String|Number|Element)} boundID\n             * @param {(String|Object|Array)} [value]\n             * @param {Boolean} [selected]\n             * @returns {ax5select}\n             */\n            this.val = (function () {\n\n                // todo : val 함수 리팩토링 필요\n                var getSelected = function (_item, o, selected) {\n                    if (typeof selected === \"undefined\") {\n                        return (_item.multiple) ? !o : true;\n                    } else {\n                        return selected;\n                    }\n                };\n                var clearSelected = function (queIdx) {\n                    this.queue[queIdx].options.forEach(function (n) {\n                        if (n.optgroup) {\n                            n.options.forEach(function (nn) {\n                                nn.selected = false;\n                            });\n                        }\n                        else {\n                            n.selected = false;\n                        }\n                    });\n                };\n\n                var processor = {\n                    'index': function (queIdx, value, selected) {\n                        // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                        var item = this.queue[queIdx];\n\n                        /*\n                         if (U.isArray(value.index)) {\n                         value.index.forEach(function (n) {\n                         item.options[n][item.columnKeys.optionSelected] = getSelected(item, item.options[n][item.columnKeys.optionSelected], selected);\n                         self.activeSelectOptionGroup\n                         .find('[data-option-index=\"' + n + '\"]')\n                         .attr(\"data-option-selected\", item.options[n][item.columnKeys.optionSelected].toString());\n                         });\n                         }\n                         else {\n                         }\n                         */\n                        if (U.isString(value.index.gindex)) {\n                            item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected], selected);\n                            self.activeSelectOptionGroup\n                                .find('[data-option-group-index=\"' + value.index.gindex + '\"][data-option-index=\"' + value.index.index + '\"]')\n                                .attr(\"data-option-selected\", item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected].toString());\n                        }\n                        else {\n                            item.options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.index][item.columnKeys.optionSelected], selected);\n                            self.activeSelectOptionGroup\n                                .find('[data-option-index=\"' + value.index.index + '\"]')\n                                .attr(\"data-option-selected\", item.options[value.index.index][item.columnKeys.optionSelected].toString());\n\n                        }\n\n                        syncSelectOptions.call(this, queIdx, item.options);\n                        syncLabel.call(this, queIdx);\n                        alignSelectOptionGroup.call(this);\n                    },\n                    'arr': function (queIdx, values, selected) {\n                        values.forEach(function (value) {\n                            if (U.isString(value) || U.isNumber(value)) {\n                                processor.value.call(self, queIdx, value, selected);\n                            }\n                            else {\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(self, queIdx, value, selected);\n                                        break;\n                                    }\n                                }\n                            }\n                        });\n                    },\n                    'value': function (queIdx, value, selected) {\n                        var item = this.queue[queIdx];\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionValue] == value;\n                        });\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        }\n                        else {\n                            console.log(ax5.info.getError(\"ax5select\", \"501\", \"val\"));\n                            return;\n                        }\n\n                        syncSelectOptions.call(this, queIdx, item.options);\n                        syncLabel.call(this, queIdx);\n                    },\n                    'text': function (queIdx, value, selected) {\n                        var item = this.queue[queIdx];\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionText] == value;\n                        });\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        }\n                        else {\n                            console.log(ax5.info.getError(\"ax5select\", \"501\", \"val\"));\n                            return;\n                        }\n\n                        syncSelectOptions.call(this, queIdx, item.options);\n                        syncLabel.call(this, queIdx);\n                    },\n                    'clear': function (queIdx) {\n                        clearSelected.call(this, queIdx);\n                        syncSelectOptions.call(this, queIdx, this.queue[queIdx].options);\n                        syncLabel.call(this, queIdx);\n\n                        if (this.activeSelectOptionGroup) {\n                            this.activeSelectOptionGroup\n                                .find('[data-option-index]')\n                                .attr(\"data-option-selected\", \"false\");\n                        }\n                    }\n                };\n\n                return function (boundID, value, selected, internal) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5select\", \"402\", \"val\"));\n                        return;\n                    }\n\n                    // setValue 이면 현재 선택값 초기화\n                    if (typeof value !== \"undefined\" && !this.queue[queIdx].multiple) {\n                        clearSelected.call(this, queIdx);\n                    }\n\n                    if (typeof value == \"undefined\") {\n                        return this.queue[queIdx].selected;\n                    }\n                    else if (U.isArray(value)) {\n                        processor.arr.call(this, queIdx, value, selected);\n                    }\n                    else if (U.isString(value) || U.isNumber(value)) {\n                        processor.value.call(this, queIdx, value, selected);\n                    }\n                    else {\n                        if (value === null) {\n                            processor.clear.call(this, queIdx);\n                        }\n                        else {\n                            for (var key in processor) {\n                                if (value[key]) {\n                                    processor[key].call(this, queIdx, value, selected);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (typeof value !== \"undefined\") {\n                        onStateChanged.call(this, this.queue[queIdx], {\n                            self: this,\n                            item: this.queue[queIdx],\n                            state: (internal) ? \"changeValue\" : \"setValue\",\n                            value: this.queue[queIdx].selected,\n                            internal: internal\n                        });\n                    }\n\n                    boundID = null;\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5select.close\n             * @returns {ax5select}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activeSelectOptionGroup) return this;\n\n                item = this.queue[this.activeSelectQueueIndex];\n                item.optionFocusIndex = -1;\n\n                item.$displayInput.val('').trigger(\"blur\");\n                item.$display.removeAttr(\"data-select-option-group-opened\").trigger(\"focus\");\n\n                this.activeSelectOptionGroup.addClass(\"destroy\");\n\n                jQuery(window)\n                    .unbind(\"resize.ax5select-\" + this.instanceId)\n                    .unbind(\"click.ax5select-\" + this.instanceId)\n                    .unbind(\"keyup.ax5select-\" + this.instanceId);\n\n                this.closeTimer = setTimeout((function () {\n                    if (this.activeSelectOptionGroup) this.activeSelectOptionGroup.remove();\n                    this.activeSelectOptionGroup = null;\n                    this.activeSelectQueueIndex = -1;\n\n                    var that = {\n                        self: this,\n                        item: item,\n                        value: item.selected,\n                        state: \"close\"\n                    };\n\n                    onStateChanged.call(this, item, that);\n\n                    // waitOption timer\n                    if (item.onClose) {\n                        item.onClose.call(that);\n                    }\n                }).bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            this.enable = function (boundID) {\n                var queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].$display.removeAttr(\"disabled\");\n                this.queue[queIdx].$select.removeAttr(\"disabled\");\n\n                onStateChanged.call(this, this.queue[queIdx], {\n                    self: this,\n                    state: \"enable\"\n                });\n\n                return this;\n            };\n\n            this.disable = function (boundID) {\n                var queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n\n                onStateChanged.call(this, this.queue[queIdx], {\n                    self: this,\n                    state: \"disable\"\n                });\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5select;\n    })());\n    SELECT = ax5.ui.select;\n})();\n\nax5.ui.select_instance = new ax5.ui.select();\njQuery.fn.ax5select = (function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.select_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.select_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.select_instance.val(this, arguments[1], arguments[2]);\n                    break;\n                case \"getValue\":\n                    return ax5.ui.select_instance.val(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.select_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.select_instance.disable(this);\n                    break;\n                default:\n                    return this;\n            }\n        }\n        else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.select_instance.bind(config);\n            });\n        }\n        return this;\n    }\n\n})();\n\n\n// muliple 속성이 없는 select의 기본 선택 해제 방법.. 결정 필요..\n// onExpand 가 있으면..?","// ax5.ui.select.tmpl\n(function () {\n\n    var SELECT = ax5.ui.select;\n\n    var optionGroupTmpl = function (columnKeys) {\n        return `\n<div class=\"ax5select-option-group {{theme}} {{size}}\" data-ax5select-option-group=\"{{id}}\">\n    <div class=\"ax-select-body\">\n        <div class=\"ax-select-option-group-content\" data-els=\"content\"></div>\n    </div>\n    <div class=\"ax-select-arrow\"></div> \n</div>\n`;\n    };\n    var tmpl = function (columnKeys) {\n            return `\n<a {{^tabIndex}}href=\"#ax5select-{{id}}\" {{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}class=\"form-control {{formSize}} ax5select-display {{theme}}\" \ndata-ax5select-display=\"{{id}}\" data-ax5select-instance=\"{{instanceId}}\">\n    <div class=\"ax5select-display-table\" data-els=\"display-table\">\n        <div data-ax5select-display=\"label\">{{label}}</div>\n        <div data-ax5select-display=\"addon\"> \n            {{#multiple}}{{#reset}}\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\n            {{/reset}}{{/multiple}}\n            {{#icons}}\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\n            <span class=\"addon-icon-opened\">{{opened}}</span>\n            {{/icons}}\n            {{^icons}}\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\n            {{/icons}}\n        </div>\n    </div>\n    <input type=\"text\" tabindex=\"-1\" data-ax5select-display=\"input\" \n    style=\"position:absolute;z-index:0;left:0px;top:0px;font-size:1px;opacity: 0;width:1px;border: 0px none;color : transparent;text-indent: -9999em;\" />\n</a>\n`;\n        };\n    var selectTmpl = function (columnKeys) {\n            return `\n<select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}}></select>\n`;\n        };\n    var optionsTmpl = function (columnKeys) {\n            return `\n{{#waitOptions}}\n    <div class=\"ax-select-option-item\">\n            <div class=\"ax-select-option-item-holder\">\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\n                    {{{lang.loading}}}\n                </span>\n            </div>\n        </div>\n{{/waitOptions}}\n{{^waitOptions}}\n    {{#options}}\n        {{#optgroup}}\n            <div class=\"ax-select-option-group\">\n                <div class=\"ax-select-option-item-holder\">\n                    <span class=\"ax-select-option-group-label\">\n                        {{{.}}}\n                    </span>\n                </div>\n                {{#options}}\n                <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \n                data-option-value=\"{{${columnKeys.optionValue}}}\" \n                {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n                    <div class=\"ax-select-option-item-holder\">\n                        {{#multiple}}\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\n                            <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                        </span>\n                        {{/multiple}}\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{${columnKeys.optionText}}}</span>\n                    </div>\n                </div>\n                {{/options}}\n            </div>                            \n        {{/optgroup}}\n        {{^optgroup}}\n        <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{${columnKeys.optionValue}}}\" {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n            <div class=\"ax-select-option-item-holder\">\n                {{#multiple}}\n                <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\n                    <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                </span>\n                {{/multiple}}\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{${columnKeys.optionText}}}</span>\n            </div>\n        </div>\n        {{/optgroup}}\n    {{/options}}\n    {{^options}}\n        <div class=\"ax-select-option-item\">\n            <div class=\"ax-select-option-item-holder\">\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\n                    {{{lang.noOptions}}}\n                </span>\n            </div>\n        </div>\n    {{/options}}\n{{/waitOptions}}\n`;\n        };\n\n    SELECT.tmpl = {\n        \"optionGroupTmpl\": optionGroupTmpl,\n        \"tmpl\": tmpl,\n        \"selectTmpl\": selectTmpl,\n        \"optionsTmpl\": optionsTmpl,\n\n        get: function (tmplName, data, columnKeys) {\n            return jQuery(ax5.mustache.render(SELECT.tmpl[tmplName].call(this, columnKeys), data));\n        }\n    };\n\n})();","/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.grid\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var GRID;\n\n    UI.addClass({\n        className: \"grid\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5grid\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * var myGrid = new ax5.ui.grid();\n         * ```\n         */\n        var ax5grid = function () {\n            var\n                self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n\n                // 틀고정 속성\n                frozenColumnIndex: 0,\n                frozenRowIndex: 0,\n                showLineNumber: false,\n                showRowSelector: false,\n                multipleSelect: true,\n\n                height: 0,\n                columnMinWidth: 100,\n                lineNumberColumnWidth: 30,\n                rowSelectorColumnWidth: 26,\n                sortable: undefined,\n                remoteSort: false,\n\n                header: {\n                    align: false,\n                    columnHeight: 26,\n                    columnPadding: 3,\n                    columnBorderWidth: 1\n                },\n                body: {\n                    align: false,\n                    columnHeight: 26,\n                    columnPadding: 3,\n                    columnBorderWidth: 1,\n                    grouping: false\n                },\n                rightSum: false,\n                footSum: false,\n                page: {\n                    height: 25,\n                    display: true,\n                    navigationItemCount: 5\n                },\n                scroller: {\n                    size: 15,\n                    barMinSize: 15,\n                    trackPadding: 4\n                },\n                columnKeys: {\n                    selected: '__selected__',\n                    modified: '__modified__',\n                    deleted: '__deleted__',\n                    disableSelection: '__disable_selection__'\n                }\n            };\n            this.xvar = {\n                bodyTrHeight: 0, // 한줄의 높이\n                scrollContentWidth: 0, // 스크롤 될 내용물의 너비 (스크롤 될 내용물 : panel['body-scroll'] 안에 컬럼이 있는)\n                scrollContentHeight: 0 // 스크롤 된 내용물의 높이\n            };\n\n            // 그리드 데이터셋\n            this.columns = []; // config.columns에서 복제된 오브젝트\n            this.colGroup = []; // columns를 table태그로 출력하기 좋게 변환한 오브젝트\n            this.footSumColumns = [];\n            this.bodyGrouping = {};\n\n            this.list = []; // 그리드의 데이터\n            this.page = {}; // 그리드의 페이지 정보\n            this.selectedDataIndexs = [];\n            this.deletedList = [];\n            this.sortInfo = {}; // 그리드의 헤더 정렬 정보\n            this.focusedColumn = {}; // 그리드 바디의 포커스된 셀 정보\n            this.selectedColumn = {}; // 그리드 바디의 선택된 셀 정보\n            this.isInlineEditing = false;\n            this.inlineEditing = {};\n\n            // header\n            this.headerTable = {};\n            this.leftHeaderData = {};\n            this.headerData = {};\n            this.rightHeaderData = {};\n\n            // body\n            this.bodyRowTable = {};\n            this.leftBodyRowData = {};\n            this.bodyRowData = {};\n            this.rightBodyRowData = {};\n            this.bodyRowMap = {};\n\n            this.bodyGroupingTable = {};\n            this.leftBodyGroupingData = {};\n            this.bodyGroupingData = {};\n            this.rightBodyGroupingData = {};\n\n            // footSum\n            this.footSumTable = {}; // footSum의 출력레이아웃\n            this.leftFootSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 왼쪽\n            this.footSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 오른쪽\n            this.needToPaintSum = true; // 데이터 셋이 변경되어 summary 변경 필요여부\n\n            cfg = this.config;\n\n            var\n                onStateChanged = function (_opts, _that) {\n                    if (_opts && _opts.onStateChanged) {\n                        _opts.onStateChanged.call(_that, _that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(_that, _that);\n                    }\n                    return true;\n                },\n                initGrid = function () {\n                    // 그리드 템플릿에 전달하고자 하는 데이터를 정리합시다.\n\n                    var data = {\n                        instanceId: this.id\n                    };\n\n                    this.$target.html(GRID.tmpl.get(\"main\", data));\n\n                    // 그리드 패널 프레임의 각 엘리먼트를 캐쉬합시다.\n                    this.$ = {\n                        \"container\": {\n                            \"hidden\": this.$target.find('[data-ax5grid-container=\"hidden\"]'),\n                            \"root\": this.$target.find('[data-ax5grid-container=\"root\"]'),\n                            \"header\": this.$target.find('[data-ax5grid-container=\"header\"]'),\n                            \"body\": this.$target.find('[data-ax5grid-container=\"body\"]'),\n                            \"page\": this.$target.find('[data-ax5grid-container=\"page\"]'),\n                            \"scroller\": this.$target.find('[data-ax5grid-container=\"scroller\"]')\n                        },\n                        \"panel\": {\n                            \"aside-header\": this.$target.find('[data-ax5grid-panel=\"aside-header\"]'),\n                            \"left-header\": this.$target.find('[data-ax5grid-panel=\"left-header\"]'),\n                            \"header\": this.$target.find('[data-ax5grid-panel=\"header\"]'),\n                            \"header-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"header\"]'),\n                            \"right-header\": this.$target.find('[data-ax5grid-panel=\"right-header\"]'),\n                            \"top-aside-body\": this.$target.find('[data-ax5grid-panel=\"top-aside-body\"]'),\n                            \"top-left-body\": this.$target.find('[data-ax5grid-panel=\"top-left-body\"]'),\n                            \"top-body\": this.$target.find('[data-ax5grid-panel=\"top-body\"]'),\n                            \"top-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"top-body\"]'),\n                            \"top-right-body\": this.$target.find('[data-ax5grid-panel=\"top-right-body\"]'),\n                            \"aside-body\": this.$target.find('[data-ax5grid-panel=\"aside-body\"]'),\n                            \"aside-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"aside-body\"]'),\n                            \"left-body\": this.$target.find('[data-ax5grid-panel=\"left-body\"]'),\n                            \"left-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"left-body\"]'),\n                            \"body\": this.$target.find('[data-ax5grid-panel=\"body\"]'),\n                            \"body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"body\"]'),\n                            \"right-body\": this.$target.find('[data-ax5grid-panel=\"right-body\"]'),\n                            \"right-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"right-body\"]'),\n                            \"bottom-aside-body\": this.$target.find('[data-ax5grid-panel=\"bottom-aside-body\"]'),\n                            \"bottom-left-body\": this.$target.find('[data-ax5grid-panel=\"bottom-left-body\"]'),\n                            \"bottom-body\": this.$target.find('[data-ax5grid-panel=\"bottom-body\"]'),\n                            \"bottom-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"bottom-body\"]'),\n                            \"bottom-right-body\": this.$target.find('[data-ax5grid-panel=\"bottom-right-body\"]')\n                        },\n                        \"livePanelKeys\": [], // 현재 사용중인 패널들 (grid-body repaint에서 수집하여 처리)\n                        \"scroller\": {\n                            \"vertical\": this.$target.find('[data-ax5grid-scroller=\"vertical\"]'),\n                            \"vertical-bar\": this.$target.find('[data-ax5grid-scroller=\"vertical-bar\"]'),\n                            \"horizontal\": this.$target.find('[data-ax5grid-scroller=\"horizontal\"]'),\n                            \"horizontal-bar\": this.$target.find('[data-ax5grid-scroller=\"horizontal-bar\"]'),\n                            \"corner\": this.$target.find('[data-ax5grid-scroller=\"corner\"]')\n                        },\n                        \"page\": {\n                            \"navigation\": this.$target.find('[data-ax5grid-page=\"navigation\"]'),\n                            \"status\": this.$target.find('[data-ax5grid-page=\"status\"]')\n                        },\n                        \"form\": {\n                            \"clipboard\": this.$target.find('[data-ax5grid-form=\"clipboard\"]')\n                        },\n                        \"resizer\": {\n                            \"vertical\": this.$target.find('[data-ax5grid-resizer=\"vertical\"]'),\n                            \"horizontal\": this.$target.find('[data-ax5grid-resizer=\"horizontal\"]')\n                        }\n                    };\n\n                    this.$[\"container\"][\"root\"].css({height: this.config.height});\n\n                    return this;\n                },\n                initColumns = function (_columns) {\n                    this.columns = U.deepCopy(_columns);\n                    this.headerTable = GRID.util.makeHeaderTable.call(this, this.columns);\n                    this.xvar.frozenColumnIndex = (cfg.frozenColumnIndex > this.columns.length) ? this.columns.length : cfg.frozenColumnIndex;\n\n                    this.bodyRowTable = GRID.util.makeBodyRowTable.call(this, this.columns);\n                    this.bodyRowMap = GRID.util.makeBodyRowMap.call(this, this.bodyRowTable);\n                    // 바디에 표현될 한줄의 높이를 계산합니다.\n                    this.xvar.bodyTrHeight = this.bodyRowTable.rows.length * this.config.body.columnHeight;\n\n                    var colGroupMap = {};\n                    for (var r = 0, rl = this.headerTable.rows.length; r < rl; r++) {\n                        var row = this.headerTable.rows[r];\n                        for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                            colGroupMap[row.cols[c].colIndex] = jQuery.extend({}, row.cols[c]);\n                        }\n                    }\n\n                    this.colGroup = [];\n                    for (var k in colGroupMap) {\n                        this.colGroup.push(colGroupMap[k]);\n                    }\n\n                    return this;\n                },\n                onResetColumns = function () {\n                    initColumns.call(this, this.config.columns);\n                    resetColGroupWidth.call(this);\n                    if (this.config.footSum) {\n                        initFootSum.call(this, this.config.footSum);\n                        this.needToPaintSum = true;\n                    }\n                    if (this.config.body.grouping) initBodyGroup.call(this, this.config.body.grouping);\n                    alignGrid.call(this, true);\n                    GRID.header.repaint.call(this, true);\n                    GRID.body.repaint.call(this, true);\n                    GRID.scroller.resize.call(this);\n                },\n                resetColGroupWidth = function () {\n                    /// !! 그리드 target의 크기가 변경되면 이 함수를 호출하려 this.colGroup의 _width 값을 재 계산 하여야 함. [tom]\n                    var CT_WIDTH = this.$[\"container\"][\"root\"].width() - (function () {\n                            var width = 0;\n                            if (cfg.showLineNumber) width += cfg.lineNumberColumnWidth;\n                            if (cfg.showRowSelector) width += cfg.rowSelectorColumnWidth;\n                            return width;\n                        })();\n                    var totalWidth = 0;\n                    var computedWidth;\n                    var autoWidthColgroupIndexs = [];\n                    var colGroup = this.colGroup;\n                    var i, l;\n\n                    for (i = 0, l = colGroup.length; i < l; i++) {\n                        if (U.isNumber(colGroup[i].width)) {\n                            totalWidth += colGroup[i]._width = colGroup[i].width;\n                        } else if (colGroup[i].width === \"*\") {\n                            autoWidthColgroupIndexs.push(i);\n                        } else if (U.right(colGroup[i].width, 1) === \"%\") {\n                            totalWidth += colGroup[i]._width = CT_WIDTH * U.left(colGroup[i].width, \"%\") / 100;\n                        }\n                    }\n                    if (autoWidthColgroupIndexs.length > 0) {\n                        computedWidth = (CT_WIDTH - totalWidth) / autoWidthColgroupIndexs.length;\n                        for (i = 0, l = autoWidthColgroupIndexs.length; i < l; i++) {\n                            colGroup[autoWidthColgroupIndexs[i]]._width = computedWidth;\n                        }\n                    }\n                },\n                initFootSum = function (_footSum) {\n                    if (U.isArray(_footSum)) {\n                        this.footSumTable = GRID.util.makeFootSumTable.call(this, this.footSumColumns = _footSum);\n                    } else {\n                        this.footSumColumns = [];\n                        this.footSumTable = {};\n                    }\n                },\n                initBodyGroup = function (_grouping) {\n                    var grouping = jQuery.extend({}, _grouping);\n                    if (\"by\" in grouping && \"columns\" in grouping) {\n\n                        this.bodyGrouping = {\n                            by: grouping.by,\n                            columns: grouping.columns\n                        };\n                        this.bodyGroupingTable = GRID.util.makeBodyGroupingTable.call(this, this.bodyGrouping.columns);\n                        this.sortInfo = (function () {\n                            var sortInfo = {};\n                            for (var k = 0, kl = this.bodyGrouping.by.length; k < kl; k++) {\n                                sortInfo[this.bodyGrouping.by[k]] = {\n                                    orderBy: \"asc\",\n                                    seq: k,\n                                    fixed: true\n                                };\n                                for (var c = 0, cl = this.colGroup.length; c < cl; c++) {\n                                    if (this.colGroup[c].key === this.bodyGrouping.by[k]) {\n                                        this.colGroup[c].sort = \"asc\";\n                                        this.colGroup[c].sortFixed = true;\n                                    }\n                                }\n                            }\n                            return sortInfo;\n                        }).call(this);\n                    } else {\n                        cfg.body.grouping = false;\n                    }\n                },\n                alignGrid = function (_isFirst) {\n                    // isFirst : 그리드 정렬 메소드가 처음 호출 되었는지 판단 하는 아규먼트\n                    var CT_WIDTH = this.$[\"container\"][\"root\"].width();\n                    var CT_HEIGHT = this.$[\"container\"][\"root\"].height();\n                    var CT_INNER_WIDTH = CT_WIDTH;\n                    var CT_INNER_HEIGHT = CT_HEIGHT;\n\n                    var asidePanelWidth = cfg.asidePanelWidth = (function () {\n                        var width = 0;\n\n                        if (cfg.showLineNumber) width += cfg.lineNumberColumnWidth;\n                        if (cfg.showRowSelector) width += cfg.rowSelectorColumnWidth;\n                        return width;\n                    })();\n\n                    var frozenPanelWidth = cfg.frozenPanelWidth = (function (colGroup, endIndex) {\n                        var width = 0;\n                        for (var i = 0, l = endIndex; i < l; i++) {\n                            width += colGroup[i]._width;\n                        }\n                        return width;\n                    })(this.colGroup, cfg.frozenColumnIndex);\n\n                    var rightPanelWidth = 0; // todo : 우측 함계컬럼 넘비 계산\n\n                    var frozenRowHeight = (function (bodyTrHeight) {\n                        return cfg.frozenRowIndex * bodyTrHeight;\n                    })(this.xvar.bodyTrHeight);\n\n                    var footSumHeight = (function (bodyTrHeight) {\n                        return this.footSumColumns.length * bodyTrHeight;\n                    }).call(this, this.xvar.bodyTrHeight);\n\n                    var headerHeight = this.headerTable.rows.length * cfg.header.columnHeight;\n                    var pageHeight = (cfg.page.display) ? cfg.page.height : 0;\n\n                    // 데이터의 길이가 body보다 높을때. 수직 스크롤러 활성화\n                    var verticalScrollerWidth, horizontalScrollerHeight;\n\n                    (function () {\n                        verticalScrollerWidth = ((CT_HEIGHT - headerHeight - pageHeight - footSumHeight) < this.list.length * this.xvar.bodyTrHeight) ? this.config.scroller.size : 0;\n                        // 남은 너비가 colGroup의 너비보다 넓을때. 수평 스크롤 활성화.\n                        horizontalScrollerHeight = (function () {\n                            var totalColGroupWidth = 0;\n                            // aside 빼고 너비\n                            // 수직 스크롤이 있으면 또 빼고 비교\n                            var bodyWidth = CT_WIDTH - asidePanelWidth - verticalScrollerWidth;\n                            for (var i = 0, l = this.colGroup.length; i < l; i++) {\n                                totalColGroupWidth += this.colGroup[i]._width;\n                            }\n                            return (totalColGroupWidth > bodyWidth) ? this.config.scroller.size : 0;\n                        }).call(this);\n\n                        if (horizontalScrollerHeight > 0) {\n                            verticalScrollerWidth = ((CT_HEIGHT - headerHeight - pageHeight - footSumHeight - horizontalScrollerHeight) < this.list.length * this.xvar.bodyTrHeight) ? this.config.scroller.size : 0;\n                        }\n                    }).call(this);\n\n                    // 수평 너비 결정\n                    CT_INNER_WIDTH = CT_WIDTH - verticalScrollerWidth;\n                    // 수직 스크롤러의 높이 결정.\n                    CT_INNER_HEIGHT = CT_HEIGHT - pageHeight - horizontalScrollerHeight;\n\n                    var bodyHeight = CT_INNER_HEIGHT - headerHeight;\n\n                    var panelDisplayProcess = function (panel, vPosition, hPosition, containerType) {\n                        var css = {};\n                        var isHide = false;\n\n                        switch (hPosition) {\n                            case \"aside\":\n                                if (asidePanelWidth === 0) {\n                                    isHide = true;\n                                } else {\n                                    css[\"left\"] = 0;\n                                    css[\"width\"] = asidePanelWidth;\n                                }\n                                break;\n                            case \"left\":\n                                if (cfg.frozenColumnIndex === 0) {\n                                    isHide = true;\n                                } else {\n                                    css[\"left\"] = asidePanelWidth;\n                                    css[\"width\"] = frozenPanelWidth;\n                                }\n                                break;\n                            case \"right\":\n                                if (!cfg.rightSum) {\n                                    isHide = true;\n                                } else {\n\n                                }\n                                break;\n                            default:\n                                if (containerType !== \"page\") {\n                                    if (cfg.frozenColumnIndex === 0) {\n                                        css[\"left\"] = asidePanelWidth;\n                                    } else {\n                                        css[\"left\"] = frozenPanelWidth + asidePanelWidth;\n                                    }\n                                    css[\"width\"] = CT_INNER_WIDTH - asidePanelWidth - frozenPanelWidth - rightPanelWidth;\n                                }\n                                break;\n                        }\n\n                        if (isHide) {\n                            panel.hide();\n                            // 프로세스 중지\n                            return this;\n                        }\n\n                        if (containerType === \"body\") {\n                            switch (vPosition) {\n                                case \"top\":\n                                    if (cfg.frozenRowIndex == 0) {\n                                        isHide = true;\n                                    } else {\n                                        css[\"top\"] = 0;\n                                        css[\"height\"] = frozenRowHeight;\n                                    }\n                                    break;\n                                case \"bottom\":\n                                    if (!cfg.footSum) {\n                                        isHide = true;\n                                    } else {\n                                        css[\"top\"] = bodyHeight - footSumHeight;\n                                        css[\"height\"] = footSumHeight; // footSum height\n                                    }\n                                    break;\n                                default:\n\n                                    css[\"top\"] = frozenRowHeight;\n                                    css[\"height\"] = bodyHeight - frozenRowHeight - footSumHeight;\n\n                                    break;\n                            }\n                        } else if (containerType === \"header\") {\n                            css[\"height\"] = headerHeight;\n                        } else if (containerType === \"page\") {\n                            if (pageHeight == 0) {\n                                isHide = true;\n                            } else {\n                                css[\"height\"] = pageHeight;\n                            }\n                        }\n\n                        if (isHide) {\n                            panel.hide();\n                            // 프로세스 중지\n                            return this;\n                        }\n\n                        panel.css(css);\n                        return this;\n                    };\n                    var scrollerDisplayProcess = function (panel, scrollerWidth, scrollerHeight, containerType) {\n                        var css = {};\n                        var isHide = false;\n\n                        switch (containerType) {\n                            case \"vertical\":\n                                if (scrollerWidth > 0) {\n                                    css[\"width\"] = scrollerWidth;\n                                    css[\"height\"] = CT_INNER_HEIGHT;\n                                    css[\"bottom\"] = scrollerHeight + pageHeight;\n                                } else {\n                                    isHide = true;\n                                }\n                                break;\n                            case \"horizontal\":\n                                if (scrollerHeight > 0) {\n                                    css[\"width\"] = CT_INNER_WIDTH;\n                                    css[\"height\"] = scrollerHeight;\n                                    css[\"right\"] = scrollerWidth;\n                                    css[\"bottom\"] = pageHeight;\n                                } else {\n                                    isHide = true;\n                                }\n                                break;\n                            case \"corner\":\n                                if (scrollerWidth > 0 && scrollerHeight > 0) {\n                                    css[\"width\"] = scrollerWidth;\n                                    css[\"height\"] = scrollerHeight;\n                                    css[\"bottom\"] = pageHeight;\n                                } else {\n                                    isHide = true;\n                                }\n                                break;\n                        }\n\n                        if (isHide) {\n                            panel.hide();\n                            // 프로세스 중지\n                            return this;\n                        }\n\n                        panel.show().css(css);\n                    };\n\n                    this.$[\"container\"][\"header\"].css({height: headerHeight});\n                    this.$[\"container\"][\"body\"].css({height: bodyHeight});\n\n                    // 각 패널들의 크기 표시여부를 결정합니다\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-header\"], \"\", \"aside\", \"header\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"left-header\"], \"\", \"left\", \"header\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"header\"], \"\", \"\", \"header\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"right-header\"], \"\", \"right\", \"header\");\n\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"top-aside-body\"], \"top\", \"aside\", \"body\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"top-left-body\"], \"top\", \"left\", \"body\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"top-body\"], \"top\", \"\", \"body\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"top-right-body\"], \"top\", \"right\", \"body\");\n\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-body\"], \"\", \"aside\", \"body\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"left-body\"], \"\", \"left\", \"body\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"body\"], \"\", \"\", \"body\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"right-body\"], \"\", \"right\", \"body\");\n\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-aside-body\"], \"bottom\", \"aside\", \"body\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-left-body\"], \"bottom\", \"left\", \"body\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-body\"], \"bottom\", \"\", \"body\");\n                    panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-right-body\"], \"bottom\", \"right\", \"body\");\n\n\n                    scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"vertical\"], verticalScrollerWidth, horizontalScrollerHeight, \"vertical\");\n                    scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"horizontal\"], verticalScrollerWidth, horizontalScrollerHeight, \"horizontal\");\n                    scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"corner\"], verticalScrollerWidth, horizontalScrollerHeight, \"corner\");\n\n                    panelDisplayProcess.call(this, this.$[\"container\"][\"page\"], \"\", \"\", \"page\");\n                },\n                sortColumns = function (_sortInfo) {\n                    GRID.header.repaint.call(this);\n\n                    if (U.isFunction(this.config.remoteSort)) {\n                        var that = {sortInfo: []};\n                        for (var k in _sortInfo) {\n                            that.sortInfo.push({\n                                key: k,\n                                orderBy: _sortInfo[k].orderBy,\n                                seq: _sortInfo[k].seq\n                            });\n                        }\n                        that.sortInfo.sort(function (a, b) {\n                            return a.seq > b.seq;\n                        });\n                        this.config.remoteSort.call(that, that);\n                    } else {\n                        if (this.config.body.grouping) {\n                            this.list = GRID.data.initData.call(this,\n                                GRID.data.sort.call(this,\n                                    _sortInfo,\n                                    GRID.data.clearGroupingData.call(this,\n                                        this.list\n                                    )\n                                )\n                            );\n                        }\n                        else {\n                            this.list = GRID.data.sort.call(this, _sortInfo,\n                                GRID.data.clearGroupingData.call(this,\n                                    this.list\n                                )\n                            );\n                        }\n                        GRID.body.repaint.call(this, true);\n                        GRID.scroller.resize.call(this);\n                    }\n                };\n\n            /// private end\n\n            /**\n             * Preferences of grid UI\n             * @method ax5grid.setConfig\n             * @param {Object} _config - 클래스 속성값\n             * @param {Element} _config.target\n             * @param {Number} [_config.frozenColumnIndex=0]\n             * @param {Number} [_config.frozenRowIndex=0]\n             * @param {Boolean} [_config.showLineNumber=false]\n             * @param {Boolean} [_config.showRowSelector=false]\n             * @param {Boolean} [_config.multipleSelect=true]\n             * @param {Number} [_config.columnMinWidth=100]\n             * @param {Number} [_config.lineNumberColumnWidth=30]\n             * @param {Number} [_config.rowSelectorColumnWidth=25]\n             * @param {Boolean} [_config.sortable=false]\n             * @param {Boolean} [_config.multiSort=false]\n             * @param {Function} [_config.remoteSort=false]\n             * @param {Object} [_config.header]\n             * @param {String} [_config.header.align]\n             * @param {Number} [_config.header.columnHeight=25]\n             * @param {Number} [_config.header.columnPadding=3]\n             * @param {Number} [_config.header.columnBorderWidth=1]\n             * @param {Object} [_config.body]\n             * @param {String} [_config.body.align]\n             * @param {Number} [_config.body.columnHeight=25]\n             * @param {Number} [_config.body.columnPadding=3]\n             * @param {Number} [_config.body.columnBorderWidth=1]\n             * @param {Object} [_config.body.grouping]\n             * @param {Array} [_config.body.grouping.by] - list grouping keys\n             * @param {Array} [_config.body.grouping.columns] - list grouping columns\n             * @param {Object} [_config.page]\n             * @param {Number} [_config.page.height=25]\n             * @param {Boolean} [_config.page.display=true]\n             * @param {Number} [_config.page.navigationItemCount=5]\n             * @param {Object} [_config.scroller]\n             * @param {Number} [_config.scroller.size=15]\n             * @param {Number} [_config.scroller.barMinSize=15]\n             * @param {Number} [_config.scroller.trackPadding=4]\n             * @param {Object} [_config.columnKeys]\n             * @param {String} [_config.columnKeys.selected=\"_SELECTED\"]\n             * @param {Object[]} _config.columns\n             * @param {String} _config.columns[].key\n             * @param {String} _config.columns[].label\n             * @param {Number} _config.columns[].width\n             * @param {(String|Function)} _config.columns[].styleClass\n             * @param {Boolean} _config.columns[].enableFilter\n             * @param {Boolean} _config.columns[].sortable\n             * @param {String} _config.columns[].align\n             * @param {(String|Function)} _config.columns[].formatter\n             * @param {Object} _config.columns[].editor\n             * @param {String} _config.columns[].editor.type - text,number,money,date\n             * @param {Object} _config.columns[].editor.config\n             * @param {Array} _config.columns[].editor.updateWith\n             * @parem {Function} _config.columns[].editor.disabled - disable editor\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * var firstGrid = new ax5.ui.grid();\n             *\n             * ax5.ui.grid.formatter[\"myType\"] = function () {\n             *     return \"myType\" + (this.value || \"\");\n             * };\n             * ax5.ui.grid.formatter[\"capital\"] = function(){\n             *     return (''+this.value).toUpperCase();\n             * };\n             *\n             * ax5.ui.grid.collector[\"myType\"] = function () {\n             *     return \"myType\" + (this.value || \"\");\n             * };\n             *\n             * var sampleData = [\n             *     {a: \"A\", b: \"A01\", price: 1000, amount: 12, cost: 12000, saleDt: \"2016-08-29\", customer: \"장기영\", saleType: \"A\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"B01\", price: 1100, amount: 11, cost: 12100, saleDt: \"2016-08-28\", customer: \"장서우\", saleType: \"B\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"C01\", price: 1200, amount: 10, cost: 12000, saleDt: \"2016-08-27\", customer: \"이영희\", saleType: \"A\"},\n             *     {companyJson: {\"대표자명\":\"위세라\"}, a: \"A\", b: \"A01\", price: 1300, amount: 8, cost: 10400, saleDt: \"2016-08-25\", customer: \"황인서\", saleType: \"C\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"B01\", price: 1400, amount: 5, cost: 7000, saleDt: \"2016-08-29\", customer: \"황세진\", saleType: \"D\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"A01\", price: 1500, amount: 2, cost: 3000, saleDt: \"2016-08-26\", customer: \"이서연\", saleType: \"A\"}\n             * ];\n             *\n             * var gridView = {\n             *     initView: function () {\n             *         firstGrid.setConfig({\n             *             target: $('[data-ax5grid=\"first-grid\"]'),\n             *             columns: [\n             *                 {\n             *                     key: \"companyJson['대표자명']\",\n             *                     label: \"필드A\",\n             *                     width: 80,\n             *                     styleClass: function () {\n             *                         return \"ABC\";\n             *                     },\n             *                     enableFilter: true,\n             *                     align: \"center\",\n             *                     editor: {type:\"text\"}\n             *                 },\n             *                 {key: \"b\", label: \"필드B\", align: \"center\"},\n             *                 {\n             *                     key: undefined, label: \"필드C\", columns: [\n             *                         {key: \"price\", label: \"단가\", formatter: \"money\", align: \"right\"},\n             *                         {key: \"amount\", label: \"수량\", formatter: \"money\", align: \"right\"},\n             *                         {key: \"cost\", label: \"금액\", align: \"right\", formatter: \"money\"}\n             *                     ]\n             *                 },\n             *                 {key: \"saleDt\", label: \"판매일자\", align: \"center\"},\n             *                 {key: \"customer\", label: \"고객명\"},\n             *                 {key: \"saleType\", label: \"판매타입\"}\n             *             ]\n             *         });\n             *         return this;\n             *     },\n             *     setData: function (_pageNo) {\n             *\n             *         firstGrid.setData(sampleData);\n             *\n             *         return this;\n             *     }\n             * };\n             * ```\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5grid\", \"401\", \"init\"));\n                    return this;\n                }\n\n                // 그리드의 이벤트 정의 구간\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n                this.onDataChanged = cfg.body.onDataChanged;\n                // todo event에 대한 추가 정의 필요\n\n                this.$target = jQuery(cfg.target);\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        cfg = jQuery.extend(true, cfg, data);\n                    }\n                }).call(this, U.parseJson(this.$target.attr(\"data-ax5grid-config\"), true));\n\n                var grid = this.config = cfg;\n\n                if (!this.config.height) {\n                    this.config.height = this.$target.height();\n                }\n\n                if (!this.id) this.id = this.$target.data(\"data-ax5grid-id\");\n                if (!this.id) {\n                    //this.id = 'ax5grid-' + ax5.getGuid();\n                    this.id = 'ax5grid-' + this.instanceId;\n                    this.$target.data(\"data-ax5grid-id\", grid.id);\n                }\n\n                ///========\n                // 그리드를 그리기 위한 가장 기초적인 작업 뼈대와 틀을 준비합니다. 이 메소드는 초기화 시 한번만 호출 되게 됩니다.\n                initGrid.call(this);\n\n                // columns데이터를 분석하여 미리 처리해야하는 데이터를 정리합니다.\n                initColumns.call(this, grid.columns);\n                resetColGroupWidth.call(this);\n\n                // footSum 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n                if (grid.footSum) initFootSum.call(this, grid.footSum);\n\n                // bodyGrouping 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n                if (grid.body.grouping) initBodyGroup.call(this, grid.body.grouping);\n\n                // 그리드의 각 요소의 크기를 맞춤니다.\n                alignGrid.call(this, true);\n\n                // columns의 데이터로 header데이터를 만들고\n                GRID.header.init.call(this);\n                // header를 출력합니다.\n                GRID.header.repaint.call(this);\n\n                // columns의 데이터로 body데이터를 만들고\n                GRID.body.init.call(this);\n                // body를 출력합니다.\n                GRID.body.repaint.call(this);\n\n                // scroller\n                GRID.scroller.init.call(this);\n                GRID.scroller.resize.call(this);\n\n                jQuery(window).bind(\"resize.ax5grid-\" + this.id, function () {\n                    alignGrid.call(this);\n                    GRID.scroller.resize.call(this);\n                }.bind(this));\n\n                jQuery(document.body).on(\"click.ax5grid-\" + this.id, (function (e) {\n                    var isPickerClick = false;\n                    var target = U.findParentNode(e.target, function (_target) {\n                        if (isPickerClick = _target.getAttribute(\"data-ax5grid-inline-edit-picker\")) {\n                            return true;\n                        }\n                        return _target.getAttribute(\"data-ax5grid-container\") === \"root\";\n                    });\n\n                    if (target && target.getAttribute(\"data-ax5grid-instance\") === this.id) {\n                        self.focused = true;\n                    } else {\n                        self.focused = false;\n                        GRID.body.blur.call(this);\n                    }\n                }).bind(this));\n\n                var ctrlKeys = {\n                    \"33\": \"KEY_PAGEUP\",\n                    \"34\": \"KEY_PAGEDOWN\",\n                    \"35\": \"KEY_END\",\n                    \"36\": \"KEY_HOME\",\n                    \"37\": \"KEY_LEFT\",\n                    \"38\": \"KEY_UP\",\n                    \"39\": \"KEY_RIGHT\",\n                    \"40\": \"KEY_DOWN\"\n                };\n                jQuery(window).on(\"keydown.ax5grid-\" + this.instanceId, function (e) {\n                    if (self.focused) {\n                        if (self.isInlineEditing) {\n\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                self.keyDown(\"ESC\", e.originalEvent);\n                            }\n                            else if (e.which == ax5.info.eventKeys.RETURN) {\n                                self.keyDown(\"RETURN\", e.originalEvent);\n                            }\n                            else if (e.which == ax5.info.eventKeys.TAB) {\n                                self.keyDown(\"TAB\", e.originalEvent);\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.UP) {\n                                self.keyDown(\"RETURN\", {shiftKey: true});\n                            }\n                            else if (e.which == ax5.info.eventKeys.DOWN) {\n                                self.keyDown(\"RETURN\", {});\n                            }\n\n                        }\n                        else {\n\n                            if (e.metaKey || e.ctrlKey) {\n                                if (e.which == 67) { // c\n                                    self.copySelect();\n                                }\n                            } else {\n                                if (ctrlKeys[e.which]) {\n                                    self.keyDown(ctrlKeys[e.which], e.originalEvent);\n                                    U.stopEvent(e);\n                                } else if (e.which == ax5.info.eventKeys.ESC) {\n                                    if (self.focused) {\n                                        GRID.body.blur.call(self);\n                                    }\n                                } else if (e.which == ax5.info.eventKeys.RETURN) {\n                                    self.keyDown(\"RETURN\", e.originalEvent);\n                                } else if (e.which == ax5.info.eventKeys.TAB) {\n                                    //self.keyDown(\"RETURN\", e.originalEvent);\n                                    U.stopEvent(e);\n                                } else if (e.which != ax5.info.eventKeys.SPACE && Object.keys(self.focusedColumn).length) {\n                                    self.keyDown(\"INLINE_EDIT\", e.originalEvent);\n                                }\n                            }\n\n                        }\n                    }\n                });\n\n                // 그리드 레이아웃이 모든 준비를 마친시점에 onLoad존재 여부를 확인하고 호출하여 줍니다.\n                setTimeout((function () {\n                    if (this.onLoad) {\n                        this.onLoad.call({\n                            self: this\n                        })\n                    }\n                }).bind(this));\n                return this;\n            };\n\n            /**\n             * align grid size\n             * @method ax5grid.align\n             * @returns {ax5grid}\n             */\n            this.align = function () {\n                alignGrid.call(this);\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.keyDown\n             * @param {String} _keyName\n             * @param {Event|Object} _data\n             * @return {ax5grid}\n             */\n            this.keyDown = (function () {\n                var processor = {\n                    \"KEY_UP\": function () {\n                        GRID.body.moveFocus.call(this, \"UP\");\n                    },\n                    \"KEY_DOWN\": function () {\n                        GRID.body.moveFocus.call(this, \"DOWN\");\n                    },\n                    \"KEY_LEFT\": function () {\n                        GRID.body.moveFocus.call(this, \"LEFT\");\n                    },\n                    \"KEY_RIGHT\": function () {\n                        GRID.body.moveFocus.call(this, \"RIGHT\");\n                    },\n                    \"KEY_HOME\": function () {\n                        GRID.body.moveFocus.call(this, \"HOME\");\n                    },\n                    \"KEY_END\": function () {\n                        GRID.body.moveFocus.call(this, \"END\");\n                    },\n                    \"INLINE_EDIT\": function (_e) {\n                        GRID.body.inlineEdit.active.call(this, this.focusedColumn, _e);\n                        if (!/[0-9a-zA-Z]/.test(_e.key)) {\n                            U.stopEvent(_e);\n                        }\n                    },\n                    \"ESC\": function (_e) {\n                        GRID.body.inlineEdit.keydown.call(this, \"ESC\");\n                    },\n                    \"RETURN\": function (_e) {\n                        var activeEditLength = 0;\n                        for (var columnKey in this.inlineEditing) {\n                            activeEditLength++;\n\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\", columnKey);\n                            // next focus\n                            if (activeEditLength == 1) {\n                                if (GRID.body.moveFocus.call(this, (_e.shiftKey) ? \"UP\" : \"DOWN\")) {\n                                    GRID.body.inlineEdit.keydown.call(this, \"RETURN\");\n                                }\n                            }\n                        }\n                        if (activeEditLength == 0) {\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\");\n                        }\n                    },\n                    \"TAB\": function (_e) {\n\n                        var activeEditLength = 0;\n                        for (var columnKey in this.inlineEditing) {\n                            activeEditLength++;\n\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\", columnKey, {moveFocus: true});\n                            // next focus\n                            if (activeEditLength == 1) {\n                                if (GRID.body.moveFocus.call(this, (_e.shiftKey) ? \"LEFT\" : \"RIGHT\")) {\n                                    GRID.body.inlineEdit.keydown.call(this, \"RETURN\", undefined, {moveFocus: true});\n                                }\n                            }\n                        }\n                    }\n                };\n                return function (_act, _data) {\n                    if (_act in processor) processor[_act].call(this, _data);\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5grid.copySelect\n             * @returns {Boolean} copysuccess\n             */\n            this.copySelect = function () {\n                var copysuccess;\n                var $clipBoard = this.$[\"form\"][\"clipboard\"];\n                var copyTextArray = [];\n                var copyText = \"\";\n\n                var _rowIndex, _colIndex, _dindex;\n                var _di = 0;\n                for (var c in this.selectedColumn) {\n                    var _column = this.selectedColumn[c];\n\n                    if (_column) {\n                        if (typeof _dindex === \"undefined\") {\n                            _dindex = _column.dindex;\n                            _rowIndex = _column.rowIndex;\n                            _colIndex = _column.rowIndex;\n                        }\n\n                        if (_dindex != _column.dindex || _rowIndex != _column.rowIndex) {\n                            _di++;\n                        }\n\n                        if (!copyTextArray[_di]) {\n                            copyTextArray[_di] = [];\n                        }\n                        var originalColumn = this.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                        if (originalColumn) {\n                            if (this.list[_column.dindex].__isGrouping) {\n                                copyTextArray[_di].push(this.list[_column.dindex][_column.colIndex]);\n                            } else {\n                                copyTextArray[_di].push(this.list[_column.dindex][originalColumn.key]);\n                            }\n                        } else {\n                            copyTextArray[_di].push(\"\");\n                        }\n\n                        _dindex = _column.dindex;\n                        _rowIndex = _column.rowIndex;\n                    }\n                }\n\n                copyTextArray.forEach(function (r) {\n                    copyText += r.join('\\t') + \"\\n\";\n                });\n\n                $clipBoard.get(0).innerText = copyText;\n                $clipBoard.select();\n\n                try {\n                    copysuccess = document.execCommand(\"copy\");\n                } catch (e) {\n                    copysuccess = false;\n                }\n                return copysuccess;\n            };\n\n            /**\n             * @method ax5grid.setData\n             * @param {Array} _data\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setData({\n             *  list: [],\n             *  page: {\n             *      currentPage: 0,\n             *      pageSize: 50,\n             *      totalElements: 500,\n             *      totalPages: 100\n             *  }\n             * });\n             *\n             * // onlyList\n             * ax5Grid.setData([]);\n             * ```\n             */\n            this.setData = function (_data) {\n                GRID.data.set.call(this, _data);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this);\n                GRID.scroller.resize.call(this);\n                GRID.page.navigationUpdate.call(this);\n                GRID.body.scrollTo.call(this, {top: 0});\n                return this;\n            };\n\n            /**\n             * @method ax5grid.getList\n             * @param {String} _type\n             * @returns {Array}\n             * @example\n             * ```js\n             * ax5Grid.getList();\n             * ax5Grid.getList(\"modified\");\n             * ax5Grid.getList(\"deleted\");\n             * ```\n             */\n            this.getList = function (_type) {\n                return GRID.data.getList.call(this, _type);\n            };\n\n            /**\n             * @method ax5grid.setHeight\n             * @param {Number} _height\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setHeight(height);\n             * ```\n             */\n            this.setHeight = function (_height) {\n                //console.log(this.$target);\n                if (_height == \"100%\") {\n                    _height = this.$target.offsetParent().innerHeight();\n                }\n                this.$target.css({height: _height});\n                this.$[\"container\"][\"root\"].css({height: _height});\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.addRow\n             * @param {Object} _row\n             * @param {Number|String} [_dindex=last]\n             * @param {Object} [_options] - options of addRow\n             * @param {Boolean} [_options.sort] - sortData\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.addRow($.extend({}, {...}), \"first\");\n             * ```\n             */\n            this.addRow = function (_row, _dindex, _options) {\n                GRID.data.add.call(this, _row, _dindex, _options);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.body.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.removeRow\n             * @param {Number|String} [_dindex=last]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.removeRow();\n             * ax5Grid.removeRow(\"first\");\n             * ax5Grid.removeRow(\"last\");\n             * ax5Grid.removeRow(1);\n             * ```\n             */\n            this.removeRow = function (_dindex) {\n                GRID.data.remove.call(this, _dindex);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.body.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.updateRow\n             * @param {Object} _row\n             * @param {Number} _dindex\n             * @returns {ax5grid}\n             */\n            this.updateRow = function (_row, _dindex) {\n                GRID.data.update.call(this, _row, _dindex);\n                GRID.body.repaintRow.call(this, _dindex);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.deleteRow\n             * @param {Number|String} _dindex\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.deleteRow(\"first\");\n             * ax5Grid.deleteRow(\"last\");\n             * ax5Grid.deleteRow(1);\n             * ax5Grid.deleteRow(\"selected\");\n             * ```\n             */\n            this.deleteRow = function (_dindex) {\n                GRID.data.deleteRow.call(this, _dindex);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                // 삭제시엔 포커스 ?\n                // GRID.body.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.setValue\n             * @param _dindex\n             * @param _key\n             * @param _value\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setValue(0, \"price\", 100);\n             * ```\n             */\n            this.setValue = function (_dindex, _key, _value) {\n                // getPanelname;\n                if (GRID.data.setValue.call(this, _dindex, _key, _value)) {\n                    let repaintCell = function (_panelName, _rows, __dindex, __key, __value) {\n                        for (let r = 0, rl = _rows.length; r < rl; r++) {\n                            for (let c = 0, cl = _rows[r].cols.length; c < cl; c++) {\n                                if (_rows[r].cols[c].key == __key) {\n                                    if (this.xvar.frozenRowIndex > __dindex) {\n                                        GRID.body.repaintCell.call(this, \"top-\" + _panelName, __dindex, r, c, __value);\n                                    } else {\n                                        GRID.body.repaintCell.call(this, _panelName + \"-scroll\", __dindex, r, c, __value);\n                                    }\n                                }\n                            }\n                        }\n                    };\n\n                    repaintCell.call(this, \"left-body\", this.leftBodyRowData.rows, _dindex, _key, _value);\n                    repaintCell.call(this, \"body\", this.bodyRowData.rows, _dindex, _key, _value);\n\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.addColumn\n             * @param {Object} _column\n             * @param {Number|String} [_cindex=last]\n             * @returns {ax5grid}\n             */\n            this.addColumn = (function () {\n                let processor = {\n                    \"first\": function (_column) {\n                        this.config.columns = [].concat(_column).concat(this.config.columns);\n                    },\n                    \"last\": function (_column) {\n                        this.config.columns = this.config.columns.concat([].concat(_column));\n                    }\n                };\n\n                return function (_column, _cindex) {\n                    if (typeof _column === \"undefined\") throw '_column must not be null';\n                    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n                    if (_cindex in processor) {\n                        processor[_cindex].call(this, _column);\n                    } else {\n                        if (!U.isNumber(_cindex)) {\n                            throw 'invalid argument _cindex';\n                        }\n                        this.config.columns.splice(_cindex, [].concat(_column))\n                    }\n                    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5grid.removeCloumn\n             * @param {Number|String} [_cindex=last]\n             * @returns {ax5grid}\n             */\n            this.removeColumn = (function () {\n                let processor = {\n                    \"first\": function (_cindex) {\n                        this.config.columns.splice(_cindex, 1);\n                    },\n                    \"last\": function () {\n                        this.config.columns.splice(this.config.columns.length - 1, 1);\n                    }\n                };\n                return function (_cindex) {\n                    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n                    if (_cindex in processor) {\n                        processor[_cindex].call(this, _cindex);\n                    } else {\n                        if (!U.isNumber(_cindex)) {\n                            throw 'invalid argument _cindex';\n                        }\n                        //\n                        this.config.columns.splice(_cindex, 1);\n                    }\n                    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5grid.updateColumn\n             * @param {Object} _column\n             * @param {Number} _cindex\n             * @returns {ax5grid}\n             */\n            this.updateColumn = function (_column, _cindex) {\n                if (!U.isNumber(_cindex)) {\n                    throw 'invalid argument _cindex';\n                }\n                //\n                this.config.columns.splice(_cindex, 1, _column);\n                onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                return this;\n            };\n\n            /**\n             * @method ax5grid.setColumnWidth\n             * @param {Number} _width\n             * @param {Number} _cindex\n             * @returns {ax5grid}\n             */\n            this.setColumnWidth = function (_width, _cindex) {\n                this.colGroup[this.xvar.columnResizerIndex]._width = _width;\n                this.needToPaintSum = true;\n\n                // 컬럼너비 변경사항 적용.\n                GRID.header.repaint.call(this);\n                GRID.body.repaint.call(this, true);\n                GRID.scroller.resize.call(this);\n\n                alignGrid.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.getColumnSortInfo\n             * @returns {Object} sortInfo\n             */\n            this.getColumnSortInfo = function () {\n                let that = {sortInfo: []};\n                for (let k in this.sortInfo) {\n                    that.sortInfo.push({\n                        key: k,\n                        orderBy: this.sortInfo[k].orderBy,\n                        seq: this.sortInfo[k].seq\n                    });\n                }\n                that.sortInfo.sort(function (a, b) {\n                    return a.seq > b.seq;\n                });\n                return that.sortInfo;\n            };\n\n            /**\n             * @method ax5grid.setColumnSort\n             * @param {Object} _sortInfo\n             * @param {Object} _sortInfo.key\n             * @param {Number} _sortInfo.key.seq - seq of sortOrder\n             * @param {String} _sortInfo.key.orderBy - \"desc\"|\"asc\"\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5grid.setColumnSort({a:{seq:0, orderBy:\"desc\"}, b:{seq:1, orderBy:\"asc\"}});\n             * ```\n             */\n            this.setColumnSort = function (_sortInfo) {\n                if (typeof _sortInfo !== \"undefined\") {\n                    this.sortInfo = _sortInfo;\n                    GRID.header.applySortStatus.call(this, _sortInfo);\n                }\n\n                sortColumns.call(this, _sortInfo || this.sortInfo);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.select\n             * @param {Number|Object} _selectObject\n             * @param {Number} _selectObject.index - index of row\n             * @param {Number} _selectObject.rowIndex - rowIndex of columns\n             * @param {Number} _selectObject.conIndex - colIndex of columns\n             * @param {Object} _options\n             * @param {Boolean} _options.selectedClear\n             * @param {Boolean} _options.selected\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.select(0);\n             * firstGrid.select(0, {selected: true});\n             * firstGrid.select(0, {selected: false});\n             * firstGrid.select(0, {selectedClear: true});\n             * ```\n             */\n            this.select = function (_selectObject, _options) {\n                if (U.isNumber(_selectObject)) {\n                    let dindex = _selectObject;\n\n                    if (!this.config.multipleSelect) {\n                        this.clearSelect();\n                    } else {\n                        if (_options && _options.selectedClear) {\n                            this.clearSelect();\n                        }\n                    }\n\n                    GRID.data.select.call(this, dindex, _options && _options.selected);\n                    GRID.body.updateRowState.call(this, [\"selected\"], dindex);\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5grid.clearSelect\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.clearSelect();\n             * ```\n             */\n            this.clearSelect = function () {\n                GRID.body.updateRowState.call(this, [\"selectedClear\"]);\n                GRID.data.clearSelect.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.selectAll\n             * @param {Object} _options\n             * @param {Boolean} _options.selected\n             * @param {Function} _options.filter\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.selectAll();\n             * firstGrid.selectAll({selected: true});\n             * firstGrid.selectAll({selected: false});\n             * firstGrid.selectAll({filter: function(){\n             *      return this[\"b\"] == \"A01\";\n             * });\n             * firstGrid.selectAll({selected: true, filter: function(){\n             *      return this[\"b\"] == \"A01\";\n             * });\n             * ```\n             */\n            this.selectAll = function (_options) {\n                GRID.data.selectAll.call(this, _options && _options.selected, _options);\n                GRID.body.updateRowStateAll.call(this, [\"selected\"]);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.exportExcel\n             * @param {String} _fileName\n             * @returns {ax5grid|String}\n             * @example\n             * ```js\n             * firstGrid.exportExcel(\"grid-to-excel.xls\");\n             * console.log(firstGrid.exportExcel());\n             * ```\n             */\n            this.exportExcel = function (_fileName) {\n                let table = [];\n                table.push('<table border=\"1\">');\n                table.push(GRID.header.getExcelString.call(this));\n                table.push(GRID.body.getExcelString.call(this));\n                table.push('</table>');\n\n                if (typeof _fileName === \"undefined\") {\n                    return table.join('');\n                }\n                else {\n                    GRID.excel.export.call(this, [table.join('')], _fileName);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.focus\n             * @param {String|Number} _pos - UP, DOWN, LEFT, RIGHT, HOME, END\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.focus(\"UP\");\n             * firstGrid.focus(\"DOWN\");\n             * firstGrid.focus(\"HOME\");\n             * firstGrid.focus(\"END\");\n             * ```\n             */\n            this.focus = function (_pos) {\n                if (GRID.body.moveFocus.call(this, _pos)) {\n                    let focusedColumn;\n                    for (let c in this.focusedColumn) {\n                        focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                        break;\n                    }\n                    if (focusedColumn) {\n                        this.select(focusedColumn.dindex, {selectedClear: true});\n                    }\n                }\n                else {\n                    if (typeof this.selectedDataIndexs[0] === \"undefined\") {\n                        this.select(0);\n                    } else {\n                        let selectedIndex = this.selectedDataIndexs[0];\n                        let processor = {\n                            \"UP\": function () {\n                                if (selectedIndex > 0) {\n                                    this.select(selectedIndex - 1, {selectedClear: true});\n                                    GRID.body.moveFocus.call(this, selectedIndex - 1);\n                                }\n                            },\n                            \"DOWN\": function () {\n                                if (selectedIndex < this.list.length - 1) {\n                                    this.select(selectedIndex + 1, {selectedClear: true});\n                                    GRID.body.moveFocus.call(this, selectedIndex + 1);\n                                }\n                            },\n                            \"HOME\": function () {\n                                this.select(0, {selectedClear: true});\n                                GRID.body.moveFocus.call(this, 0);\n                            },\n                            \"END\": function () {\n                                this.select(this.list.length - 1, {selectedClear: true});\n                                GRID.body.moveFocus.call(this, this.list.length - 1);\n                            }\n                        };\n\n                        if (_pos in processor) {\n                            processor[_pos].call(this);\n                        }\n                    }\n                }\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                UI.grid_instance = UI.grid_instance || [];\n                UI.grid_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5grid;\n    })());\n\n    GRID = ax5.ui.grid;\n})();\n\n// todo : excel export\n// todo : merge cells\n// todo : filter\n// todo : body menu\n// todo : column reorder\n// todo : editor 필수값 속성 지정\n\n\n\n","// ax5.ui.grid.body\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var columnSelect = {\n        focusClear: function () {\n            var self = this;\n            for (var c in self.focusedColumn) {\n                var _column = self.focusedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName]\n                        .find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]')\n                        .find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]')\n                        .removeAttr('data-ax5grid-column-focused');\n                }\n            }\n            self.focusedColumn = {};\n        },\n        clear: function () {\n            var self = this;\n            for (var c in self.selectedColumn) {\n                var _column = self.selectedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName]\n                        .find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]')\n                        .find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]')\n                        .removeAttr('data-ax5grid-column-selected');\n                }\n            }\n            self.selectedColumn = {};\n        },\n        init: function (column) {\n            var self = this;\n            if (this.isInlineEditing) {\n                for (var editKey in this.inlineEditing) {\n                    if (editKey == column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex) {\n                        return this;\n                    }\n                }\n            }\n\n            // focus\n            columnSelect.focusClear.call(self);\n            self.focusedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex] = {\n                panelName: column.panelName,\n                dindex: column.dindex,\n                rowIndex: column.rowIndex,\n                colIndex: column.colIndex,\n                colspan: column.colspan\n            };\n\n            // select\n            columnSelect.clear.call(self);\n            self.xvar.selectedRange = {\n                start: [column.dindex, column.rowIndex, column.colIndex, column.colspan - 1],\n                end: null\n            };\n            self.selectedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex] = (function (data) {\n                if (data) {\n                    return false;\n                } else {\n                    return {\n                        panelName: column.panelName,\n                        dindex: column.dindex,\n                        rowIndex: column.rowIndex,\n                        colIndex: column.colIndex,\n                        colspan: column.colspan\n                    }\n                }\n            })(self.selectedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex]);\n\n            this.$.panel[column.panelName]\n                .find('[data-ax5grid-tr-data-index=\"' + column.dindex + '\"]')\n                .find('[data-ax5grid-column-rowindex=\"' + column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + column.colIndex + '\"]')\n                .attr('data-ax5grid-column-focused', \"true\")\n                .attr('data-ax5grid-column-selected', \"true\");\n\n            if (this.isInlineEditing) {\n                GRID.body.inlineEdit.deActive.call(this, \"RETURN\");\n            }\n        },\n        update: function (column) {\n            var self = this;\n            var dindex, colIndex, rowIndex, trl;\n\n            self.xvar.selectedRange[\"end\"] = [column.dindex, column.rowIndex, column.colIndex, column.colspan - 1];\n            columnSelect.clear.call(self);\n\n            var range = {\n                r: {\n                    s: Math.min(self.xvar.selectedRange[\"start\"][0], self.xvar.selectedRange[\"end\"][0]),\n                    e: Math.max(self.xvar.selectedRange[\"start\"][0], self.xvar.selectedRange[\"end\"][0])\n                },\n                c: {\n                    s: Math.min(self.xvar.selectedRange[\"start\"][2], self.xvar.selectedRange[\"end\"][2]),\n                    e: Math.max(self.xvar.selectedRange[\"start\"][2] + self.xvar.selectedRange[\"start\"][3], self.xvar.selectedRange[\"end\"][2] + self.xvar.selectedRange[\"end\"][3])\n                }\n            };\n\n            dindex = range.r.s;\n            for (; dindex <= range.r.e; dindex++) {\n\n\n                trl = this.bodyRowTable.rows.length;\n                rowIndex = 0;\n                for (; rowIndex < trl; rowIndex++) {\n                    colIndex = range.c.s;\n                    for (; colIndex <= range.c.e; colIndex++) {\n                        var _panels = [],\n                            panelName = \"\";\n\n                        if (self.xvar.frozenRowIndex > dindex) _panels.push(\"top\");\n                        if (self.xvar.frozenColumnIndex > colIndex) _panels.push(\"left\");\n                        _panels.push(\"body\");\n                        if (_panels[0] !== \"top\") _panels.push(\"scroll\");\n                        panelName = _panels.join(\"-\");\n\n                        self.selectedColumn[dindex + \"_\" + colIndex + \"_\" + rowIndex] = {\n                            panelName: panelName,\n                            dindex: dindex,\n                            rowIndex: rowIndex,\n                            colIndex: colIndex,\n                            colspan: column.colspan\n                        };\n\n                        _panels = null;\n                        panelName = null;\n                    }\n                }\n            }\n            dindex = null;\n            colIndex = null;\n            rowIndex = null;\n\n            for (var c in self.selectedColumn) {\n                var _column = self.selectedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName]\n                        .find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]')\n                        .find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]')\n                        .attr('data-ax5grid-column-selected', 'true');\n                }\n            }\n\n        }\n    };\n\n    var columnSelector = {\n        \"on\": function (cell) {\n            var self = this;\n\n            if (this.inlineEditing[cell.dindex + \"_\" + cell.colIndex + \"_\" + cell.rowIndex]) {\n                return;\n            }\n\n            columnSelect.init.call(self, cell);\n\n            this.$[\"container\"][\"body\"]\n                .on(\"mousemove.ax5grid-\" + this.instanceId, '[data-ax5grid-column-attr=\"default\"]', function (e) {\n                    if (this.getAttribute(\"data-ax5grid-column-rowIndex\")) {\n                        columnSelect.update.call(self, {\n                            panelName: this.getAttribute(\"data-ax5grid-panel-name\"),\n                            dindex: Number(this.getAttribute(\"data-ax5grid-data-index\")),\n                            rowIndex: Number(this.getAttribute(\"data-ax5grid-column-rowIndex\")),\n                            colIndex: Number(this.getAttribute(\"data-ax5grid-column-colIndex\")),\n                            colspan: Number(this.getAttribute(\"colspan\"))\n                        });\n                        U.stopEvent(e);\n                    }\n                })\n                .on(\"mouseup.ax5grid-\" + this.instanceId, function () {\n                    columnSelector.off.call(self);\n                })\n                .on(\"mouseleave.ax5grid-\" + this.instanceId, function () {\n                    columnSelector.off.call(self);\n                });\n\n            jQuery(document.body)\n                .attr('unselectable', 'on')\n                .css('user-select', 'none')\n                .on('selectstart', false);\n        },\n        \"off\": function () {\n\n            this.$[\"container\"][\"body\"]\n                .off(\"mousemove.ax5grid-\" + this.instanceId)\n                .off(\"mouseup.ax5grid-\" + this.instanceId)\n                .off(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body)\n                .removeAttr('unselectable')\n                .css('user-select', 'auto')\n                .off('selectstart');\n        }\n    };\n\n    var updateRowState = function (_states, _dindex, _data) {\n        var self = this;\n        var cfg = this.config;\n\n        var processor = {\n            \"selected\": function (_dindex) {\n                var i = this.$.livePanelKeys.length;\n                while (i--) {\n                    this.$.panel[this.$.livePanelKeys[i]]\n                        .find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]')\n                        .attr(\"data-ax5grid-selected\", this.list[_dindex][cfg.columnKeys.selected]);\n                }\n            },\n            \"selectedClear\": function () {\n                var si = this.selectedDataIndexs.length;\n                while (si--) {\n                    var dindex = this.selectedDataIndexs[si];\n                    var i = this.$.livePanelKeys.length;\n                    while (i--) {\n                        this.$.panel[this.$.livePanelKeys[i]]\n                            .find('[data-ax5grid-tr-data-index=\"' + dindex + '\"]')\n                            .attr(\"data-ax5grid-selected\", false);\n                        this.list[dindex][cfg.columnKeys.selected] = false;\n                    }\n                }\n            },\n            \"cellChecked\": function (_dindex, _data) {\n                var key = _data.key;\n                var rowIndex = _data.rowIndex;\n                var colIndex = _data.colIndex;\n\n                var panelName = (function () {\n                    var _panels = [];\n                    if (this.xvar.frozenRowIndex > _dindex) _panels.push(\"top\");\n                    if (this.xvar.frozenColumnIndex > colIndex) _panels.push(\"left\");\n                    _panels.push(\"body\");\n                    if (_panels[0] !== \"top\") _panels.push(\"scroll\");\n                    return _panels.join(\"-\");\n                }).call(this);\n\n                this.$.panel[panelName]\n                    .find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]')\n                    .find('[data-ax5grid-column-rowIndex=\"' + rowIndex + '\"][data-ax5grid-column-colIndex=\"' + colIndex + '\"]')\n                    .find('[data-ax5grid-editor=\"checkbox\"]')\n                    .attr(\"data-ax5grid-checked\", '' + _data.checked);\n            }\n        };\n        _states.forEach(function (_state) {\n            if (!processor[_state]) throw 'invaild state name';\n            processor[_state].call(self, _dindex, _data);\n        });\n    };\n\n    var updateRowStateAll = function (_states, _data) {\n        var self = this;\n        var cfg = this.config;\n\n        var processor = {\n            \"selected\": function (_dindex) {\n                GRID.body.repaint.call(this, true);\n            }\n        };\n        _states.forEach(function (_state) {\n            if (!processor[_state]) throw 'invaild state name';\n            processor[_state].call(self, _data);\n        });\n    };\n\n    var init = function () {\n        var self = this;\n\n        this.$[\"container\"][\"body\"].on(\"click\", '[data-ax5grid-column-attr]', function (e) {\n            var panelName, attr, row, col, dindex, rowIndex, colIndex, disableSelection;\n            var targetClick = {\n                \"default\": function (_column) {\n                    var column = self.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                    var that = {\n                        self: self,\n                        page: self.page,\n                        list: self.list,\n                        item: self.list[_column.dindex],\n                        dindex: _column.dindex,\n                        rowIndex: _column.rowIndex,\n                        colIndex: _column.colIndex,\n                        column: column,\n                        value: self.list[_column.dindex][column.key]\n                    };\n\n                    if (column.editor && column.editor.type == \"checkbox\") { // todo : GRID.inlineEditor에서 처리 할수 있도록 구문 변경 필요.\n                        var value = GRID.data.getValue.call(self, _column.dindex, column.key);\n\n                        var checked, newValue;\n                        if (column.editor.config && column.editor.config.trueValue) {\n                            if (checked = !(value == column.editor.config.trueValue)) {\n                                newValue = column.editor.config.trueValue;\n                            } else {\n                                newValue = column.editor.config.falseValue;\n                            }\n                        } else {\n                            newValue = checked = (value == false || value == \"false\" || value < \"1\") ? \"true\" : \"false\";\n                        }\n\n                        GRID.data.setValue.call(self, _column.dindex, column.key, newValue);\n\n                        updateRowState.call(self, [\"cellChecked\"], _column.dindex, {\n                            key: column.key, rowIndex: _column.rowIndex, colIndex: _column.colIndex,\n                            editorConfig: column.editor.config, checked: checked\n                        });\n                    } else {\n                        if (self.config.body.onClick) {\n                            self.config.body.onClick.call(that);\n                        }\n                    }\n                },\n                \"rowSelector\": function (_column) {\n                    if (self.list[_column.dindex][self.config.columnKeys.disableSelection]) {\n                        return false;\n                    }\n\n                    if (!self.config.multipleSelect && self.selectedDataIndexs[0] !== _column.dindex) {\n                        GRID.body.updateRowState.call(self, [\"selectedClear\"]);\n                        GRID.data.clearSelect.call(self);\n                    }\n\n                    GRID.data.select.call(self, _column.dindex, undefined, {\n                        internalCall: true\n                    });\n                    updateRowState.call(self, [\"selected\"], _column.dindex);\n                },\n                \"lineNumber\": function (_column) {\n\n                }\n            };\n\n            panelName = this.getAttribute(\"data-ax5grid-panel-name\");\n            attr = this.getAttribute(\"data-ax5grid-column-attr\");\n            row = Number(this.getAttribute(\"data-ax5grid-column-row\"));\n            col = Number(this.getAttribute(\"data-ax5grid-column-col\"));\n            rowIndex = Number(this.getAttribute(\"data-ax5grid-column-rowIndex\"));\n            colIndex = Number(this.getAttribute(\"data-ax5grid-column-colIndex\"));\n            dindex = Number(this.getAttribute(\"data-ax5grid-data-index\"));\n\n            if (attr in targetClick) {\n                targetClick[attr]({\n                    panelName: panelName,\n                    attr: attr,\n                    row: row,\n                    col: col,\n                    dindex: dindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex\n                });\n            }\n        });\n        this.$[\"container\"][\"body\"].on(\"dblclick\", '[data-ax5grid-column-attr]', function (e) {\n            var panelName, attr, row, col, dindex, rowIndex, colIndex;\n            var targetClick = {\n                \"default\": function (_column) {\n\n                    if (this.isInlineEditing) {\n                        for (var columnKey in this.inlineEditing) {\n                            if (columnKey == _column.dindex + \"_\" + _column.colIndex + \"_\" + _column.rowIndex) {\n                                return this;\n                            }\n                        }\n                    }\n\n                    var column = self.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                    var value = \"\";\n                    if (column) {\n                        if (!self.list[dindex].__isGrouping) {\n                            value = GRID.data.getValue.call(self, dindex, column.key);\n                        }\n                    }\n                    GRID.body.inlineEdit.active.call(self, self.focusedColumn, e, value);\n                },\n                \"rowSelector\": function (_column) {\n\n                },\n                \"lineNumber\": function (_column) {\n\n                }\n            };\n\n            panelName = this.getAttribute(\"data-ax5grid-panel-name\");\n            attr = this.getAttribute(\"data-ax5grid-column-attr\");\n            row = Number(this.getAttribute(\"data-ax5grid-column-row\"));\n            col = Number(this.getAttribute(\"data-ax5grid-column-col\"));\n            rowIndex = Number(this.getAttribute(\"data-ax5grid-column-rowIndex\"));\n            colIndex = Number(this.getAttribute(\"data-ax5grid-column-colIndex\"));\n            dindex = Number(this.getAttribute(\"data-ax5grid-data-index\"));\n\n            if (attr in targetClick) {\n                targetClick[attr]({\n                    panelName: panelName,\n                    attr: attr,\n                    row: row,\n                    col: col,\n                    dindex: dindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex\n                });\n            }\n        });\n        this.$[\"container\"][\"body\"].on(\"mouseover\", \"tr\", function () {\n            return;\n            var dindex = this.getAttribute(\"data-ax5grid-tr-data-index\");\n            var i = self.$.livePanelKeys.length;\n            while (i--) {\n                if (typeof self.xvar.dataHoveredIndex !== \"undefined\") self.$.panel[self.$.livePanelKeys[i]].find('[data-ax5grid-tr-data-index=\"' + self.xvar.dataHoveredIndex + '\"]').removeClass(\"hover\");\n                self.$.panel[self.$.livePanelKeys[i]].find('[data-ax5grid-tr-data-index=\"' + dindex + '\"]').addClass(\"hover\");\n            }\n            self.xvar.dataHoveredIndex = dindex;\n        });\n        this.$[\"container\"][\"body\"]\n            .on(\"mousedown\", '[data-ax5grid-column-attr=\"default\"]', function (e) {\n                if(self.xvar.touchmoved) return false;\n                if (this.getAttribute(\"data-ax5grid-column-rowIndex\")) {\n                    columnSelector.on.call(self, {\n                        panelName: this.getAttribute(\"data-ax5grid-panel-name\"),\n                        dindex: Number(this.getAttribute(\"data-ax5grid-data-index\")),\n                        rowIndex: Number(this.getAttribute(\"data-ax5grid-column-rowIndex\")),\n                        colIndex: Number(this.getAttribute(\"data-ax5grid-column-colIndex\")),\n                        colspan: Number(this.getAttribute(\"colspan\"))\n                    });\n                }\n            })\n            .on(\"dragstart\", function (e) {\n                U.stopEvent(e);\n                return false;\n            });\n\n        resetFrozenColumn.call(this);\n    };\n\n    var resetFrozenColumn = function () {\n        var cfg = this.config;\n        var dividedBodyRowObj = GRID.util.divideTableByFrozenColumnIndex(this.bodyRowTable, this.xvar.frozenColumnIndex);\n        this.asideBodyRowData = (function (dataTable) {\n            var data = {rows: []};\n            for (var i = 0, l = dataTable.rows.length; i < l; i++) {\n                data.rows[i] = {cols: []};\n                if (i === 0) {\n                    var col = {\n                        label: \"\",\n                        colspan: 1,\n                        rowspan: dataTable.rows.length,\n                        colIndex: null\n                    }, _col = {};\n\n                    if (cfg.showLineNumber) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.lineNumberColumnWidth,\n                            _width: cfg.lineNumberColumnWidth,\n                            columnAttr: \"lineNumber\",\n                            label: \"&nbsp;\", key: \"__d-index__\"\n                        });\n                        data.rows[i].cols.push(_col);\n                    }\n                    if (cfg.showRowSelector) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.rowSelectorColumnWidth,\n                            _width: cfg.rowSelectorColumnWidth,\n                            columnAttr: \"rowSelector\",\n                            label: \"\", key: \"__d-checkbox__\"\n                        });\n                        data.rows[i].cols.push(_col);\n                    }\n                }\n            }\n\n            return data;\n        }).call(this, this.bodyRowTable);\n        this.leftBodyRowData = dividedBodyRowObj.leftData;\n        this.bodyRowData = dividedBodyRowObj.rightData;\n\n        if (cfg.body.grouping) {\n            var dividedBodyGroupingObj = GRID.util.divideTableByFrozenColumnIndex(this.bodyGroupingTable, this.xvar.frozenColumnIndex);\n            this.asideBodyGroupingData = (function (dataTable) {\n                var data = {rows: []};\n                for (var i = 0, l = dataTable.rows.length; i < l; i++) {\n                    data.rows[i] = {cols: []};\n                    if (i === 0) {\n                        var col = {\n                            label: \"\",\n                            colspan: 1,\n                            rowspan: dataTable.rows.length,\n                            colIndex: null\n                        }, _col = {};\n\n                        if (cfg.showLineNumber) {\n                            _col = jQuery.extend({}, col, {\n                                width: cfg.lineNumberColumnWidth,\n                                _width: cfg.lineNumberColumnWidth,\n                                columnAttr: \"lineNumber\",\n                                label: \"&nbsp;\", key: \"__d-index__\"\n                            });\n                            data.rows[i].cols.push(_col);\n                        }\n                        if (cfg.showRowSelector) {\n                            _col = jQuery.extend({}, col, {\n                                width: cfg.rowSelectorColumnWidth,\n                                _width: cfg.rowSelectorColumnWidth,\n                                columnAttr: \"rowSelector\",\n                                label: \"\", key: \"__d-checkbox__\"\n                            });\n                            data.rows[i].cols.push(_col);\n                        }\n                    }\n                }\n\n                return data;\n            }).call(this, this.bodyGroupingTable);\n            this.leftBodyGroupingData = dividedBodyGroupingObj.leftData;\n            this.bodyGroupingData = dividedBodyGroupingObj.rightData;\n        }\n\n        this.leftFootSumData = {};\n        this.footSumData = {};\n        if (this.config.footSum) {\n            var dividedFootSumObj = GRID.util.divideTableByFrozenColumnIndex(this.footSumTable, this.xvar.frozenColumnIndex);\n            this.leftFootSumData = dividedFootSumObj.leftData;\n            this.footSumData = dividedFootSumObj.rightData;\n        }\n    };\n\n    var getFieldValue = function (_list, _item, _index, _col, _value, _returnPlainText) {\n        let _key = _col.key, tagsToReplace = {\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        if (_key === \"__d-index__\") {\n            return (typeof _item[\"__index\"] !== \"undefined\") ? _item[\"__index\"] + 1 : \"\";\n        }\n        else if (_key === \"__d-checkbox__\") {\n            return '<div class=\"checkBox\"></div>';\n        }\n        else {\n            if (_col.editor && (function (_editor) {\n                    if (_editor.type in GRID.inlineEditor) {\n                        return (GRID.inlineEditor[_editor.type].editMode == \"inline\");\n                    }\n                    return false;\n                })(_col.editor)) {\n\n                _value = _value || GRID.data.getValue.call(this, _index, _key);\n                \n                if (U.isFunction(_col.editor.disabled)) {\n                    if (_col.editor.disabled.call({\n                            list: _list,\n                            dindex: _index,\n                            item: _list[_index],\n                            key: _key,\n                            value: _value\n                        })) {\n                        return _value;\n                    }\n                }\n\n                // print editor\n                return _returnPlainText ? _value : GRID.inlineEditor[_col.editor.type].getHtml(this, _col.editor, _value);\n            }\n            if (_col.formatter) {\n                var that = {\n                    key: _key,\n                    value: _value || GRID.data.getValue.call(this, _index, _key),\n                    dindex: _index,\n                    item: _item,\n                    list: _list\n                };\n                if (U.isFunction(_col.formatter)) {\n                    return _col.formatter.call(that);\n                } else {\n                    return GRID.formatter[_col.formatter].call(that);\n                }\n            }\n            else {\n                var returnValue = \"\";\n\n                if (typeof _value !== \"undefined\") {\n                    returnValue = _value;\n                } else {\n                    _value = GRID.data.getValue.call(this, _index, _key);\n                    if (_value !== null && typeof _value !== \"undefined\") returnValue = _value;\n                }\n\n                return (typeof returnValue === \"number\") ? returnValue : returnValue.replace(/[<>]/g, function (tag) {\n                    return tagsToReplace[tag] || tag;\n                });\n            }\n        }\n    };\n\n    var getGroupingValue = function (_item, _index, _col) {\n        var value, that, _key = _col.key, _label = _col.label;\n\n        if (typeof _key === \"undefined\") {\n            that = {\n                key: _key,\n                list: _item.__groupingList,\n                groupBy: _item.__groupingBy\n            };\n            if (U.isFunction(_label)) {\n                value = _label.call(that);\n            } else {\n                value = _label;\n            }\n            _item[_col.colIndex] = value;\n            return value;\n        }\n        else if (_key === \"__d-index__\") {\n            return '';\n        }\n        else if (_key === \"__d-checkbox__\") {\n            return '';\n        }\n        else {\n            if (_col.collector) {\n                that = {\n                    key: _key,\n                    list: _item.__groupingList\n                };\n                if (U.isFunction(_col.collector)) {\n                    value = _col.collector.call(that);\n                } else {\n                    value = GRID.collector[_col.collector].call(that);\n                }\n                _item[_col.colIndex] = value;\n\n                if (_col.formatter) {\n                    that.value = value;\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                } else {\n                    return value;\n                }\n            } else {\n                return \"&nbsp;\";\n            }\n        }\n    };\n\n    var getSumFieldValue = function (_list, _col) {\n        var _key = _col.key, _label = _col.label;\n        //, _collector, _formatter\n        if (typeof _key === \"undefined\") {\n            return _label;\n        }\n        else if (_key === \"__d-index__\" || _key === \"__d-checkbox__\") {\n            return '&nbsp;';\n        }\n        else {\n            if (_col.collector) {\n                var that = {\n                    key: _key,\n                    list: _list\n                };\n                var value;\n                if (U.isFunction(_col.collector)) {\n                    value = _col.collector.call(that);\n                } else {\n                    value = GRID.collector[_col.collector].call(that);\n                }\n\n                if (_col.formatter) {\n                    that.value = value;\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                } else {\n                    return value;\n                }\n\n            } else {\n                return \"&nbsp;\";\n            }\n        }\n    };\n\n    let repaint = function (_reset) {\n        let cfg = this.config,\n            list = this.list;\n\n        /// repaint reset 타입이면 고정컬럼을 재조정\n        if (_reset) {\n            resetFrozenColumn.call(this);\n            // 틀고정 이 변경되면 출력 시작 인덱스 값을 초기화\n            this.xvar.paintStartRowIndex = undefined;\n        }\n\n        /// 출력시작 인덱스\n        let paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex;\n        if (this.xvar.dataRowCount === list.length && this.xvar.paintStartRowIndex === paintStartRowIndex) return this; // 스크롤 포지션 변경 여부에 따라 프로세스 진행여부 결정\n\n        let isFirstPaint = (typeof this.xvar.paintStartRowIndex === \"undefined\"),\n            asideBodyRowData = this.asideBodyRowData,\n            leftBodyRowData = this.leftBodyRowData,\n            bodyRowData = this.bodyRowData,\n            leftFootSumData = this.leftFootSumData,\n            footSumData = this.footSumData,\n            asideBodyGroupingData = this.asideBodyGroupingData,\n            leftBodyGroupingData = this.leftBodyGroupingData,\n            bodyGroupingData = this.bodyGroupingData,\n            bodyAlign = cfg.body.align,\n            paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1;\n\n        if (document.addEventListener && ax5.info.supportTouch) {\n            paintRowCount = paintRowCount * 2;\n        }\n\n        /// 스크롤 컨텐츠의 높이 : 그리드 스크롤의 실제 크기와는 관계 없이 데이터 갯수에 따라 스크롤 컨텐츠 높이값 구해서 저장해두기.\n        this.xvar.scrollContentHeight = this.xvar.bodyTrHeight * (this.list.length - this.xvar.frozenRowIndex);\n        /// 사용된 패널들의 키 모음\n        this.$.livePanelKeys = [];\n\n        // 그리드 바디 영역 페인트 함수\n        let repaintBody = function (_elTargetKey, _colGroup, _bodyRow, _groupRow, _list, _scrollConfig) {\n            let _elTarget = this.$.panel[_elTargetKey];\n\n            if (!isFirstPaint && !_scrollConfig) {\n                this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n                return false;\n            }\n\n            let SS = [], cgi, cgl, di, dl, tri, trl, ci, cl, col, cellHeight, colAlign, isScrolled = (function () {\n                // 스크롤값이 변경되거나 처음 호출되었습니까?\n                if (typeof _scrollConfig === \"undefined\" || typeof _scrollConfig['paintStartRowIndex'] === \"undefined\") {\n                    _scrollConfig = {\n                        paintStartRowIndex: 0,\n                        paintRowCount: _list.length\n                    };\n                    return false;\n                } else {\n                    return true;\n                }\n            })();\n\n            if (isScrolled) {\n                SS.push('<div style=\"font-size:0;line-height:0;height: ' + (_scrollConfig.paintStartRowIndex - this.xvar.frozenRowIndex) * _scrollConfig.bodyTrHeight + 'px;\"></div>');\n            }\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (di = _scrollConfig.paintStartRowIndex, dl = (function () {\n                let len;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            })(); di < dl; di++) {\n\n                let isGroupingRow = false, rowTable;\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    rowTable = _groupRow;\n                    isGroupingRow = true;\n                } else {\n                    rowTable = _bodyRow;\n                }\n\n                for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n\n                    SS.push('<tr class=\"tr-' + (di % 4) + '\"',\n                        (isGroupingRow) ? ' data-ax5grid-grouping-tr=\"true\"' : '',\n                        ' data-ax5grid-tr-data-index=\"' + di + '\"',\n                        ' data-ax5grid-selected=\"' + (_list[di][cfg.columnKeys.selected] || \"false\") + '\"',\n                        ' data-ax5grid-disable-selection=\"' + (_list[di][cfg.columnKeys.disableSelection] || \"false\") + '\"',\n                        '>');\n                    for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                        col = rowTable.rows[tri].cols[ci];\n                        cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                        colAlign = col.align || bodyAlign;\n\n                        SS.push('<td ',\n                            'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                            'data-ax5grid-data-index=\"' + di + '\" ',\n                            'data-ax5grid-column-row=\"' + tri + '\" ',\n                            'data-ax5grid-column-col=\"' + ci + '\" ',\n                            'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ',\n                            'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                            'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                            (function (_focusedColumn, _selectedColumn) {\n                                let attrs = \"\";\n                                if (_focusedColumn) {\n                                    attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                }\n                                if (_selectedColumn) {\n                                    attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                }\n                                return attrs;\n                            })(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]),\n                            'colspan=\"' + col.colspan + '\" ',\n                            'rowspan=\"' + col.rowspan + '\" ',\n                            'class=\"' + (function (_col) {\n                                let tdCSS_class = \"\";\n                                if (_col.styleClass) {\n                                    if (U.isFunction(_col.styleClass)) {\n                                        tdCSS_class += _col.styleClass.call({\n                                                column: _col,\n                                                key: _col.key,\n                                                item: _list[di],\n                                                index: di\n                                            }) + \" \";\n                                    } else {\n                                        tdCSS_class += _col.styleClass + \" \";\n                                    }\n                                }\n                                if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                return tdCSS_class;\n                            }).call(this, col) + '\" ',\n                            'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                        SS.push((function (_cellHeight) {\n                            let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                            if (!col.multiLine) {\n                                _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                            }\n\n                            return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                                ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                                '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n\n                        })(cellHeight), (isGroupingRow) ? getGroupingValue.call(this, _list[di], di, col) : getFieldValue.call(this, _list, _list[di], di, col), '</span>');\n\n                        SS.push('</td>');\n                    }\n                    SS.push('<td ',\n                        'data-ax5grid-column-row=\"null\" ',\n                        'data-ax5grid-column-col=\"null\" ',\n                        'data-ax5grid-data-index=\"' + di + '\" ',\n                        'data-ax5grid-column-attr=\"' + (\"default\") + '\" ',\n                        'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                        '></td>');\n                    SS.push('</tr>');\n                }\n            }\n            SS.push('</table>');\n\n            if (isScrolled && _list.length) {\n                SS.push('<div style=\"font-size:0;line-height:0;height: ' + (_list.length - di) * _scrollConfig.bodyTrHeight + 'px;\"></div>');\n            }\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n\n            this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n            return true;\n        };\n        let repaintSum = function (_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            let _elTarget = this.$.panel[_elTargetKey];\n\n            if (!isFirstPaint && !_scrollConfig) {\n                this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n                return false;\n            }\n\n            let SS = [], cgi, cgl, tri, trl, ci, cl, col, cellHeight, colAlign;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ',\n                        'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                        'data-ax5grid-column-row=\"' + tri + '\" ',\n                        'data-ax5grid-column-col=\"' + ci + '\" ',\n                        'data-ax5grid-column-rowIndex=\"' + tri + '\" ',\n                        'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                        'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ',\n                        (function (_focusedColumn, _selectedColumn) {\n                            var attrs = \"\";\n                            if (_focusedColumn) {\n                                attrs += 'data-ax5grid-column-focused=\"true\" ';\n                            }\n                            if (_selectedColumn) {\n                                attrs += 'data-ax5grid-column-selected=\"true\" ';\n                            }\n                            return attrs;\n                        })(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]),\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        'class=\"' + (function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            isFootSum: true\n                                        }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }).call(this, col) + '\" ',\n                        'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push((function (_cellHeight) {\n                        var lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        if (!col.multiLine) {\n                            _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        }\n\n                        return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                            ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                            '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n\n                    })(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ',\n                    'data-ax5grid-column-row=\"null\" ',\n                    'data-ax5grid-column-col=\"null\" ',\n                    'data-ax5grid-column-attr=\"' + (\"sum\") + '\" ',\n                    'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                    '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n            return true;\n        };\n        let scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            bodyTrHeight: this.xvar.bodyTrHeight\n        };\n\n        // aside\n        if (cfg.asidePanelWidth > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                repaintBody.call(this, \"top-aside-body\", this.asideColGroup, asideBodyRowData, asideBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n            }\n\n            repaintBody.call(this, \"aside-body-scroll\", this.asideColGroup, asideBodyRowData, asideBodyGroupingData, list, scrollConfig);\n\n            if (cfg.footSum) {\n                // 바닥 요약 (footSum에 대한 aside 사용안함)\n                //repaintSum.call(this, \"bottom-aside-body\", this.asideColGroup, asideBodyRowData, null, list);\n            }\n        }\n\n        // left\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                repaintBody.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n            }\n\n            repaintBody.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, leftBodyGroupingData, list, scrollConfig);\n\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, list);\n            }\n        }\n\n        // body\n        if (this.xvar.frozenRowIndex > 0) {\n            // 상단 행고정\n            repaintBody.call(this, \"top-body-scroll\", this.headerColGroup, bodyRowData, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n        }\n\n        repaintBody.call(this, \"body-scroll\", this.headerColGroup, bodyRowData, bodyGroupingData, list, scrollConfig);\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", this.headerColGroup, footSumData, list, scrollConfig);\n        }\n\n        //todo : repaintBody 에서 footSum 데이터 예외처리\n        // right\n        if (cfg.rightSum) {\n            // todo : right 표현 정리\n        }\n\n        this.xvar.paintStartRowIndex = paintStartRowIndex;\n        this.xvar.paintRowCount = paintRowCount;\n        this.xvar.dataRowCount = list.length;\n        this.needToPaintSum = false;\n        GRID.page.statusUpdate.call(this);\n    };\n\n    var repaintCell = function (_panelName, _dindex, _rowIndex, _colIndex, _newValue) {\n        var self = this;\n        var cfg = this.config;\n        var list = this.list;\n\n        var updateCell = this.$[\"panel\"][_panelName]\n            .find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]')\n            .find('[data-ax5grid-column-rowindex=\"' + _rowIndex + '\"][data-ax5grid-column-colindex=\"' + _colIndex + '\"]')\n            .find('[data-ax5grid-cellholder]');\n        var colGroup = this.colGroup;\n        var col = colGroup[_colIndex];\n\n        updateCell.html(getFieldValue.call(this, list, list[_dindex], _dindex, col));\n\n        if (col.editor && col.editor.updateWith) {\n            col.editor.updateWith.forEach(function (updateColumnKey) {\n                colGroup.forEach(function (col) {\n                    if (col.key == updateColumnKey) {\n                        var rowIndex = col.rowIndex;\n                        var colIndex = col.colIndex;\n                        var panelName = GRID.util.findPanelByColumnIndex.call(self, _dindex, colIndex, rowIndex).panelName;\n                        var updateWithCell = self.$[\"panel\"][panelName]\n                            .find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]')\n                            .find('[data-ax5grid-column-rowindex=\"' + rowIndex + '\"][data-ax5grid-column-colindex=\"' + colIndex + '\"]')\n                            .find('[data-ax5grid-cellholder]');\n                        updateWithCell.html(getFieldValue.call(self, list, list[_dindex], _dindex, col));\n                    }\n                });\n            });\n        }\n\n        /// ~~~~~~\n\n        var paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex;\n        var leftFootSumData = this.leftFootSumData;\n        var footSumData = this.footSumData;\n        var asideBodyGroupingData = this.asideBodyGroupingData;\n        var leftBodyGroupingData = this.leftBodyGroupingData;\n        var bodyGroupingData = this.bodyGroupingData;\n        var bodyAlign = cfg.body.align;\n        var paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1;\n        var scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            bodyTrHeight: this.xvar.bodyTrHeight\n        };\n\n        var repaintSum = function (_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n\n            var SS = [];\n            var cgi, cgl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ',\n                        'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                        'data-ax5grid-column-row=\"' + tri + '\" ',\n                        'data-ax5grid-column-col=\"' + ci + '\" ',\n                        'data-ax5grid-column-rowIndex=\"' + tri + '\" ',\n                        'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                        'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ',\n                        (function (_focusedColumn, _selectedColumn) {\n                            var attrs = \"\";\n                            if (_focusedColumn) {\n                                attrs += 'data-ax5grid-column-focused=\"true\" ';\n                            }\n                            if (_selectedColumn) {\n                                attrs += 'data-ax5grid-column-selected=\"true\" ';\n                            }\n                            return attrs;\n                        })(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]),\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        'class=\"' + (function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            isFootSum: true\n                                        }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }).call(this, col) + '\" ',\n                        'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push((function (_cellHeight) {\n                        var lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        if (!col.multiLine) {\n                            _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        }\n\n                        return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                            ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                            '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n\n                    })(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ',\n                    'data-ax5grid-column-row=\"null\" ',\n                    'data-ax5grid-column-col=\"null\" ',\n                    'data-ax5grid-column-attr=\"' + (\"sum\") + '\" ',\n                    'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                    '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            return true;\n        };\n        var replaceGroupTr = function (_elTargetKey, _colGroup, _groupRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n            var SS = [];\n            var cgi, cgl;\n            var di, dl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n            for (di = _scrollConfig.paintStartRowIndex, dl = (function () {\n                var len;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            })(); di < dl; di++) {\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    var rowTable = _groupRow;\n                    SS = [];\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ',\n                                'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                                'data-ax5grid-data-index=\"' + di + '\" ',\n                                'data-ax5grid-column-row=\"' + tri + '\" ',\n                                'data-ax5grid-column-col=\"' + ci + '\" ',\n                                'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ',\n                                'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                                'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                                (function (_focusedColumn, _selectedColumn) {\n                                    var attrs = \"\";\n                                    if (_focusedColumn) {\n                                        attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                    }\n                                    if (_selectedColumn) {\n                                        attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                    }\n                                    return attrs;\n                                })(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]),\n                                'colspan=\"' + col.colspan + '\" ',\n                                'rowspan=\"' + col.rowspan + '\" ',\n                                'class=\"' + (function (_col) {\n                                    var tdCSS_class = \"\";\n                                    if (_col.styleClass) {\n                                        if (U.isFunction(_col.styleClass)) {\n                                            tdCSS_class += _col.styleClass.call({\n                                                    column: _col,\n                                                    key: _col.key,\n                                                    item: _list[di],\n                                                    index: di\n                                                }) + \" \";\n                                        } else {\n                                            tdCSS_class += _col.styleClass + \" \";\n                                        }\n                                    }\n                                    if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                    if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                    return tdCSS_class;\n                                }).call(this, col) + '\" ',\n                                'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push((function (_cellHeight) {\n                                var lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                                if (!col.multiLine) {\n                                    _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                }\n\n                                return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                                    ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                                    '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n\n                            })(cellHeight), getGroupingValue.call(this, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ',\n                            'data-ax5grid-column-row=\"null\" ',\n                            'data-ax5grid-column-col=\"null\" ',\n                            'data-ax5grid-data-index=\"' + di + '\" ',\n                            'data-ax5grid-column-attr=\"' + (\"default\") + '\" ',\n                            'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                            '></td>');\n                    }\n                    _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n                }\n            }\n        };\n\n        // body.grouping tr 다시 그리기..\n        if (cfg.body.grouping) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > 0) {\n                    // 상단 행고정\n                    replaceGroupTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), {\n                        paintStartRowIndex: 0,\n                        paintRowCount: this.xvar.frozenRowIndex,\n                        bodyTrHeight: this.xvar.bodyTrHeight\n                    });\n                }\n                replaceGroupTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyGroupingData, list, scrollConfig);\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                replaceGroupTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), {\n                    paintStartRowIndex: 0,\n                    paintRowCount: this.xvar.frozenRowIndex,\n                    bodyTrHeight: this.xvar.bodyTrHeight\n                });\n            }\n\n            replaceGroupTr.call(this, \"body-scroll\", this.headerColGroup, bodyGroupingData, list, scrollConfig);\n        }\n\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, list);\n            }\n        }\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", this.headerColGroup, footSumData, list, scrollConfig);\n        }\n    };\n\n    var repaintRow = function (_dindex) {\n        var self = this,\n            cfg = this.config,\n            list = this.list;\n        /// ~~~~~~\n\n        var paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex;\n        var asideBodyRowData = this.asideBodyRowData;\n        var leftBodyRowData = this.leftBodyRowData;\n        var bodyRowData = this.bodyRowData;\n        var leftFootSumData = this.leftFootSumData;\n        var footSumData = this.footSumData;\n        var asideBodyGroupingData = this.asideBodyGroupingData;\n        var leftBodyGroupingData = this.leftBodyGroupingData;\n        var bodyGroupingData = this.bodyGroupingData;\n        var bodyAlign = cfg.body.align;\n        var paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1;\n        var scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            bodyTrHeight: this.xvar.bodyTrHeight\n        };\n\n        var repaintSum = function (_elTargetKey, _colGroup, _bodyRow, _list) {\n            var _elTarget = this.$.panel[_elTargetKey];\n\n            var SS = [];\n            var cgi, cgl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ',\n                        'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                        'data-ax5grid-column-row=\"' + tri + '\" ',\n                        'data-ax5grid-column-col=\"' + ci + '\" ',\n                        'data-ax5grid-column-rowIndex=\"' + tri + '\" ',\n                        'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                        'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ',\n                        (function (_focusedColumn, _selectedColumn) {\n                            var attrs = \"\";\n                            if (_focusedColumn) {\n                                attrs += 'data-ax5grid-column-focused=\"true\" ';\n                            }\n                            if (_selectedColumn) {\n                                attrs += 'data-ax5grid-column-selected=\"true\" ';\n                            }\n                            return attrs;\n                        })(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]),\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        'class=\"' + (function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            isFootSum: true\n                                        }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }).call(this, col) + '\" ',\n                        'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push((function (_cellHeight) {\n                        var lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        if (!col.multiLine) {\n                            _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        }\n\n                        return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                            ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                            '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n\n                    })(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ',\n                    'data-ax5grid-column-row=\"null\" ',\n                    'data-ax5grid-column-col=\"null\" ',\n                    'data-ax5grid-column-attr=\"' + (\"sum\") + '\" ',\n                    'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                    '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            return true;\n        };\n        var replaceGroupTr = function (_elTargetKey, _colGroup, _groupRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n            var SS = [];\n            var cgi, cgl;\n            var di, dl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n            for (di = _scrollConfig.paintStartRowIndex, dl = (function () {\n                var len;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            })(); di < dl; di++) {\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    var rowTable = _groupRow;\n                    SS = [];\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ',\n                                'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                                'data-ax5grid-data-index=\"' + di + '\" ',\n                                'data-ax5grid-column-row=\"' + tri + '\" ',\n                                'data-ax5grid-column-col=\"' + ci + '\" ',\n                                'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ',\n                                'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                                'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                                (function (_focusedColumn, _selectedColumn) {\n                                    var attrs = \"\";\n                                    if (_focusedColumn) {\n                                        attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                    }\n                                    if (_selectedColumn) {\n                                        attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                    }\n                                    return attrs;\n                                })(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]),\n                                'colspan=\"' + col.colspan + '\" ',\n                                'rowspan=\"' + col.rowspan + '\" ',\n                                'class=\"' + (function (_col) {\n                                    var tdCSS_class = \"\";\n                                    if (_col.styleClass) {\n                                        if (U.isFunction(_col.styleClass)) {\n                                            tdCSS_class += _col.styleClass.call({\n                                                    column: _col,\n                                                    key: _col.key,\n                                                    item: _list[di],\n                                                    index: di\n                                                }) + \" \";\n                                        } else {\n                                            tdCSS_class += _col.styleClass + \" \";\n                                        }\n                                    }\n                                    if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                    if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                    return tdCSS_class;\n                                }).call(this, col) + '\" ',\n                                'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push((function (_cellHeight) {\n                                var lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                                if (!col.multiLine) {\n                                    _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                }\n\n                                return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                                    ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                                    '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n\n                            })(cellHeight), getGroupingValue.call(this, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ',\n                            'data-ax5grid-column-row=\"null\" ',\n                            'data-ax5grid-column-col=\"null\" ',\n                            'data-ax5grid-data-index=\"' + di + '\" ',\n                            'data-ax5grid-column-attr=\"' + (\"default\") + '\" ',\n                            'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                            '></td>');\n                    }\n                    _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n                }\n            }\n        };\n        var replaceTr = function (_elTargetKey, _colGroup, _bodyRow, _list, di) {\n            var _elTarget = this.$.panel[_elTargetKey];\n            var SS = [];\n            var cgi, cgl;\n            var di, dl;\n            var tri, trl;\n            var ci, cl;\n            var col, cellHeight, colAlign;\n            var rowTable = _bodyRow;\n            for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                    col = rowTable.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ',\n                        'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                        'data-ax5grid-data-index=\"' + di + '\" ',\n                        'data-ax5grid-column-row=\"' + tri + '\" ',\n                        'data-ax5grid-column-col=\"' + ci + '\" ',\n                        'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ',\n                        'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                        'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                        (function (_focusedColumn, _selectedColumn) {\n                            var attrs = \"\";\n                            if (_focusedColumn) {\n                                attrs += 'data-ax5grid-column-focused=\"true\" ';\n                            }\n                            if (_selectedColumn) {\n                                attrs += 'data-ax5grid-column-selected=\"true\" ';\n                            }\n                            return attrs;\n                        })(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]),\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        'class=\"' + (function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            item: _list[di],\n                                            index: di\n                                        }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }).call(this, col) + '\" ',\n                        'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push((function (_cellHeight) {\n                        var lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        if (!col.multiLine) {\n                            _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        }\n\n                        return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                            ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                            '\" style=\"height:' + _cellHeight + 'px;line-height: ' + lineHeight + 'px;\">';\n\n                    })(cellHeight), getFieldValue.call(this, _list, _list[di], di, col), '</span>');\n                    SS.push('</td>');\n                }\n                SS.push('<td ',\n                    'data-ax5grid-column-row=\"null\" ',\n                    'data-ax5grid-column-col=\"null\" ',\n                    'data-ax5grid-data-index=\"' + di + '\" ',\n                    'data-ax5grid-column-attr=\"' + (\"default\") + '\" ',\n                    'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                    '></td>');\n            }\n\n            //_elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').html(SS.join(''));\n            _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n        };\n\n\n        // left\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                replaceTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, list, _dindex);\n\n            }\n            replaceTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, list, _dindex);\n        }\n\n        // body\n        if (this.xvar.frozenRowIndex > 0) {\n            // 상단 행고정\n            replaceTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyRowData, list, _dindex);\n        }\n\n        replaceTr.call(this, \"body-scroll\", this.headerColGroup, bodyRowData, list, _dindex);\n\n        // body.grouping tr 다시 그리기..\n        if (cfg.body.grouping) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > 0) {\n                    // 상단 행고정\n                    replaceGroupTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n\n                }\n                replaceGroupTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyGroupingData, list, scrollConfig);\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                replaceGroupTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n            }\n\n            replaceGroupTr.call(this, \"body-scroll\", this.headerColGroup, bodyGroupingData, list, scrollConfig);\n        }\n\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, list);\n            }\n        }\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", this.headerColGroup, footSumData, list, scrollConfig);\n        }\n    };\n\n    var scrollTo = function (css, noRepaint) {\n        var cfg = this.config;\n\n        if (this.isInlineEditing) {\n            for (var key in this.inlineEditing) {\n                //if(this.inlineEditing[key].editor.type === \"select\") {}\n                // 인라인 에디팅 인데 스크롤 이벤트가 발생하면 디액티브 처리\n                GRID.body.inlineEdit.deActive.call(this, \"ESC\", key);\n            }\n        }\n\n        if (cfg.asidePanelWidth > 0 && \"top\" in css) {\n            this.$.panel[\"aside-body-scroll\"].css({top: css.top});\n        }\n        if (this.xvar.frozenColumnIndex > 0 && \"top\" in css) {\n            this.$.panel[\"left-body-scroll\"].css({top: css.top});\n        }\n        if (this.xvar.frozenRowIndex > 0 && \"left\" in css) {\n            this.$.panel[\"top-body-scroll\"].css({left: css.left});\n        }\n\n        this.$.panel[\"body-scroll\"].css(css);\n\n        if (cfg.footSum && \"left\" in css) {\n            this.$.panel[\"bottom-body-scroll\"].css({left: css.left});\n        }\n\n        if (!noRepaint && \"top\" in css) {\n            repaint.call(this);\n        } else {\n\n        }\n    };\n\n    var blur = function () {\n        columnSelect.focusClear.call(this);\n        columnSelect.clear.call(this);\n        if (this.isInlineEditing) {\n            inlineEdit.deActive.call(this);\n        }\n    };\n\n    let moveFocus = function (_position) {\n        let focus = {\n            \"UD\": function (_dy) {\n                let moveResult = true,\n                    focusedColumn, originalColumn, while_i;\n\n                for (let c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n\n                if (!focusedColumn) return false;\n\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dy > 0) {\n                    if (focusedColumn.rowIndex + (originalColumn.rowspan - 1) + _dy > this.bodyRowTable.rows.length - 1) {\n                        focusedColumn.dindex = focusedColumn.dindex + _dy;\n                        focusedColumn.rowIndex = 0;\n                        if (focusedColumn.dindex > this.list.length - 1) {\n                            focusedColumn.dindex = this.list.length - 1;\n                            moveResult = false;\n                        }\n                    } else {\n                        focusedColumn.rowIndex = focusedColumn.rowIndex + _dy;\n                    }\n                }\n                else {\n                    if (focusedColumn.rowIndex + _dy < 0) {\n                        focusedColumn.dindex = focusedColumn.dindex + _dy;\n                        focusedColumn.rowIndex = this.bodyRowTable.rows.length - 1;\n                        if (focusedColumn.dindex < 0) {\n                            focusedColumn.dindex = 0;\n                            moveResult = false;\n                        }\n                    } else {\n                        focusedColumn.rowIndex = focusedColumn.rowIndex + _dy;\n                    }\n                }\n\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    if (focusedColumn.rowIndex == 0 || while_i % 2 == ((_dy > 0) ? 0 : 1)) {\n                        focusedColumn.colIndex--;\n                    } else {\n                        focusedColumn.rowIndex--;\n                    }\n\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        moveResult = false;\n                        break;\n                    }\n                    while_i++;\n                }\n\n                var nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리.\n                (function () {\n                    if (focusedColumn.dindex + 1 > this.xvar.frozenRowIndex) {\n                        if (focusedColumn.dindex <= this.xvar.paintStartRowIndex) {\n                            scrollTo.call(this, {top: -(focusedColumn.dindex - this.xvar.frozenRowIndex) * this.xvar.bodyTrHeight});\n                            GRID.scroller.resize.call(this);\n                        }\n                        else if (focusedColumn.dindex + 1 > this.xvar.paintStartRowIndex + (this.xvar.paintRowCount - 2)) {\n                            scrollTo.call(this, {top: -(focusedColumn.dindex - this.xvar.frozenRowIndex - this.xvar.paintRowCount + 3) * this.xvar.bodyTrHeight});\n                            GRID.scroller.resize.call(this);\n                        }\n                    }\n                }).call(this);\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n                this.$.panel[focusedColumn.panelName]\n                    .find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]')\n                    .find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]')\n                    .attr('data-ax5grid-column-focused', \"true\");\n\n                return moveResult;\n\n            },\n            \"LR\": function (_dx) {\n                var moveResult = true;\n                var focusedColumn;\n                var originalColumn;\n                var while_i = 0;\n                var isScrollPanel = false;\n                var containerPanelName = \"\";\n\n                for (var c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n                if (!focusedColumn) return false;\n\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dx < 0) {\n                    focusedColumn.colIndex = focusedColumn.colIndex + _dx;\n                    if (focusedColumn.colIndex < 0) {\n                        focusedColumn.colIndex = 0;\n                        moveResult = false;\n                    }\n                } else {\n                    focusedColumn.colIndex = focusedColumn.colIndex + (originalColumn.colspan - 1) + _dx;\n                    if (focusedColumn.colIndex > this.colGroup.length - 1) {\n                        focusedColumn.colIndex = this.colGroup.length - 1;\n                        moveResult = false;\n                    }\n                }\n\n                if (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    focusedColumn.rowIndex = 0;\n                }\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    focusedColumn.colIndex--;\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        moveResult = false;\n                        break;\n                    }\n                    while_i++;\n                }\n\n                var nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n\n                focusedColumn.panelName = nPanelInfo.panelName;\n                containerPanelName = nPanelInfo.containerPanelName;\n                isScrollPanel = nPanelInfo.isScrollPanel;\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n\n                var $column = this.$.panel[focusedColumn.panelName]\n                    .find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]')\n                    .find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]')\n                    .attr('data-ax5grid-column-focused', \"true\");\n\n\n                if ($column && isScrollPanel) {// 스크롤 패널 이라면~\n                    var newLeft = (function () {\n                        if ($column.position().left + $column.outerWidth() > Math.abs(this.$.panel[focusedColumn.panelName].position().left) + this.$.panel[containerPanelName].width()) {\n                            return $column.position().left + $column.outerWidth() - this.$.panel[containerPanelName].width();\n                        } else if (Math.abs(this.$.panel[focusedColumn.panelName].position().left) > $column.position().left) {\n                            return $column.position().left;\n                        } else {\n                            return;\n                        }\n                    }).call(this);\n\n                    //console.log(newLeft);\n\n                    if (typeof newLeft !== \"undefined\") {\n                        GRID.header.scrollTo.call(this, {left: -newLeft});\n                        scrollTo.call(this, {left: -newLeft});\n                        GRID.scroller.resize.call(this);\n                    }\n                }\n\n                return moveResult;\n            },\n            \"INDEX\": function (_dindex) {\n                var moveResult = true;\n                var focusedColumn;\n                var originalColumn;\n                var while_i;\n\n                for (var c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n                if (!focusedColumn) {\n                    focusedColumn = {\n                        rowIndex: 0,\n                        colIndex: 0\n                    }\n                }\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n\n                if (_dindex == \"end\") {\n                    _dindex = this.list.length - 1;\n                }\n\n                focusedColumn.dindex = _dindex;\n                focusedColumn.rowIndex = 0;\n\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    if (focusedColumn.rowIndex == 0 || while_i % 2 == ((_dy > 0) ? 0 : 1)) {\n                        focusedColumn.colIndex--;\n                    } else {\n                        focusedColumn.rowIndex--;\n                    }\n\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        break;\n                    }\n                    while_i++;\n                }\n\n                var nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리.\n                (function () {\n                    if (focusedColumn.dindex + 1 > this.xvar.frozenRowIndex) {\n                        if (focusedColumn.dindex < this.xvar.paintStartRowIndex) {\n                            scrollTo.call(this, {top: -(focusedColumn.dindex - this.xvar.frozenRowIndex) * this.xvar.bodyTrHeight});\n                            GRID.scroller.resize.call(this);\n                        }\n                        else if (focusedColumn.dindex + 1 > this.xvar.paintStartRowIndex + (this.xvar.paintRowCount - 2)) {\n                            scrollTo.call(this, {top: -(focusedColumn.dindex - this.xvar.frozenRowIndex - this.xvar.paintRowCount + 3) * this.xvar.bodyTrHeight});\n                            GRID.scroller.resize.call(this);\n                        }\n                    }\n                }).call(this);\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n                this.$.panel[focusedColumn.panelName]\n                    .find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]')\n                    .find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]')\n                    .attr('data-ax5grid-column-focused', \"true\");\n\n                return moveResult;\n            }\n        };\n\n        let processor = {\n            \"UP\": function () {\n                return focus[\"UD\"].call(this, -1);\n            },\n            \"DOWN\": function () {\n                return focus[\"UD\"].call(this, 1);\n            },\n            \"LEFT\": function () {\n                return focus[\"LR\"].call(this, -1);\n            },\n            \"RIGHT\": function () {\n                return focus[\"LR\"].call(this, 1);\n            },\n            \"HOME\": function () {\n                return focus[\"INDEX\"].call(this, 0);\n            },\n            \"END\": function () {\n                return focus[\"INDEX\"].call(this, \"end\");\n            },\n            \"position\": function (_position) {\n                return focus[\"INDEX\"].call(this, _position);\n            }\n        };\n\n        if (_position in processor) {\n            return processor[_position].call(this);\n        } else {\n            return processor[\"position\"].call(this, _position);\n        }\n    };\n\n    var inlineEdit = {\n        active: function (_focusedColumn, _e, _initValue) {\n            var self = this,\n                dindex, colIndex, rowIndex, panelName, colspan,\n                col, editor;\n\n            // this.inlineEditing = {};\n            for (var key in _focusedColumn) {\n                panelName = _focusedColumn[key].panelName;\n                dindex = _focusedColumn[key].dindex;\n                colIndex = _focusedColumn[key].colIndex;\n                rowIndex = _focusedColumn[key].rowIndex;\n                colspan = _focusedColumn[key].colspan;\n\n                // 인라인 에디팅을 멈춰야 하는 경우 조건\n                col = this.colGroup[colIndex];\n                if (!(editor = col.editor)) return this;\n\n                // editor disabled 체크\n                if (U.isFunction(editor.disabled)) {\n                    if (editor.disabled.call({\n                            list: this.list,\n                            dindex: dindex,\n                            item: this.list[dindex],\n                            key: col.key,\n                            value: _initValue\n                        })) {\n                        return this;\n                    }\n                }\n\n                // 조건에 맞지 않는 에디팅 타입이면 반응 없음.\n                if (!(function (_editor, _type) {\n                        if (_editor.type in GRID.inlineEditor) {\n                            return (GRID.inlineEditor[_editor.type].editMode == \"popup\");\n                        }\n                    })(editor)) {\n                    // 체크 박스 타입이면 값 변경 시도\n                    if (editor.type == \"checkbox\") {\n                        var checked, newValue;\n                        if (editor.config && editor.config.trueValue) {\n                            if (checked = !(_initValue == editor.config.trueValue)) {\n                                newValue = editor.config.trueValue;\n                            } else {\n                                newValue = editor.config.falseValue;\n                            }\n                        } else {\n                            newValue = checked = (_initValue == false || _initValue == \"false\" || _initValue < \"1\") ? \"true\" : \"false\";\n                        }\n\n                        GRID.data.setValue.call(self, dindex, col.key, newValue);\n                        updateRowState.call(self, [\"cellChecked\"], dindex, {\n                            key: col.key, rowIndex: rowIndex, colIndex: colIndex,\n                            editorConfig: col.editor.config, checked: checked\n                        });\n                    }\n                    return this;\n                }\n\n\n                if (this.list[dindex].__isGrouping) {\n                    return false;\n                }\n                if (key in this.inlineEditing) {\n                    return false;\n                }\n                this.inlineEditing[key] = {\n                    editor: editor,\n                    panelName: panelName,\n                    columnKey: key,\n                    column: _focusedColumn[key],\n                    useReturnToSave: GRID.inlineEditor[editor.type].useReturnToSave\n                };\n                this.isInlineEditing = true;\n            }\n            if (this.isInlineEditing) {\n\n                var originalValue = GRID.data.getValue.call(self, dindex, col.key);\n                var initValue = (function (__value, __editor) {\n                    if (U.isNothing(__value)) {\n                        __value = U.isNothing(originalValue) ? \"\" : originalValue;\n                    }\n\n                    if (__editor.type == \"money\") {\n                        return U.number(__value, {\"money\": true});\n                    }\n                    else {\n                        return __value;\n                    }\n                }).call(this, _initValue, editor);\n\n                this.inlineEditing[key].$inlineEditorCell = this.$[\"panel\"][panelName]\n                    .find('[data-ax5grid-tr-data-index=\"' + dindex + '\"]')\n                    .find('[data-ax5grid-column-rowindex=\"' + rowIndex + '\"][data-ax5grid-column-colindex=\"' + colIndex + '\"]')\n                    .find('[data-ax5grid-cellholder]');\n\n                this.inlineEditing[key].$inlineEditor = GRID.inlineEditor[editor.type].init(this, key, editor, this.inlineEditing[key].$inlineEditorCell, initValue);\n\n                return true;\n            }\n        },\n        deActive: function (_msg, _key, _value) {\n            // console.log(this.inlineEditing.column.dindex, this.inlineEditing.$inlineEditor.val());\n            if (!this.inlineEditing[_key]) return this;\n\n            var panelName = this.inlineEditing[_key].panelName;\n            var dindex = this.inlineEditing[_key].column.dindex;\n            var rowIndex = this.inlineEditing[_key].column.rowIndex;\n            var colIndex = this.inlineEditing[_key].column.colIndex;\n\n            var column = this.bodyRowMap[this.inlineEditing[_key].column.rowIndex + \"_\" + this.inlineEditing[_key].column.colIndex];\n            var editorValue = (function ($inlineEditor) {\n                if (typeof _value === \"undefined\") {\n                    if ($inlineEditor.get(0).tagName == \"SELECT\" || $inlineEditor.get(0).tagName == \"INPUT\" || $inlineEditor.get(0).tagName == \"TEXTAREA\") {\n                        return $inlineEditor.val();\n                    } else {\n                        _msg = \"CANCEL\";\n                        return false;\n                    }\n                } else {\n                    return _value;\n                }\n            })(this.inlineEditing[_key].$inlineEditor);\n\n            var newValue = (function (__value, __editor) {\n                if (__editor.type == \"money\") {\n                    return U.number(__value);\n                }\n                else {\n                    return __value;\n                }\n            }).call(this, editorValue, column.editor);\n\n            var action = {\n                \"CANCEL\": function (_dindex, _column, _newValue) {\n                    action[\"__clear\"].call(this);\n                },\n                \"RETURN\": function (_dindex, _column, _newValue) {\n                    if (GRID.data.setValue.call(this, _dindex, _column.key, _newValue)) {\n                        action[\"__clear\"].call(this);\n                        GRID.body.repaintCell.call(this, panelName, dindex, rowIndex, colIndex, _newValue);\n                    } else {\n                        action[\"__clear\"].call(this);\n                    }\n                },\n                \"__clear\": function () {\n                    this.isInlineEditing = false;\n                    var bindedAx5ui = this.inlineEditing[_key].$inlineEditor.data(\"binded-ax5ui\");\n                    if (bindedAx5ui == \"ax5picker\") {\n                        this.inlineEditing[_key].$inlineEditor.ax5picker(\"close\");\n                    } else if (bindedAx5ui == \"ax5select\") {\n                        this.inlineEditing[_key].$inlineEditor.ax5select(\"close\");\n                    }\n\n                    this.inlineEditing[_key].$inlineEditor.remove();\n                    this.inlineEditing[_key].$inlineEditor = null;\n                    this.inlineEditing[_key].$inlineEditorCell = null;\n                    this.inlineEditing[_key] = undefined;\n                    delete this.inlineEditing[_key]; // delete 지원안하는 브라우저 테스트..\n                }\n            };\n\n            if (_msg in action) {\n                action[_msg || \"RETURN\"].call(this, dindex, column, newValue);\n            } else {\n                action[\"__clear\"].call(this);\n            }\n        },\n        keydown: function (key, columnKey, _options) {\n            var processor = {\n                \"ESC\": function () {\n                    for (var columnKey in this.inlineEditing) {\n                        inlineEdit.deActive.call(this, \"CANCEL\", columnKey);\n                    }\n                },\n                \"RETURN\": function () {\n                    if (this.isInlineEditing) {\n                        if (this.inlineEditing[columnKey] && this.inlineEditing[columnKey].useReturnToSave) { // todo : 네이밍 검증 할 필요있음.\n                            inlineEdit.deActive.call(this, \"RETURN\", columnKey);\n                        }\n                    } else {\n\n                        for (var k in this.focusedColumn) {\n                            var _column = this.focusedColumn[k];\n                            var column = this.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                            var dindex = _column.dindex;\n                            var value = \"\";\n                            if (column) {\n                                if (!this.list[dindex].__isGrouping) {\n                                    value = GRID.data.getValue.call(this, dindex, column.key);\n                                }\n                            }\n\n                            var col = this.colGroup[_column.colIndex];\n\n                            if (GRID.inlineEditor[col.editor.type].editMode === \"inline\") {\n                                if (_options && _options.moveFocus) {\n\n                                }\n                                else {\n                                    if (column.editor && column.editor.type == \"checkbox\") {\n\n                                        value = GRID.data.getValue.call(this, dindex, column.key);\n\n                                        var checked, newValue;\n                                        if (column.editor.config && column.editor.config.trueValue) {\n                                            if (checked = !(value == column.editor.config.trueValue)) {\n                                                newValue = column.editor.config.trueValue;\n                                            } else {\n                                                newValue = column.editor.config.falseValue;\n                                            }\n                                        } else {\n                                            newValue = checked = (value == false || value == \"false\" || value < \"1\") ? \"true\" : \"false\";\n                                        }\n\n                                        GRID.data.setValue.call(this, _column.dindex, column.key, newValue);\n                                        updateRowState.call(this, [\"cellChecked\"], dindex, {\n                                            key: column.key, rowIndex: _column.rowIndex, colIndex: _column.colIndex,\n                                            editorConfig: column.editor.config, checked: checked\n                                        });\n\n                                    }\n                                }\n                            } else {\n                                GRID.body.inlineEdit.active.call(this, this.focusedColumn, null, value);\n                            }\n                        }\n                    }\n                }\n            };\n\n            if (key in processor) {\n                processor[key].call(this, key, columnKey, _options);\n            }\n        }\n    };\n\n    let getExcelString = function () {\n        let cfg = this.config,\n            list = this.list,\n            bodyRowData = this.bodyRowTable,\n            footSumData = this.footSumTable,\n            bodyGroupingData = this.bodyGroupingTable;\n\n        // body-scroll 의 포지션에 의존적이므로..\n        let getBody = function (_colGroup, _bodyRow, _groupRow, _list) {\n            let SS = [],\n                di, dl,\n                tri, trl,\n                ci, cl,\n                col;\n\n            //SS.push('<table border=\"1\">');\n            for (di = 0, dl = _list.length; di < dl; di++) {\n                let isGroupingRow = false, rowTable;\n\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    rowTable = _groupRow;\n                    isGroupingRow = true;\n                } else {\n                    rowTable = _bodyRow;\n                }\n\n                for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                    SS.push('\\n<tr>');\n                    for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                        col = rowTable.rows[tri].cols[ci];\n\n                        SS.push('<td ',\n                            'colspan=\"' + col.colspan + '\" ',\n                            'rowspan=\"' + col.rowspan + '\" ',\n                            '>', (isGroupingRow) ? getGroupingValue.call(this, _list[di], di, col) : getFieldValue.call(this, _list, _list[di], di, col, undefined, \"text\"), '</td>');\n                    }\n                    SS.push('\\n</tr>');\n                }\n            }\n            //SS.push('</table>');\n            return SS.join('');\n        };\n        let getSum = function (_colGroup, _bodyRow, _list) {\n            let SS = [],\n                tri, trl,\n                ci, cl,\n                col;\n\n            //SS.push('<table border=\"1\">');\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('\\n<tr>');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    SS.push('<td ',\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        '>', getSumFieldValue.call(this, _list, col), '</td>');\n                }\n                SS.push('\\n</tr>');\n            }\n            //SS.push('</table>');\n\n            return SS.join('');\n        };\n\n        let po = [];\n        po.push(getBody.call(this, this.headerColGroup, bodyRowData, bodyGroupingData, list));\n        if (cfg.footSum) {\n            // 바닥 요약\n            po.push(getSum.call(this, this.headerColGroup, footSumData, list));\n        }\n\n        // right\n        if (cfg.rightSum) {\n            // todo : right 표현 정리\n        }\n\n        return po.join('');\n    };\n\n    GRID.body = {\n        init: init,\n        repaint: repaint,\n        repaintCell: repaintCell,\n        repaintRow: repaintRow,\n        updateRowState: updateRowState,\n        updateRowStateAll: updateRowStateAll,\n        scrollTo: scrollTo,\n        blur: blur,\n        moveFocus: moveFocus,\n        inlineEdit: inlineEdit,\n        getExcelString: getExcelString\n    };\n})();\n","// ax5.ui.grid.collector\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n    var sum = function () {\n        var value = 0;\n        var i = this.list.length;\n        while (i--) {\n            if(!(\"__groupingList\" in this.list[i])) {\n                value += U.number(this.list[i][this.key]);\n            }\n        }\n        return value;\n    };\n    var avg = function () {\n        var value = 0;\n        var i = this.list.length, listLength = 0;\n        while (i--) {\n            if(!(\"__groupingList\" in this.list[i])) {\n                value += U.number(this.list[i][this.key]);\n                listLength++;\n            }\n        }\n        return U.number(value / (listLength || 1), {\"round\": 2});\n    };\n\n    GRID.collector = {\n        sum: sum,\n        avg: avg\n    };\n\n})();","// ax5.ui.grid.layout\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var init = function () {\n\n    };\n\n    var clearGroupingData = function (_list) {\n        var i = 0, l = _list.length;\n        var returnList = [];\n        for (; i < l; i++) {\n            if (_list[i] && !_list[i][\"__isGrouping\"]) {\n                if (_list[i][this.config.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(i);\n                }\n                returnList.push(jQuery.extend({}, _list[i]));\n            }\n        }\n        return returnList;\n    };\n\n    let initData = function (_list) {\n        this.selectedDataIndexs = [];\n        let i = 0, l = _list.length,\n            returnList = [],\n            appendIndex = 0,\n            dataRealRowCount = 0;\n\n        if (this.config.body.grouping) {\n            let groupingKeys = U.map(this.bodyGrouping.by, function () {\n                return {\n                    key: this,\n                    compareString: \"\",\n                    grouping: false,\n                    list: []\n                }\n            });\n            let gi = 0, gl = groupingKeys.length, compareString, appendRow = [], ari;\n            for (; i < l + 1; i++) {\n                gi = 0;\n                if (_list[i] && _list[i][this.config.columnKeys.deleted]) {\n                    this.deletedList.push(_list[i]);\n                } else {\n                    compareString = \"\";\n                    appendRow = [];\n                    for (; gi < gl; gi++) {\n                        if (_list[i]) {\n                            compareString += \"$|$\" + _list[i][groupingKeys[gi].key];\n                        }\n                        if (appendIndex > 0 && compareString != groupingKeys[gi].compareString) {\n                            var appendRowItem = {keys: [], labels: [], list: groupingKeys[gi].list};\n                            for (var ki = 0; ki < gi + 1; ki++) {\n                                appendRowItem.keys.push(groupingKeys[ki].key);\n                                appendRowItem.labels.push(_list[i - 1][groupingKeys[ki].key]);\n                            }\n                            appendRow.push(appendRowItem);\n                            groupingKeys[gi].list = [];\n                        }\n                        groupingKeys[gi].list.push(_list[i]);\n                        groupingKeys[gi].compareString = compareString;\n                    }\n\n                    ari = appendRow.length;\n                    while (ari--) {\n                        returnList.push({__isGrouping: true, __groupingList: appendRow[ari].list, __groupingBy: {keys: appendRow[ari].keys, labels: appendRow[ari].labels}});\n                    }\n\n                    if (_list[i]) {\n                        if (_list[i][this.config.columnKeys.selected]) {\n                            this.selectedDataIndexs.push(i);\n                        }\n                        dataRealRowCount = _list[i][\"__index\"] = i;\n                        returnList.push(_list[i]);\n                        appendIndex++;\n                    }\n                }\n            }\n        }\n        else {\n            for (; i < l; i++) {\n                if (_list[i] && _list[i][this.config.columnKeys.deleted]) {\n                    this.deletedList.push(_list[i]);\n                } else if (_list[i]) {\n                    if (_list[i][this.config.columnKeys.selected]) {\n                        this.selectedDataIndexs.push(i);\n                    }\n                    // __index변수를 추가하여 lineNumber 에 출력합니다. (body getFieldValue 에서 출력함)\n                    _list[i][\"__index\"] = i;\n                    dataRealRowCount++;\n                    returnList.push(_list[i]);\n                }\n            }\n        }\n\n        // 원본 데이터의 갯수\n        // grouping은 제외하고 수집됨.\n        this.xvar.dataRealRowCount = dataRealRowCount;\n        return returnList;\n    };\n\n    let set = function (data) {\n        let self = this;\n\n        if (U.isArray(data)) {\n            this.page = null;\n            this.list = initData.call(this,\n                (!this.config.remoteSort && Object.keys(this.sortInfo).length) ? sort.call(this, this.sortInfo, data) : data\n            );\n            this.deletedList = [];\n        } else if (\"page\" in data) {\n            this.page = jQuery.extend({}, data.page);\n            this.list = initData.call(this,\n                (!this.config.remoteSort && Object.keys(this.sortInfo).length) ? sort.call(this, this.sortInfo, data.list) : data.list\n            );\n            this.deletedList = [];\n        }\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n\n        if (this.config.body.grouping) {\n\n        }\n        return this;\n    };\n\n    let get = function (_type) {\n        return {\n            list: this.list,\n            page: this.page\n        };\n    };\n\n    let getList = function (_type) {\n        let returnList = [];\n        let i = 0, l = this.list.length;\n        switch (_type) {\n            case \"modified\":\n                for (; i < l; i++) {\n                    if (this.list[i] && !this.list[i][\"__isGrouping\"] && this.list[i][this.config.columnKeys.modified]) {\n                        returnList.push(jQuery.extend({}, this.list[i]));\n                    }\n                }\n                break;\n            case \"selected\":\n                for (; i < l; i++) {\n                    if (this.list[i] && !this.list[i][\"__isGrouping\"] && this.list[i][this.config.columnKeys.selected]) {\n                        returnList.push(jQuery.extend({}, this.list[i]));\n                    }\n                }\n                break;\n            case \"deleted\":\n                //_list = GRID.data.clearGroupingData(this.list);\n                returnList = [].concat(this.deletedList);\n                break;\n            default:\n                returnList = GRID.data.clearGroupingData.call(this, this.list);\n        }\n        return returnList;\n    };\n\n    let add = function (_row, _dindex, _options) {\n        let list = (this.config.body.grouping) ? clearGroupingData.call(this, this.list) : this.list;\n        let processor = {\n            \"first\": function () {\n                list = [].concat(_row).concat(list);\n            },\n            \"last\": function () {\n                list = list.concat([].concat(_row));\n            }\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n        if (_dindex in processor) {\n            _row[this.config.columnKeys.modified] = true;\n            processor[_dindex].call(this, _row);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            //\n            list = list.splice(_dindex, [].concat(_row));\n        }\n\n        if (this.config.body.grouping) {\n            list = initData.call(this,\n                sort.call(this,\n                    this.sortInfo,\n                    list\n                )\n            );\n        } else if (_options && _options.sort && Object.keys(this.sortInfo).length) {\n            list = sort.call(this,\n                this.sortInfo,\n                list\n            );\n        }\n\n        this.list = list;\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    /**\n     * list에서 완전 제거 하는 경우 사용.\n     * ax5grid.data.remove\n     */\n    let remove = function (_dindex) {\n        let list = (this.config.body.grouping) ? clearGroupingData.call(this, this.list) : this.list;\n        let processor = {\n            \"first\": function () {\n                list.splice(_dindex, 1);\n            },\n            \"last\": function () {\n                var lastIndex = list.length - 1;\n                list.splice(lastIndex, 1);\n            }\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n        if (_dindex in processor) {\n            processor[_dindex].call(this, _dindex);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            //\n            list.splice(_dindex, 1);\n        }\n\n        if (this.config.body.grouping) {\n            list = initData.call(this,\n                sort.call(this,\n                    this.sortInfo,\n                    list\n                )\n            );\n        } else if (Object.keys(this.sortInfo).length) {\n            list = initData.call(this,\n                sort.call(this,\n                    this.sortInfo,\n                    list\n                )\n            );\n        } else {\n            list = initData.call(this, list);\n        }\n\n        this.list = list;\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n\n    /**\n     * list에서 deleted 처리 repaint\n     * ax5grid.data.deleteRow\n     */\n    let deleteRow = function (_dindex) {\n        let list = (this.config.body.grouping) ? clearGroupingData.call(this, this.list) : this.list;\n        let processor = {\n            \"first\": function () {\n                list[0][this.config.columnKeys.deleted] = true;\n            },\n            \"last\": function () {\n                list[list.length - 1][this.config.columnKeys.deleted] = true;\n            },\n            \"selected\": function () {\n                var i = list.length;\n                while (i--) {\n                    if (list[i][this.config.columnKeys.selected]) {\n                        list[i][this.config.columnKeys.deleted] = true;\n                    }\n                }\n            }\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n        if (_dindex in processor) {\n            processor[_dindex].call(this, _dindex);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            list[_dindex][this.config.columnKeys.deleted] = true;\n        }\n\n        if (this.config.body.grouping) {\n            list = initData.call(this,\n                sort.call(this,\n                    this.sortInfo,\n                    list\n                )\n            );\n        } else if (Object.keys(this.sortInfo).length) {\n            list = initData.call(this,\n                sort.call(this,\n                    this.sortInfo,\n                    list\n                )\n            );\n        } else {\n            list = initData.call(this, list);\n        }\n\n        this.list = list;\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    let update = function (_row, _dindex) {\n        if (!U.isNumber(_dindex)) {\n            throw 'invalid argument _dindex';\n        }\n        //\n        this.needToPaintSum = true;\n        this.list.splice(_dindex, 1, _row);\n\n        if (this.config.body.grouping) {\n            this.list = initData.call(this, clearGroupingData.call(this, this.list));\n        }\n    };\n\n    let setValue = function (_dindex, _key, _value) {\n        let originalValue = getValue.call(this, _dindex, _key);\n        this.needToPaintSum = true;\n\n        if (originalValue !== _value) {\n            if (/[\\.\\[\\]]/.test(_key)) {\n                try {\n                    this.list[_dindex][this.config.columnKeys.modified] = true;\n                    (Function(\"val\", \"this\" + GRID.util.getRealPathForDataItem(_key) + \" = val;\")).call(this.list[_dindex], _value);\n                } catch (e) {\n\n                }\n            } else {\n                this.list[_dindex][this.config.columnKeys.modified] = true;\n                this.list[_dindex][_key] = _value;\n            }\n\n            if (this.onDataChanged) {\n                this.onDataChanged.call({\n                    self: this,\n                    list: this.list,\n                    dindex: _dindex,\n                    item: this.list[_dindex],\n                    key: _key,\n                    value: _value\n                });\n            }\n        }\n\n        return true;\n    };\n\n    let getValue = function (_dindex, _key, _value) {\n        if (/[\\.\\[\\]]/.test(_key)) {\n            try {\n                _value = (Function(\"\", \"return this\" + GRID.util.getRealPathForDataItem(_key) + \";\")).call(this.list[_dindex]);\n            } catch (e) {\n\n            }\n        } else {\n            _value = this.list[_dindex][_key];\n        }\n        return _value;\n    };\n\n    let clearSelect = function () {\n        this.selectedDataIndexs = [];\n    };\n\n    let select = function (_dindex, _selected, _options) {\n        let cfg = this.config;\n\n        if (this.list[_dindex].__isGrouping) return false;\n        if (this.list[_dindex][cfg.columnKeys.disableSelection]) return false;\n\n        if (typeof _selected === \"undefined\") {\n            if (this.list[_dindex][cfg.columnKeys.selected] = !this.list[_dindex][cfg.columnKeys.selected]) {\n                this.selectedDataIndexs.push(_dindex);\n            }\n        } else {\n            if (this.list[_dindex][cfg.columnKeys.selected] = _selected) {\n                this.selectedDataIndexs.push(_dindex);\n            }\n        }\n\n        if (this.onDataChanged && _options && _options.internalCall) {\n            this.onDataChanged.call({\n                self: this,\n                list: this.list,\n                dindex: _dindex,\n                item: this.list[_dindex],\n                key: cfg.columnKeys.selected,\n                value: this.list[_dindex][cfg.columnKeys.selected]\n            });\n        }\n\n        return this.list[_dindex][cfg.columnKeys.selected];\n    };\n\n    let selectAll = function (_selected, _options) {\n        let cfg = this.config,\n            dindex = this.list.length;\n\n        if (typeof _selected === \"undefined\") {\n            while (dindex--) {\n                if (this.list[dindex].__isGrouping) continue;\n                if (_options && _options.filter) {\n                    if (_options.filter.call(this.list[dindex]) !== true) {\n                        continue;\n                    }\n                }\n                if (this.list[dindex][cfg.columnKeys.disableSelection]) continue;\n\n                if (this.list[dindex][cfg.columnKeys.selected] = !this.list[dindex][cfg.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(dindex);\n                }\n            }\n        } else {\n            while (dindex--) {\n                if (this.list[dindex].__isGrouping) continue;\n                if (_options && _options.filter) {\n                    if (_options.filter.call(this.list[dindex]) !== true) {\n                        continue;\n                    }\n                }\n                if (this.list[dindex][cfg.columnKeys.disableSelection]) continue;\n\n                if (this.list[dindex][cfg.columnKeys.selected] = _selected) {\n                    this.selectedDataIndexs.push(dindex);\n                }\n            }\n        }\n\n        if (this.onDataChanged && _options && _options.internalCall) {\n            this.onDataChanged.call({\n                self: this,\n                list: this.list\n            });\n        }\n\n        return this.list;\n    };\n\n    let sort = function (_sortInfo, _list) {\n        let self = this, list = _list || this.list, sortInfoArray = [];\n        let getKeyValue = function (_item, _key, _value) {\n            if (/[\\.\\[\\]]/.test(_key)) {\n                try {\n                    _value = (Function(\"\", \"return this\" + GRID.util.getRealPathForDataItem(_key) + \";\")).call(_item);\n                } catch (e) { }\n            } else {\n                _value = _item[_key];\n            }\n            return _value;\n        };\n\n        for (let k in _sortInfo) {\n            sortInfoArray[_sortInfo[k].seq] = {key: k, order: _sortInfo[k].orderBy};\n        }\n        sortInfoArray = U.filter(sortInfoArray, function () {\n            return typeof this !== \"undefined\";\n        });\n\n        let i = 0, l = sortInfoArray.length, _a_val, _b_val;\n\n        list.sort(function (_a, _b) {\n            for (i = 0; i < l; i++) {\n                _a_val = getKeyValue(_a, sortInfoArray[i].key);\n                _b_val = getKeyValue(_b, sortInfoArray[i].key);\n\n                if (typeof _a_val !== typeof _b_val) {\n                    _a_val = '' + _a_val;\n                    _b_val = '' + _b_val;\n                }\n                if (_a_val < _b_val) {\n                    return (sortInfoArray[i].order === \"asc\") ? -1 : 1;\n                } else if (_a_val > _b_val) {\n                    return (sortInfoArray[i].order === \"asc\") ? 1 : -1;\n                }\n            }\n        });\n\n        if (_list) {\n            return list;\n        } else {\n            this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n            this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n            GRID.page.navigationUpdate.call(this);\n            return this;\n        }\n    };\n\n    GRID.data = {\n        init: init,\n        set: set,\n        get: get,\n        getList: getList,\n        setValue: setValue,\n        getValue: getValue,\n        clearSelect: clearSelect,\n        select: select,\n        selectAll: selectAll,\n        add: add,\n        remove: remove,\n        deleteRow: deleteRow,\n        update: update,\n        sort: sort,\n        initData: initData,\n        clearGroupingData: clearGroupingData\n    };\n\n})();","/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.grid.excel\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var base64 = function (s) {\n        return window.btoa(unescape(encodeURIComponent(s)));\n    };\n    var uri = \"data:application/vnd.ms-excel;base64,\";\n\n    var getExcelTmpl = function () {\n        return `\\ufeff\n{{#tables}}{{{body}}}{{/tables}}\n`;\n    };\n\n    var tableToExcel = function (table, fileName) {\n        var link, a, output;\n        var tables = [].concat(table);\n\n        output = ax5.mustache.render(getExcelTmpl(), {\n            worksheet: (function () {\n                var arr = [];\n                tables.forEach(function (t, ti) {\n                    arr.push({name: \"Sheet\" + (ti + 1)});\n                });\n                return arr;\n            })(),\n            tables: (function () {\n                var arr = [];\n                tables.forEach(function (t, ti) {\n                    arr.push({body: t});\n                });\n                return arr;\n            })()\n        });\n\n        var isChrome = navigator.userAgent.indexOf(\"Chrome\") > -1;\n        var isSafari = !isChrome && navigator.userAgent.indexOf(\"Safari\") > -1;\n\n        var isIE = /*@cc_on!@*/false || !!document.documentMode; // this works with IE10 and IE11 both :)\n        if (navigator.msSaveOrOpenBlob) {\n            var blob1 = new Blob([output], {type: \"text/html\"});\n            window.navigator.msSaveOrOpenBlob(blob1, fileName);\n        }\n        else if (isSafari) {\n            // 사파리는 지원이 안되므로 그냥 테이블을 클립보드에 복사처리\n            //tables\n            var blankWindow = window.open('about:blank', this.id + '-excel-export', 'width=600,height=400');\n            blankWindow.document.write(output);\n            blankWindow = null;\n        }\n        else {\n            if (isIE && typeof Blob === \"undefined\") {\n\n                //otherwise use the iframe and save\n                //requires a blank iframe on page called txtArea1\n                var $iframe = jQuery('<iframe id=\"' + this.id + '-excel-export\" style=\"display:none\"></iframe>');\n                jQuery(document.body).append($iframe);\n                var iframe = window[this.id + '-excel-export'];\n                iframe.document.open(\"text/html\", \"replace\");\n                iframe.document.write(output);\n                iframe.document.close();\n                iframe.focus();\n                iframe.document.execCommand(\"SaveAs\", true, fileName);\n                $iframe.remove();\n            } else {\n                // Attempt to use an alternative method\n                var anchor = document.body.appendChild(\n                    document.createElement(\"a\")\n                );\n\n                // If the [download] attribute is supported, try to use it\n                if (\"download\" in anchor) {\n                    anchor.download = fileName;\n                    //anchor.href = URL.createObjectURL( blob );\n                    anchor.href = uri + base64(output);\n                    anchor.click();\n                    document.body.removeChild(anchor);\n                }\n            }\n        }\n\n        return true;\n    };\n\n    GRID.excel = {\n        export: tableToExcel\n    };\n})();","// ax5.ui.grid.formatter\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n    var money = function () {\n        return U.number(this.value, {\"money\":true});\n    };\n\n    GRID.formatter = {\n        money: money\n    };\n\n})();","// ax5.ui.grid.header\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var columnResizerEvent = {\n        \"on\": function (_columnResizer, _colIndex) {\n            var self = this;\n            var $columnResizer = $(_columnResizer);\n            var columnResizerPositionLeft = $columnResizer.offset().left;\n            var gridTargetOffsetLeft = self.$[\"container\"][\"root\"].offset().left;\n            self.xvar.columnResizerIndex = _colIndex;\n            var resizeRange = {\n                min: -self.colGroup[_colIndex]._width + 2,\n                max: (self.colGroup[_colIndex + 1]) ? self.colGroup[_colIndex + 1]._width : self.$[\"container\"][\"root\"].width() - 2,\n            };\n            //console.log(resizeRange);\n\n            jQuery(document.body)\n                .bind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n\n                    if (resizeRange.min > self.xvar.__da) {\n                        self.xvar.__da = resizeRange.min;\n                    } else if (resizeRange.max < self.xvar.__da) {\n                        self.xvar.__da = resizeRange.max;\n                    }\n\n                    if (!self.xvar.columnResizerLived) {\n                        self.$[\"resizer\"][\"horizontal\"].addClass(\"live\");\n                    }\n                    self.xvar.columnResizerLived = true;\n                    self.$[\"resizer\"][\"horizontal\"].css({\n                        left: columnResizerPositionLeft + self.xvar.__da - gridTargetOffsetLeft\n                    });\n                })\n                .bind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                    columnResizerEvent.off.call(self);\n                    U.stopEvent(e);\n                })\n                .bind(\"mouseleave.ax5grid-\" + this.instanceId, function (e) {\n                    columnResizerEvent.off.call(self);\n                    U.stopEvent(e);\n                });\n\n            jQuery(document.body)\n                .attr('unselectable', 'on')\n                .css('user-select', 'none')\n                .on('selectstart', false);\n        },\n        \"off\": function () {\n            this.$[\"resizer\"][\"horizontal\"].removeClass(\"live\");\n            this.xvar.columnResizerLived = false;\n\n            if (typeof this.xvar.__da === \"undefined\") {\n\n            }\n            else {\n                this.setColumnWidth(this.colGroup[this.xvar.columnResizerIndex]._width + this.xvar.__da, this.xvar.columnResizerIndex);\n            }\n\n            jQuery(document.body)\n                .unbind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId)\n                .unbind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId)\n                .unbind(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body)\n                .removeAttr('unselectable')\n                .css('user-select', 'auto')\n                .off('selectstart');\n        }\n    };\n\n    var init = function () {\n        // 헤더 초기화\n        var self = this;\n\n        this.$[\"container\"][\"header\"].on(\"click\", '[data-ax5grid-column-attr]', function (e) {\n            let key = this.getAttribute(\"data-ax5grid-column-key\"),\n                colIndex = this.getAttribute(\"data-ax5grid-column-colindex\"),\n                rowIndex = this.getAttribute(\"data-ax5grid-column-rowindex\"),\n                col = self.colGroup[colIndex];\n\n            if (key === \"__checkbox_header__\") {\n                var selected = this.getAttribute(\"data-ax5grid-selected\");\n                selected = (U.isNothing(selected)) ? true : (selected === \"true\") ? false : true;\n\n                $(this).attr(\"data-ax5grid-selected\", selected);\n                self.selectAll({selected: selected});\n            }\n            else {\n                if (key && col) {\n                    if ((col.sortable === true || self.config.sortable === true) && col.sortable !== false) {\n                        if (!col.sortFixed) toggleSort.call(self, col.key);\n                    }\n                }\n            }\n\n            GRID.body.blur.call(self);\n        });\n        this.$[\"container\"][\"header\"]\n            .on(\"mousedown\", '[data-ax5grid-column-resizer]', function (e) {\n                var colIndex = this.getAttribute(\"data-ax5grid-column-resizer\");\n                self.xvar.mousePosition = GRID.util.getMousePosition(e);\n                columnResizerEvent.on.call(self, this, Number(colIndex));\n                U.stopEvent(e);\n            })\n            .on(\"dragstart\", function (e) {\n                U.stopEvent(e);\n                return false;\n            });\n\n        resetFrozenColumn.call(this);\n    };\n\n    var resetFrozenColumn = function () {\n        let cfg = this.config,\n            dividedHeaderObj = GRID.util.divideTableByFrozenColumnIndex(this.headerTable, this.config.frozenColumnIndex);\n        this.asideHeaderData = (function (dataTable) {\n            var colGroup = [];\n            var data = {rows: []};\n            for (var i = 0, l = dataTable.rows.length; i < l; i++) {\n                data.rows[i] = {cols: []};\n                if (i === 0) {\n                    var col = {\n                        label: \"\",\n                        colspan: 1,\n                        rowspan: dataTable.rows.length,\n                        colIndex: null\n                    }, _col = {};\n\n                    if (cfg.showLineNumber) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.lineNumberColumnWidth,\n                            _width: cfg.lineNumberColumnWidth,\n                            columnAttr: \"lineNumber\",\n                            key: \"__index_header__\", label: \"&nbsp;\"\n                        });\n                        colGroup.push(_col);\n                        data.rows[i].cols.push(_col);\n                    }\n                    if (cfg.showRowSelector) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.rowSelectorColumnWidth,\n                            _width: cfg.rowSelectorColumnWidth,\n                            columnAttr: \"rowSelector\",\n                            key: \"__checkbox_header__\", label: \"\"\n                        });\n                        colGroup.push(_col);\n                        data.rows[i].cols.push(_col);\n                    }\n                }\n            }\n\n            this.asideColGroup = colGroup;\n            return data;\n        }).call(this, this.headerTable);\n        this.leftHeaderData = dividedHeaderObj.leftData;\n        this.headerData = dividedHeaderObj.rightData;\n    };\n\n    var getFieldValue = function (_col) {\n        let cfg = this.config,\n            colGroup = this.colGroup,\n            _key = _col.key,\n            tagsToReplace = {\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        if (_key === \"__checkbox_header__\") {\n            return '<div class=\"checkBox\"></div>';\n\n        } else {\n            return (_col.label || \"&nbsp;\");\n        }\n    };\n\n    var repaint = function (_reset) {\n        let cfg = this.config,\n            colGroup = this.colGroup;\n\n        if (_reset) {\n            resetFrozenColumn.call(this);\n            this.xvar.paintStartRowIndex = undefined;\n        }\n        let asideHeaderData = this.asideHeaderData,\n            leftHeaderData = this.leftHeaderData,\n            headerData = this.headerData,\n            headerAlign = cfg.header.align;\n\n        // this.asideColGroup : asideHeaderData에서 처리 함.\n        this.leftHeaderColGroup = colGroup.slice(0, this.config.frozenColumnIndex);\n        this.headerColGroup = colGroup.slice(this.config.frozenColumnIndex);\n\n        var repaintHeader = function (_elTarget, _colGroup, _bodyRow) {\n            let tableWidth = 0,\n                SS = [];\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n                tableWidth += _colGroup[cgi]._width;\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                var trCSS_class = \"\";\n                SS.push('<tr class=\"' + trCSS_class + '\">');\n                for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    var col = _bodyRow.rows[tri].cols[ci];\n                    var cellHeight = cfg.header.columnHeight * col.rowspan - cfg.header.columnBorderWidth;\n                    var colAlign = headerAlign || col.align;\n                    SS.push('<td ',\n                        'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                        'data-ax5grid-column-row=\"' + tri + '\" ',\n                        'data-ax5grid-column-col=\"' + ci + '\" ',\n                        (function () {\n                            return (typeof col.key !== \"undefined\") ? 'data-ax5grid-column-key=\"' + col.key + '\" ' : '';\n                        })(),\n                        'data-ax5grid-column-colindex=\"' + col.colIndex + '\" ',\n                        'data-ax5grid-column-rowindex=\"' + col.rowIndex + '\" ',\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        'class=\"' + (function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key\n                                        }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.header.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }).call(this, col) + '\" ',\n                        'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push((function () {\n                        var lineHeight = (cfg.header.columnHeight - cfg.header.columnPadding * 2 - cfg.header.columnBorderWidth);\n                        return '<span data-ax5grid-cellHolder=\"\" ' +\n                            ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                            ' style=\"height: ' + (cfg.header.columnHeight - cfg.header.columnBorderWidth) + 'px;line-height: ' + lineHeight + 'px;\">';\n                    })(), (function () {\n                        var _SS = \"\";\n\n                        if (!U.isNothing(col.key) && !U.isNothing(col.colIndex) && (cfg.sortable === true || col.sortable === true) && col.sortable !== false) {\n                            _SS += '<span data-ax5grid-column-sort=\"' + col.colIndex + '\" data-ax5grid-column-sort-order=\"' + (colGroup[col.colIndex].sort || \"\") + '\" />';\n                        }\n                        return _SS;\n                    })(), getFieldValue.call(this, col), '</span>');\n\n                    if (!U.isNothing(col.colIndex)) {\n                        if (cfg.enableFilter) {\n                            SS.push('<span data-ax5grid-column-filter=\"' + col.colIndex + '\" data-ax5grid-column-filter-value=\"\"  />');\n                        }\n                    }\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ',\n                    'data-ax5grid-column-row=\"null\" ',\n                    'data-ax5grid-column-col=\"null\" ',\n                    'style=\"height: ' + (cfg.header.columnHeight) + 'px;min-height: 1px;\" ',\n                    '></td>');\n                SS.push('</tr>');\n            }\n            SS.push('</table>');\n            _elTarget.html(SS.join(''));\n\n            /// append column-resizer\n            (function () {\n                let resizerHeight = cfg.header.columnHeight * _bodyRow.rows.length - cfg.header.columnBorderWidth,\n                    resizerLeft = 0,\n                    AS = [];\n\n                for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                    var col = _colGroup[cgi];\n                    if (!U.isNothing(col.colIndex)) {\n                        //_colGroup[cgi]._width\n                        resizerLeft += col._width;\n                        AS.push('<div data-ax5grid-column-resizer=\"' + col.colIndex + '\" style=\"height:' + resizerHeight + 'px;left: ' + (resizerLeft - 4) + 'px;\"  />');\n                    }\n                }\n                _elTarget.append(AS);\n            }).call(this);\n\n\n            return tableWidth;\n        };\n\n        if (cfg.asidePanelWidth > 0) {\n            repaintHeader.call(this, this.$.panel[\"aside-header\"], this.asideColGroup, asideHeaderData);\n        }\n        if (cfg.frozenColumnIndex > 0) {\n            repaintHeader.call(this, this.$.panel[\"left-header\"], this.leftHeaderColGroup, leftHeaderData);\n        }\n        this.xvar.scrollContentWidth = repaintHeader.call(this, this.$.panel[\"header-scroll\"], this.headerColGroup, headerData);\n\n        if (cfg.rightSum) {\n\n        }\n    };\n\n    var scrollTo = function (css) {\n        this.$.panel[\"header-scroll\"].css(css);\n        return this;\n    };\n\n    var toggleSort = function (_key) {\n        let sortOrder = \"\",\n            sortInfo = {},\n            seq = 0;\n\n        for (var k in this.sortInfo) {\n            if (this.sortInfo[k].fixed) {\n                sortInfo[k] = this.sortInfo[k];\n                seq++;\n            }\n        }\n\n        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n            if (this.colGroup[i].key == _key) {\n                if (sortOrder == \"\") {\n                    if (typeof this.colGroup[i].sort === \"undefined\") {\n                        sortOrder = \"desc\";\n                    }\n                    else if (this.colGroup[i].sort === \"desc\") {\n                        sortOrder = \"asc\";\n                    }\n                    else {\n                        sortOrder = undefined;\n                    }\n                }\n                this.colGroup[i].sort = sortOrder;\n            } else if (!this.config.multiSort) {\n                this.colGroup[i].sort = undefined;\n            }\n\n            if (typeof this.colGroup[i].sort !== \"undefined\") {\n                if (!sortInfo[this.colGroup[i].key]) {\n                    sortInfo[this.colGroup[i].key] = {\n                        seq: seq++,\n                        orderBy: this.colGroup[i].sort\n                    };\n                }\n            }\n        }\n\n        this.setColumnSort(sortInfo);\n        return this;\n    };\n\n    var applySortStatus = function (_sortInfo) {\n        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n            for (var _key in _sortInfo) {\n                if (this.colGroup[i].key == _key) {\n                    this.colGroup[i].sort = _sortInfo[_key].orderBy;\n                }\n            }\n        }\n        return this;\n    };\n\n    var select = function (_options) {\n        GRID.data.select.call(this, dindex, _options && _options.selected);\n        GRID.body.updateRowState.call(this, [\"selected\"], dindex);\n    };\n\n    var getExcelString = function () {\n        let cfg = this.config,\n            colGroup = this.colGroup,\n            headerData = this.headerTable,\n            getHeader = function (_colGroup, _bodyRow) {\n                var SS = [];\n                //SS.push('<table border=\"1\">');\n                for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                    SS.push('<tr>');\n                    for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                        var col = _bodyRow.rows[tri].cols[ci];\n                        SS.push('<td ',\n                            'colspan=\"' + col.colspan + '\" ',\n                            'rowspan=\"' + col.rowspan + '\" ',\n                            '>', getFieldValue.call(this, col), '</td>');\n                    }\n                    SS.push('</tr>');\n                }\n                //SS.push('</table>');\n\n                return SS.join('');\n            };\n\n        return getHeader.call(this, colGroup, headerData);\n    };\n\n    GRID.header = {\n        init: init,\n        repaint: repaint,\n        scrollTo: scrollTo,\n        toggleSort: toggleSort,\n        applySortStatus: applySortStatus,\n        getExcelString: getExcelString\n    };\n\n})();","// ax5.ui.grid.inlineEditor\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var edit_text = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"text\" value=\"' + _value + '\" >';\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.focus().select();\n        }\n    };\n\n    var edit_money = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"money\" value=\"' + _value + '\" >';\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.data(\"binded-ax5ui\", \"ax5formater\");\n            _$el.ax5formatter({\n                pattern: \"money\"\n            });\n            _$el.focus().select();\n        }\n    };\n\n    var edit_number = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"number\" value=\"' + _value + '\" >';\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.data(\"binded-ax5ui\", \"ax5formater\");\n            _$el.ax5formatter({\n                pattern: \"number\"\n            });\n            _$el.focus().select();\n        }\n    };\n\n    var edit_date = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"calendar\" value=\"' + _value + '\" >';\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            var self = _root;\n            _$el.data(\"binded-ax5ui\", \"ax5picker\");\n            _$el.ax5picker({\n                direction: \"auto\",\n                content: {\n                    type: 'date',\n                    formatter: {\n                        pattern: 'date'\n                    }\n                },\n                onStateChanged: function () {\n                    if (this.state == \"open\") {\n                        this.self.activePicker.attr(\"data-ax5grid-inline-edit-picker\", \"date\");\n                    } else if (this.state == \"close\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"RETURN\", _columnKey);\n                    }\n                }\n            });\n            _$el.focus().select();\n        }\n    };\n\n    var edit_select = {\n        useReturnToSave: false,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            var po = [];\n            po.push('<div data-ax5select=\"ax5grid-editor\" data-ax5select-config=\"{}\">');\n            po.push('</div>');\n\n            return po.join('');\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            var eConfig = {\n                columnKeys: {\n                    optionValue: \"value\",\n                    optionText: \"text\",\n                    optionSelected: \"selected\"\n                }\n            };\n            jQuery.extend(true, eConfig, _editor.config);\n\n            eConfig.options.forEach(function (n) {\n                if (n[eConfig.columnKeys.optionValue] == _value) n[eConfig.columnKeys.optionSelected] = true;\n            });\n\n            var self = _root;\n            _$el.data(\"binded-ax5ui\", \"ax5select\");\n            _$el.ax5select({\n                direction: \"auto\",\n                columnKeys: eConfig.columnKeys,\n                options: eConfig.options,\n                onStateChanged: function () {\n                    if (this.state == \"open\") {\n                        this.self.activeSelectOptionGroup.attr(\"data-ax5grid-inline-edit-picker\", \"select\");\n                    } else if (this.state == \"changeValue\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"RETURN\", _columnKey, this.value[0][eConfig.columnKeys.optionValue]);\n                    } else if (this.state == \"close\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"ESC\", _columnKey);\n                    }\n                }\n            });\n            _$el.ax5select(\"open\");\n            _$el.ax5select(\"setValue\", _value);\n            _$el.find(\"a\").focus();\n        }\n    };\n\n    var edit_checkbox = {\n        editMode: \"inline\",\n        getHtml: function (_root, _editor, _value) {\n\n            var lineHeight = (_root.config.body.columnHeight - _root.config.body.columnPadding * 2 - _root.config.body.columnBorderWidth);\n            var checked;\n            if (_editor.config && _editor.config.trueValue) {\n                checked = (_value == _editor.config.trueValue) ? \"true\" : \"false\";\n            } else {\n                checked = (_value == false || _value == \"false\" || _value < \"1\") ? \"false\" : \"true\";\n            }\n\n            var eConfig = {\n                marginTop: 2,\n                height: lineHeight - 4\n            };\n            jQuery.extend(true, eConfig, _editor.config);\n            eConfig.marginTop = (lineHeight - eConfig.height) / 2;\n\n            return '<div data-ax5grid-editor=\"checkbox\" data-ax5grid-checked=\"' + checked + '\" style=\"height:' + eConfig.height + 'px;width:' + eConfig.height + 'px;margin-top:' + eConfig.marginTop + 'px;\"></div>';\n        }\n    };\n\n    GRID.inlineEditor = {\n        \"text\": edit_text,\n        \"money\": edit_money,\n        \"number\": edit_number,\n        \"date\": edit_date,\n        \"select\": edit_select,\n        \"checkbox\": edit_checkbox\n    };\n\n})();","// ax5.ui.grid.page\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var onclickPageMove = function (_act) {\n        var callback = function (_pageNo) {\n            if (this.page.currentPage != _pageNo) {\n                this.page.selectPage = _pageNo;\n                if (this.config.page.onChange) {\n                    this.config.page.onChange.call({\n                        self: this,\n                        page: this.page,\n                        data: this.data\n                    });\n                }\n            }\n        };\n        var processor = {\n            \"first\": function () {\n                callback.call(this, 0);\n            },\n            \"prev\": function () {\n                var pageNo = this.page.currentPage - 1;\n                if (pageNo < 0) pageNo = 0;\n                callback.call(this, pageNo);\n            },\n            \"next\": function () {\n                var pageNo = this.page.currentPage + 1;\n                if (pageNo > this.page.totalPages - 1) pageNo = this.page.totalPages - 1;\n                callback.call(this, pageNo);\n            },\n            \"last\": function () {\n                callback.call(this, this.page.totalPages - 1);\n            }\n        };\n\n        if (_act in processor) {\n            processor[_act].call(this);\n        }\n        else {\n            callback.call(this, _act-1);\n        }\n    };\n\n    var navigationUpdate = function () {\n        var self = this;\n        if (this.page) {\n            var page = {\n                hasPage: false,\n                currentPage: this.page.currentPage,\n                pageSize: this.page.pageSize,\n                totalElements: this.page.totalElements,\n                totalPages: this.page.totalPages,\n                firstIcon: this.config.page.firstIcon,\n                prevIcon: this.config.page.prevIcon || \"«\",\n                nextIcon: this.config.page.nextIcon || \"»\",\n                lastIcon: this.config.page.lastIcon,\n            };\n            var navigationItemCount = this.config.page.navigationItemCount;\n\n\n            page[\"@paging\"] = (function () {\n                var returns = [];\n\n                var startI = page.currentPage - Math.floor(navigationItemCount / 2);\n                if (startI < 0) startI = 0;\n                var endI = page.currentPage + navigationItemCount;\n                if (endI > page.totalPages) endI = page.totalPages;\n\n                if (endI - startI > navigationItemCount) {\n                    endI = startI + navigationItemCount;\n                }\n\n                if(endI - startI < navigationItemCount){\n                    startI = endI - navigationItemCount;\n                }\n                if (startI < 0) startI = 0;\n\n                for (var p = startI, l = endI; p < l; p++) {\n                    returns.push({'pageNo': (p + 1), 'selected': page.currentPage == p});\n                }\n                return returns;\n            })();\n\n            if(page[\"@paging\"].length > 0){\n                page.hasPage = true;\n            }\n\n            this.$[\"page\"][\"navigation\"].html(GRID.tmpl.get(\"page_navigation\", page));\n            this.$[\"page\"][\"navigation\"].find(\"[data-ax5grid-page-move]\").on(\"click\", function () {\n                var act = this.getAttribute(\"data-ax5grid-page-move\");\n                onclickPageMove.call(self, act);\n            });\n        } else {\n            this.$[\"page\"][\"navigation\"].empty();\n        }\n    };\n\n    var statusUpdate = function () {\n        var fromRowIndex = this.xvar.paintStartRowIndex;\n        var toRowIndex = this.xvar.paintStartRowIndex + this.xvar.paintRowCount - 1;\n        //var totalElements = (this.page && this.page.totalElements) ? this.page.totalElements : this.xvar.dataRowCount;\n        var totalElements = this.xvar.dataRowCount;\n        if (toRowIndex > totalElements) {\n            toRowIndex = totalElements;\n        }\n\n        this.$[\"page\"][\"status\"].html(GRID.tmpl.get(\"page_status\", {\n            fromRowIndex: U.number(fromRowIndex + 1, {\"money\": true}),\n            toRowIndex: U.number(toRowIndex, {\"money\": true}),\n            totalElements: U.number(totalElements, {\"money\": true}),\n            dataRowCount: (totalElements !== this.xvar.dataRealRowCount) ? U.number(this.xvar.dataRealRowCount, {\"money\": true}) : false\n        }));\n    };\n\n    GRID.page = {\n        navigationUpdate: navigationUpdate,\n        statusUpdate: statusUpdate\n    };\n\n})();","// ax5.ui.grid.scroller\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n    var convertScrollPosition = {\n        \"vertical\": function (css, _var) {\n            var _content_height = _var._content_height - _var._panel_height;\n            var _scroller_height = _var._vertical_scroller_height - _var.verticalScrollBarHeight;\n            var top = (_content_height * css.top) / _scroller_height;\n            if (top < 0) top = 0;\n            else if (_content_height < top) {\n                top = _content_height;\n            }\n            return {\n                top: -top\n            }\n        },\n        \"horizontal\": function (css, _var) {\n            var _content_width = _var._content_width - _var._panel_width;\n            var _scroller_width = _var._horizontal_scroller_width - _var.horizontalScrollBarWidth;\n            var left = (_content_width * css.left) / _scroller_width;\n            if (left < 0) left = 0;\n            else if (_content_width < left) {\n                left = _content_width;\n            }\n            return {\n                left: -left\n            }\n        }\n    };\n    var convertScrollBarPosition = {\n        \"vertical\": function (_top, _var) {\n\n            var type = \"vertical\";\n            var _content_height = _var._content_height - _var._panel_height;\n            var _scroller_height = _var._vertical_scroller_height - _var.verticalScrollBarHeight;\n            var top = (_scroller_height * _top) / _content_height;\n\n            if (-top > _scroller_height) {\n                top = -_scroller_height;\n\n                var scrollPositon = convertScrollPosition[type].call(this, {top: -top}, {\n                    _content_width: _var._content_width,\n                    _content_height: _var._content_height,\n                    _panel_width: _var._panel_width,\n                    _panel_height: _var._panel_height,\n                    _horizontal_scroller_width: _var._horizontal_scroller_width,\n                    _vertical_scroller_height: _var._vertical_scroller_height,\n                    verticalScrollBarHeight: _var.verticalScrollBarHeight,\n                    horizontalScrollBarWidth: _var.horizontalScrollBarWidth\n                });\n\n                GRID.body.scrollTo.call(this, scrollPositon);\n            }\n\n            return -top\n        },\n        \"horizontal\": function (_left, _var) {\n            var type = \"horizontal\";\n            var _content_width = _var._content_width - _var._panel_width;\n            var _scroller_width = _var._horizontal_scroller_width - _var.horizontalScrollBarWidth;\n            var left = (_scroller_width * _left) / _content_width;\n\n            if (-left > _scroller_width) {\n                left = -_scroller_width;\n                var scrollPositon = convertScrollPosition[type].call(this, {left: -left}, {\n                    _content_width: _var._content_width,\n                    _content_height: _var._content_height,\n                    _panel_width: _var._panel_width,\n                    _panel_height: _var._panel_height,\n                    _horizontal_scroller_width: _var._horizontal_scroller_width,\n                    _vertical_scroller_height: _var._vertical_scroller_height,\n                    verticalScrollBarHeight: _var.verticalScrollBarHeight,\n                    horizontalScrollBarWidth: _var.horizontalScrollBarWidth\n                });\n\n                GRID.header.scrollTo.call(this, scrollPositon);\n                GRID.body.scrollTo.call(this, scrollPositon);\n            }\n\n            return -left\n        }\n    };\n    var scrollBarMover = {\n        \"click\": function (track, bar, type, e) {\n\n            // 마우스 무브 완료 타임과 클릭타임 차이가 20 보다 작으면 클릭이벤트 막기.\n            if ((new Date()).getTime() - GRID.scroller.moveout_timer < 20) {\n                return false;\n            }\n\n            var self = this,\n                trackOffset = track.offset(),\n                barBox = {\n                    width: bar.outerWidth(), height: bar.outerHeight()\n                },\n                trackBox = {\n                    width: track.innerWidth(), height: track.innerHeight()\n                },\n                _vertical_scroller_height = self.$[\"scroller\"][\"vertical\"].innerHeight(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _horizontal_scroller_width = self.$[\"scroller\"][\"horizontal\"].innerWidth(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                verticalScrollBarHeight = self.$[\"scroller\"][\"vertical-bar\"].outerHeight(),\n                horizontalScrollBarWidth = self.$[\"scroller\"][\"horizontal-bar\"].outerWidth(),\n                getScrollerPosition = {\n                    \"vertical\": function (e) {\n                        var mouseObj = GRID.util.getMousePosition(e);\n                        // track을 벗어 나지 안도록 범위 체크\n                        var newTop = mouseObj.clientY - trackOffset.top;\n                        if (newTop < 0) {\n                            newTop = 0;\n                        }\n                        else if ((newTop + barBox.height) > trackBox.height) {\n                            newTop = trackBox.height - barBox.height;\n                        }\n                        return {top: newTop};\n                    },\n                    \"horizontal\": function (e) {\n                        var mouseObj = GRID.util.getMousePosition(e);\n                        // track을 벗어 나지 안도록 범위 체크\n                        var newLeft = mouseObj.clientX - trackOffset.left;\n                        if (newLeft < 0) {\n                            newLeft = 0;\n                        }\n                        else if ((newLeft + barBox.width) > trackBox.width) {\n                            newLeft = trackBox.width - barBox.width;\n                        }\n                        return {left: newLeft};\n                    }\n                };\n\n            var css = getScrollerPosition[type](e);\n            bar.css(css);\n\n            var scrollPositon = convertScrollPosition[type].call(self, css, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            });\n            if (type === \"horizontal\") GRID.header.scrollTo.call(self, scrollPositon);\n            GRID.body.scrollTo.call(self, scrollPositon);\n        },\n        \"on\": function (track, bar, type, e) {\n            var self = this,\n                barOffset = bar.position(),\n                barBox = {\n                    width: bar.outerWidth(), height: bar.outerHeight()\n                },\n                trackBox = {\n                    width: track.innerWidth(), height: track.innerHeight()\n                },\n\n                _vertical_scroller_height = self.$[\"scroller\"][\"vertical\"].innerHeight(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _horizontal_scroller_width = self.$[\"scroller\"][\"horizontal\"].innerWidth(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                verticalScrollBarHeight = self.$[\"scroller\"][\"vertical-bar\"].outerHeight(),\n                horizontalScrollBarWidth = self.$[\"scroller\"][\"horizontal-bar\"].outerWidth(),\n\n                getScrollerPosition = {\n                    \"vertical\": function (e) {\n                        var mouseObj = GRID.util.getMousePosition(e);\n                        self.xvar.__da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n                        // track을 벗어 나지 안도록 범위 체크\n                        var newTop = barOffset.top + self.xvar.__da;\n                        if (newTop < 0) {\n                            newTop = 0;\n                        }\n                        else if ((newTop + barBox.height) > trackBox.height) {\n                            newTop = trackBox.height - barBox.height;\n                        }\n                        return {top: newTop};\n                    },\n                    \"horizontal\": function (e) {\n                        var mouseObj = GRID.util.getMousePosition(e);\n                        self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                        // track을 벗어 나지 안도록 범위 체크\n                        var newLeft = barOffset.left + self.xvar.__da;\n                        if (newLeft < 0) {\n                            newLeft = 0;\n                        }\n                        else if ((newLeft + barBox.width) > trackBox.width) {\n                            newLeft = trackBox.width - barBox.width;\n                        }\n                        return {left: newLeft};\n                    }\n                };\n\n            self.xvar.__da = 0; // 이동량 변수 초기화 (계산이 잘못 될까바)\n\n            jQuery(document.body)\n                .bind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                    var css = getScrollerPosition[type](e);\n                    bar.css(css);\n\n                    var scrollPositon = convertScrollPosition[type].call(self, css, {\n                        _content_width: _content_width,\n                        _content_height: _content_height,\n                        _panel_width: _panel_width,\n                        _panel_height: _panel_height,\n                        _horizontal_scroller_width: _horizontal_scroller_width,\n                        _vertical_scroller_height: _vertical_scroller_height,\n                        verticalScrollBarHeight: verticalScrollBarHeight,\n                        horizontalScrollBarWidth: horizontalScrollBarWidth\n                    });\n\n                    if (type === \"horizontal\") GRID.header.scrollTo.call(self, scrollPositon);\n                    GRID.body.scrollTo.call(self, scrollPositon);\n                })\n                .bind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                    scrollBarMover.off.call(self);\n                })\n                .bind(\"mouseleave.ax5grid-\" + this.instanceId, function (e) {\n                    scrollBarMover.off.call(self);\n                });\n\n            jQuery(document.body)\n                .attr('unselectable', 'on')\n                .css('user-select', 'none')\n                .on('selectstart', false);\n        },\n        \"off\": function () {\n\n            GRID.scroller.moveout_timer = (new Date()).getTime();\n\n            jQuery(document.body)\n                .unbind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId)\n                .unbind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId)\n                .unbind(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body)\n                .removeAttr('unselectable')\n                .css('user-select', 'auto')\n                .off('selectstart');\n        }\n    };\n    var scrollContentMover = {\n        \"wheel\": function (delta) {\n            let self = this,\n                _body_scroll_position = self.$[\"panel\"][\"body-scroll\"].position(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth;\n\n            if (isNaN(_content_height) || isNaN(_content_width)) {\n                return false;\n            }\n\n            let newLeft, newTop,\n                _top_is_end = false,\n                _left_is_end = false;\n\n            newLeft = _body_scroll_position.left - delta.x;\n            newTop = _body_scroll_position.top - delta.y;\n\n            // newTop이 범위를 넘었는지 체크\n            if (newTop >= 0) {\n                newTop = 0;\n                _top_is_end = true;\n            } else if (newTop <= _panel_height - _content_height) {\n                newTop = _panel_height - _content_height;\n                if (newTop >= 0) newTop = 0;\n                _top_is_end = true;\n            } else {\n                if (delta.y == 0) _top_is_end = true;\n            }\n\n\n            // newLeft이 범위를 넘었는지 체크\n            if (newLeft >= 0) {\n                newLeft = 0;\n                _left_is_end = true;\n            } else if (newLeft <= _panel_width - _content_width) {\n                newLeft = _panel_width - _content_width;\n                if (newLeft >= 0) newLeft = 0;\n                _left_is_end = true;\n            } else {\n                if (delta.x == 0) _left_is_end = true;\n            }\n\n            //self.$[\"panel\"][\"body-scroll\"].css({left: newLeft, top: newTop});\n            GRID.header.scrollTo.call(this, {left: newLeft});\n            GRID.body.scrollTo.call(this, {left: newLeft, top: newTop});\n            resize.call(this);\n\n            return !_top_is_end || !_left_is_end;\n        },\n        \"on\": function () {\n            let self = this,\n                _body_scroll_position = self.$[\"panel\"][\"body-scroll\"].position(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                getContentPosition = function (e) {\n                    let mouseObj = GRID.util.getMousePosition(e), newLeft, newTop;\n\n                    self.xvar.__x_da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                    self.xvar.__y_da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n\n                    newLeft = _body_scroll_position.left + self.xvar.__x_da;\n                    newTop = _body_scroll_position.top + self.xvar.__y_da;\n\n                    // newTop이 범위를 넘었는지 체크\n                    if (newTop >= 0) {\n                        newTop = 0;\n                    } else if (newTop <= _panel_height - _content_height) {\n                        newTop = _panel_height - _content_height;\n                        if (newTop >= 0) newTop = 0;\n                    }\n\n                    // newLeft이 범위를 넘었는지 체크\n                    if (newLeft >= 0) {\n                        newLeft = 0;\n                    } else if (newLeft <= _panel_width - _content_width) {\n                        newLeft = _panel_width - _content_width;\n                        if (newLeft >= 0) newLeft = 0;\n                    }\n\n                    return {\n                        left: newLeft, top: newTop\n                    }\n                };\n\n\n            this.xvar.__x_da = 0; // 이동량 변수 초기화 (계산이 잘못 될까바)\n            this.xvar.__y_da = 0; // 이동량 변수 초기화 (계산이 잘못 될까바)\n            this.xvar.touchmoved = false;\n\n            jQuery(document.body)\n                .on(\"touchmove\" + \".ax5grid-\" + this.instanceId, function (e) {\n\n                    let css = getContentPosition(e);\n                    GRID.header.scrollTo.call(self, {left: css.left});\n                    GRID.body.scrollTo.call(self, css, \"noRepaint\");\n                    resize.call(self);\n                    U.stopEvent(e);\n                    self.xvar.touchmoved = true;\n                })\n                .on(\"touchend\" + \".ax5grid-\" + this.instanceId, function (e) {\n                    if(self.xvar.touchmoved) {\n                        let css = getContentPosition(e);\n                        GRID.header.scrollTo.call(self, {left: css.left});\n                        GRID.body.scrollTo.call(self, css);\n                        resize.call(self);\n                        U.stopEvent(e);\n                        scrollContentMover.off.call(self);\n                    }\n                });\n\n            jQuery(document.body)\n                .attr('unselectable', 'on')\n                .css('user-select', 'none')\n                .on('selectstart', false);\n        },\n        \"off\": function () {\n\n            jQuery(document.body)\n                .off(\"touchmove\" + \".ax5grid-\" + this.instanceId)\n                .off(\"touchend\" + \".ax5grid-\" + this.instanceId);\n\n            jQuery(document.body)\n                .removeAttr('unselectable')\n                .css('user-select', 'auto')\n                .off('selectstart');\n        }\n    };\n\n    var init = function () {\n        let self = this,\n            margin = this.config.scroller.trackPadding;\n\n        this.$[\"scroller\"][\"vertical-bar\"].css({width: this.config.scroller.size - (margin + 1), left: margin / 2});\n        this.$[\"scroller\"][\"horizontal-bar\"].css({height: this.config.scroller.size - (margin + 1), top: margin / 2});\n\n        this.$[\"scroller\"][\"vertical-bar\"]\n            .on(GRID.util.ENM[\"mousedown\"], (function (e) {\n                this.xvar.mousePosition = GRID.util.getMousePosition(e);\n                scrollBarMover.on.call(this, this.$[\"scroller\"][\"vertical\"], this.$[\"scroller\"][\"vertical-bar\"], \"vertical\", e);\n            }).bind(this))\n            .on(\"dragstart\", function (e) {\n                U.stopEvent(e);\n                return false;\n            });\n\n        this.$[\"scroller\"][\"vertical\"]\n            .on(\"click\", (function (e) {\n                if (e.target.getAttribute(\"data-ax5grid-scroller\") == \"vertical\") {\n                    scrollBarMover.click.call(this, this.$[\"scroller\"][\"vertical\"], this.$[\"scroller\"][\"vertical-bar\"], \"vertical\", e);\n                }\n            }).bind(this));\n\n        this.$[\"scroller\"][\"horizontal-bar\"]\n            .on(GRID.util.ENM[\"mousedown\"], (function (e) {\n                this.xvar.mousePosition = GRID.util.getMousePosition(e);\n                scrollBarMover.on.call(this, this.$[\"scroller\"][\"horizontal\"], this.$[\"scroller\"][\"horizontal-bar\"], \"horizontal\", e);\n            }).bind(this))\n            .on(\"dragstart\", function (e) {\n                U.stopEvent(e);\n                return false;\n            });\n\n        this.$[\"scroller\"][\"horizontal\"]\n            .on(\"click\", (function (e) {\n                if (e.target.getAttribute(\"data-ax5grid-scroller\") == \"horizontal\") {\n                    scrollBarMover.click.call(this, this.$[\"scroller\"][\"horizontal\"], this.$[\"scroller\"][\"horizontal-bar\"], \"horizontal\", e);\n                }\n            }).bind(this));\n\n        this.$[\"container\"][\"body\"].on('mousewheel DOMMouseScroll', (function (e) {\n            let E = e.originalEvent, delta = {x: 0, y: 0};\n\n            if (E.detail) {\n                delta.y = E.detail * 10;\n            } else {\n                if (typeof E.deltaY === \"undefined\") {\n                    delta.y = -E.wheelDelta;\n                    delta.x = 0;\n                } else {\n                    delta.y = E.deltaY;\n                    delta.x = E.deltaX;\n                }\n            }\n\n            if (scrollContentMover.wheel.call(this, delta)) {\n                U.stopEvent(e);\n            }\n        }).bind(this));\n\n        if (document.addEventListener && ax5.info.supportTouch) {\n            this.$[\"container\"][\"body\"]\n                .on(\"touchstart\", '[data-ax5grid-panel]', function (e) {\n                    self.xvar.mousePosition = GRID.util.getMousePosition(e);\n                    scrollContentMover.on.call(self);\n                });\n        }\n    };\n\n    var resize = function () {\n        var _vertical_scroller_height = this.$[\"scroller\"][\"vertical\"].height(),\n            _horizontal_scroller_width = this.$[\"scroller\"][\"horizontal\"].width(),\n            _panel_height = this.$[\"panel\"][\"body\"].height(),\n            _panel_width = this.$[\"panel\"][\"body\"].width(),\n            _content_height = this.xvar.scrollContentHeight,\n            _content_width = this.xvar.scrollContentWidth,\n            verticalScrollBarHeight = _panel_height * _vertical_scroller_height / _content_height,\n            horizontalScrollBarWidth = _panel_width * _horizontal_scroller_width / _content_width;\n\n        if (verticalScrollBarHeight < this.config.scroller.barMinSize) verticalScrollBarHeight = this.config.scroller.barMinSize;\n        if (horizontalScrollBarWidth < this.config.scroller.barMinSize) horizontalScrollBarWidth = this.config.scroller.barMinSize;\n\n        this.$[\"scroller\"][\"vertical-bar\"].css({\n            top: convertScrollBarPosition.vertical.call(this, this.$.panel[\"body-scroll\"].position().top, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            }),\n            height: verticalScrollBarHeight\n        });\n\n        //console.log(horizontalScrollBarWidth);\n\n        this.$[\"scroller\"][\"horizontal-bar\"].css({\n            left: convertScrollBarPosition.horizontal.call(this, this.$.panel[\"body-scroll\"].position().left, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            }),\n            width: horizontalScrollBarWidth\n        });\n\n        _vertical_scroller_height = null;\n        _horizontal_scroller_width = null;\n        _panel_height = null;\n        _panel_width = null;\n        _content_height = null;\n        _content_width = null;\n        verticalScrollBarHeight = null;\n        horizontalScrollBarWidth = null;\n    };\n\n    GRID.scroller = {\n        // 타이머\n        moveout_timer: (new Date()).getTime(),\n        init: init,\n        resize: resize\n    };\n\n})();","// ax5.ui.grid.tmpl\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var main = function () {\n        return `<div data-ax5grid-container=\"root\" data-ax5grid-instance=\"{{instanceId}}\">\n            <div data-ax5grid-container=\"hidden\">\n                <textarea data-ax5grid-form=\"clipboard\"></textarea>\n            </div>\n            <div data-ax5grid-container=\"header\">\n                <div data-ax5grid-panel=\"aside-header\"></div>\n                <div data-ax5grid-panel=\"left-header\"></div>\n                <div data-ax5grid-panel=\"header\">\n                    <div data-ax5grid-panel-scroll=\"header\"></div>\n                </div>\n                <div data-ax5grid-panel=\"right-header\"></div>\n            </div>\n            <div data-ax5grid-container=\"body\">\n                <div data-ax5grid-panel=\"top-aside-body\"></div>\n                <div data-ax5grid-panel=\"top-left-body\"></div>\n                <div data-ax5grid-panel=\"top-body\">\n                    <div data-ax5grid-panel-scroll=\"top-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"top-right-body\"></div>\n                <div data-ax5grid-panel=\"aside-body\">\n                    <div data-ax5grid-panel-scroll=\"aside-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"left-body\">\n                    <div data-ax5grid-panel-scroll=\"left-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"body\">\n                    <div data-ax5grid-panel-scroll=\"body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"right-body\">\n                  <div data-ax5grid-panel-scroll=\"right-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"bottom-aside-body\"></div>\n                <div data-ax5grid-panel=\"bottom-left-body\"></div>\n                <div data-ax5grid-panel=\"bottom-body\">\n                    <div data-ax5grid-panel-scroll=\"bottom-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"bottom-right-body\"></div>\n            </div>\n            <div data-ax5grid-container=\"page\">\n                <div data-ax5grid-page=\"holder\">\n                    <div data-ax5grid-page=\"navigation\"></div>\n                    <div data-ax5grid-page=\"status\"></div>\n                </div>\n            </div>\n            <div data-ax5grid-container=\"scroller\">\n                <div data-ax5grid-scroller=\"vertical\">\n                    <div data-ax5grid-scroller=\"vertical-bar\"></div>    \n                </div>\n                <div data-ax5grid-scroller=\"horizontal\">\n                    <div data-ax5grid-scroller=\"horizontal-bar\"></div>\n                </div>\n                <div data-ax5grid-scroller=\"corner\"></div>\n            </div>\n            <div data-ax5grid-resizer=\"vertical\"></div>\n            <div data-ax5grid-resizer=\"horizontal\"></div>\n        </div>`;\n    };\n\n\n    var page_navigation = function(){\n        return `<div data-ax5grid-page-navigation=\"holder\">\n            {{#hasPage}}\n            <div data-ax5grid-page-navigation=\"cell\">    \n                {{#firstIcon}}<button data-ax5grid-page-move=\"first\">{{{firstIcon}}}</button>{{/firstIcon}}\n                <button data-ax5grid-page-move=\"prev\">{{{prevIcon}}}</button>\n            </div>\n            <div data-ax5grid-page-navigation=\"cell-paging\">\n                {{#@paging}}\n                <button data-ax5grid-page-move=\"{{pageNo}}\" data-ax5grid-page-selected=\"{{selected}}\">{{pageNo}}</button>\n                {{/@paging}}\n            </div>\n            <div data-ax5grid-page-navigation=\"cell\">\n                <button data-ax5grid-page-move=\"next\">{{{nextIcon}}}</button>\n                {{#lastIcon}}<button data-ax5grid-page-move=\"last\">{{{lastIcon}}}</button>{{/lastIcon}}\n            </div>\n            {{/hasPage}}\n        </div>`;\n    };\n\n\n    var page_status = function(){\n        return `<span>{{fromRowIndex}} - {{toRowIndex}} of {{totalElements}}{{#dataRowCount}} ({{dataRowCount}}){{/dataRowCount}}</span>`;\n    };\n\n\n    GRID.tmpl = {\n        \"main\": main,\n        \"page_navigation\": page_navigation,\n        \"page_status\": page_status,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(GRID.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.grid.util\n(function () {\n\n    var GRID = ax5.ui.grid;\n    var U = ax5.util;\n\n\n\n    /**\n     * @method ax5grid.util.divideTableByFrozenColumnIndex\n     * @param _table\n     * @param _frozenColumnIndex\n     * @returns {{leftHeaderData: {rows: Array}, headerData: {rows: Array}}}\n     */\n\n    var divideTableByFrozenColumnIndex = function (_table, _frozenColumnIndex) {\n        var tempTable_l = {rows: []};\n        var tempTable_r = {rows: []};\n        for (var r = 0, rl = _table.rows.length; r < rl; r++) {\n            var row = _table.rows[r];\n\n            tempTable_l.rows[r] = {cols: []};\n            tempTable_r.rows[r] = {cols: []};\n\n            for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                var col = jQuery.extend({}, row.cols[c]);\n                var colStartIndex = col.colIndex, colEndIndex = col.colIndex + col.colspan;\n\n                if (colStartIndex < _frozenColumnIndex) {\n                    if (colEndIndex <= _frozenColumnIndex) {\n                        // 좌측편에 변형없이 추가\n                        tempTable_l.rows[r].cols.push(col);\n                    } else {\n                        var leftCol = jQuery.extend({}, col);\n                        var rightCol = jQuery.extend({}, leftCol);\n                        leftCol.colspan = _frozenColumnIndex - leftCol.colIndex;\n                        rightCol.colIndex = _frozenColumnIndex;\n                        rightCol.colspan = col.colspan - leftCol.colspan;\n\n                        tempTable_l.rows[r].cols.push(leftCol);\n                        tempTable_r.rows[r].cols.push(rightCol);\n                    }\n                }\n                else {\n                    // 오른편\n                    tempTable_r.rows[r].cols.push(col);\n                }\n            }\n        }\n\n        return {\n            leftData: tempTable_l,\n            rightData: tempTable_r\n        }\n    };\n\n    var getMousePosition = function (e) {\n        var mouseObj, originalEvent = (e.originalEvent) ? e.originalEvent : e;\n        mouseObj = ('changedTouches' in originalEvent) ? originalEvent.changedTouches[0] : originalEvent;\n        // clientX, Y 쓰면 스크롤에서 문제 발생\n        return {\n            clientX: mouseObj.pageX,\n            clientY: mouseObj.pageY\n        }\n    };\n\n    var ENM = {\n        \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n        \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n        \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n    };\n\n    var makeHeaderTable = function (_columns) {\n        var columns = U.deepCopy(_columns);\n        var cfg = this.config;\n        var table = {\n            rows: []\n        };\n        var colIndex = 0;\n        var maekRows = function (_columns, depth, parentField) {\n            var row = {cols: []};\n            var i = 0, l = _columns.length;\n\n            for (; i < l; i++) {\n                var field = _columns[i];\n                var colspan = 1;\n\n                if (!field.hidden) {\n                    field.colspan = 1;\n                    field.rowspan = 1;\n\n                    field.rowIndex = depth;\n                    field.colIndex = (function () {\n                        if (!parentField) {\n                            return colIndex++;\n                        } else {\n                            colIndex = parentField.colIndex + i + 1;\n                            return parentField.colIndex + i;\n                        }\n                    })();\n\n                    row.cols.push(field);\n\n                    if ('columns' in field) {\n                        colspan = maekRows(field.columns, depth + 1, field);\n                    } else {\n                        field.width = ('width' in field) ? field.width : cfg.columnMinWidth;\n                    }\n                    field.colspan = colspan;\n                } else {\n\n                }\n            }\n\n            if (row.cols.length > 0) {\n                if (!table.rows[depth]) {\n                    table.rows[depth] = {cols: []};\n                }\n                table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n                return (row.cols.length - 1) + colspan;\n            } else {\n                return colspan;\n            }\n\n        };\n        maekRows(columns, 0);\n\n        // set rowspan\n        for (var r = 0, rl = table.rows.length; r < rl; r++) {\n            for (var c = 0, cl = table.rows[r].cols.length; c < cl; c++) {\n                if (!('columns' in table.rows[r].cols[c])) {\n                    table.rows[r].cols[c].rowspan = rl - r;\n                }\n            }\n        }\n\n        return table;\n    };\n\n    var makeBodyRowTable = function (_columns) {\n        var columns = U.deepCopy(_columns);\n        var table = {\n            rows: []\n        };\n        var colIndex = 0;\n        var maekRows = function (_columns, depth, parentField) {\n            var row = {cols: []};\n            var i = 0, l = _columns.length;\n\n            var selfMakeRow = function (__columns) {\n                var i = 0, l = __columns.length;\n                for (; i < l; i++) {\n                    var field = __columns[i];\n                    var colspan = 1;\n\n                    if (!field.hidden) {\n\n                        if ('key' in field) {\n                            field.colspan = 1;\n                            field.rowspan = 1;\n\n                            field.rowIndex = depth;\n                            field.colIndex = (function () {\n                                if (!parentField) {\n                                    return colIndex++;\n                                } else {\n                                    colIndex = parentField.colIndex + i + 1;\n                                    return parentField.colIndex + i;\n                                }\n                            })();\n\n                            row.cols.push(field);\n                            if ('columns' in field) {\n                                colspan = maekRows(field.columns, depth + 1, field);\n                            }\n                            field.colspan = colspan;\n                        }\n                        else {\n                            if ('columns' in field) {\n                                selfMakeRow(field.columns, depth);\n                            }\n                        }\n                    } else {\n\n                    }\n                }\n            };\n\n            for (; i < l; i++) {\n                var field = _columns[i];\n                var colspan = 1;\n\n                if (!field.hidden) {\n\n                    if ('key' in field) {\n                        field.colspan = 1;\n                        field.rowspan = 1;\n\n                        field.rowIndex = depth;\n                        field.colIndex = (function () {\n                            if (!parentField) {\n                                return colIndex++;\n                            } else {\n                                colIndex = parentField.colIndex + i + 1;\n                                return parentField.colIndex + i;\n                            }\n                        })();\n\n                        row.cols.push(field);\n                        if ('columns' in field) {\n                            colspan = maekRows(field.columns, depth + 1, field);\n                        }\n                        field.colspan = colspan;\n                    }\n                    else {\n                        if ('columns' in field) {\n                            selfMakeRow(field.columns, depth);\n                        }\n                    }\n                } else {\n\n                }\n            }\n\n            if (row.cols.length > 0) {\n                if (!table.rows[depth]) {\n                    table.rows[depth] = {cols: []};\n                }\n                table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n                return (row.cols.length - 1) + colspan;\n            } else {\n                return colspan;\n            }\n\n        };\n        maekRows(columns, 0);\n\n        (function (table) {\n            // set rowspan\n            for (var r = 0, rl = table.rows.length; r < rl; r++) {\n                var row = table.rows[r];\n                for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                    var col = row.cols[c];\n                    if (!('columns' in col)) {\n                        col.rowspan = rl - r;\n                    }\n                }\n            }\n        })(table);\n\n        return table;\n    };\n\n    var makeBodyRowMap = function (_table) {\n        var map = {};\n        _table.rows.forEach(function (row) {\n            row.cols.forEach(function (col) {\n                map[col.rowIndex + \"_\" + col.colIndex] = jQuery.extend({}, col);\n            });\n        });\n        return map;\n    };\n\n    var makeFootSumTable = function (_footSumColumns) {\n        var table = {\n            rows: []\n        };\n\n        for (var r = 0, rl = _footSumColumns.length; r < rl; r++) {\n            var footSumRow = _footSumColumns[r];\n            table.rows[r] = {cols: []};\n            var addC = 0;\n            for (var c = 0, cl = footSumRow.length; c < cl; c++) {\n                if (addC > this.columns.length) break;\n                var colspan = footSumRow[c].colspan || 1;\n                if (footSumRow[c].label || footSumRow[c].key) {\n                    table.rows[r].cols.push({\n                        colspan: colspan,\n                        rowspan: 1,\n                        colIndex: addC,\n                        columnAttr: \"sum\",\n                        align: footSumRow[c].align,\n                        label: footSumRow[c].label,\n                        key: footSumRow[c].key,\n                        collector: footSumRow[c].collector,\n                        formatter: footSumRow[c].formatter\n                    });\n                } else {\n                    table.rows[r].cols.push({\n                        colIndex: addC,\n                        colspan: colspan,\n                        rowspan: 1,\n                        label: \"&nbsp;\",\n                    });\n                }\n                addC += colspan;\n            }\n\n            if (addC < this.columns.length + 1) {\n                for (var c = addC; c < this.colGroup.length; c++) {\n                    table.rows[r].cols.push({\n                        colIndex: (c + 1),\n                        colspan: 1,\n                        rowspan: 1,\n                        label: \"&nbsp;\",\n                    });\n                }\n            }\n        }\n        return table;\n    };\n\n    var makeBodyGroupingTable = function (_bodyGroupingColumns) {\n        var table = {\n            rows: []\n        };\n\n        var r = 0;\n        table.rows[r] = {cols: []};\n        var addC = 0;\n        for (var c = 0, cl = _bodyGroupingColumns.length; c < cl; c++) {\n            if (addC > this.columns.length) break;\n            var colspan = _bodyGroupingColumns[c].colspan || 1;\n            if (_bodyGroupingColumns[c].label || _bodyGroupingColumns[c].key) {\n                table.rows[r].cols.push({\n                    colspan: colspan,\n                    rowspan: 1,\n                    rowIndex: 0,\n                    colIndex: addC,\n                    columnAttr: \"default\",\n                    align: _bodyGroupingColumns[c].align,\n                    label: _bodyGroupingColumns[c].label,\n                    key: _bodyGroupingColumns[c].key,\n                    collector: _bodyGroupingColumns[c].collector,\n                    formatter: _bodyGroupingColumns[c].formatter\n                });\n            } else {\n                table.rows[r].cols.push({\n                    rowIndex: 0,\n                    colIndex: addC,\n                    colspan: colspan,\n                    rowspan: 1,\n                    label: \"&nbsp;\"\n                });\n            }\n            addC += colspan;\n        }\n\n        if (addC < this.colGroup.length) {\n            for (var c = addC; c < this.colGroup.length; c++) {\n                table.rows[r].cols.push({\n                    rowIndex: 0,\n                    colIndex: (c + 1),\n                    colspan: 1,\n                    rowspan: 1,\n                    label: \"&nbsp;\",\n                });\n            }\n        }\n\n        return table;\n    };\n\n    var findPanelByColumnIndex = function (_dindex, _colIndex, _rowIndex) {\n        var _containerPanelName;\n        var _isScrollPanel = false;\n        var _panels = [];\n\n        if (this.xvar.frozenRowIndex > _dindex) _panels.push(\"top\");\n        if (this.xvar.frozenColumnIndex > _colIndex) _panels.push(\"left\");\n        _panels.push(\"body\");\n\n        if (this.xvar.frozenColumnIndex <= _colIndex || this.xvar.frozenRowIndex <= _dindex) {\n            _containerPanelName = _panels.join(\"-\");\n            _panels.push(\"scroll\");\n            _isScrollPanel = true;\n        }\n\n        return {\n            panelName: _panels.join(\"-\"),\n            containerPanelName : _containerPanelName,\n            isScrollPanel: _isScrollPanel\n        }\n    };\n\n    var getRealPathForDataItem = function (_dataPath) {\n        var path = [];\n        var _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n        _path.forEach(function (n) {\n            if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n        });\n        _path = null;\n        return path.join(\"\");\n    };\n\n\n    GRID.util = {\n        divideTableByFrozenColumnIndex: divideTableByFrozenColumnIndex,\n        getMousePosition: getMousePosition,\n        ENM: ENM,\n        makeHeaderTable: makeHeaderTable,\n        makeBodyRowTable: makeBodyRowTable,\n        makeBodyRowMap: makeBodyRowMap,\n        makeFootSumTable: makeFootSumTable,\n        makeBodyGroupingTable: makeBodyGroupingTable,\n        findPanelByColumnIndex: findPanelByColumnIndex,\n        getRealPathForDataItem: getRealPathForDataItem\n    };\n\n})();","// ax5.ui.mediaViewer\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MEDIAVIEWER;\n\n    UI.addClass({\n        className: \"mediaViewer\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5mediaViewer\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var myViewer = new ax5.ui.mediaViewer({\n         *     theme: \"danger\",\n         *     target: $(\"#media-viewer-target-0\"),\n         *     loading: {\n         *         icon: '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw margin-bottom\" aria-hidden=\"true\"></i>',\n         *         text: '<div>Now Loading</div>'\n         *     },\n         *     media: {\n         *         width: '11%', height: '11%',\n         *         prevHandle: '<i class=\"fa fa-chevron-left\"></i>',\n         *         nextHandle: '<i class=\"fa fa-chevron-right\"></i>',\n         *         poster: '<i class=\"fa fa-youtube-play\" style=\"font-size: 20px;\"></i>',\n         *         list: [\n         *             {\n         *                 video: {\n         *                     html: '<iframe src=\"https://player.vimeo.com/video/121840700?color=fcfcfc&badge=0\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>',\n         *                     poster: ''\n         *                 }\n         *             },\n         *             {\n         *                 video: {\n         *                     html: '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/w9Uh2oP88JI\" frameborder=\"0\" allowfullscreen></iframe>',\n         *                     poster: ''\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'https://www.twilio.com/blog/wp-content/uploads/2013/11/Screen-Shot-2013-11-06-at-12.05.36-PM.png',\n         *                     poster: 'https://www.twilio.com/blog/wp-content/uploads/2013/11/Screen-Shot-2013-11-06-at-12.05.36-PM.png'\n         *                 }\n         *             }\n         *         ]\n         *     },\n         *     onClick: function () {\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        var ax5mediaViewer = function () {\n            var self = this,\n                cfg,\n                ENM = {\n                    \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n                    \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n                    \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n                },\n                getMousePosition = function (e) {\n                    var mouseObj = ('changedTouches' in e.originalEvent) ? e.originalEvent.changedTouches[0] : e;\n\n                    return {\n                        clientX: mouseObj.clientX,\n                        clientY: mouseObj.clientY,\n                        time: (new Date()).getTime()\n                    }\n                };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                animateTime: 250,\n\n                columnKeys: {\n                    src: 'src',\n                    poster: 'poster',\n                    html: 'html'\n                },\n                loading: {\n                    icon: '',\n                    text: 'Now Loading'\n                },\n                viewer: {\n                    prevHandle: false,\n                    nextHandle: false,\n                    ratio: 16 / 9\n                },\n                media: {\n                    prevHandle: '<',\n                    nextHandle: '>',\n                    width: 36, height: 36,\n                    list: []\n                }\n            };\n            this.queue = [];\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.selectedIndex = 0;\n            this.mousePosition = {};\n\n            cfg = this.config;\n\n            var\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n                    return true;\n                },\n                getFrame = function () {\n                    var\n                        data = jQuery.extend(true, {id: this.id}, cfg);\n\n                    try {\n                        return MEDIAVIEWER.tmpl.get.call(this, \"frame\", data, cfg.columnKeys);\n                    }\n                    finally {\n                        data = null;\n                    }\n                },\n                onClick = function (e, target) {\n                    var\n                        result,\n                        elementType = \"\",\n                        processor = {\n                            'thumbnail': function (target) {\n                                this.select(target.getAttribute(\"data-media-thumbnail\"));\n                            },\n                            'prev': function (target) {\n                                if (this.selectedIndex > 0) {\n                                    this.select(this.selectedIndex - 1);\n                                } else {\n                                    this.select(cfg.media.list.length - 1);\n                                }\n                            },\n                            'next': function (target) {\n                                if (this.selectedIndex < cfg.media.list.length - 1) {\n                                    this.select(this.selectedIndex + 1);\n                                } else {\n                                    this.select(0);\n                                }\n                            },\n                            'viewer': function (target) {\n                                if (self.onClick) {\n                                    self.onClick.call({\n                                        media: cfg.media.list[this.selectedIndex]\n                                    });\n                                }\n                            }\n                        };\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-media-thumbnail\")) {\n                            elementType = \"thumbnail\";\n                            return true;\n                        }\n                        else if (target.getAttribute(\"data-media-viewer-els\") == \"media-list-prev-handle\") {\n                            elementType = \"prev\";\n                            return true;\n                        }\n                        else if (target.getAttribute(\"data-media-viewer-els\") == \"media-list-next-handle\") {\n                            elementType = \"next\";\n                            return true;\n                        }\n                        else if (target.getAttribute(\"data-media-viewer-els\") == \"viewer\") {\n                            elementType = \"viewer\";\n                            return true;\n                        }\n                        else if (self.target.get(0) == target) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        for (var key in processor) {\n                            if (key == elementType) {\n                                result = processor[key].call(this, target);\n                                break;\n                            }\n                        }\n                        return this;\n                    }\n                    return this;\n                },\n                getSelectedIndex = function () {\n                    if (cfg.media && cfg.media.list && cfg.media.list.length > 0) {\n                        var i = cfg.media.list.length, selecteIndex = 0;\n                        while (i--) {\n                            if (cfg.media.list[i].selected) {\n                                selecteIndex = i;\n                                break;\n                            }\n                        }\n\n                        if (selecteIndex == 0) {\n                            cfg.media.list[0].selected = true;\n                        }\n                        try {\n                            return selecteIndex;\n                        } finally {\n                            i = null;\n                            selecteIndex = null;\n                        }\n                    }\n                    else {\n                        return;\n                    }\n                },\n                alignMediaList = function () {\n                    var thumbnail = this.$[\"list\"].find('[data-media-thumbnail=' + this.selectedIndex + ']'),\n                        pos = thumbnail.position(), thumbnailWidth = thumbnail.outerWidth(),\n                        containerWidth = this.$[\"list\"].outerWidth(),\n                        parentLeft = this.$[\"list-table\"].position().left,\n                        parentWidth = this.$[\"list-table\"].outerWidth(),\n                        newLeft = 0;\n\n                    if (pos.left + thumbnailWidth + parentLeft > containerWidth) {\n                        newLeft = containerWidth - (pos.left + thumbnailWidth);\n                        if (parentLeft != newLeft) this.$[\"list-table\"].css({left: parentLeft = newLeft});\n                    }\n                    else if (pos.left + parentLeft < 0) {\n                        newLeft = pos.left;\n                        if (newLeft > 0) newLeft = 0;\n                        if (parentLeft != newLeft) this.$[\"list-table\"].css({left: parentLeft = newLeft});\n                    }\n\n                    if (parentLeft != newLeft) {\n                        if (parentLeft + parentWidth < containerWidth) {\n                            newLeft = containerWidth - parentWidth;\n                            if (newLeft > 0) newLeft = 0;\n                            this.$[\"list-table\"].css({left: newLeft});\n                        }\n                    }\n\n                    thumbnail = null;\n                    pos = null;\n                    thumbnailWidth = null;\n                    containerWidth = null;\n                    parentLeft = null;\n                    newLeft = null;\n                },\n                swipeMedia = {\n                    \"on\": function (mousePosition) {\n                        // console.log(mousePosition);\n                        var getSwipePosition = function (e) {\n                            var mouseObj = e;\n                            if ('changedTouches' in e.originalEvent) {\n                                mouseObj = e.originalEvent.changedTouches[0];\n                            }\n\n                            mousePosition.__dx = mouseObj.clientX - mousePosition.clientX;\n                            mousePosition.__dy = mouseObj.clientY - mousePosition.clientY;\n                            mousePosition.__time = (new Date()).getTime();\n\n                            if (Math.abs(mousePosition.__dx) > Math.abs(mousePosition.__dy)) {\n                                return {left: mousePosition.__dx};\n                            } else {\n                                return {top: mousePosition.__dy};\n                            }\n                        };\n                        var viewerWidth = this.$[\"viewer\"].width();\n\n                        jQuery(document.body)\n                            .bind(ENM[\"mousemove\"] + \".ax5media-viewer-\" + this.instanceId, function (e) {\n                                var position = getSwipePosition(e);\n\n                                if ('left' in position) {\n                                    self.$[\"viewer-holder\"].css(position);\n                                    if (Math.abs(self.mousePosition.__dx) > viewerWidth / 3) {\n                                        //console.log(self.mousePosition);\n                                        // trigger nextMedia\n\n                                        var nextIndex = 0;\n\n                                        if (self.mousePosition.__dx > 0) {\n                                            if (self.selectedIndex > 0) {\n                                                nextIndex = self.selectedIndex - 1;\n                                            } else {\n                                                nextIndex = cfg.media.list.length - 1;\n                                            }\n                                        }\n                                        else {\n                                            if (self.selectedIndex < cfg.media.list.length - 1) {\n                                                nextIndex = self.selectedIndex + 1;\n                                            }\n                                        }\n\n                                        self.select(nextIndex);\n                                        swipeMedia.off.call(self);\n\n\n                                    }\n\n                                    U.stopEvent(e);\n                                }\n                            })\n                            .bind(ENM[\"mouseup\"] + \".ax5media-viewer-\" + this.instanceId, function (e) {\n                                swipeMedia.off.call(self);\n                            })\n                            .bind(\"mouseleave.ax5media-viewer-\" + this.instanceId, function (e) {\n                                swipeMedia.off.call(self);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n\n                    },\n                    \"off\": function () {\n                        self.$[\"viewer-holder\"].css({left: 0});\n                        jQuery(document.body)\n                            .unbind(ENM[\"mousemove\"] + \".ax5media-viewer-\" + this.instanceId)\n                            .unbind(ENM[\"mouseup\"] + \".ax5media-viewer-\" + this.instanceId)\n                            .unbind(\"mouseleave.ax5media-viewer-\" + this.instanceId);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n\n                    }\n                };\n            /// private end\n\n            /**\n             * Preferences of mediaViewer UI\n             * @method ax5mediaViewer.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5mediaViewer}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.id = 'ax5-media-viewer-' + ax5.getGuid();\n                if (cfg.target && (cfg.media && cfg.media.list && cfg.media.list.length > 0)) {\n                    this.attach(cfg.target);\n                }\n            };\n\n            /**\n             * @method ax5mediaViewer.attach\n             * @param target\n             * @param options\n             * @returns {ax5mediaViewer}\n             */\n            this.attach = function (target, options) {\n                if (!target) {\n                    console.log(ax5.info.getError(\"ax5mediaViewer\", \"401\", \"setConfig\"));\n                }\n                if (typeof options != \"undefined\") {\n                    this.setConfig(options, false);\n                }\n                this.target = jQuery(target);\n                this.target.html(getFrame.call(this));\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.target.find('[data-ax5-ui-media-viewer]'),\n                    \"viewer-holder\": this.target.find('[data-media-viewer-els=\"viewer-holder\"]'),\n                    \"viewer\": this.target.find('[data-media-viewer-els=\"viewer\"]'),\n                    \"viewer-loading\": this.target.find('[data-media-viewer-els=\"viewer-loading\"]'),\n                    \"list-holder\": this.target.find('[data-media-viewer-els=\"media-list-holder\"]'),\n                    \"list-prev-handle\": this.target.find('[data-media-viewer-els=\"media-list-prev-handle\"]'),\n                    \"list\": this.target.find('[data-media-viewer-els=\"media-list\"]'),\n                    \"list-table\": this.target.find('[data-media-viewer-els=\"media-list-table\"]'),\n                    \"list-next-handle\": this.target.find('[data-media-viewer-els=\"media-list-next-handle\"]')\n                };\n\n                this.align();\n\n                jQuery(window).unbind(\"resize.ax5media-viewer-\" + this.id).bind(\"resize.ax5media-viewer-\" + this.id, (function () {\n                    this.align();\n                    alignMediaList.call(this);\n                }).bind(this));\n\n                this.target.unbind(\"click\").bind(\"click\", (function (e) {\n                    e = e || window.event;\n                    onClick.call(this, e);\n                    U.stopEvent(e);\n                }).bind(this));\n\n                this.$.viewer\n                    .unbind(ENM[\"mousedown\"])\n                    .bind(ENM[\"mousedown\"], (function (e) {\n                        this.mousePosition = getMousePosition(e);\n                        swipeMedia.on.call(this, this.mousePosition);\n                    }).bind(this))\n                    .unbind(\"dragstart\")\n                    .bind(\"dragstart\", function (e) {\n                        U.stopEvent(e);\n                        return false;\n                    });\n\n                this.select(getSelectedIndex.call(this));\n                return this;\n            };\n\n            /**\n             * @method ax5mediaViewer.align\n             * @returns {ax5mediaViewer}\n             */\n            this.align = function () {\n                // viewer width, height\n                this.$[\"viewer-holder\"].css({height: this.$[\"viewer\"].width() / cfg.viewer.ratio});\n                this.$[\"viewer\"].css({height: this.$[\"viewer\"].width() / cfg.viewer.ratio});\n\n                if (this.$[\"viewer\"].data(\"media-type\") == \"image\") {\n                    var $img = this.$[\"viewer\"].find(\"img\");\n                    $img.css({\n                        width: this.$[\"viewer\"].height() * this.$[\"viewer\"].data(\"img-ratio\"), height: this.$[\"viewer\"].height()\n                    });\n                    setTimeout((function (_img) {\n                        _img.css({left: (this.$[\"viewer\"].width() - _img.width()) / 2});\n                    }).bind(this, $img), 1);\n                }\n                else if (this.$[\"viewer\"].data(\"media-type\") == \"video\") {\n                    this.$[\"viewer\"].find(\"iframe\").css({width: this.$[\"viewer\"].height() * this.$[\"viewer\"].data(\"img-ratio\"), height: this.$[\"viewer\"].height()});\n                }\n                this.$[\"viewer-loading\"].css({height: this.$[\"viewer\"].height()});\n\n                var mediaThumbnailWidth = (U.right(cfg.media.width, 1) == '%') ? U.number(cfg.media.width) / 100 * this.$[\"viewer\"].width() : U.number(cfg.media.width),\n                    mediaThumbnailHeight = (U.right(cfg.media.height, 1) == '%') ? U.number(cfg.media.height) / 100 * this.$[\"viewer\"].width() : U.number(cfg.media.height);\n\n                mediaThumbnailWidth = Math.floor(mediaThumbnailWidth);\n                mediaThumbnailHeight = Math.floor(mediaThumbnailHeight);\n\n                this.$[\"list-prev-handle\"].css({width: mediaThumbnailWidth * 1.5});\n                this.$[\"list-next-handle\"].css({width: mediaThumbnailWidth * 1.5});\n                this.$[\"list\"].css({height: mediaThumbnailHeight});\n                this.$[\"list-table\"].find('[data-media-thumbnail]').css({width: mediaThumbnailWidth, height: mediaThumbnailHeight});\n                this.$[\"list-table\"].find('[data-media-thumbnail-video]').css({width: mediaThumbnailWidth, height: mediaThumbnailHeight});\n\n\n                return this;\n            };\n\n            /**\n             * @method ax5mediaViewer.select\n             * @param index\n             * @returns {ax5mediaViewer}\n             */\n            this.select = (function () {\n                var mediaView = {\n                    image: function (obj, callback) {\n                        self.$[\"viewer-loading\"].show();\n                        var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                        var img = new Image();\n                        img.src = obj.image[cfg.columnKeys.src];\n                        img.onload = function () {\n                            self.$[\"viewer-loading\"].fadeOut();\n                            var h = dim[1];\n                            var w = h * img.width / img.height;\n                            callback(img, Math.floor(w), h);\n                        };\n                        return img;\n                    },\n                    video: function (obj, callback) {\n                        self.$[\"viewer-loading\"].show();\n                        var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                        var html = jQuery(obj.video[cfg.columnKeys.html]);\n                        callback(html, dim[0], dim[1]);\n                        self.$[\"viewer-loading\"].fadeOut();\n                    }\n                };\n                var onLoad = {\n                    image: function (img, w, h) {\n                        img.width = w;\n                        img.height = h;\n\n                        var $img = $(img);\n                        this.$[\"viewer\"].html($img);\n                        $img.css({left: (this.$[\"viewer\"].width() - w) / 2});\n\n                        this.$[\"viewer\"].data(\"media-type\", \"image\");\n                        this.$[\"viewer\"].data(\"img-ratio\", w / h);\n                    },\n                    video: function (html, w, h) {\n                        html.css({width: w, height: h});\n                        this.$[\"viewer\"].html(html);\n                        this.$[\"viewer\"].data(\"media-type\", \"video\");\n                        this.$[\"viewer\"].data(\"img-ratio\", w / h);\n                    }\n                };\n                var select = function (index) {\n                    this.$[\"list\"].find('[data-media-thumbnail]').removeClass(\"selected\");\n                    this.$[\"list\"].find('[data-media-thumbnail=' + index + ']').addClass(\"selected\");\n                    alignMediaList.call(this);\n                };\n\n                return function (index) {\n                    if (typeof index === \"undefined\") return this;\n                    this.selectedIndex = Number(index);\n                    var media = cfg.media.list[index];\n                    select.call(this, index);\n\n                    for (var key in mediaView) {\n                        if (media[key]) {\n                            mediaView[key].call(this, media, onLoad[key].bind(this));\n                            break;\n                        }\n                    }\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5mediaViewer.setMediaList\n             * @param list\n             * @returns {ax5mediaViewer}\n             */\n            this.setMediaList = function (list) {\n                cfg.media.list = [].concat(list);\n                this.attach(cfg.target);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.mediaViewer_instance = UI.mediaViewer_instance || [];\n                UI.mediaViewer_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5mediaViewer;\n    })());\n\n    MEDIAVIEWER = ax5.ui.mediaViewer;\n})();","// ax5.ui.mediaViewer.tmpl\n(function () {\n    var MEDIAVIEWER = ax5.ui.mediaViewer;\n\n    var frame = function (columnKeys) {\n        return `\n            <div data-ax5-ui-media-viewer=\"{{id}}\" class=\"{{theme}}\">\n                <div data-media-viewer-els=\"viewer-holder\">\n                <div data-media-viewer-els=\"viewer\"></div>\n                </div>\n                <div data-media-viewer-els=\"viewer-loading\">\n                <div class=\"ax5-ui-media-viewer-loading-holder\">\n                <div class=\"ax5-ui-media-viewer-loading-cell\">\n                {{{loading.icon}}}\n            {{{loading.text}}}\n            </div>\n            </div>\n            </div>\n            {{#media}}\n            <div data-media-viewer-els=\"media-list-holder\">\n                <div data-media-viewer-els=\"media-list-prev-handle\">{{{prevHandle}}}</div>\n            <div data-media-viewer-els=\"media-list\">\n                <div data-media-viewer-els=\"media-list-table\">\n                {{#list}}\n            <div data-media-viewer-els=\"media-list-table-td\">\n                {{#image}}\n            <div data-media-thumbnail=\"{{@i}}\">\n                <img src=\"{{${columnKeys.poster}}}\" data-media-thumbnail-image=\"{{@i}}\" />\n                </div>\n                {{/image}}\n            {{#video}}\n            <div data-media-thumbnail=\"{{@i}}\">{{#${columnKeys.poster}}}<img src=\"{{.}}\" data-media-thumbnail-video=\"{{@i}}\" />>{{/${columnKeys.poster}}}{{^${columnKeys.poster}}}<a data-media-thumbnail-video=\"{{@i}}\">{{{media.${columnKeys.poster}}}}</a>{{/${columnKeys.poster}}}</div>\n            {{/video}}\n            </div>\n                {{/list}}\n            </div>\n                </div>\n                <div data-media-viewer-els=\"media-list-next-handle\">{{{nextHandle}}}</div>\n                </div>\n                {{/media}}\n            </div>\n        `;\n    };\n\n    MEDIAVIEWER.tmpl = {\n        \"frame\": frame,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MEDIAVIEWER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","// ax5.ui.uploader\n(function () {\n\n    let UI = ax5.ui;\n    let U = ax5.util;\n    let UPLOADER;\n\n    UI.addClass({\n        className: \"uploader\",\n        version: \"1.3.66\"\n    }, (function () {\n\n        let ax5uploader = function () {\n            /**\n             * @class ax5uploader\n             * @classdesc\n             * @author tom@axisj.com\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            let self = this, cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default', // theme of uploader\n                lang: { // 업로더 버튼 랭귀지 설정\n                    \"upload\": \"Upload\",\n                    \"abort\": \"Abort\"\n                },\n                uploadedBox: {\n                    columnKeys: {\n                        name: \"name\",\n                        type: \"type\",\n                        size: \"size\",\n                        uploadedName: \"uploadedName\",\n                        uploadedPath: \"uploadedPath\",\n                        downloadPath: \"downloadPath\",\n                        previewPath: \"previewPath\",\n                        thumbnail: \"thumbnail\"\n                    }\n                },\n                animateTime: 100,\n                accept: \"*/*\", // 업로드 선택 파일 타입 설정\n                multiple: false, // 다중 파일 업로드\n                manualUpload: false, // 업로딩 시작 수동처리 여부\n                progressBox: true // 업로드 프로그래스 박스 사용여부 false 이면 업로드 진행바를 표시 하지 않습니다. 개발자가 onprogress 함수를 이용하여 직접 구현 해야 합니다.\n            };\n            this.defaultBtns = {\n                \"upload\": {label: this.config.lang[\"upload\"], theme: \"btn-primary\"},\n                \"abort\": {label: this.config.lang[\"abort\"], theme: this.config.theme}\n            };\n\n            /// 업로드된 파일 큐\n            this.uploadedFiles = [];\n            /// 업로더 타겟\n            this.$target = null;\n            /// 업로드된 파일 정보들의 input 태그를 담아두는 컨테이너\n            this.$inputContainer = null;\n            /// input file 태그\n            this.$inputFile = null;\n            this.$inputFileForm = null;\n            /// 파일 선택버튼\n            this.$fileSelector = null;\n            /// 파일 드랍존\n            this.$dropZone = null;\n            /// 파일 목록 표시박스\n            this.$uploadedBox = null;\n\n            this.__uploading = false;\n            this.selectedFiles = [];\n            this.selectedFilesTotal = 0;\n            this.__loaded = 0;\n\n            cfg = this.config;\n\n            /**\n             * UI 상태변경 이벤트 처리자\n             * UI의 상태변경 : open, close, upload 등의 변경사항이 발생되면 onStateChanged 함수를 후출하여 이벤트를 처리\n             */\n            let bound_onStateChanged = (function (that) {\n\n                let state = {\n                    \"open\": function () {\n\n                    },\n                    \"close\": function () {\n\n                    },\n                    \"upload\": function () {\n\n                    }\n                };\n\n                if (cfg.onStateChanged) {\n                    cfg.onStateChanged.call(that, that);\n                }\n                else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n                return true;\n            }).bind(this);\n\n            let bound_onSelectFile = (function (_evt) {\n                let files;\n\n                if (!ax5.info.supportFileApi) {\n                    // file API 지원 안되는 브라우저.\n                    // input file에 multiple 지원 안됨 그러므로 단일 파일 처리만 하면 됨.\n                    files = {path: _evt.target.value};\n                }\n                else if ('dataTransfer' in _evt) {\n                    files = _evt.dataTransfer.files;\n                }\n                else if ('target' in _evt) {\n                    files = _evt.target.files;\n                }\n                else if (_evt) {\n                    files = _evt;\n                }\n\n                if (!files) return false;\n\n                /// selectedFiles에 현재 파일 정보 담아두기\n                if (length in files) {\n                    this.selectedFiles = U.toArray(files);\n                } else {\n                    this.selectedFiles = [files];\n                }\n\n                if (cfg.progressBox) {\n                    bound_openProgressBox();\n                }\n                if (!cfg.manualUpload) {\n                    this.send();\n                }\n\n                if (!ax5.info.supportFileApi) {\n                    bound_alignLayout(false);\n                }\n            }).bind(this);\n\n            let bound_bindEvent = (function () {\n                this.$fileSelector\n                    .off(\"click.ax5uploader\")\n                    .on(\"click.ax5uploader\", (function () {\n                        this.$inputFile.trigger(\"click\");\n                    }).bind(this));\n\n                if (!ax5.info.supportFileApi) {\n                    this.$fileSelector\n                        .off(\"mouseover.ax5uploader\")\n                        .on(\"mouseover.ax5uploader\", (function () {\n                            bound_alignLayout(true);\n                        }).bind(this));\n\n                    this.$inputFile\n                        .off(\"mouseover.ax5uploader\")\n                        .on(\"mouseover.ax5uploader\", (function () {\n                            this.$fileSelector.addClass(\"active\");\n                        }).bind(this));\n\n                    this.$inputFile\n                        .off(\"mouseout.ax5uploader\")\n                        .on(\"mouseout.ax5uploader\", (function () {\n                            this.$fileSelector.removeClass(\"active\");\n\n                            bound_alignLayout(false);\n                        }).bind(this));\n                }\n\n                (function () {\n                    if (!this.$uploadedBox || !this.$uploadedBox.get(0)) return false;\n\n                    this.$uploadedBox.on(\"click\", \"[data-uploaded-item-cell]\", function () {\n                        let $this = jQuery(this),\n                            cellType = $this.attr(\"data-uploaded-item-cell\"),\n                            uploadedItemIndex = Number($this.parents('[data-ax5uploader-uploaded-item]').attr('data-ax5uploader-uploaded-item')),\n                            that = {};\n\n                        if (cfg.uploadedBox && cfg.uploadedBox.onclick) {\n                            that = {\n                                self: self,\n                                cellType: cellType,\n                                uploadedFiles: self.uploadedFiles,\n                                fileIndex: uploadedItemIndex\n                            };\n                            cfg.uploadedBox.onclick.call(that, that);\n                        }\n\n                        $this = null;\n                        cellType = null;\n                        uploadedItemIndex = null;\n                        that = null;\n                    });\n                }).call(this);\n\n                (function () {\n                    // dropZone 설정 방식 변경\n                    if (!ax5.info.supportFileApi)  return false;\n                    if (!this.$dropZone || !this.$dropZone.get(0)) return false;\n\n                    let timer;\n\n                    this.$dropZone.parent()\n                        .on(\"click\", \"[data-ax5uploader-dropzone]\", function (e) {\n                            if (this == e.target || $.contains(this, e.target)) {\n                                if(U.isFunction(cfg.dropZone.onclick)) {\n                                    cfg.dropZone.onclick.call({\n                                        self: self\n                                    });\n                                }else{\n                                    self.$inputFile.trigger(\"click\");\n                                }\n                            }\n                        });\n\n                    this.$dropZone.get(0).addEventListener('dragover', function (e) {\n                        U.stopEvent(e);\n                        \n                        if(U.isFunction(cfg.dropZone.ondragover)) {\n                            cfg.dropZone.ondragover.call({\n                                self: self\n                            });\n                        }else{\n                            self.$dropZone.addClass(\"dragover\");\n                        }\n\n                    }, false);\n\n                    this.$dropZone.get(0).addEventListener('dragleave', function (e) {\n                        U.stopEvent(e);\n\n                        if(U.isFunction(cfg.dropZone.ondragover)) {\n                            cfg.dropZone.ondragout.call({\n                                self: self\n                            });\n                        }else{\n                            self.$dropZone.removeClass(\"dragover\");\n                        }\n\n                    }, false);\n\n                    this.$dropZone.get(0).addEventListener('drop', function (e) {\n                        U.stopEvent(e);\n\n                        if(U.isFunction(cfg.dropZone.ondrop)) {\n                            cfg.dropZone.ondrop.call({\n                                self: self\n                            });\n                        }else{\n                            self.$dropZone.removeClass(\"dragover\");\n                        }\n\n                        bound_onSelectFile(e || window.event);\n                    }, false);\n\n                }).call(this);\n            }).bind(this);\n\n            let bound_alignLayout = (function (_TF) {\n                // 상황이 좋지 않은경우 (만약 버튼 클릭으로 input file click이 되지 않는 다면 z-index값을 높여서 버튼위를 덮는다.)\n                if (_TF) {\n                    if (!ax5.info.supportFileApi) {\n                        // ie9에서 inputFile을 직접 클릭하지 않으면 submit 오류발생함. submit access denied\n                        // 그래서 버튼위에 inputFile을 올려두어야 함. (position값을 이용하면 편하지만..)\n                        // 그런데 form을 안에두면 또 다른 이중폼 문제 발생소지 ㅜㅜ 불가피하게 버튼의 offset 값을 이용.\n                        let box = this.$fileSelector.offset();\n                        box.width = this.$fileSelector.outerWidth();\n                        box.height = this.$fileSelector.outerHeight();\n                        this.$inputFile.css(box);\n                    }\n                } else {\n                    this.$inputFile.css({\n                        left: -1000, top: -1000\n                    });\n                }\n            }).bind(this);\n\n            let bound_alignProgressBox = (function (append) {\n                let _alignProgressBox = function () {\n                    let $window = jQuery(window), $body = jQuery(document.body);\n                    let pos = {}, positionMargin = 6,\n                        dim = {}, pickerDim = {},\n                        pickerDirection;\n\n                    // cfg.viewport.selector\n\n                    pos = (this.$progressBox.parent().get(0) == this.$target.get(0)) ? this.$fileSelector.position() : this.$fileSelector.offset();\n                    dim = {\n                        width: this.$fileSelector.outerWidth(),\n                        height: this.$fileSelector.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), $body.width()),\n                        winHeight: Math.max($window.height(), $body.height()),\n                        width: this.$progressBox.outerWidth(),\n                        height: this.$progressBox.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!cfg.progressBoxDirection || cfg.progressBoxDirection === \"\" || cfg.progressBoxDirection === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = cfg.progressBoxDirection;\n                    }\n\n                    if (append) {\n                        this.$progressBox\n                            .addClass(\"direction-\" + pickerDirection);\n                    }\n\n                    let positionCSS = (function () {\n                        let css = {left: 0, top: 0};\n                        switch (pickerDirection) {\n                            case \"top\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top + dim.height + positionMargin;\n                                break;\n                            case \"bottom\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top - pickerDim.height - positionMargin;\n                                break;\n                            case \"left\":\n                                css.left = pos.left + dim.width + positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                            case \"right\":\n                                css.left = pos.left - pickerDim.width - positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                        }\n                        return css;\n                    })();\n\n                    (function () {\n                        if (pickerDirection == \"top\" || pickerDirection == \"bottom\") {\n                            if (positionCSS.left < 0) {\n                                positionCSS.left = positionMargin;\n                                this.$progressBoxArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n                            } else if (positionCSS.left + pickerDim.width > pickerDim.winWidth) {\n                                positionCSS.left = pickerDim.winWidth - pickerDim.width - positionMargin;\n                                this.$progressBoxArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n                            }\n                        }\n                    }).call(this);\n\n                    this.$progressBox\n                        .css(positionCSS);\n                };\n\n                this.$progressBox.css({top: -999});\n                if (append) {\n                    // progressBox를 append 할 타겟 엘리먼트 펀단 후 결정.\n                    (function () {\n                        if (cfg.viewport) {\n                            return jQuery(cfg.viewport.selector);\n                        } else {\n                            return this.$target;\n                        }\n                    }).call(this).append(this.$progressBox);\n\n                    // progressBox 버튼에 이벤트 연결.\n                    this.$progressBox\n                        .off(\"click.ax5uploader\")\n                        .on(\"click.ax5uploader\", \"button\", (function (_evt) {\n                            let act = _evt.target.getAttribute(\"data-pregressbox-btn\");\n                            let processor = {\n                                \"upload\": function () {\n                                    this.send();\n                                },\n                                \"abort\": function () {\n                                    this.abort();\n                                }\n                            };\n                            if (processor[act]) processor[act].call(this);\n                        }).bind(this));\n                }\n\n                setTimeout((function () {\n                    _alignProgressBox.call(this);\n                }).bind(this));\n            }).bind(this);\n\n            let bound_openProgressBox = (function () {\n                this.$progressBox.removeClass(\"destroy\");\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.removeAttr(\"disabled\");\n\n                // apend & align progress box\n                bound_alignProgressBox(\"append\");\n\n                // state change\n                bound_onStateChanged({\n                    self: this,\n                    state: \"open\"\n                });\n            }).bind(this);\n\n            let bound_closeProgressBox = (function () {\n                this.$progressBox.addClass(\"destroy\");\n                setTimeout((function () {\n                    this.$progressBox\n                        .remove();\n                }).bind(this), cfg.animateTime);\n            }).bind(this);\n\n            let bound_startUpload = (function () {\n\n                let processor = {\n                    \"html5\": function () {\n\n                        let uploadFile = this.selectedFiles.shift();\n                        if (!uploadFile) {\n                            // 업로드 종료\n                            bound_uploadComplete();\n                            return this;\n                        }\n\n                        let formData = new FormData();\n                        //서버로 전송해야 할 추가 파라미터 정보 설정\n\n                        this.$target.find(\"input\").each(function () {\n                            formData.append(this.name, this.value);\n                        });\n                        // 파일 아이템 추가\n                        formData.append(cfg.form.fileName, uploadFile);\n\n                        this.xhr = new XMLHttpRequest();\n                        this.xhr.open(\"post\", cfg.form.action, true);\n\n                        this.xhr.onload = function (e) {\n                            let res = e.target.response;\n                            try {\n                                if (typeof res == \"string\") res = U.parseJson(res);\n                            } catch (e) {\n                                return false;\n                            }\n                            if (cfg.debug) console.log(res);\n\n                            if (res.error) {\n                                if (cfg.debug) console.log(res.error);\n                                if (U.isFunction(cfg.onuploaderror)) {\n                                    cfg.onuploaderror.call({\n                                        self: this,\n                                        error: res.error\n                                    }, res);\n                                }\n                                self.send();\n                                return false;\n                            }\n\n                            bound_uploaded(res);\n                            self.send();\n                        };\n\n                        this.xhr.upload.onprogress = function (e) {\n                            // console.log(e.loaded, e.total);\n                            bound_updateProgressBar(e);\n                            if (U.isFunction(cfg.onprogress)) {\n                                cfg.onprogress.call({\n                                    loaded: e.loaded,\n                                    total: e.total\n                                }, e);\n                            }\n                        };\n                        this.xhr.send(formData);  // multipart/form-data\n\n                    },\n                    \"form\": function () {\n\n                        /// i'm busy\n                        this.__uploading = true;\n\n                        // 폼과 iframe을 만들어 페이지 아래에 삽입 후 업로드\n                        let $iframe = jQuery('<iframe src=\"javascript:false;\" name=\"ax5uploader-' + this.instanceId + '-iframe\" style=\"display:none;\"></iframe>');\n                        jQuery(document.body).append($iframe);\n\n                        // onload 이벤트 핸들러\n                        // action에서 파일을 받아 처리한 결과값을 텍스트로 출력한다고 가정하고 iframe의 내부 데이터를 결과값으로 callback 호출\n                        $iframe.load(function () {\n                            let doc = this.contentWindow ? this.contentWindow.document : (this.contentDocument ? this.contentDocument : this.document),\n                                root = doc.documentElement ? doc.documentElement : doc.body,\n                                result = root.textContent ? root.textContent : root.innerText,\n                                res;\n\n                            try {\n                                res = JSON.parse(result);\n                            } catch (e) {\n                                res = {\n                                    error: \"Syntax error\",\n                                    body: result\n                                };\n                            }\n\n                            if (cfg.debug) console.log(res);\n                            if (res.error) {\n                                console.log(res);\n                            }\n                            else {\n                                bound_uploaded(res);\n                                $iframe.remove();\n\n                                setTimeout(function () {\n                                    bound_uploadComplete();\n                                }, 300);\n                            }\n                        });\n\n                        this.$inputFileForm\n                            .attr(\"target\", 'ax5uploader-' + this.instanceId + '-iframe')\n                            .attr(\"action\", cfg.form.action)\n                            .submit();\n\n                        this.selectedFilesTotal = 1;\n                        bound_updateProgressBar({\n                            loaded: 1,\n                            total: 1\n                        });\n                    }\n                };\n\n                if (this.__uploading === false) {\n                    // 전체 파일 사이즈 구하기\n                    let filesTotal = 0;\n                    this.selectedFiles.forEach(function (n) {\n                        filesTotal += n.size;\n                    });\n                    this.selectedFilesTotal = filesTotal;\n                    this.__loaded = 0;\n\n                    this.__uploading = true; // 업로드 시작 상태 처리\n                    this.$progressUpload.attr(\"disabled\", \"disabled\");\n                    this.$progressAbort.removeAttr(\"disabled\");\n                }\n\n                processor[ax5.info.supportFileApi ? \"html5\" : \"form\"].call(this);\n\n            }).bind(this);\n\n            let bound_updateProgressBar = (function (e) {\n                this.__loaded += e.loaded;\n                this.$progressBar.css({width: U.number(this.__loaded / this.selectedFilesTotal * 100, {round: 2}) + '%'});\n                if (e.lengthComputable) {\n                    if (e.loaded >= e.total) {\n\n                    }\n                }\n            }).bind(this);\n\n            let bound_uploaded = (function (res) {\n                if (cfg.debug) console.log(res);\n                this.uploadedFiles.push(res);\n                bound_repaintUploadedBox(); // 업로드된 파일 출력\n\n                if (U.isFunction(cfg.onuploaded)) {\n                    cfg.onuploaded.call({\n                        self: this\n                    }, res);\n                }\n            }).bind(this);\n\n            let bound_uploadComplete = (function () {\n                this.__uploading = false; // 업로드 완료 상태처리\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n                if (cfg.progressBox) {\n                    bound_closeProgressBox();\n                }\n                if (U.isFunction(cfg.onuploadComplete)) {\n                    cfg.onuploadComplete.call({\n                        self: this\n                    });\n                }\n                // update uploadedFiles display\n\n                /// reset inputFile\n                bound_attachFileTag();\n            }).bind(this);\n\n            let bound_cancelUpload = (function () {\n\n                let processor = {\n                    \"html5\": function () {\n                        if (this.xhr) {\n                            this.xhr.abort();\n                        }\n                    },\n                    \"form\": function () {\n\n                    }\n                };\n\n                this.__uploading = false; // 업로드 완료 상태처리\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n                processor[ax5.info.supportFileApi ? \"html5\" : \"form\"].call(this);\n\n                if (cfg.progressBox) {\n                    bound_closeProgressBox();\n                }\n\n                //this.$inputFile.val(\"\");\n                /// reset inputFile\n                bound_attachFileTag();\n\n                if (cfg.debug) console.log(\"cancelUpload\");\n                // update uploadedFiles display\n            }).bind(this);\n\n            let bound_repaintUploadedBox = (function () {\n                // uploadedBox 가 없다면 아무일도 하지 않음.\n                // onuploaded 함수 이벤트를 이용하여 개발자가 직접 업로드디 박스를 구현 한다고 이해 하자.\n                if (this.$uploadedBox === null) return this;\n\n                this.$uploadedBox.html(\n                    UPLOADER.tmpl.get(\"upoadedBox\", {\n                        uploadedFiles: this.uploadedFiles,\n                        icon: cfg.uploadedBox.icon,\n                        lang: cfg.uploadedBox.lang,\n                        supportFileApi: !!ax5.info.supportFileApi\n                    }, cfg.uploadedBox.columnKeys)\n                );\n            }).bind(this);\n\n            let bound_attachFileTag = (function () {\n                if (this.$inputFile && this.$inputFile.get(0)) {\n                    this.$inputFile.remove();\n                }\n                if (this.$inputFileForm && this.$inputFileForm.get(0)) {\n                    this.$inputFileForm.remove();\n                }\n\n                this.$inputFile = jQuery(UPLOADER.tmpl.get.call(this, \"inputFile\", {\n                    instanceId: this.instanceId,\n                    multiple: cfg.multiple,\n                    accept: cfg.accept,\n                    name: cfg.form.fileName\n                }));\n\n                if (ax5.info.supportFileApi) {\n                    jQuery(document.body).append(this.$inputFile);\n                } else {\n                    this.$fileSelector.attr(\"tabindex\", -1);\n                    this.$inputFileForm = jQuery(UPLOADER.tmpl.get.call(this, \"inputFileForm\", {\n                        instanceId: this.instanceId\n                    }));\n\n                    this.$inputFileForm.append(this.$inputFile);\n                    jQuery(document.body).append(this.$inputFileForm);\n                }\n\n                this.$inputFile\n                    .off(\"change.ax5uploader\")\n                    .on(\"change.ax5uploader\", (function (_evt) {\n                        bound_onSelectFile(_evt);\n                    }).bind(this));\n\n            }).bind(this);\n\n            /**\n             * Preferences of uploader UI\n             * @method ax5uploader.setConfig\n             * @param {Object} _config - 클래스 속성값\n             * @param {Element} _config.target\n             * @param {Object} _config.form\n             * @param {String} _config.form.action - upload URL\n             * @param {String} _config.form.fileName - The name key of the upload file\n             * @param {Boolean} [_config.multiple=false] - Whether multiple files. In a browser where fileApi is not supported (eg IE9), it only works with false.\n             * @param {String} [_config.accept=\"\"] - accept mimeType (http://www.w3schools.com/TAgs/att_input_accept.asp)\n             * @param {Boolean} [_config.manualUpload=false] - Whether to automatically upload when a file is selected.\n             * @param {Boolean} [_config.progressBox=true] - Whether to use progressBox\n             * @param {String} [_config.progressBoxDirection=auto] - ProgressBox display direction\n             * @param {Object} [_config.dropZone]\n             * @param {Element} [_config.dropZone.target]\n             * @param {Function} [_config.dropZone.onclick]\n             * @param {Function} [_config.dropZone.ondragover]\n             * @param {Function} [_config.dropZone.ondragout]\n             * @param {Function} [_config.dropZone.ondrop]\n             * @param {Object} [_config.uploadedBox]\n             * @param {Element} [_config.uploadedBox.target]\n             * @param {Element} [_config.uploadedBox.icon]\n             * @param {Object} [_config.uploadedBox.columnKeys]\n             * @param {String} [_config.uploadedBox.columnKeys.name]\n             * @param {String} [_config.uploadedBox.columnKeys.type]\n             * @param {String} [_config.uploadedBox.columnKeys.size]\n             * @param {String} [_config.uploadedBox.columnKeys.uploadedName]\n             * @param {String} [_config.uploadedBox.columnKeys.downloadPath]\n             * @param {Object} [_config.uploadedBox.lang]\n             * @param {String} [_config.uploadedBox.lang.supportedHTML5_emptyListMsg]\n             * @param {String} [_config.uploadedBox.lang.emptyListMsg]\n             * @param {Function} [_config.uploadedBox.onchange]\n             * @param {Function} [_config.uploadedBox.onclick]\n             * @param {Function} [_config.validateSelectedFiles]\n             * @param {Function} [_config.onprogress] - return loaded, total\n             * @param {Function} [_config.onuploaded] - return self\n             * @param {Function} [_config.onuploaderror] - return self, error\n             * @param {Function} [_config.onuploadComplete] - return self\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5uploader\", \"401\", \"init\"));\n                    return this;\n                }\n\n                this.$target = jQuery(cfg.target);\n\n                // 파일 드랍존은 옵션 사항.\n                if (cfg.dropZone && cfg.dropZone.target && ax5.info.supportFileApi) {\n                    this.$dropZone = jQuery(cfg.dropZone.target);\n                    this.$dropZone\n                        .attr(\"data-ax5uploader-dropzone\", this.instanceId);\n                }\n\n                // uploadedBox 옵션 사항\n                if (cfg.uploadedBox && cfg.uploadedBox.target) {\n                    this.$uploadedBox = jQuery(cfg.uploadedBox.target);\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        cfg = jQuery.extend(true, cfg, data);\n                    }\n                }).call(this, U.parseJson(this.$target.attr(\"data-ax5uploader-config\"), true));\n\n\n                // detect element\n                /// fileSelector 수집\n                this.$fileSelector = this.$target.find('[data-ax5uploader-button=\"selector\"]');\n\n                if (this.$fileSelector.length === 0) {\n                    console.log(ax5.info.getError(\"ax5uploader\", \"402\", \"can not find file selector\"));\n                    return this;\n                }\n\n                // input file 추가\n                bound_attachFileTag();\n\n                // btns 확인\n                cfg.btns = jQuery.extend({}, this.defaultBtns, cfg.btns);\n\n                this.$progressBox = jQuery(UPLOADER.tmpl.get.call(this, \"progressBox\", {\n                    instanceId: this.instanceId,\n                    btns: cfg.btns\n                }));\n                this.$progressBar = this.$progressBox.find('[role=\"progressbar\"]');\n                this.$progressBoxArrow = this.$progressBox.find(\".ax-progressbox-arrow\");\n                this.$progressUpload = this.$progressBox.find('[data-pregressbox-btn=\"upload\"]');\n                this.$progressAbort = this.$progressBox.find('[data-pregressbox-btn=\"abort\"]');\n\n                // file API가 지원되지 않는 브라우저는 중지 기능 제공 못함.\n                if (!ax5.info.supportFileApi) {\n                    this.$progressAbort.hide();\n                }\n                // 파일버튼 등에 이벤트 연결.\n                bound_bindEvent();\n\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * @method ax5uploader.send\n             * @returns {ax5uploader}\n             *\n             */\n            this.send = (function () {\n                return function () {\n                    // 업로드 시작\n                    if (U.isFunction(cfg.validateSelectedFiles)) {\n                        let that = {\n                            self: this,\n                            uploadedFiles: this.uploadedFiles,\n                            selectedFiles: this.selectedFiles\n                        };\n                        if (!cfg.validateSelectedFiles.call(that, that)) {\n                            bound_cancelUpload();\n                            return false;\n                            // 전송처리 안함.\n                        }\n                    }\n\n                    bound_startUpload();\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5uploader.abort\n             * @returns {ax5uploader}\n             */\n            this.abort = (function () {\n                return function () {\n                    if (!ax5.info.supportFileApi) {\n                        alert(\"This browser not supported abort method\");\n                        return this;\n                    }\n                    bound_cancelUpload();\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5uploader.setUploadedFiles\n             * @param {Array} _files - JSON formatting can all be overridden in columnKeys.\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             * var upload1 = new ax5.ui.uploader();\n             * upload1.setConfig({\n             *  ...\n             * });\n             *\n             *\n             * $.ajax({\n             *     url: \"api/fileListLoad.php\",\n             *     success: function (res) {\n             *         // res JSON format\n             *         // [{\n             *         // \"name\": \"barcode-scan-ani.gif\",\n             *         // \"saveName\": \"barcode-scan-ani.gif\",\n             *         // \"type\": \"file\",\n             *         // \"fileSize\": \"3891664\",\n             *         // \"uploadedPath\": \"/ax5ui-uploader/test/api/files\",\n             *         // \"thumbUrl\": \"\"\n             *         // }]\n             *         upload1.setUploadedFiles(res);\n             *     }\n             * });\n             * ```\n             */\n            this.setUploadedFiles = function (_files) {\n                if (U.isArray(_files)) {\n                    this.uploadedFiles = _files;\n                }\n                if (U.isString(_files)) {\n                    try {\n                        this.uploadedFiles = JSON.parse(_files);\n                    } catch (e) {\n\n                    }\n                }\n\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * Removes the object corresponding to the index passed to the argument from uploadedFiles.\n             * @method ax5uploader.removeFile\n             * @param {Number} _index\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             * // The actual file is not deleted\n             * upload1.removeFile(fileIndex);\n             * ```\n             */\n            this.removeFile = function (_index) {\n                if (!isNaN(Number(_index))) {\n                    this.uploadedFiles.splice(_index, 1);\n                }\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * Empty uploadedFiles\n             * @method ax5uploader.removeFileAll\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            this.removeFileAll = function () {\n                this.uploadedFiles = [];\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * @method ax5uploader.selectFile\n             * @returns {Boolean}\n             */\n            this.selectFile = function () {\n                if (ax5.info.supportFileApi) {\n                    this.$inputFile.trigger(\"click\");\n                    return true;\n                }\n                return false;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                UI.uploader_instance = UI.uploader_instance || [];\n                UI.uploader_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    //this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5uploader;\n    })());\n\n    UPLOADER = ax5.ui.uploader;\n})();\n\n\n// todo :\n// html5용 업로드 - 구현완료\n// abort, 여러개의 파일이 올라가는 중간에 abort 하면 업로드된 파일은 두고. 안올라간 파일만 중지 -- ok\n// set uploded files\n// uploaded files display, needs columnKeys\n// delete file\n\n// dropFile support","// ax5.ui.uploader.tmpl\n(function () {\n\n    let UPLOADER = ax5.ui.uploader;\n\n    let uploadProgress = function (columnKeys) {\n        return `\n        `;\n    };\n\n    let inputFile = function (columnKeys) {\n        return `<input type=\"file\" data-ax5uploader-input=\"{{instanceId}}\" name=\"{{name}}\" {{#multiple}}multiple{{/multiple}} accept=\"{{accept}}\" />`;\n    };\n\n    let inputFileForm = function (columnKeys) {\n        return `<form data-ax5uploader-form=\"{{instanceId}}\" name=\"ax5uploader-{{instanceId}}-form\" method=\"post\" enctype=\"multipart/form-data\"></form>`;\n    };\n\n    let progressBox = function (columnKeys) {\n        return `\n<div data-ax5uploader-progressbox=\"{{instanceId}}\" class=\"{{theme}}\">\n    <div class=\"ax-progressbox-body\">\n        <div class=\"ax-pregressbox-content\">\n            <div class=\"progress\">\n              <div class=\"progress-bar progress-bar-striped active\" role=\"progressbar\" style=\"width: 0\">\n                <span class=\"sr-only\">0% Complete</span>\n              </div>\n            </div>\n        </div>\n        {{#btns}}\n            <div class=\"ax-progressbox-buttons\">\n            {{#btns}}\n                {{#@each}}\n                <button data-pregressbox-btn=\"{{@key}}\" class=\"btn btn-default {{@value.theme}}\">{{@value.label}}</button>\n                {{/@each}}\n            {{/btns}}\n            </div>\n        {{/btns}}\n    </div>\n    <div class=\"ax-progressbox-arrow\"></div>\n</div>\n`;\n    };\n\n    let upoadedBox = function (columnKeys) {\n        return `\n{{#uploadedFiles}}<div data-ax5uploader-uploaded-item=\"{{@i}}\">\n    <div class=\"uploaded-item-holder\">\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"download\">{{{icon.download}}}</div>\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filename\">{{${columnKeys.name}}}</div>\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filesize\">({{#@fn_get_byte}}{{${columnKeys.size}}}{{/@fn_get_byte}})</div>\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"delete\">{{{icon.delete}}}</div>\n    </div>\n</div>{{/uploadedFiles}}\n{{^uploadedFiles}}\n{{#supportFileApi}}{{{lang.supportedHTML5_emptyListMsg}}}{{/supportFileApi}}\n{{^supportFileApi}}{{{lang.emptyListMsg}}}{{/supportFileApi}}\n{{/uploadedFiles}}\n`;\n    };\n\n    UPLOADER.tmpl = {\n        \"uploadProgress\": uploadProgress,\n        \"inputFile\": inputFile,\n        \"inputFileForm\": inputFileForm,\n        \"progressBox\": progressBox,\n        \"upoadedBox\": upoadedBox,\n\n        get: function (tmplName, data, columnKeys) {\n            data[\"@fn_get_byte\"] = function() {\n                return function (text, render) {\n                    return ax5.util.number(render(text), {round: 2, byte: true});\n                }\n            };\n            return ax5.mustache.render(UPLOADER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.combobox\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var COMBOBOX;\n\n    UI.addClass({\n        className: \"combobox\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5combobox\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * options.push({value: \"1\", text: \"string\"});\n         * options.push({value: \"2\", text: \"number\"});\n         * options.push({value: \"3\", text: \"substr\"});\n         * options.push({value: \"4\", text: \"substring\"});\n         * options.push({value: \"search\", text: \"search\"});\n         * options.push({value: \"parseInt\", text: \"parseInt\"});\n         * options.push({value: \"toFixed\", text: \"toFixed\"});\n         * options.push({value: \"min\", text: \"min\"});\n         * options.push({value: \"max\", text: \"max\"});\n         *\n         * var myCombo = new ax5.ui.combobox({\n         *     theme: \"danger\",\n         *     removeIcon: '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>'\n         * });\n         * ```\n         */\n        var ax5combobox = function () {\n            var\n                self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                removeIcon: 'X',\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'now loading..'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n\n            this.queue = [];\n            this.activecomboboxOptionGroup = null;\n            this.activecomboboxQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var\n                ctrlKeys = {\n                    \"18\": \"KEY_ALT\",\n                    \"8\": \"KEY_BACKSPACE\",\n                    \"17\": \"KEY_CONTROL\",\n                    \"46\": \"KEY_DELETE\",\n                    \"40\": \"KEY_DOWN\",\n                    \"35\": \"KEY_END\",\n                    \"187\": \"KEY_EQUAL\",\n                    \"27\": \"KEY_ESC\",\n                    \"36\": \"KEY_HOME\",\n                    \"45\": \"KEY_INSERT\",\n                    \"37\": \"KEY_LEFT\",\n                    \"189\": \"KEY_MINUS\",\n                    \"34\": \"KEY_PAGEDOWN\",\n                    \"33\": \"KEY_PAGEUP\",\n                    // \"190\": \"KEY_PERIOD\",\n                    \"13\": \"KEY_RETURN\",\n                    \"39\": \"KEY_RIGHT\",\n                    \"16\": \"KEY_SHIFT\",\n                    // \"32\": \"KEY_SPACE\",\n                    \"9\": \"KEY_TAB\",\n                    \"38\": \"KEY_UP\",\n                    \"91\": \"KEY_WINDOW\"\n                    //\"107\" : \"NUMPAD_ADD\",\n                    //\"194\" : \"NUMPAD_COMMA\",\n                    //\"110\" : \"NUMPAD_DECIMAL\",\n                    //\"111\" : \"NUMPAD_DIVIDE\",\n                    //\"12\" : \"NUMPAD_EQUAL\",\n                    //\"106\" : \"NUMPAD_MULTIPLY\",\n                    //\"109\" : \"NUMPAD_SUBTRACT\"\n                },\n                onStateChanged = function (item, that) {\n                    if (item && item.onStateChanged) {\n                        item.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    if (that.state == \"changeValue\") {\n                        if (item && item.onChange) {\n                            item.onChange.call(that, that);\n                        }\n                        else if (this.onChange) {\n                            this.onChange.call(that, that);\n                        }\n                    }\n\n                    item = null;\n                    that = null;\n                    return true;\n                },\n                alignComboboxDisplay = function () {\n                    var i = this.queue.length, w;\n\n                    while (i--) {\n                        var item = this.queue[i];\n                        if (item.$display) {\n                            w = Math.max(item.$select.outerWidth(), U.number(item.minWidth));\n                            item.$display.css({\n                                \"min-width\": w\n                            });\n                            if (item.reset) {\n                                item.$display.find(\".addon-icon-reset\").css({\n                                    \"line-height\": this.queue[i].$display.height() + \"px\"\n                                });\n                            }\n\n                            // 높이조절 처리\n                            if (item.multiple) {\n                                var displayTableHeightAdjust = (function () {\n                                    return U.number(item.$display.css(\"border-top-width\")) + U.number(item.$display.css(\"border-bottom-width\"));\n                                }).call(this);\n                                item.$target.height('');\n                                item.$display.height('');\n\n                                var displayTableHeight = item.$displayTable.outerHeight();\n                                if (Math.abs(displayTableHeight - item.$target.height()) > displayTableHeightAdjust) {\n                                    item.$target.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n                                    item.$display.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n                                }\n                            }\n                        }\n                    }\n\n                    i = null;\n                    w = null;\n                    return this;\n                },\n                alignComboboxOptionGroup = function (append) {\n                    if (!this.activecomboboxOptionGroup) return this;\n\n                    var item = this.queue[this.activecomboboxQueueIndex],\n                        pos = {}, positionMargin = 0,\n                        dim = {}, pickerDim = {},\n                        pickerDirection;\n\n                    if (append) jQuery(document.body).append(this.activecomboboxOptionGroup);\n\n                    pos = item.$target.offset();\n                    dim = {\n                        width: item.$target.outerWidth(),\n                        height: item.$target.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                        winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                        width: this.activecomboboxOptionGroup.outerWidth(),\n                        height: this.activecomboboxOptionGroup.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = item.direction;\n                    }\n\n                    if (append) {\n                        this.activecomboboxOptionGroup\n                            .addClass(\"direction-\" + pickerDirection);\n                    }\n                    this.activecomboboxOptionGroup\n                        .css((function () {\n                            if (pickerDirection == \"top\") {\n                                if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                                    var newTop = pos.top + dim.height / 2 - pickerDim.height / 2;\n                                    if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                        newTop = 0;\n                                    }\n                                    if (newTop < 0) {\n                                        newTop = 0;\n                                    }\n\n                                    return {\n                                        left: pos.left,\n                                        top: newTop,\n                                        width: dim.width\n                                    }\n                                }\n                                return {\n                                    left: pos.left,\n                                    top: pos.top + dim.height + 1,\n                                    width: dim.width\n                                }\n                            }\n                            else if (pickerDirection == \"bottom\") {\n                                return {\n                                    left: pos.left,\n                                    top: pos.top - pickerDim.height - 1,\n                                    width: dim.width\n                                }\n                            }\n                        }).call(this));\n                },\n                onBodyClick = function (e, target) {\n                    if (!this.activecomboboxOptionGroup) return this;\n\n                    var\n                        item = this.queue[this.activecomboboxQueueIndex],\n                        clickEl = \"display\"\n                        ;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-option-value\")) {\n                            clickEl = \"optionItem\";\n                            return true;\n                        }\n                        else if (item.$target.get(0) == target) {\n                            clickEl = \"display\";\n                            return true;\n                        }\n                    });\n\n                    if (!target) {\n                        this.close();\n                        return this;\n                    }\n                    else if (clickEl === \"optionItem\") {\n                        \n                        setOptionSelect.call(this, item.id, {\n                            index: {\n                                gindex: target.getAttribute(\"data-option-group-index\"),\n                                index: target.getAttribute(\"data-option-index\")\n                            }\n                        }, undefined, true);\n\n                        alignComboboxDisplay.call(this);\n                        alignComboboxOptionGroup.call(this);\n\n                        if (!item.multiple) {\n                            this.close();\n                        }\n                    }\n                    else {\n\n                    }\n\n                    return this;\n                },\n\n                getLabel = function (queIdx) {\n                    var item = this.queue[queIdx];\n\n                    // 템플릿에 전달 해야할 데이터 선언\n                    var data = {};\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5combobox-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n                    data.lang = item.lang;\n                    data.options = item.options;\n                    data.selected = item.selected;\n                    data.hasSelected = (data.selected && data.selected.length > 0);\n                    data.removeIcon = item.removeIcon;\n\n                    return COMBOBOX.tmpl.get.call(this, \"label\", data, item.columnKeys);\n                },\n                printLabel = function (queIdx) {\n                    var item = this.queue[queIdx];\n\n                    item.$displayLabel.find('[data-ax5combobox-selected-label]').remove();\n                    item.$displayLabelInput.before(getLabel.call(this, queIdx));\n                },\n                focusLabel = function (queIdx) {\n                    if (this.queue[queIdx].disabled) return this;\n\n                    this.queue[queIdx].$displayLabel.trigger(\"focus\");\n                    this.queue[queIdx].$displayLabelInput.focus();\n                },\n                clearLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabelInput.val('');\n                },\n                blurLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabel.trigger(\"blur\");\n                    this.queue[queIdx].$displayLabelInput.trigger(\"blur\");\n                },\n                onSearch = function (queIdx, searchWord) {\n                    this.queue[queIdx].waitOptions = true;\n\n                    this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                        COMBOBOX.tmpl.get.call(this, \"option\", this.queue[queIdx], this.queue[queIdx].columnKeys)\n                    ));\n\n                    this.queue[queIdx].onSearch.call({\n                        self: this,\n                        item: this.queue[queIdx],\n                        searchWord: searchWord\n                    }, (function (O) {\n\n                        var data = {};\n                        var item = this.queue[this.activecomboboxQueueIndex];\n                        if (!item) return false;\n\n                        /// 현재 selected 검증후 처리\n                        (function (item, O) {\n                            var optionsMap = {};\n                            O.options.forEach(function (_O, _OIndex) {\n                                _O[\"@index\"] = _OIndex;\n                                optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                            });\n                            if (U.isArray(item.selected)) {\n                                item.selected.forEach(function (_O) {\n                                    if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                        O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                    }\n                                });\n                            }\n                        })(item, O);\n\n                        item.options = syncComboboxOptions.call(this, this.activecomboboxQueueIndex, O.options);\n\n                        alignComboboxDisplay.call(this);\n\n                        /// 템플릿에 전달할 오브젝트 선언\n                        data.id = item.id;\n                        data.theme = item.theme;\n                        data.size = \"ax5combobox-option-group-\" + item.size;\n                        data.multiple = item.multiple;\n                        data.lang = item.lang;\n                        data.options = item.options;\n\n                        this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                            COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)\n                        ));\n\n                    }).bind(this));\n                },\n                focusWord = function (queIdx, searchWord) {\n                    //console.log(searchWord);\n\n                    if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                    var options = [], i = -1, l = this.queue[queIdx].indexedOptions.length - 1, n;\n\n                    if (searchWord != \"\") {\n                        var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n                        searchWord = searchWord.replace(regExp, \"\");\n                        if (this.queue[queIdx].onSearch) {\n                            onSearch.call(this, queIdx, searchWord);\n\n                            try {\n                                return options;\n                            } finally {\n                                options = null;\n                                i = null;\n                                l = null;\n                                n = null;\n                            }\n                            // if there is a \"onSearch\", to end this process\n                        }\n\n                        while (l - i++) {\n                            n = this.queue[queIdx].indexedOptions[i];\n\n                            if (('' + n.text).toLowerCase() == searchWord.toLowerCase()) {\n                                options = [{'@findex': n['@findex'], optionsSort: 0}];\n                                break;\n                            } else {\n                                var sort = ('' + n.text).toLowerCase().search(searchWord.toLowerCase());\n                                if (sort > -1) {\n                                    options.push({'@findex': n['@findex'], optionsSort: sort});\n                                    if (options.length > 2) break;\n                                }\n                                sort = null;\n                            }\n                        }\n                        options.sort(function (a, b) {\n                            return a.optionsSort - b.optionsSort;\n                        });\n                    }\n\n                    if (options && options.length > 0) {\n                        focusMove.call(this, queIdx, undefined, options[0]['@findex']);\n                    } else {\n                        focusClear.call(this, queIdx);\n                    }\n\n                    try {\n                        return options;\n                    } finally {\n                        options = null;\n                        i = null;\n                        l = null;\n                        n = null;\n                    }\n                },\n                focusClear = function (queIdx) {\n                    if (this.activecomboboxOptionGroup) {\n                        this.activecomboboxOptionGroup\n                            .find('[data-option-focus-index]')\n                            .removeClass(\"hover\")\n                            .removeAttr(\"data-option-selected\");\n                    }\n\n                    this.queue[queIdx].optionFocusIndex = -1;\n                },\n                focusMove = function (queIdx, direction, findex) {\n                    var _focusIndex,\n                        _prevFocusIndex,\n                        focusOptionEl,\n                        optionGroupScrollContainer;\n                    var item = this.queue[queIdx];\n\n                    if (this.activecomboboxOptionGroup && item.options && item.options.length > 0) {\n\n                        if (typeof findex !== \"undefined\") {\n                            _focusIndex = findex\n                        }\n                        else {\n                            _prevFocusIndex = (item.optionFocusIndex == -1) ? item.optionSelectedIndex || -1 : item.optionFocusIndex;\n                            if (_prevFocusIndex == -1) {\n                                _focusIndex = 0;\n                                //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n                            }\n                            else {\n                                _focusIndex = _prevFocusIndex + direction;\n                                if (_focusIndex < 0) _focusIndex = 0;\n                                else if (_focusIndex > item.optionItemLength - 1) _focusIndex = item.optionItemLength - 1;\n                            }\n                        }\n\n                        item.optionFocusIndex = _focusIndex;\n\n                        // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n                        // todo : editable 로 추가된 options가 제거 되지 않으므로. 인덱스 검색을 좀 더 보강 해야함.\n                        if (item.options[_focusIndex] && item.options[_focusIndex].hide) { // 옵션이 없는 값이 선택된 경우\n                            if (typeof direction === \"undefined\") {\n                                return this;\n                            }\n                            else {\n                                var isStrop = false;\n                                while (item.options[_focusIndex].hide) {\n                                    _focusIndex = _focusIndex + direction;\n                                    if (_focusIndex < 0) {\n                                        _focusIndex = 0;\n                                        break;\n                                    }\n                                    else if (_focusIndex > item.optionItemLength - 1) {\n                                        _focusIndex = item.optionItemLength - 1;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n\n                        if (typeof _focusIndex !== \"undefined\") {\n                            this.activecomboboxOptionGroup\n                                .find('[data-option-focus-index]')\n                                .removeClass(\"hover\");\n\n                            focusOptionEl = this.activecomboboxOptionGroup\n                                .find('[data-option-focus-index=\"' + _focusIndex + '\"]')\n                                .addClass(\"hover\");\n\n                            optionGroupScrollContainer = this.activecomboboxOptionGroup.find('[data-els=\"content\"]');\n\n                            if (focusOptionEl.get(0)) {\n                                let focusOptionElHeight = focusOptionEl.outerHeight(),\n                                    optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                                    optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                                    focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                                if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                                    optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                                }\n                                else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                                    optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                                }\n                                // optionGroup scroll check\n\n                                if (typeof direction !== \"undefined\") {\n                                    item.$displayLabelInput.val(item.options[_focusIndex].text);\n                                }\n                            }\n                        }\n                    }\n                },\n                syncComboboxOptions = (function () {\n                    var setSelected = function (queIdx, O) {\n                        if (!O) {\n                            this.queue[queIdx].selected = [];\n                        }\n                        else {\n                            this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                            /*\n                             콤보박스는 selected가 없을 때 options의 첫번째 아이템이 selected가 되지 않는다.\n                             if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                             else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n                             */\n                        }\n                    };\n\n                    return function (queIdx, options) {\n                        var item = this.queue[queIdx];\n                        var po, elementOptions, newOptions, focusIndex = 0;\n                        setSelected.call(this, queIdx, false); // item.selected 초기화\n\n                        if (options) {\n                            item.options = options;\n                            item.indexedOptions = [];\n\n                            // combobox options 태그 생성\n                            po = [];\n                            po.push('<option value=\"\"></option>');\n\n                            item.options.forEach(function (O, OIndex) {\n                                /// @gindex : index of optionGroup\n                                /// @index : index of options (if you use optionGroup then the index is not unique)\n                                if (O.optgroup) {\n                                    O['@gindex'] = OIndex;\n                                    O.options.forEach(function (OO, OOIndex) {\n                                        OO['@index'] = OOIndex;\n                                        OO['@findex'] = focusIndex;\n                                        po.push('<option value=\"' + OO[item.columnKeys.optionValue] + '\" '\n                                            + (OO[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                                            + OO[item.columnKeys.optionText] + '</option>');\n                                        if (OO[item.columnKeys.optionSelected]) {\n                                            setSelected.call(self, queIdx, OO);\n                                        }\n\n                                        item.indexedOptions.push({\n                                            '@gindex': OIndex,\n                                            '@index': OOIndex,\n                                            '@findex': focusIndex,\n                                            value: OO[item.columnKeys.optionValue],\n                                            text: OO[item.columnKeys.optionText]\n                                        });\n                                        focusIndex++;\n                                    });\n                                }\n                                else {\n                                    O['@index'] = OIndex;\n                                    O['@findex'] = focusIndex;\n                                    po.push('<option value=\"' + O[item.columnKeys.optionValue] + '\" '\n                                        + (O[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                                        + O[item.columnKeys.optionText] + '</option>');\n                                    if (O[item.columnKeys.optionSelected]) {\n                                        setSelected.call(self, queIdx, O);\n                                    }\n\n                                    item.indexedOptions.push({\n                                        '@index': OIndex,\n                                        '@findex': focusIndex,\n                                        value: O[item.columnKeys.optionValue],\n                                        text: O[item.columnKeys.optionText]\n                                    });\n                                    focusIndex++;\n                                }\n                            });\n                            item.optionItemLength = focusIndex;\n                            item.$select.html(po.join(''));\n                        }\n                        else {\n                            /// select > options 태그로 스크립트 options를 만들어주는 역할\n                            if (item.$select.get(0).options && item.$select.get(0).options.length) item.$select.get(0).options[0].selected = false;\n                            elementOptions = U.toArray(item.$select.get(0).options);\n\n                            // select option 스크립트 생성\n                            newOptions = [];\n                            elementOptions.forEach(function (O, OIndex) {\n                                var option = {};\n                                option[item.columnKeys.optionValue] = O.value;\n                                option[item.columnKeys.optionText] = O.text;\n                                option[item.columnKeys.optionSelected] = O.selected;\n                                option['@index'] = OIndex;\n                                option['@findex'] = focusIndex;\n                                if (O.selected) setSelected.call(self, queIdx, option);\n                                newOptions.push(option);\n                                focusIndex++;\n\n                                option = null;\n                            });\n                            item.options = newOptions;\n                            item.indexedOptions = newOptions;\n\n                            item.$select.prepend('<option value=\"\"></option>');\n                            item.$select.get(0).options[0].selected = true;\n                        }\n\n                        po = null;\n                        elementOptions = null;\n                        newOptions = null;\n                        return item.options;\n                    }\n                })(),\n                getQueIdx = function (boundID) {\n                    if (boundID instanceof jQuery) {\n                        boundID = boundID.data(\"data-ax5combobox-id\");\n                    } else if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-ax5combobox-id\");\n                    }\n                    if (!U.isString(boundID)) {\n                        console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"getQueIdx\"));\n                        return;\n                    }\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                },\n                getSelected = function (_item, o, selected) {\n                    if (typeof selected === \"undefined\") {\n                        return (_item.multiple) ? !o : true;\n                    } else {\n                        return selected;\n                    }\n                },\n                clearSelected = function (queIdx) {\n                    this.queue[queIdx].options.forEach(function (n) {\n                        if (n.optgroup) {\n                            n.options.forEach(function (nn) {\n                                nn.selected = false;\n                            });\n                        }\n                        else {\n                            n.selected = false;\n                        }\n                    });\n                },\n                setOptionSelect = (function () {\n                    var processor = {\n                        'index': function (queIdx, value, selected, setValueType) {\n                            // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                            var item = this.queue[queIdx];\n\n                            if (U.isString(value.index.gindex)) {\n                                if (typeof item.options[value.index.gindex] !== \"undefined\") {\n\n                                    item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected], selected);\n\n                                    if (self.activecomboboxOptionGroup) {\n                                        self.activecomboboxOptionGroup\n                                            .find('[data-option-group-index=\"' + value.index.gindex + '\"][data-option-index=\"' + value.index.index + '\"]')\n                                            .attr(\"data-option-Selected\", item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected].toString());\n                                    }\n                                }\n                            }\n                            else {\n                                if (typeof item.options[value.index.index] !== \"undefined\") {\n\n                                    item.options[value.index.index][item.columnKeys.optionSelected] =\n                                        getSelected(item, item.options[value.index.index][item.columnKeys.optionSelected], selected);\n\n                                    if (self.activecomboboxOptionGroup) {\n                                        self.activecomboboxOptionGroup\n                                            .find('[data-option-index=\"' + value.index.index + '\"]')\n                                            .attr(\"data-option-Selected\", item.options[value.index.index][item.columnKeys.optionSelected].toString());\n                                    }\n                                }\n                            }\n\n                            if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                                syncComboboxOptions.call(this, queIdx, item.options);\n                                alignComboboxOptionGroup.call(this);\n                            }\n                        },\n                        'arr': function (queIdx, values, selected, setValueType) {\n                            values.forEach(function (value) {\n                                if (U.isString(value) || U.isNumber(value)) {\n                                    processor.text.call(self, queIdx, value, selected, \"justSetValue\");\n                                }\n                                else {\n                                    for (var key in processor) {\n                                        if (value[key]) {\n                                            processor[key].call(self, queIdx, value, selected, \"justSetValue\");\n                                            break;\n                                        }\n                                    }\n                                }\n                            });\n\n                            syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                            alignComboboxOptionGroup.call(this);\n                        },\n                        'value': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx];\n                            var addOptions;\n                            var optionIndex = U.search(item.options, function () {\n                                return this[item.columnKeys.optionValue] == value[item.columnKeys.optionValue];\n                            });\n\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            else {\n                                // 새로운 값 추가\n                                optionIndex = item.options.length;\n                                addOptions = {\n                                    \"@index\": optionIndex,\n                                    hide: true,\n                                    addedOption: true\n                                };\n                                addOptions[item.columnKeys.optionValue] = value;\n                                addOptions[item.columnKeys.optionText] = value;\n                                item.options.push(addOptions);\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                                syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                                alignComboboxOptionGroup.call(this);\n                            }\n                        },\n                        'text': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx];\n                            var addOptions;\n                            var optionIndex = U.search(item.options, function () {\n                                return this[item.columnKeys.optionText] == value;\n                            });\n\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            else {\n                                // 새로운 값 추가\n                                optionIndex = item.options.length;\n                                addOptions = {\n                                    \"@index\": optionIndex,\n                                    hide: true,\n                                    addedOption: true\n                                };\n                                addOptions[item.columnKeys.optionValue] = value;\n                                addOptions[item.columnKeys.optionText] = value;\n                                item.options.push(addOptions);\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                                syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                                alignComboboxOptionGroup.call(this);\n                            }\n                        },\n                        'clear': function (queIdx) {\n                            clearSelected.call(this, queIdx);\n                            syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                            //focusLabel.call(this, queIdx);\n                            focusClear.call(this, queIdx);\n\n                            if (this.activecomboboxOptionGroup) {\n                                this.activecomboboxOptionGroup\n                                    .find('[data-option-index]')\n                                    .attr(\"data-option-Selected\", \"false\");\n                            }\n                            this.queue[queIdx].optionSelectedIndex = -1;\n                        }\n                    };\n                    return function (boundID, value, selected, _option) {\n                        var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                        if (queIdx === -1) {\n                            console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                            return;\n                        }\n\n                        if (typeof value == \"undefined\") {\n                            throw \"error not found value\";\n                        }\n                        else if (U.isArray(value)) {\n                            processor.clear.call(this, queIdx);\n                            processor.arr.call(this, queIdx, (this.queue[queIdx].multiple || value.length == 0) ? value : [value[value.length - 1]], selected);\n                        }\n                        else if (U.isString(value) || U.isNumber(value)) {\n                            if (typeof value !== \"undefined\" && value !== null && !this.queue[queIdx].multiple) {\n                                clearSelected.call(this, queIdx);\n                            }\n                            processor.text.call(this, queIdx, value, selected, \"justSetValue\");\n                        }\n                        else {\n                            if (value === null) {\n                                processor.clear.call(this, queIdx);\n                            }\n                            else {\n                                if (!this.queue[queIdx].multiple) {\n                                    clearSelected.call(this, queIdx);\n                                }\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(this, queIdx, value, selected, \"justSetValue\");\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n\n                        syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                        printLabel.call(this, queIdx);\n                        focusLabel.call(this, queIdx);\n\n                        if (typeof value !== \"undefined\") {\n                            if (_option && (!_option.noStateChange)) {\n                                onStateChanged.call(this, this.queue[queIdx], {\n                                    self: this,\n                                    item: this.queue[queIdx],\n                                    state: \"changeValue\",\n                                    value: this.queue[queIdx].selected\n                                });\n                            }\n                        }\n\n                        boundID = null;\n                        return this;\n                    };\n                })();\n\n            /// private end\n\n            /**\n             * Preferences of combobox UI\n             * @method ax5combobox.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5combobox}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n                jQuery(window).bind(\"resize.ax5combobox-display-\" + this.instanceId, (function () {\n                    alignComboboxDisplay.call(this);\n                }).bind(this));\n            };\n\n            /**\n             * bind combobox\n             * @method ax5combobox.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @returns {ax5combobox}\n             */\n            this.bind = function (item) {\n                var bindComboboxTarget = (function () {\n                    var debouncedFocusWord = U.debounce(function (queIdx) {\n                        if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                        focusWord.call(self, queIdx, this.queue[queIdx].$displayLabelInput.val());\n                    }, 150);\n\n                    var blurLabel = function (queIdx) {\n                        clearLabel.call(this, queIdx);\n                    };\n\n                    var comboboxEvent = {\n                        'click': function (queIdx, e) {\n                            var clickEl;\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-ax5combobox-remove\")) {\n                                    clickEl = \"optionItemRemove\";\n                                    return true;\n                                }\n                                else if (target.getAttribute(\"data-selected-clear\")) {\n                                    clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                if (clickEl === \"optionItemRemove\") {\n                                    var selectedIndex = target.getAttribute(\"data-ax5combobox-remove-index\");\n                                    var option = this.queue[queIdx].selected[selectedIndex];\n                                    setOptionSelect.call(this, queIdx, {\n                                        index: {\n                                            gindex: option['@gindex'],\n                                            index: option['@index']\n                                        }\n                                    }, false, true);\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    focusLabel.call(this, queIdx);\n                                    U.stopEvent(e);\n                                    return this;\n                                } else if (clickEl === \"clear\") {\n                                    setOptionSelect.call(this, queIdx, {clear: true});\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                            else {\n                                if (self.activecomboboxQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                }\n                                else {\n                                    self.open(queIdx);\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyUp': function (queIdx, e) {\n                            /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n                            if (e.which == ax5.info.eventKeys.ESC && self.activecomboboxQueueIndex === -1) { // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n                                U.stopEvent(e);\n                                return this;\n                            }\n                            if (self.activecomboboxQueueIndex != queIdx) { // 닫힌 상태 인경우\n                                self.open(queIdx);\n                                U.stopEvent(e);\n                            }\n\n                            var disableCtrlKeys = {\n                                \"40\": \"KEY_DOWN\",\n                                \"38\": \"KEY_UP\"\n                            };\n                            if (!disableCtrlKeys[e.which]) {\n\n                                // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n                                if (e.which == ax5.info.eventKeys.BACKSPACE && this.queue[queIdx].$displayLabelInput.val() == \"\") {\n                                    // 마지막 아이템을 제거.\n                                    if(this.queue[queIdx].selected.length > 0) {\n                                        var option = this.queue[queIdx].selected[this.queue[queIdx].selected.length - 1];\n                                        setOptionSelect.call(this, queIdx, {\n                                            index: {\n                                                gindex: option['@gindex'],\n                                                index: option['@index']\n                                            }\n                                        }, false, true);\n                                    }\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                } else {\n                                    debouncedFocusWord.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyDown': function (queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                clearLabel.call(this, queIdx);\n                                this.close();\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.RETURN) {\n\n                                setOptionSelect.call(this, item.id, {\n                                    index: {\n                                        gindex: item.indexedOptions[item.optionFocusIndex][\"@gindex\"],\n                                        index: item.indexedOptions[item.optionFocusIndex][\"@index\"]\n                                    }\n                                }, undefined, true);\n                                clearLabel.call(this, queIdx);\n                                alignComboboxDisplay.call(this);\n\n                                this.close();\n                                //alignComboboxOptionGroup.call(this);\n\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        'focus': function (queIdx, e) {\n                            //console.log(e);\n                        },\n                        'blur': function (queIdx, e) {\n                            blurLabel.call(this, queIdx);\n                            U.stopEvent(e);\n                        },\n                        'selectChange': function (queIdx, e) {\n                            setOptionSelect.call(this, queIdx, {value: this.queue[queIdx].$select.val()}, true);\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n                        // 현재 선택된 값을 담아두는 저장소, syncComboboxOptions를 통해 options와 selected값을 동기화 처리 한다.\n                        item.selected = [];\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = (function () {\n                                return (item.size) ? \"input-\" + item.size : \"\";\n                            })();\n\n                            //item.$display = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"comboboxDisplay\"].call(this, queIdx), data));\n                            item.$display = jQuery(COMBOBOX.tmpl.get.call(this, \"comboboxDisplay\", data, item.columnKeys));\n                            item.$displayTable = item.$display.find('[data-els=\"display-table\"]');\n                            item.$displayLabel = item.$display.find('[data-ax5combobox-display=\"label\"]');\n                            item.$displayLabelInput = item.$display.find('[data-ax5combobox-display=\"input\"]');\n\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                item.$select\n                                    .attr(\"tabindex\", \"-1\")\n                                    .attr(\"class\", \"form-control \" + data.formSize);\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                if (data.multiple) {\n                                    item.$select.attr(\"multiple\", \"multiple\");\n                                }\n                            }\n                            else {\n                                //item.$select = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"formSelect\"].call(this, queIdx), data));\n                                item.$select = jQuery(COMBOBOX.tmpl.get.call(this, \"formSelect\", data, item.columnKeys));\n                                item.$target.append(item.$select);\n                            }\n\n                            item.$target.append(item.$display);\n                            // 라벨에 사용자 입력 필드가 있으므로 displayInput은 필요 없음.\n                            // select.options로 item.options를 만들어내거나 item.options로 select.options를 만들어냄\n                            item.options = syncComboboxOptions.call(this, queIdx, item.options);\n                        }\n                        else {\n                            item.$displayLabel\n                                .html(getLabel.call(this, queIdx));\n                            item.options = syncComboboxOptions.call(this, queIdx, item.options);\n                        }\n\n\n                        alignComboboxDisplay.call(this);\n\n                        item.$display\n                            .unbind('click.ax5combobox')\n                            .bind('click.ax5combobox', comboboxEvent.click.bind(this, queIdx));\n\n                        // combobox 태그에 대한 이벤트 감시\n\n\n                        item.$displayLabelInput\n                            .unbind(\"focus.ax5combobox\")\n                            .bind(\"focus.ax5combobox\", comboboxEvent.focus.bind(this, queIdx))\n                            .unbind(\"blur.ax5combobox\")\n                            .bind(\"blur.ax5combobox\", comboboxEvent.blur.bind(this, queIdx))\n                            .unbind('keyup.ax5combobox')\n                            .bind('keyup.ax5combobox', comboboxEvent.keyUp.bind(this, queIdx))\n                            .unbind(\"keydown.ax5combobox\")\n                            .bind(\"keydown.ax5combobox\", comboboxEvent.keyDown.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n\n                        item.$select\n                            .unbind('change.ax5combobox')\n                            .bind('change.ax5combobox', comboboxEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                })();\n\n                var\n                    comboboxConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, comboboxConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5combobox-id\");\n                if (!item.id) {\n                    item.id = 'ax5combobox-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5combobox-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5combobox\");\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5combobox-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindComboboxTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindComboboxTarget.call(this, queIdx);\n                }\n\n                comboboxConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of combobox\n             * @method ax5combobox.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5combobox}\n             */\n            this.open = (function () {\n                var onExpand = function (item) {\n                    item.onExpand.call({\n                        self: this,\n                        item: item\n                    }, (function (O) {\n                        if (this.waitOptionsCallback) {\n                            var data = {};\n                            var item = this.queue[this.activecomboboxQueueIndex];\n\n                            /// 현재 selected 검증후 처리\n                            (function (item, O) {\n                                var optionsMap = {};\n                                O.options.forEach(function (_O, _OIndex) {\n                                    _O[\"@index\"] = _OIndex;\n                                    optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                                });\n                                if (U.isArray(item.selected)) {\n                                    item.selected.forEach(function (_O) {\n                                        if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                            O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                        }\n                                    });\n                                }\n                            })(item, O);\n\n                            item.options = syncComboboxOptions.call(this, this.activecomboboxQueueIndex, O.options);\n                            printLabel.call(this, this.activecomboboxQueueIndex);\n                            alignComboboxDisplay.call(this);\n\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.id = item.id;\n                            data.theme = item.theme;\n                            data.size = \"ax5combobox-option-group-\" + item.size;\n                            data.multiple = item.multiple;\n                            data.lang = item.lang;\n                            data.options = item.options;\n                            /*\n                             this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                             ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)\n                             ));\n                             */\n                            this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                                COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)\n                            ));\n                        }\n                    }).bind(this));\n                };\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open combobox from the outside\n                     */\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {}, focusTop, selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activecomboboxOptionGroup) {\n                        if (this.activecomboboxQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout((function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }).bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5combobox-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-combobox-option-group-opened\", \"true\");\n\n                    if (item.onExpand) {\n                        // onExpand 인 경우 UI 대기모드 추가\n                        data.waitOptions = true;\n                    }\n                    data.options = U.filter(item.options, function () {\n                        return !this.hide;\n                    });\n\n                    //this.activecomboboxOptionGroup = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"optionGroup\"].call(this, item.columnKeys), data));\n                    this.activecomboboxOptionGroup = jQuery(COMBOBOX.tmpl.get.call(this, \"optionGroup\", data, item.columnKeys));\n                    //this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)));\n                    this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                        COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)\n                    ));\n                    this.activecomboboxQueueIndex = queIdx;\n\n                    alignComboboxOptionGroup.call(this, \"append\"); // alignComboboxOptionGroup 에서 body append\n                    jQuery(window).bind(\"resize.ax5combobox-\" + this.instanceId, (function () {\n                        alignComboboxOptionGroup.call(this);\n                    }).bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activecomboboxOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activecomboboxOptionGroup.height() / 3;\n                            this.activecomboboxOptionGroup.find('[data-els=\"content\"]')\n                                .stop().animate({scrollTop: focusTop}, item.animateTime, 'swing', function () {\n                            });\n                        }\n                    }\n\n                    jQuery(window).bind(\"click.ax5combobox-\" + this.instanceId, (function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }).bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    // waitOption timer\n                    if (item.onExpand) {\n                        this.waitOptionsCallback = true;\n                        onExpand.call(this, item);\n                    }\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5combobox.update\n             * @param {(Object|String)} item\n             * @returns {ax5combobox}\n             */\n            this.update = function (_item) {\n                this.bind(_item);\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.setValue\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _value\n             * @param {Boolean} [_selected]\n             * @return {ax5combobox}\n             * @example\n             * ```js\n             * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), \"1\");\n             * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), [\"1\", \"2\"]);\n             * ```\n             */\n            this.setValue = function (_boundID, _value, _selected) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n\n                clearSelected.call(this, queIdx);\n\n                if (U.isArray(_value)) {\n                    var _values = U.map(_value, function () {\n                        return {value: this};\n                    });\n                    setOptionSelect.call(this, queIdx, _values, _selected || true, {noStateChange: true});\n                }\n                else if (U.isString(_value) || U.isNumber(_value)) {\n                    setOptionSelect.call(this, queIdx, {value: _value}, _selected || true, {noStateChange: true});\n                } else {\n                    printLabel.call(this, queIdx);\n                }\n\n                blurLabel.call(this, queIdx);\n                alignComboboxDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.setText\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _text\n             * @param {Boolean} [_selected]\n             * @returns {ax5combobox}\n             * @example\n             * ```js\n             * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), \"string\");\n             * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), [\"substring\", \"search\"]);\n             * ```\n             */\n            this.setText = function (_boundID, _text, _selected) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n                clearSelected.call(this, queIdx);\n                setOptionSelect.call(this, queIdx, _text, true, {noStateChange: true});\n                blurLabel.call(this, queIdx);\n                alignComboboxDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.getSelectedOption\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {Array}\n             */\n            this.getSelectedOption = function (_boundID) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n                return U.deepCopy(this.queue[queIdx].selected);\n            };\n\n            /**\n             * @method ax5combobox.close\n             * @returns {ax5combobox}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activecomboboxOptionGroup) return this;\n\n                item = this.queue[this.activecomboboxQueueIndex];\n                item.optionFocusIndex = -1;\n                item.$display.removeAttr(\"data-combobox-option-group-opened\").trigger(\"focus\");\n                item.$displayLabel.attr(\"contentEditable\", \"false\");\n\n                this.activecomboboxOptionGroup.addClass(\"destroy\");\n\n\n                jQuery(window)\n                    .unbind(\"resize.ax5combobox-\" + this.instanceId)\n                    .unbind(\"click.ax5combobox-\" + this.instanceId)\n                    .unbind(\"keyup.ax5combobox-\" + this.instanceId);\n\n                this.closeTimer = setTimeout((function () {\n                    if (this.activecomboboxOptionGroup) this.activecomboboxOptionGroup.remove();\n                    this.activecomboboxOptionGroup = null;\n                    this.activecomboboxQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"close\"\n                    });\n\n                }).bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.blur\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.blur = function (_boundID) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n\n                blurLabel.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.enable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.enable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disabled = false;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.removeAttr(\"disabled\");\n                        this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.removeAttr(\"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"enable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.disable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.disable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disabled = true;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                        this.queue[queIdx].$displayLabelInput.attr(\"disabled\", \"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"disable\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.align\n             */\n            this.align = function () {\n                alignComboboxDisplay.call(this);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5combobox;\n    })());\n\n    COMBOBOX = ax5.ui.combobox;\n})();\n\n/**\n * ax5combobox jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5combobox\n * @param {String} methodName\n * @param [arguments]\n * @param [arguments]\n * @example\n * ```html\n * <div data-ax5combobox=\"ax1\" data-ax5combobox-config='{\n *  multiple: true,\n *  editable: true,\n *  size: \"\",\n *  theme:\"\"\n *  }'></div>\n * <script>\n * jQuery('[data-ax5combobox=\"ax1\"]').ax5combobox();\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"getSelectedOption\");\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"setValue\", [\"string\", \"number\"]);\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"enable\");\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"disable\");\n * </script>\n * ```\n */\n\nax5.ui.combobox_instance = new ax5.ui.combobox();\njQuery.fn.ax5combobox = (function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.combobox_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.combobox_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.combobox_instance.setValue(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"setText\":\n                    return ax5.ui.combobox_instance.setText(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"getSelectedOption\":\n                    return ax5.ui.combobox_instance.getSelectedOption(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.combobox_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.combobox_instance.disable(this);\n                    break;\n                case \"blur\":\n                    return ax5.ui.combobox_instance.blur(this);\n                default:\n                    return this;\n            }\n        }\n        else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.combobox_instance.bind(config);\n            });\n        }\n        return this;\n    }\n})();\n","// ax5.ui.combobox.tmpl\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var optionGroup = function (columnKeys) {\n        return `\n            <div class=\"ax5combobox-option-group {{theme}} {{size}}\" data-ax5combobox-option-group=\"{{id}}\">\n                <div class=\"ax-combobox-body\">\n                    <div class=\"ax-combobox-option-group-content\" data-els=\"content\"></div>\n                </div>\n                <div class=\"ax-combobox-arrow\"></div> \n            </div>\n        `;\n    };\n\n    var comboboxDisplay = function (columnKeys) {\n        return `\n<div class=\"form-control {{formSize}} ax5combobox-display {{theme}}\" \ndata-ax5combobox-display=\"{{id}}\" data-ax5combobox-instance=\"{{instanceId}}\">\n    <div class=\"ax5combobox-display-table\" data-els=\"display-table\">\n        <div data-ax5combobox-display=\"label-holder\"> \n            <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}\n            data-ax5combobox-display=\"label\"\n            spellcheck=\"false\"><input type=\"text\"data-ax5combobox-display=\"input\" style=\"border:0px none;background: transparent;\" /></a>\n        </div>\n        <div data-ax5combobox-display=\"addon\"> \n            {{#multiple}}{{#reset}}\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\n            {{/reset}}{{/multiple}}\n            {{#icons}}\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\n            <span class=\"addon-icon-opened\">{{opened}}</span>\n            {{/icons}}\n            {{^icons}}\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\n            {{/icons}}\n        </div>\n    </div>\n</div>\n        `;\n    };\n\n    var formSelect = function (columnKeys) {\n        return `\n            <select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}}></select>\n        `;\n    };\n\n    var formSelectOptions = function (columnKeys) {\n        return `\n{{#selected}}\n<option value=\"{{${columnKeys.optionValue}}}\" selected=\"true\">{{${columnKeys.optionText}}}</option>\n{{/selected}}\n`;\n    };\n\n    var options = function (columnKeys) {\n        return `\n            {{#waitOptions}}\n                <div class=\"ax-combobox-option-item\">\n                        <div class=\"ax-combobox-option-item-holder\">\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\n                                {{{lang.loading}}}\n                            </span>\n                        </div>\n                    </div>\n            {{/waitOptions}}\n            {{^waitOptions}}\n                {{#options}}\n                    {{#optgroup}}\n                        <div class=\"ax-combobox-option-group\">\n                            <div class=\"ax-combobox-option-item-holder\">\n                                <span class=\"ax-combobox-option-group-label\">\n                                    {{{.}}}\n                                </span>\n                            </div>\n                            {{#options}}\n                            {{^hide}}\n                            <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \n                            data-option-value=\"{{${columnKeys.optionValue}}}\" \n                            {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n                                <div class=\"ax-combobox-option-item-holder\">\n                                    {{#multiple}}\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\n                                        <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                                    </span>\n                                    {{/multiple}}\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{${columnKeys.optionText}}}</span>\n                                </div>\n                            </div>\n                            {{/hide}}\n                            {{/options}}\n                        </div>                            \n                    {{/optgroup}}\n                    {{^optgroup}}\n                    {{^hide}}\n                    <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{${columnKeys.optionValue}}}\" {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n                        <div class=\"ax-combobox-option-item-holder\">\n                            {{#multiple}}\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\n                                <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                            </span>\n                            {{/multiple}}\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{${columnKeys.optionText}}}</span>\n                        </div>\n                    </div>\n                    {{/hide}}\n                    {{/optgroup}}\n                {{/options}}\n                {{^options}}\n                    <div class=\"ax-combobox-option-item\">\n                        <div class=\"ax-combobox-option-item-holder\">\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\n                                {{{lang.noOptions}}}\n                            </span>\n                        </div>\n                    </div>\n                {{/options}}\n            {{/waitOptions}}\n        `;\n    };\n\n    var label = function (columnKeys) {\n        return `{{#selected}}<div tabindex=\"-1\" data-ax5combobox-selected-label=\"{{@i}}\" data-ax5combobox-selected-text=\"{{text}}\"><div data-ax5combobox-remove=\"true\" \ndata-ax5combobox-remove-index=\"{{@i}}\">{{{removeIcon}}}</div><span>{{text}}</span></div>{{/selected}}`;\n    };\n\n    COMBOBOX.tmpl = {\n        \"comboboxDisplay\": comboboxDisplay,\n        \"formSelect\": formSelect,\n        \"formSelectOptions\": formSelectOptions,\n        \"optionGroup\": optionGroup,\n        \"options\": options,\n        \"label\": label,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(COMBOBOX.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.combobox.util\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var nodeTypeProcessor = {\n        '1': function (queIdx, node, editable) {\n            var cfg = this.config;\n            var textNode = node;\n\n            if ($(node).find(\"span\").get(0)) {\n                textNode = $(node).find(\"span\").get(0);\n            }\n\n            var text = (textNode.textContent || textNode.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            var selectedIndex, option;\n            if (item.selected && item.selected.length > 0 && node.getAttribute(\"data-ax5combobox-selected-text\") == text) {\n                selectedIndex = node.getAttribute(\"data-ax5combobox-selected-label\");\n                option = item.selected[selectedIndex];\n                return {\n                    index: {\n                        gindex: option[\"@gindex\"],\n                        index: option[\"@index\"],\n                        value: option[cfg.columnKeys.optionValue]\n                    }\n                };\n            }\n            else if (!node.getAttribute(\"data-ax5combobox-selected-text\")) {\n                if (text != \"\") {\n                    if (editable) {\n                        return text;\n                    } else {\n                        var $option;\n                        if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                        if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                            return {\n                                index: {\n                                    gindex: $option.attr(\"data-option-group-index\"),\n                                    index: $option.attr(\"data-option-index\")\n                                }\n                            }\n                        } else {\n                            return (item.editable) ? text : undefined;\n                        }\n                    }\n                } else {\n                    return undefined;\n                }\n            }\n            else {\n                return text;\n            }\n        },\n        '3': function (queIdx, node, editable) {\n            var cfg = this.config;\n            var text = (node.textContent || node.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            if (text != \"\") {\n                if (editable) {\n                    return text;\n                } else {\n                    var $option;\n                    if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                    if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                        return {\n                            index: {\n                                gindex: $option.attr(\"data-option-group-index\"),\n                                index: $option.attr(\"data-option-index\")\n                            }\n                        }\n                    } else {\n                        return (item.editable) ? text : undefined;\n                    }\n                }\n            } else {\n                return undefined;\n            }\n        }\n    };\n\n    COMBOBOX.util = {\n        nodeTypeProcessor: nodeTypeProcessor\n    };\n})();","// ax5.ui.layout\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n\n    UI.addClass({\n        className: \"layout\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5layout\n         * @alias ax5.ui.layout\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * jQuery('[data-ax5layout=\"ax1\"]').ax5layout({\n         *     onResize: function () {\n         *     }\n         * });\n         *\n         * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"resize\", {\n         *     top: {height: 100},\n         *     bottom: 100,\n         *     left: 100,\n         *     right: 100\n         * });\n         * ```\n         */\n        var ax5layout = function () {\n            var self = this,\n                cfg,\n                ENM = {\n                    \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n                    \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n                    \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n                },\n                getMousePosition = function (e) {\n                    var mouseObj = ('changedTouches' in e.originalEvent) ? e.originalEvent.changedTouches[0] : e;\n                    return {\n                        clientX: mouseObj.clientX,\n                        clientY: mouseObj.clientY\n                    }\n                };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                splitter: {\n                    size: 4\n                },\n                autoResize: true\n            };\n            this.queue = [];\n\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.resizer = null;\n\n            cfg = this.config;\n\n            var\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n                    return true;\n                },\n                alignLayoutAll = function () {\n                    var i = this.queue.length;\n                    while (i--) {\n                        if (typeof this.queue[i].parentQueIdx === \"undefined\" && this.queue[i].autoResize) {\n                            alignLayout.call(this, i, null, \"windowResize\");\n                        }\n                    }\n                },\n                getDockPanelOuterSize = {\n                    \"width\": function (item, panel) {\n                        return (panel ? panel.__width + ((panel.split) ? item.splitter.size : 0) : 0);\n                    },\n                    \"height\": function (item, panel) {\n                        return (panel ? panel.__height + ((panel.split) ? item.splitter.size : 0) : 0);\n                    }\n                },\n                getPixel = function (size, parentSize) {\n                    if (size == \"*\") {\n                        return;\n                    }\n                    else if (U.right(size, 1) == \"%\") {\n                        return parentSize * U.number(size) / 100;\n                    }\n                    else {\n                        return Number(size);\n                    }\n                },\n                alignLayout = (function () {\n\n                    var beforeSetCSS = {\n                        \"split\": {\n                            \"horizontal\": function (item, panel, panelIndex) {\n                                if (panel.splitter) {\n                                    panel.__height = item.splitter.size;\n                                }\n                                else {\n                                    if (panelIndex == item.splitPanel.length - 1) {\n                                        if (item.splitPanel.asteriskLength == 0) {\n                                            panel.height = \"*\";\n                                            panel.__height = undefined;\n                                            item.splitPanel.asteriskLength++;\n                                        }\n                                        else {\n                                            if (panel.height == \"*\") {\n                                                item.splitPanel.asteriskLength++;\n                                            } else {\n                                                //panel.__height = getPixel(panel.height, item.targetDimension.height);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (panel.height == \"*\") {\n                                            item.splitPanel.asteriskLength++;\n                                        } else {\n                                            //panel.__height = getPixel(panel.height, item.targetDimension.height);\n                                        }\n                                    }\n                                }\n                            },\n                            \"vertical\": function (item, panel, panelIndex) {\n                                if (panel.splitter) {\n                                    panel.__width = item.splitter.size;\n                                }\n                                else {\n                                    if (panelIndex == item.splitPanel.length - 1) {\n                                        if (item.splitPanel.asteriskLength == 0) {\n                                            panel.width = \"*\";\n                                            panel.__width = undefined;\n                                            item.splitPanel.asteriskLength++;\n                                        } else {\n                                            if (panel.width == \"*\") {\n                                                item.splitPanel.asteriskLength++;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (panel.width == \"*\") {\n                                            item.splitPanel.asteriskLength++;\n                                        } else {\n                                            //panel.__width = getPixel(panel.width, item.targetDimension.width);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    var setCSS = {\n                        \"top\": function (item, panel) {\n                            panel.$target.css({height: panel.__height || 0});\n                            if (panel.split) {\n                                panel.$splitter.css({height: item.splitter.size, top: (panel.__height || 0)});\n                            }\n                        },\n                        \"bottom\": function (item, panel) {\n                            panel.$target.css({height: panel.__height || 0});\n                            if (panel.split) {\n                                panel.$splitter.css({height: item.splitter.size, bottom: (panel.__height || 0)});\n                            }\n                        },\n                        \"left\": function (item, panel) {\n                            var css = {\n                                width: panel.__width || 0,\n                                height: item.targetDimension.height\n                            };\n\n                            if (item.dockPanel.top) {\n                                css.height -= item.dockPanel.top.__height;\n                                css.top = item.dockPanel.top.__height;\n                                if (item.dockPanel.top.split) {\n                                    css.height -= item.splitter.size;\n                                    css.top += item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.bottom) {\n                                css.height -= item.dockPanel.bottom.__height;\n                                if (item.dockPanel.bottom.split) {\n                                    css.height -= item.splitter.size;\n                                }\n                            }\n\n                            panel.$target.css(css);\n\n                            if (panel.split) {\n                                panel.$splitter.css({width: item.splitter.size, height: css.height, top: css.top, left: css.width});\n                            }\n                        },\n                        \"right\": function (item, panel) {\n                            var css = {\n                                width: panel.__width || 0,\n                                height: item.targetDimension.height\n                            };\n\n                            if (item.dockPanel.top) {\n                                css.height -= item.dockPanel.top.__height;\n                                css.top = item.dockPanel.top.__height;\n                                if (item.dockPanel.top.split) {\n                                    css.height -= item.splitter.size;\n                                    css.top += item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.bottom) {\n                                css.height -= item.dockPanel.bottom.__height;\n                                if (item.dockPanel.bottom.split) {\n                                    css.height -= item.splitter.size;\n                                }\n                            }\n\n                            panel.$target.css(css);\n\n                            if (panel.split) {\n                                panel.$splitter.css({width: item.splitter.size, height: css.height, top: css.top, right: css.width});\n                            }\n                        },\n                        \"center\": function (item, panel) {\n                            var css = {\n                                width: item.targetDimension.width,\n                                height: item.targetDimension.height\n                            };\n\n                            if (item.dockPanel.top) {\n                                css.height -= item.dockPanel.top.__height || 0;\n                                css.top = item.dockPanel.top.__height || 0;\n                                if (item.dockPanel.top.split) {\n                                    css.height -= item.splitter.size;\n                                    css.top += item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.bottom) {\n                                css.height -= item.dockPanel.bottom.__height || 0;\n                                if (item.dockPanel.bottom.split) {\n                                    css.height -= item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.left) {\n                                css.width -= item.dockPanel.left.__width || 0;\n                                css.left = item.dockPanel.left.__width || 0;\n                                if (item.dockPanel.left.split) {\n                                    css.width -= item.splitter.size;\n                                    css.left += item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.right) {\n                                css.width -= item.dockPanel.right.__width || 0;\n                                if (item.dockPanel.right.split) {\n                                    css.width -= item.splitter.size;\n                                }\n                            }\n\n                            var minWidth = panel.minWidth || 0;\n                            var minHeight = panel.minHeight || 0;\n\n                            // 레이아웃의 최소 너비 높이를 주어 레이아웃 덕패널이 겹치는 일이 없게 합니다\n                            if (css.width < minWidth) {\n                                css.width = minWidth;\n                                item.$target.css({minWidth: minWidth + getDockPanelOuterSize[\"width\"](item.dockPanel.left, item.splitter.size) + getDockPanelOuterSize[\"width\"](item.dockPanel.right, item.splitter.size)});\n                            }\n                            if (css.height < minHeight) {\n                                css.height = minHeight;\n                                item.$target.css({minHeight: minHeight + getDockPanelOuterSize[\"height\"](item.dockPanel.top, item.splitter.size) + getDockPanelOuterSize[\"height\"](item.dockPanel.bottom, item.splitter.size)});\n                            }\n\n                            panel.$target.css(css);\n                        },\n                        \"split\": {\n                            \"horizontal\": function (item, panel, panelIndex, withoutAsteriskSize, windowResize) {\n                                var css = {\n                                    display: \"block\"\n                                };\n                                var prevPosition = (panelIndex) ? Number(item.splitPanel[panelIndex - 1].offsetEnd) : 0;\n                                if (panel.splitter) {\n                                    css.height = item.splitter.size;\n                                }\n                                else {\n                                    if (panel.height == \"*\" && (typeof panel.__height === \"undefined\" || windowResize)) {\n                                        // 남은 전체 공간을 사용\n                                        css.height = panel.__height = (item.targetDimension.height - withoutAsteriskSize) / item.splitPanel.asteriskLength;\n                                    }\n                                    else {\n                                        css.height = panel.__height || 0;\n                                    }\n                                }\n                                css.top = prevPosition;\n                                panel.offsetStart = prevPosition;\n                                panel.offsetEnd = Number(prevPosition) + Number(css.height);\n                                panel.$target.css(css);\n                            },\n                            \"vertical\": function (item, panel, panelIndex, withoutAsteriskSize, windowResize) {\n                                var css = {\n                                    display: \"block\"\n                                };\n                                var prevPosition = (panelIndex) ? Number(item.splitPanel[panelIndex - 1].offsetEnd) : 0;\n\n                                if (panel.splitter) {\n                                    css.width = item.splitter.size;\n                                }\n                                else {\n                                    if (panel.width == \"*\" && (typeof panel.__width === \"undefined\" || windowResize)) {\n                                        // 남은 전체 공간을 사용\n                                        css.width = panel.__width = (item.targetDimension.width - withoutAsteriskSize) / item.splitPanel.asteriskLength;\n                                    }\n                                    else {\n                                        css.width = panel.__width || 0;\n                                    }\n                                }\n                                css.left = prevPosition;\n                                panel.offsetStart = prevPosition;\n                                panel.offsetEnd = Number(prevPosition) + Number(css.width);\n\n                                panel.$target.css(css);\n                            }\n                        }\n                    };\n                    var layoutProcessor = {\n                        \"dock-panel\": function (item) {\n                            for (var panel in item.dockPanel) {\n                                if (item.dockPanel[panel].$target && item.dockPanel[panel].$target.get(0)) {\n                                    if (panel in setCSS) {\n                                        setCSS[panel].call(this, item, item.dockPanel[panel]);\n                                    }\n                                }\n                            }\n                        },\n                        \"split-panel\": function (item, windowResize) {\n                            //console.log(item.splitPanel);\n                            var withoutAsteriskSize;\n                            item.splitPanel.asteriskLength = 0;\n                            item.splitPanel.forEach(function (panel, panelIndex) {\n                                beforeSetCSS[\"split\"][item.orientation].call(this, item, panel, panelIndex);\n                            });\n\n                            if (item.orientation == \"horizontal\") {\n                                withoutAsteriskSize = U.sum(item.splitPanel, function (n) {\n                                    if (n.height != \"*\") return U.number(n.__height);\n                                });\n                            }\n                            else {\n                                withoutAsteriskSize = U.sum(item.splitPanel, function (n) {\n                                    if (n.width != \"*\") return U.number(n.__width);\n                                });\n                            }\n\n                            item.splitPanel.forEach(function (panel, panelIndex) {\n                                setCSS[\"split\"][item.orientation].call(this, item, panel, panelIndex, withoutAsteriskSize, windowResize);\n                            });\n                        }\n                    };\n                    var childResize = function (item) {\n                        var i = item.childQueIdxs.length;\n                        while (i--) {\n                            alignLayout.call(this, item.childQueIdxs[i]);\n                        }\n                    };\n\n                    return function (queIdx, callback, windowResize) {\n                        var item = this.queue[queIdx];\n\n                        // 레이아웃 타겟의 CSS속성을 미리 저장해 둡니다. 왜? 패널별로 크기 계산 할 때 쓰려고\n                        item.targetDimension = {\n                            height: item.$target.innerHeight(),\n                            width: item.$target.innerWidth()\n                        };\n\n                        if (item.layout in layoutProcessor) {\n                            layoutProcessor[item.layout].call(this, item, windowResize);\n                        }\n\n                        if (item.childQueIdxs) childResize.call(this, item, windowResize);\n                        if (item.onResize) {\n                            setTimeout((function () {\n                                this.onResize.call(this, this);\n                            }).bind(item), 1)\n\n                        }\n                        if (callback) {\n                            callback.call(item, item);\n                        }\n                    }\n                })(),\n                resizeSplitter = {\n                    \"on\": function (queIdx, panel, $splitter) {\n                        var item = this.queue[queIdx];\n                        var splitterOffset = $splitter.position();\n                        var splitterBox = {\n                            width: $splitter.width(), height: $splitter.height()\n                        };\n                        var getResizerPosition = {\n                            \"left\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent) ? e.originalEvent.changedTouches[0] : e;\n\n                                panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n                                var minWidth = panel.minWidth || 0;\n                                var maxWidth = panel.maxWidth || (item.targetDimension.width - getDockPanelOuterSize[\"width\"](item, item.dockPanel.left) - getDockPanelOuterSize[\"width\"](item, item.dockPanel.right));\n\n                                if (panel.__width + panel.__da < minWidth) {\n                                    panel.__da = -panel.__width + minWidth;\n                                }\n                                else if (maxWidth < panel.__width + panel.__da) {\n                                    panel.__da = maxWidth - panel.__width;\n                                }\n                                return {left: panel.$splitter.position().left + panel.__da};\n                            },\n                            \"right\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent) ? e.originalEvent.changedTouches[0] : e;\n\n                                panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n                                var minWidth = panel.minWidth || 0;\n                                var maxWidth = panel.maxWidth || (item.targetDimension.width - getDockPanelOuterSize[\"width\"](item, item.dockPanel.left) - getDockPanelOuterSize[\"width\"](item, item.dockPanel.right));\n\n                                if (panel.__width - panel.__da < minWidth) {\n                                    panel.__da = panel.__width - minWidth;\n                                }\n                                else if (maxWidth < panel.__width - panel.__da) {\n                                    panel.__da = -maxWidth + panel.__width;\n                                }\n                                return {left: panel.$splitter.position().left + panel.__da};\n                            },\n                            \"top\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent) ? e.originalEvent.changedTouches[0] : e;\n\n                                panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n                                var minHeight = panel.minHeight || 0;\n                                var maxHeight = panel.maxHeight || (item.targetDimension.height - getDockPanelOuterSize[\"height\"](item, item.dockPanel.top) - getDockPanelOuterSize[\"height\"](item, item.dockPanel.bottom));\n\n                                if (panel.__height + panel.__da < minHeight) {\n                                    panel.__da = -panel.__height + minHeight;\n                                }\n                                else if (maxHeight < panel.__height + panel.__da) {\n                                    panel.__da = maxHeight - panel.__height;\n                                }\n                                return {top: panel.$splitter.position().top + panel.__da};\n                            },\n                            \"bottom\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent) ? e.originalEvent.changedTouches[0] : e;\n\n                                panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n                                var minHeight = panel.minHeight || 0;\n                                var maxHeight = panel.maxHeight || (item.targetDimension.height - getDockPanelOuterSize[\"height\"](item, item.dockPanel.top) - getDockPanelOuterSize[\"height\"](item, item.dockPanel.bottom));\n\n                                if (panel.__height - panel.__da < minHeight) {\n                                    panel.__da = panel.__height - minHeight;\n                                }\n                                else if (maxHeight < panel.__height - panel.__da) {\n                                    panel.__da = -maxHeight + panel.__height;\n                                }\n                                return {top: panel.$splitter.position().top + panel.__da};\n                            },\n                            \"split\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent) ? e.originalEvent.changedTouches[0] : e;\n\n                                if (item.orientation == \"horizontal\") {\n                                    panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n\n                                    var prevPanel = item.splitPanel[panel.panelIndex - 1];\n                                    var nextPanel = item.splitPanel[panel.panelIndex + 1];\n\n                                    var prePanelMinHeight = prevPanel.minHeight || 0;\n                                    var nextPanelMinHeight = nextPanel.minHeight || 0;\n\n                                    if (panel.offsetStart + panel.__da < prevPanel.offsetStart + prePanelMinHeight) {\n                                        panel.__da = prevPanel.offsetStart - panel.offsetStart + prePanelMinHeight;\n                                    }\n                                    else if (panel.offsetStart + panel.__da > nextPanel.offsetEnd - nextPanelMinHeight) {\n                                        panel.__da = nextPanel.offsetEnd - panel.offsetEnd - nextPanelMinHeight;\n                                    }\n\n                                    return {top: panel.$target.position().top + panel.__da};\n                                }\n                                else {\n                                    /// todo : min & max 범위 정하기\n                                    panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n\n                                    var prevPanel = item.splitPanel[panel.panelIndex - 1];\n                                    var nextPanel = item.splitPanel[panel.panelIndex + 1];\n                                    var prePanelMinWidth = prevPanel.minWidth || 0;\n                                    var nextPanelMinWidth = nextPanel.minWidth || 0;\n\n                                    if (panel.offsetStart + panel.__da < prevPanel.offsetStart + prePanelMinWidth) {\n                                        panel.__da = prevPanel.offsetStart - panel.offsetStart + prePanelMinWidth;\n                                    }\n                                    else if (panel.offsetStart + panel.__da > nextPanel.offsetEnd - nextPanelMinWidth) {\n                                        panel.__da = nextPanel.offsetEnd - panel.offsetEnd - nextPanelMinWidth;\n                                    }\n                                    return {left: Number(panel.$target.position().left) + Number(panel.__da)};\n                                }\n                            }\n                        };\n                        panel.__da = 0; // 패널의 변화량\n\n                        jQuery(document.body)\n                            .bind(ENM[\"mousemove\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                                if (!self.resizer) {\n\n                                    self.resizer = jQuery('<div class=\"ax5layout-resizer panel-' + (panel.resizerType) + '\" ondragstart=\"return false;\"></div>');\n                                    self.resizer.css({\n                                        left: splitterOffset.left,\n                                        top: splitterOffset.top,\n                                        width: splitterBox.width,\n                                        height: splitterBox.height\n                                    });\n                                    item.$target.append(self.resizer);\n                                }\n                                self.resizer.css(getResizerPosition[panel.resizerType](e));\n                            })\n                            .bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                                resizeSplitter.off.call(self, queIdx, panel, $splitter);\n                            })\n                            .bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                                resizeSplitter.off.call(self, queIdx, panel, $splitter);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n\n                    },\n                    \"off\": function (queIdx, panel, $splitter) {\n                        var item = this.queue[queIdx];\n                        var setPanelSize = {\n                            \"dock-panel\": {\n                                \"left\": function (queIdx, panel) {\n                                    panel.__width += panel.__da;\n                                },\n                                \"right\": function () {\n                                    panel.__width -= panel.__da;\n                                },\n                                \"top\": function () {\n                                    panel.__height += panel.__da;\n                                },\n                                \"bottom\": function () {\n                                    panel.__height -= panel.__da;\n                                }\n                            },\n                            \"split-panel\": {\n                                \"split\": function () {\n                                    if (item.orientation == \"horizontal\") {\n                                        // 앞과 뒤의 높이 조절\n                                        item.splitPanel[panel.panelIndex - 1].__height += panel.__da;\n                                        item.splitPanel[panel.panelIndex + 1].__height -= panel.__da;\n                                    }\n                                    else {\n                                        // 앞과 뒤의 높이 조절\n\n                                        item.splitPanel[panel.panelIndex - 1].__width += panel.__da;\n                                        item.splitPanel[panel.panelIndex + 1].__width -= panel.__da;\n                                    }\n                                }\n                            },\n                            \"tab-panel\": {}\n                        };\n\n                        if (self.resizer) {\n                            self.resizer.remove();\n                            self.resizer = null;\n                            setPanelSize[this.queue[queIdx].layout][panel.resizerType].call(this, queIdx, panel);\n                            alignLayout.call(this, queIdx);\n                        }\n\n                        jQuery(document.body)\n                            .unbind(ENM[\"mousemove\"] + \".ax5layout-\" + this.instanceId)\n                            .unbind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId)\n                            .unbind(\"mouseleave.ax5layout-\" + this.instanceId);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n\n                    }\n                },\n                tabControl = {\n                    \"open\": function (queIdx, layout, panelIndex) {\n                        if (layout.activePanelIndex != panelIndex) {\n                            layout.tabPanel[panelIndex].active = true;\n                            layout.tabPanel[layout.activePanelIndex].active = false;\n                            layout.$target.find('[data-tab-panel-label=\"' + panelIndex + '\"]').attr(\"data-tab-active\", \"true\");\n                            layout.$target.find('[data-tab-panel-label=\"' + layout.activePanelIndex + '\"]').removeAttr(\"data-tab-active\");\n                            layout.tabPanel[panelIndex].$target.attr(\"data-tab-active\", \"true\");\n                            layout.tabPanel[layout.activePanelIndex].$target.removeAttr(\"data-tab-active\");\n                            layout.activePanelIndex = panelIndex;\n\n                            if (layout.onOpenTab) {\n                                var that = {\n                                    '$target': layout.$target,\n                                    name: layout.name,\n                                    id: layout.id,\n                                    layout: layout.layout,\n                                    activePanelIndex: layout.activePanelIndex,\n                                    activePanel: layout.tabPanel[layout.activePanelIndex],\n                                    tabPanel: layout.tabPanel\n                                };\n                                layout.onOpenTab.call(that);\n                            }\n                        }\n                    }\n                },\n\n                getTabLabesTmpl = function () {\n                    return `\n<div data-tab-panel-label-holder=\"{{id}}\">\n    <div data-tab-panel-label-border=\"{{id}}\"></div>\n    <div data-tab-panel-label-table=\"{{id}}\">\n        <div data-tab-panel-aside=\"left\"></div>\n    {{#tabPanel}}\n        <div data-tab-panel-label=\"{{panelIndex}}\" data-tab-active=\"{{active}}\">\n            <div data-tab-label=\"{{panelIndex}}\">{{{label}}}</div>\n        </div>\n    {{/tabPanel}}\n        <div data-tab-panel-aside=\"right\"></div>\n    </div>\n</div>\n`;\n                },\n                bindLayoutTarget = (function () {\n\n                    var applyLayout = {\n                        \"dock-panel\": function (queIdx) {\n                            var item = this.queue[queIdx];\n                            item.dockPanel = {};\n                            item.$target.find('>[data-dock-panel]').each(function () {\n\n                                var panelInfo = {};\n                                (function (data) {\n                                    if (U.isObject(data) && !data.error) {\n                                        panelInfo = jQuery.extend(true, panelInfo, data);\n                                    }\n                                })(U.parseJson(this.getAttribute(\"data-dock-panel\"), true));\n\n                                if ('dock' in panelInfo) {\n                                    panelInfo.$target = jQuery(this);\n                                    panelInfo.$target.addClass(\"dock-panel-\" + panelInfo.dock);\n\n                                    if (panelInfo.split = (panelInfo.split && panelInfo.split.toString() == \"true\")) {\n                                        panelInfo.$splitter = jQuery('<div data-splitter=\"\" class=\"dock-panel-' + panelInfo.dock + '\"></div>');\n                                        panelInfo.$splitter\n                                            .bind(ENM[\"mousedown\"], function (e) {\n                                                panelInfo.mousePosition = getMousePosition(e);\n                                                resizeSplitter.on.call(self, queIdx, panelInfo, panelInfo.$splitter);\n                                            })\n                                            .bind(\"dragstart\", function (e) {\n                                                U.stopEvent(e);\n                                                return false;\n                                            });\n                                        item.$target.append(panelInfo.$splitter);\n                                    }\n\n                                    if (panelInfo.dock == \"top\" || panelInfo.dock == \"bottom\") {\n                                        panelInfo.__height = getPixel(panelInfo.height, item.targetDimension.height);\n                                    }\n                                    else {\n                                        panelInfo.__width = getPixel(panelInfo.width, item.targetDimension.width);\n                                    }\n                                    panelInfo.resizerType = panelInfo.dock;\n                                    item.dockPanel[panelInfo.dock] = panelInfo;\n                                }\n                            });\n\n                        },\n                        \"split-panel\": function (queIdx) {\n                            var item = this.queue[queIdx];\n                            item.splitPanel = [];\n                            item.$target.find('>[data-split-panel], >[data-splitter]').each(function (ELIndex) {\n\n                                var panelInfo = {};\n                                (function (data) {\n                                    if (U.isObject(data) && !data.error) {\n                                        panelInfo = jQuery.extend(true, panelInfo, data);\n                                    }\n                                })(U.parseJson(this.getAttribute(\"data-split-panel\") || this.getAttribute(\"data-splitter\"), true));\n\n                                panelInfo.$target = jQuery(this);\n                                panelInfo.$target\n                                    .addClass(\"split-panel-\" + item.orientation);\n                                panelInfo.panelIndex = ELIndex;\n\n                                if (this.getAttribute(\"data-splitter\")) {\n\n                                    panelInfo.splitter = true;\n                                    panelInfo.$target\n                                        .bind(ENM[\"mousedown\"], function (e) {\n                                            if (panelInfo.panelIndex > 0 && panelInfo.panelIndex < item.splitPanel.length - 1) {\n                                                panelInfo.mousePosition = getMousePosition(e);\n                                                resizeSplitter.on.call(self, queIdx, panelInfo, panelInfo.$target);\n                                            }\n                                        })\n                                        .bind(\"dragstart\", function (e) {\n                                            U.stopEvent(e);\n                                            return false;\n                                        });\n                                    panelInfo.resizerType = \"split\";\n\n                                } else {\n\n                                    if (item.orientation == \"horizontal\") {\n                                        panelInfo.__height = getPixel(panelInfo.height, item.targetDimension.height);\n                                    }\n                                    else {\n                                        item.orientation = \"vertical\";\n                                        panelInfo.__width = getPixel(panelInfo.width, item.targetDimension.width);\n                                    }\n\n                                }\n\n                                item.splitPanel.push(panelInfo);\n                            });\n                        },\n                        \"tab-panel\": function (queIdx) {\n                            var item = this.queue[queIdx];\n\n                            var hasActivePanel = false;\n                            var activePanelIndex = -1;\n                            item.tabPanel = [];\n                            item.$target.find('>[data-tab-panel]').each(function (ELIndex) {\n                                var panelInfo = {};\n                                (function (data) {\n                                    if (U.isObject(data) && !data.error) {\n                                        panelInfo = jQuery.extend(true, panelInfo, data);\n                                    }\n                                })(U.parseJson(this.getAttribute(\"data-tab-panel\"), true));\n\n                                if (hasActivePanel) {\n                                    panelInfo.active = false;\n                                }\n\n                                panelInfo.$target = jQuery(this);\n\n                                if (panelInfo.active && panelInfo.active != \"false\") {\n                                    hasActivePanel = true;\n                                    item.activePanelIndex = ELIndex;\n                                    panelInfo.$target.attr(\"data-tab-active\", \"true\");\n                                }\n\n                                panelInfo.panelIndex = ELIndex;\n                                item.tabPanel.push(panelInfo);\n                            });\n\n                            if (!hasActivePanel) {\n                                item.tabPanel[0].active = true;\n                                item.tabPanel[0].$target.attr(\"data-tab-active\", \"true\");\n                                item.activePanelIndex = 0;\n                            }\n\n                            // make tabLabel\n                            item.$target.append(jQuery(ax5.mustache.render(getTabLabesTmpl.call(this, queIdx), item)));\n                            item.$target.on(\"click\", '[data-tab-panel-label]', function (e) {\n                                var index = this.getAttribute(\"data-tab-panel-label\");\n                                tabControl.open.call(self, queIdx, item, index);\n                            });\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n\n                        // 레이아웃 타겟의 CSS속성을 미리 저장해 둡니다. 왜? 패널별로 크기 계산 할 때 쓰려고\n                        item.targetDimension = {\n                            height: item.$target.innerHeight(),\n                            width: item.$target.innerWidth()\n                        };\n\n                        // 부모 컨테이너가 ax5layout인지 판단 필요.\n                        if (item.$target.parents(\"[data-ax5layout]\").get(0)) {\n                            hooksResizeLayout.call(\n                                this,\n                                item.$target.parents(\"[data-ax5layout]\").get(0),\n                                queIdx\n                            );\n                        }\n\n                        if (item.layout in applyLayout) {\n                            applyLayout[item.layout].call(this, queIdx);\n                        }\n                        alignLayout.call(this, queIdx);\n                    }\n                })(),\n                getQueIdx = function (boundID) {\n                    if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-ax5layout-id\");\n                    }\n                    if (!U.isString(boundID)) {\n                        //console.log(ax5.info.getError(\"ax5layout\", \"402\", \"getQueIdx\"));\n                        return -1;\n                    }\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                },\n                hooksResizeLayout = function (boundID, childQueIdx) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (!this.queue[queIdx].childQueIdxs) this.queue[queIdx].childQueIdxs = [];\n                    this.queue[queIdx].childQueIdxs.push(childQueIdx);\n                    this.queue[childQueIdx].parentQueIdx = queIdx;\n                };\n/// private end\n            /**\n             * Preferences of layout UI\n             * @method ax5layout.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.animateTime=250]\n             * @param {Object} [config.splitter]\n             * @param {Number} [config.splitter.size=4]\n             * @param {Boolean} [config.autoResize=true]\n             * @returns {ax5layout}\n             * @example\n             * ```js\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                jQuery(window).bind(\"resize.ax5layout-\" + this.instanceId, (function () {\n                    alignLayoutAll.call(this);\n                }).bind(this));\n            };\n\n            /**\n             * @method ax5layout.bind\n             * @param {Object} item\n             * @param {String} [item.layout]\n             * @param {String} [item.theme]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @param {Object} [item.splitter]\n             * @param {Number} [item.splitter.size=4]\n             * @param {Boolean} [item.autoResize=true]\n             * @returns {ax5layout}\n             */\n            this.bind = function (item) {\n                var\n                    UIConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, UIConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5layout-id\");\n                if (!item.id) {\n                    item.id = 'ax5layout-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5layout-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5layout\");\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindLayoutTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindLayoutTarget.call(this, queIdx);\n                }\n\n                UIConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * @method ax5layout.align\n             * @param boundID\n             * @param {Function} [callback]\n             * @param {String} [windowResize]\n             * @returns {ax5layout}\n             */\n            this.align = function (boundID, windowResize) {\n                var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n\n                if (queIdx === -1) {\n                    var i = this.queue.length;\n                    while (i--) {\n                        alignLayout.call(this, i, null, windowResize);\n                    }\n                } else {\n                    alignLayout.call(this, queIdx, null, windowResize);\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5layout.onResize\n             * @param boundID\n             * @param fn\n             * @returns {ax5layout}\n             */\n            this.onResize = function (boundID, fn) {\n                var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"402\", \"onResize\"));\n                    return;\n                }\n                this.queue[queIdx].onResize = fn;\n                return this;\n            };\n\n            /**\n             * @method ax5layout.resize\n             * @param boundID\n             * @param {Object} resizeOption\n             * @param {Function} [callback]\n             * @returns {ax5layout}\n             */\n            this.resize = (function () {\n\n                var resizeLayoutPanel = {\n                    \"dock-panel\": function (item, resizeOption) {\n                        [\"top\", \"bottom\", \"left\", \"right\"].forEach(function (dock) {\n                            if (resizeOption[dock] && item.dockPanel[dock]) {\n                                if (dock == \"top\" || dock == \"bottom\") {\n                                    item.dockPanel[dock].__height = (U.isObject(resizeOption[dock])) ? resizeOption[dock].height : resizeOption[dock];\n                                }\n                                else if (dock == \"left\" || dock == \"right\") {\n                                    item.dockPanel[dock].__width = (U.isObject(resizeOption[dock])) ? resizeOption[dock].width : resizeOption[dock];\n                                }\n                            }\n                        });\n                    },\n                    \"split-panel\": function () {\n\n                    },\n                    \"tab-panel\": function () {\n\n                    }\n                };\n\n                return function (boundID, resizeOption, callback) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        var i = this.queue.length;\n                        while (i--) {\n                            resizeLayoutPanel[this.queue[i].layout].call(this, this.queue[i], resizeOption);\n                            alignLayout.call(this, i, callback);\n                        }\n                    } else {\n                        if (this.queue[queIdx]) {\n                            resizeLayoutPanel[this.queue[queIdx].layout].call(this, this.queue[queIdx], resizeOption);\n                            alignLayout.call(this, queIdx, callback);\n                        }\n                    }\n\n                    return this;\n                };\n\n            })();\n\n            this.reset = (function () {\n\n                var resetLayoutPanel = {\n                    \"dock-panel\": function (item) {\n                        [\"top\", \"bottom\", \"left\", \"right\"].forEach(function (dock) {\n                            if (item.dockPanel[dock]) {\n                                if (dock == \"top\" || dock == \"bottom\") {\n                                    item.dockPanel[dock].__height = item.dockPanel[dock].height;\n                                }\n                                else if (dock == \"left\" || dock == \"right\") {\n                                    item.dockPanel[dock].__width = item.dockPanel[dock].width;\n                                }\n                            }\n                        });\n                    },\n                    \"split-panel\": function (item) {\n                        item.splitPanel.forEach(function (panel) {\n                            if (item.orientation == \"vertical\") {\n                                panel.__width = getPixel(panel.width, item.targetDimension.width);\n                            } else if (item.orientation == \"horizontal\") {\n                                panel.__height = getPixel(panel.height, item.targetDimension.height);\n                            }\n                        });\n                    },\n                    \"tab-panel\": function () {\n\n                    }\n                };\n\n                return function (boundID, callback) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n\n                    } else {\n                        resetLayoutPanel[this.queue[queIdx].layout].call(this, this.queue[queIdx]);\n                        alignLayout.call(this, queIdx, callback);\n                    }\n\n                    return this;\n                };\n\n            })();\n\n            this.hide = function () {\n\n            };\n\n            /**\n             * @method ax5layout.tabOpen\n             * @param boundID\n             * @param tabIndex\n             * @returns {ax5.ui.ax5layout}\n             */\n            this.tabOpen = (function () {\n                return function (boundID, tabIndex) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5layout\", \"402\", \"tabOpen\"));\n                        return;\n                    }\n\n                    tabControl.open.call(this, queIdx, this.queue[queIdx], tabIndex);\n                    return this;\n                }\n            })();\n\n            /// 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5layout;\n    })());\n})();\n\nax5.ui.layout_instance = new ax5.ui.layout();\n\n/**\n * ax5layout jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5layout\n * @param {String} methodName\n * @example\n * ```js\n * jQuery('[data-ax5layout=\"ax1\"]').ax5layout();\n * ```\n */\n\njQuery.fn.ax5layout = (function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"align\":\n                    return ax5.ui.layout_instance.align(this, arguments[1]);\n                    break;\n                case \"resize\":\n                    return ax5.ui.layout_instance.resize(this, arguments[1], arguments[2]);\n                    break;\n                case \"reset\":\n                    return ax5.ui.layout_instance.reset(this, arguments[1]);\n                    break;\n                case \"hide\":\n                    return ax5.ui.layout_instance.hide(this, arguments[1]);\n                    break;\n                case \"onResize\":\n                    return ax5.ui.layout_instance.onResize(this, arguments[1]);\n                    break;\n                case \"tabOpen\":\n                    return ax5.ui.layout_instance.tabOpen(this, arguments[1]);\n                    break;\n                default:\n                    return this;\n            }\n        }\n        else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.layout_instance.bind(config);\n            });\n        }\n        return this;\n    }\n})();","// ax5.ui.binder\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n\n    UI.addClass({\n        className: \"binder\",\n        version: \"1.3.66\"\n    }, (function () {\n\n        /**\n         * @class ax5binder\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var obj = {\n         *     name: \"Thomas Jang\",\n         *     alias: \"tom\",\n         *     tel: \"010-8881-9137\",\n         *     email: \"tom@axisj.com\",\n         *     sex: \"M\",\n         *     hobby: [\"sport\"],\n         *     useYn: \"N\",\n         *     description: \"http://www.axisj.com\",\n         *     list: [\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 10,\n         *             cost: 100\n         *         },\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 20,\n         *             cost: 100\n         *         }\n         * ]\n         * };\n         *\n         * var myBinder = new ax5.ui.binder();\n         * myBinder.setModel(obj, $('#form-target'));\n         * ```\n         */\n        var ax5binder = function () {\n\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {};\n            cfg = this.config;\n\n            this.model = {};\n            this.tmpl = {};\n            this.view_target = null;\n            this.change_trigger = {};\n            this.click_trigger = {};\n            this.update_trigger = {};\n            this.onerror = null;\n\n            var\n                _toString = Object.prototype.toString,\n                get_type = function (O) {\n                    var typeName;\n                    if (O != null && O == O.window) {\n                        typeName = \"window\";\n                    }\n                    else if (!!(O && O.nodeType == 1)) {\n                        typeName = \"element\";\n                    }\n                    else if (!!(O && O.nodeType == 11)) {\n                        typeName = \"fragment\";\n                    }\n                    else if (typeof O === \"undefined\") {\n                        typeName = \"undefined\";\n                    }\n                    else if (_toString.call(O) == \"[object Object]\") {\n                        typeName = \"object\";\n                    }\n                    else if (_toString.call(O) == \"[object Array]\") {\n                        typeName = \"array\";\n                    }\n                    else if (_toString.call(O) == \"[object String]\") {\n                        typeName = \"string\";\n                    }\n                    else if (_toString.call(O) == \"[object Number]\") {\n                        typeName = \"number\";\n                    }\n                    else if (_toString.call(O) == \"[object NodeList]\") {\n                        typeName = \"nodelist\";\n                    }\n                    else if (typeof O === \"function\") {\n                        typeName = \"function\";\n                    }\n                    return typeName;\n                },\n                get_mix_path = function (dataPath, index, item_path) {\n                    return dataPath + \"[\" + index + \"]\" + ((item_path == \".\") ? \"\" : \".\" + item_path);\n                },\n                get_real_path = function (_dataPath) {\n                    var path = [];\n                    var _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n                    _path.forEach(function (n) {\n                        if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n                    });\n                    _path = null;\n                    return path.join(\"\");\n                    /*\n                    var path = [];\n                    var _path = [].concat(dataPath.split(/[\\.\\[\\]]/g));\n\n                    _path.forEach(function (n) {\n                        if (n !== \"\") path.push(n);\n                    });\n                    _path = null;\n                    return \"'\" + path.join(\"']['\") + \"'\";\n                    */\n                };\n\n            /**\n             * 바인딩할 자바스크립트 오브젝트로 제이쿼리로 검색된 HTML dom 엘리먼트 에 바인딩합니다. 바인딩된 모델을 반환합니다.\n             * @method ax5binder.setModel\n             * @param {Object} model\n             * @param {jQueryObject} [view_target]\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * var myModel = new ax5.ui.binder();\n             * myModel.setModel({}, $(\"#...\"));\n             * ```\n             */\n            this.setModel = function (model, view_target) {\n                this.model = model;\n                if (!this.view_target && view_target) {\n                    this.view_target = view_target;\n                    this._binding();\n                }\n                else {\n                    this._binding(\"update\");\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 변경한다. value의 타입은 (String, Number, Array, Object)를 지원.\n             * @method ax5binder.set\n             * @param {String} dataPath\n             * @param {Object} value\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.set(\"name\", \"Seowoo\");\n             * myModel.set(\"obj.path\", {a:1});\n             * ```\n             */\n            this.set = function (dataPath, value) {\n                var _this = this, obj_type, i, this_type;\n\n                (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(this.model, value);\n                obj_type = get_type(value);\n\n                if (obj_type == \"object\") {\n                    for (var k in value) {\n                        this.set(dataPath + \".\" + k, value[k]);\n                    }\n                }\n                else if (obj_type == \"array\") {\n                    this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').each(function () {\n                        this_type = (this.type || \"\").toLowerCase();\n                        if (this_type == \"checkbox\" || this_type == \"radio\")\n                            _this.set_els_value(this, this.tagName.toLowerCase(), this_type, value, dataPath, \"change\");\n                    });\n                    i = value.length;\n                    while (i--) {\n                        this.set(dataPath + \"[\" + i + \"]\", value[i]);\n                    }\n                }\n                else {\n                    // apply data value to els\n                    this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').each(function () {\n                        _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath, \"change\");\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 반환한다. data_path 가 없으면 전체 Object를 반환한다.\n             * @method ax5binder.get\n             * @param dataPath\n             * @returns {*}\n             */\n            this.get = function (dataPath) {\n                if (typeof dataPath == \"undefined\") {\n                    return this.model;\n                }\n                else {\n                    return (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                }\n            };\n\n\n            /**\n             * data_path에 값이 변경되는 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onChange\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onChange(\"name\", function () {\n             *       console.log(this);\n             *       // el: domElement - 변경이 발생한 엘리먼트, 엘리먼트로 부터 다양한 속성을 추출할 수 있다.\n             *       // jquery : jQueryObject\n             *       // tagname: \"input\"\n             *       // value: \"changed value\"\n             *       console.log(this.el.id);\n             *   });\n             *   myModel.onChange(\"*\", function (n) {\n             *       console.log(n);\n             *       // console.log(this); 와 동일\n             *   });\n             * ```\n             */\n            this.onChange = function (dataPath, callback) {\n                this.change_trigger[dataPath || \"*\"] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 속성이 부여된 엘리먼트 하위에 태그중에 data-ax-repeat-click 속성을 가진 아이템에 대해 클릭 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onClick\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onclick(\"list\", function () {\n             *       console.log(this);\n             *       // el: domElement\n             *       // jquery: jQueryObject\n             *       // item: Object - repeat item\n             *       // item_index: \"0\" - index of item\n             *       // item_path: \"list[0]\" - repeat data_path\n             *       // repeat_path: \"list\"\n             *       // tagname: \"button\"\n             *       // value: \"add\"\n             *   });\n             * ```\n             */\n            this.onClick = function (dataPath, callback) {\n                this.click_trigger[dataPath] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위아이템을 추가합니다.\n             * @method ax5binder.add\n             * @param dataPath\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.add(\"list\", {a:1});\n             * ```\n             */\n            this.add = function (dataPath, item) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                item['@i'] = list.length;\n                item['@r'] = list.length;\n                item.__ADDED__ = true;\n                (Function(\"val\", \"this\" + get_real_path(dataPath) + \".push(val);\")).call(this.model, item);\n\n                // 다중 템플릿 처리\n                for (var t in tmpl) {\n                    var fragdom = $(ax5.mustache.render(tmpl[t].content, item));\n                    fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                    fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                    this.bind_event_tmpl(fragdom, dataPath);\n                    tmpl[t].container.append(fragdom);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl       : tmpl,\n                        list       : list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 제거합니다. 단! 이 때 ADDED 값을 가진 아이템은 제거하고 그렇지 않은 아이템은 DELETED 값을 아이템에 추가합니다.\n             * @method ax5binder.remove\n             * @param dataPath\n             * @param index\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.remove(\"list\", 0);\n             * ```\n             */\n            this.remove = function (dataPath, index) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index == \"undefined\") index = list.length - 1;\n                var remove_item = list[index];\n                if (remove_item.__ADDED__) {\n                    list.splice(index, 1);\n                }\n                else {\n                    list[index].__DELETED__ = true;\n                }\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl       : tmpl,\n                        list       : list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 교체합니다.\n             * @method ax5binder.update\n             * @param dataPath\n             * @param index\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.update(\"list\", 0, {a:1});\n             * ```\n             */\n            this.update = function (dataPath, index, item) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index != \"undefined\" && item) list.splice(index, 1, item);\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl       : tmpl,\n                        list       : list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5binder.childAdd\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_item\n             */\n            this.childAdd = function (dataPath, index, child_path, child_item) {\n                var _list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\")).call(this.model);\n                child_item.__ADDED__ = true;\n                list.push(child_item);\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * ax5binder.childRemove\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             */\n            this.childRemove = function (dataPath, index, child_path, child_index) {\n                var _list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\")).call(this.model);\n                var remove_item = list[child_index];\n                if (remove_item.__ADDED__) {\n                    list.splice(child_index, 1);\n                }\n                else {\n                    list[child_index].__DELETED__ = true;\n                }\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childUpdate\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             * @param child_item\n             */\n            this.childUpdate = function (dataPath, index, child_path, child_index, child_item) {\n                var _list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\")).call(this.model);\n                list[child_index] = child_item;\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childSet\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param value\n             * @returns {ax5binder}\n             */\n            this.childSet = function (dataPath, index, child_path, value) {\n                var _this = this, i;\n                (Function(\"val\", \"this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \" = val;\")).call(this.model, value);\n\n                // apply data value to els\n                this.view_target.find('[data-ax-repeat=\"' + (dataPath) + '\"]').find('[data-ax-repeat-i=\"' + index + '\"]').find('[data-ax-item-path=\"' + child_path + '\"]').each(function () {\n                    _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath + \"[\" + index + \"].\" + child_path);\n                });\n                return this;\n            };\n\n            /**\n             * @method ax5binder.onUpdate\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             *  this.model.onupdate(\"moderator\", function () {\n             *      $('#moderator-add').val('');\n             *      $moderator.find('[data-role-user-btn]')\n             *          .unbind(\"click\")\n             *          .bind(\"click\", role_user_btn_onclick);\n             *  });\n             * ```\n             */\n            this.onUpdate = function (dataPath, callback) {\n                this.update_trigger[dataPath] = callback;\n                return this;\n            };\n\n\n            this._binding = function (isupdate) {\n                var _this = this;\n\n                // apply data value to els\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this), dataPath = dom.attr(\"data-ax-path\"), this_type = (this.type || \"\").toLowerCase();\n\n                    var val;\n                    try {\n                        val = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + get_real_path(dataPath) + \"]\");\n                    }\n\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", dataPath);\n                });\n\n                if (typeof isupdate == \"undefined\") {\n                    // collect tmpl\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this), dataPath = dom.attr(\"data-ax-repeat\"), repeat_idx = dom.attr(\"data-ax-repeat-idx\");\n\n                        if (typeof _this.tmpl[dataPath] == \"undefined\") _this.tmpl[dataPath] = {};\n                        if (typeof repeat_idx != \"undefined\") {\n                            _this.tmpl[dataPath][repeat_idx] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        }\n                        else {\n                            _this.tmpl[dataPath][\"0\"] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        }\n                        //dom.empty().show();\n                        dom.empty();\n                    });\n                }\n                else {\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this);\n                        dom.empty().show();\n                    });\n                }\n\n                // binding event to els\n                this.view_target.find('[data-ax-path]').unbind(\"change.axbinder\").bind(\"change.axbinder\", function (e) {\n\n                    var\n                        i,\n                        hasItem = false,\n                        checked,\n                        new_value = [],\n                        dom = $(e.target),\n                        dataPath = dom.attr(\"data-ax-path\"),\n                        origin_value = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(_this.model),\n                        this_type = (this.type || \"\").toLowerCase(),\n                        value_type = get_type(origin_value),\n                        setAllow = true\n                        ;\n\n\n                    if (value_type == \"object\" || value_type == \"array\") {\n                        setAllow = false;\n                    }\n\n                    if (this_type == \"checkbox\") {\n                        // 동일한 체크박스가 여러개 인지 판단합니다.\n                        if (_this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').length > 1) {\n\n                            if (get_type(origin_value) != \"array\") {\n                                if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];\n                                else origin_value = [].concat(origin_value);\n                            }\n                            i = origin_value.length, hasItem = false, checked = this.checked;\n                            while (i--) {\n                                if (origin_value[i] == this.value) {\n                                    hasItem = true;\n                                }\n                            }\n\n                            if (checked) {\n                                if (!hasItem) origin_value.push(this.value);\n                            }\n                            else {\n                                i = origin_value.length;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        //hasItemIndex = i;\n                                    }\n                                    else {\n                                        new_value.push(origin_value[i]);\n                                    }\n                                }\n                                origin_value = new_value;\n                            }\n                        }\n                        else {\n                            origin_value = (this.checked) ? this.value : \"\";\n                        }\n\n                        (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(_this.model, origin_value);\n                        _this.change(dataPath, {\n                            el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                        });\n                    }\n                    else {\n                        if (setAllow) {\n                            (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(_this.model, this.value);\n                            _this.change(dataPath, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                            });\n                        }\n                    }\n\n                    dom.data(\"changedTime\", (new Date()).getTime());\n                });\n                /*\n                 this.view_target.find('[data-ax-path]').unbind(\"blur.axbinder\").bind(\"blur.axbinder\", function (e) {\n                 var dom = $(e.target);\n                 if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < (new Date()).getTime() - 10) dom.trigger(\"change\");\n                 });\n                 */\n\n                //_this.tmpl\n                var callback;\n                for (var tk in _this.tmpl) {\n                    for (var ix in _this.tmpl[tk]) {\n                        // console.log(_this.tmpl[tk][ix].content);\n                        this.print_tmpl(tk, _this.tmpl[tk][ix], \"isInit\");\n                    }\n\n                    if (callback = this.update_trigger[tk]) {\n                        var that = {\n                            repeat_path: tk,\n                            tmpl       : _this.tmpl[tk],\n                            list       : (Function(\"\", \"return this.\" + tk + \";\")).call(this.model)\n                        };\n                        callback.call(that, that);\n                    }\n                }\n            };\n\n            this.set_els_value = function (el, tagname, type, value, dataPath, callChange) {\n                if (typeof value === \"undefined\") value = [];\n                else value = [].concat(value);\n                var options, i;\n\n                if (tagname == \"input\") {\n                    if (type == \"checkbox\" || type == \"radio\") {\n                        i = value.length;\n                        var checked = false;\n                        try {\n                            if (i > 0) {\n                                while (i--) {\n                                    if (typeof value[i] !== \"undefined\" && el.value === value[i].toString()) {\n                                        checked = true;\n                                    }\n                                }\n                            }\n                        } catch (e) {\n                            console.log(e);\n                        }\n\n                        el.checked = checked;\n                    }\n                    else {\n                        el.value = value.join('');\n                    }\n                }\n                else if (tagname == \"select\") {\n                    options = el.options, i = options.length;\n                    var vi, option_matched = false;\n\n                    while (i--) {\n                        vi = value.length;\n                        while (vi--) {\n                            if (typeof value[vi] !== \"undefined\" && options[i].value === value[vi].toString()) {\n                                options[i].selected = true;\n                                option_matched = true;\n                                break;\n                            }\n                        }\n                        if (option_matched) break;\n                    }\n                    if (!option_matched) {\n                        if (options[0]) {\n                            options[0].selected = true;\n                            (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(this.model, options[0].value);\n                        }\n                        else {\n                            (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(this.model, \"\");\n                        }\n                    }\n\n                    if (window.AXSelect) { // AXISJ 사용가능\n                        $(typeof value !== \"undefined\" && el).bindSelectSetValue(value[value.length - 1]);\n                    }\n                }\n                else if (tagname == \"textarea\") {\n                    el.value = value.join('') || \"\";\n                }\n                else {\n                    if (el.innerText) {\n                        el.innerText = value.join(\"\");\n                    }\n                    else {\n                        el.innerHTML = value.join(\"\");\n                    }\n                }\n\n                if (callChange) {\n                    this.change(dataPath, {el: el, tagname: tagname, value: value});\n                }\n                return this;\n            };\n\n            this.change = function (dataPath, that) {\n                var callback = this.change_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n                if (dataPath != \"*\" && this.change_trigger[\"*\"]) {\n                    this.change_trigger[\"*\"].call(that, that);\n                }\n            };\n\n            this.click = function (dataPath, that) {\n                var callback = this.click_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n            };\n\n            this.sync_model = function () {\n\n            };\n\n            this.print_tmpl = function (dataPath, tmpl, isInit) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                if (list && get_type(list) == \"array\") {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        var item = list[i];\n                        if (jQuery.isPlainObject(item)) {\n                            item['@i'] = i;\n                            item['@r'] = i;\n                            if (i === 0) item['@first'] = true;\n                        }\n                        else {\n                            item = {\n                                \"@i\"    : i,\n                                \"@value\": item\n                            };\n                            if (i === 0) item['@first'] = true;\n                            console.log(item);\n                        }\n\n                        if (!item.__DELETED__) {\n                            var fragdom = $(ax5.mustache.render(tmpl.content, item));\n                            fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                            fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                            this.bind_event_tmpl(fragdom, dataPath);\n                            tmpl.container.append(fragdom);\n                        }\n                    }\n                }\n            };\n\n            this.bind_event_tmpl = function (target, dataPath) {\n                var _this = this, index = target.attr(\"data-ax-repeat-i\");\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n\n                target.find('[data-ax-repeat-click]').unbind(\"click.axbinder\").bind(\"click.axbinder\", function (e) {\n                    var target = ax5.util.findParentNode(e.target, function (el) {\n                        return el.getAttribute(\"data-ax-repeat-click\");\n                    });\n                    if (target) {\n                        var dom = $(target), value = dom.attr(\"data-ax-repeat-click\"), repeat_path = dom.attr(\"data-ax-repeat-path\");\n\n                        var that = {\n                            el         : target,\n                            jquery     : dom,\n                            tagname    : target.tagName.toLowerCase(),\n                            value      : value,\n                            repeat_path: dataPath,\n                            item       : list[index],\n                            item_index : index,\n                            item_path  : dataPath + \"[\" + index + \"]\"\n                        };\n                        _this.click(dataPath, that);\n                    }\n                });\n\n                // apply data value to els\n                target.find('[data-ax-item-path]').each(function () {\n                    var\n                        dom = $(this),\n                        item_path = dom.attr(\"data-ax-item-path\"),\n                        mix_path = get_mix_path(dataPath, index, item_path),\n                        val,\n                        this_type = (this.type || \"\").toLowerCase();\n\n                    try {\n                        val = (Function(\"\", \"return this.\" + mix_path + \";\")).call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + mix_path + \"]\");\n                    }\n                    //if (typeof val !== \"undefined\") _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val, mix_path);\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", mix_path);\n                });\n\n                // binding event to els\n                target.find('[data-ax-item-path]').unbind(\"change.axbinder\").bind(\"change.axbinder\", function (e) {\n                    var\n                        i,\n                        hasItem = false,\n                        checked,\n                        new_value = [],\n                        this_type = (this.type || \"\").toLowerCase(),\n                        dom = $(e.target),\n                        item_path = dom.attr(\"data-ax-item-path\"),\n                        mix_path = get_mix_path(dataPath, index, item_path),\n                        origin_value = (Function(\"\", \"return this.\" + mix_path + \";\")).call(_this.model),\n                        value_type = get_type(origin_value),\n                        setAllow = true\n                        ;\n\n                    if (value_type == \"object\" || value_type == \"array\") {\n                        setAllow = false;\n                    }\n\n                    if (this_type == \"checkbox\") {\n                        if (target.find('[data-ax-item-path=\"' + item_path + '\"]').length > 1) {\n                            if (get_type(origin_value) != \"array\") {\n                                if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];\n                                else origin_value = [].concat(origin_value);\n                            }\n                            i = origin_value.length, hasItem = false, checked = this.checked;\n                            while (i--) {\n                                if (origin_value[i] == this.value) {\n                                    hasItem = true;\n                                }\n                            }\n\n                            if (checked) {\n                                if (!hasItem) origin_value.push(this.value);\n                            }\n                            else {\n                                i = origin_value.length;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        //hasItemIndex = i;\n                                    }\n                                    else {\n                                        new_value.push(origin_value[i]);\n                                    }\n                                }\n                                origin_value = new_value;\n                            }\n                        }\n                        else {\n                            origin_value = (this.checked) ? this.value : \"\";\n                        }\n\n                        (Function(\"val\", \"this.\" + mix_path + \" = val;\")).call(_this.model, origin_value);\n                        _this.change(mix_path, {\n                            el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                        });\n                    }\n                    else {\n                        if (setAllow) {\n                            (Function(\"val\", \"this.\" + mix_path + \" = val;\")).call(_this.model, this.value);\n                            _this.change(mix_path, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                            });\n                        }\n                    }\n\n                    dom.data(\"changedTime\", (new Date()).getTime());\n                });\n                target.find('[data-ax-item-path]').unbind(\"blur.axbinder\").bind(\"blur.axbinder\", function (e) {\n                    var dom = $(e.target);\n                    if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < (new Date()).getTime() - 10) dom.trigger(\"change\");\n                });\n            };\n\n            /**\n             * @method ax5binder.focus\n             * @param dataPath\n             * @returns {ax5binder}\n             */\n            this.focus = function (dataPath) {\n                this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').focus();\n                //this.view_target.find('[data-ax-item-path=\"' + get_real_path(dataPath) + '\"]').focus();\n                return this;\n            };\n\n            /**\n             * @method ax5binder.validate\n             * @returns {*}\n             * @example\n             * ```html\n             * <input type=\"text\" data-ax-path=\"q\" data-ax-validate=\"required\" title=\"이름\" maxlength=\"8\" value=\"\"/>\n             * ```\n             * ```js\n             * var rs = myModel.validate(), _s;\n             * console.log(rs); // 결과를 체크 해보세요\n             * if(rs.error) {\n             *      _s = rs.error[0].jquery.attr(\"title\");\n             *      alert(\"\" + _s + \"(은)는 필수 입력사항입니다.\" + _s + \"(을)를 입력하세요\");\n             *      rs.error[0].el.focus();\n             *      return;\n             *  }\n             * ```\n             */\n            this.validate = function () {\n                var _this = this;\n                var errors = [];\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this), \n                        dataPath = dom.attr(\"data-ax-path\"), \n                        is_validate = dom.attr(\"data-ax-validate\"),\n                        pattern = dom.attr(\"pattern\");\n                    \n                    if (is_validate) {\n                        var val, _val, is_error;\n\n                        val = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(_this.model);\n                        if (typeof val === \"undefined\") val = \"\";\n                        _val = val.toString();\n                        is_error = false;\n\n                        if (is_validate == \"required\" && _val.trim() == \"\") {\n                            is_error = true;\n                        }\n                        else if(is_validate == \"pattern\"){\n                            is_error = !(new RegExp(pattern)).test(_val);\n                        }\n                        else if(is_validate == \"email\"){\n                            is_error = !(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/).test(_val);\n                        }\n                        else if (!(/\\D.?/g).test(is_validate) && _val.trim().length < is_validate.number()) {\n                            is_error = true;\n                        }\n\n                        if (is_error) {\n                            errors.push({\n                                type    : is_validate,\n                                dataPath: dataPath,\n                                el      : this,\n                                jquery  : dom,\n                                value   : val\n                            });\n                        }\n                    }\n                });\n                this.view_target.find('[data-ax-repeat-path]').each(function () {\n\n                    var dom = $(this),\n                        dataPath = dom.attr(\"data-ax-repeat-path\"),\n                        repeat_idx = dom.attr(\"data-ax-repeat-i\");\n\n                    dom.find('[data-ax-validate]').each(function () {\n                        var dom = $(this), is_validate = dom.attr(\"data-ax-validate\"), item_path = dom.attr(\"data-ax-item-path\");\n                        var val = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + repeat_idx + \"].\" + item_path + \";\")).call(_this.model);\n                        if (typeof val === \"undefined\") val = \"\";\n                        var _val = val.toString();\n\n                        if (is_validate) {\n                            var is_error = false;\n                            if (is_validate == \"required\" && _val.trim() == \"\") {\n                                is_error = true;\n                            }\n                            else if(is_validate == \"pattern\"){\n                                is_error = !(new RegExp(pattern)).test(_val);\n                            }\n                            else if(is_validate == \"email\"){\n                                is_error = !(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/).test(_val);\n                            }\n                            else if (!(/\\D.?/g).test(is_validate) && _val.trim().length < is_validate.number()) {\n                                is_error = true;\n                            }\n\n                            if (is_error) {\n                                errors.push({\n                                    type    : is_validate,\n                                    dataPath: dataPath,\n                                    el      : this,\n                                    jquery  : dom,\n                                    value   : val\n                                });\n                            }\n                        }\n                    });\n                });\n\n                if (errors.length > 0) {\n                    return {\n                        error: errors\n                    }\n                }\n                else {\n                    return {};\n                }\n\n            };\n\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n\n        };\n        return ax5binder;\n    })());\n\n})();","// ax5.ui.autocomplete\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var AUTOCOMPLETE;\n\n    UI.addClass({\n        className: \"autocomplete\",\n        version: \"1.3.66\"\n    }, (function () {\n        /**\n         * @class ax5autocomplete\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * options.push({value: \"1\", text: \"string\"});\n         * options.push({value: \"2\", text: \"number\"});\n         * options.push({value: \"3\", text: \"substr\"});\n         * options.push({value: \"4\", text: \"substring\"});\n         * options.push({value: \"5\", text: \"search\"});\n         * options.push({value: \"6\", text: \"parseInt\"});\n         * options.push({value: \"7\", text: \"toFixed\"});\n         * options.push({value: \"8\", text: \"min\"});\n         * options.push({value: \"9\", text: \"max\"});\n         * options.push({value: \"10\", text: \"장기영\"});\n         * options.push({value: \"11\", text: \"장서우\"});\n         * options.push({value: \"12\", text: \"이영희\"});\n         * options.push({value: \"13\", text: \"황인서\"});\n         * options.push({value: \"14\", text: \"황세진\"});\n         * options.push({value: \"15\", text: \"이서연\"});\n         * options.push({value: \"16\", text: \"액시스제이\"});\n         * options.push({value: \"17\", text: \"ax5\"});\n         * options.push({value: \"18\", text: \"ax5grid\"});\n         * options.push({value: \"19\", text: \"ax5combobox\"});\n         * options.push({value: \"20\", text: \"ax5autocomplete\"});\n         * options.push({value: \"21\", text: \"ax5binder\"});\n         * options.push({value: \"22\", text: \"ax5select\"});\n         * options.push({value: \"23\", text: \"ax5mask\"});\n         * options.push({value: \"24\", text: \"ax5toast\"});\n         * options.push({value: \"25\", text: \"ax5dialog\"});\n         * options.push({value: \"26\", text: \"ax5modal\"});\n\n         * var myUI = new ax5.ui.autocomplete({\n         *      theme: \"danger\",\n         *      removeIcon: '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>'\n         * });\n         * ```\n         */\n        var ax5autocomplete = function () {\n            var\n                self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                removeIcon: 'X',\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'Now Processing'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n\n            this.queue = [];\n            this.activeautocompleteOptionGroup = null;\n            this.activeautocompleteQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var\n                ctrlKeys = {\n                    \"18\": \"KEY_ALT\",\n                    //\"8\": \"KEY_BACKSPACE\",\n                    \"17\": \"KEY_CONTROL\",\n                    \"46\": \"KEY_DELETE\",\n                    \"40\": \"KEY_DOWN\",\n                    \"35\": \"KEY_END\",\n                    \"187\": \"KEY_EQUAL\",\n                    //\"27\": \"KEY_ESC\",\n                    \"36\": \"KEY_HOME\",\n                    \"45\": \"KEY_INSERT\",\n                    \"37\": \"KEY_LEFT\",\n                    \"189\": \"KEY_MINUS\",\n                    \"34\": \"KEY_PAGEDOWN\",\n                    \"33\": \"KEY_PAGEUP\",\n                    // \"190\": \"KEY_PERIOD\",\n                    //\"13\": \"KEY_RETURN\",\n                    \"39\": \"KEY_RIGHT\",\n                    \"16\": \"KEY_SHIFT\",\n                    // \"32\": \"KEY_SPACE\",\n                    \"9\": \"KEY_TAB\",\n                    \"38\": \"KEY_UP\",\n                    \"91\": \"KEY_WINDOW\"\n                    //\"107\" : \"NUMPAD_ADD\",\n                    //\"194\" : \"NUMPAD_COMMA\",\n                    //\"110\" : \"NUMPAD_DECIMAL\",\n                    //\"111\" : \"NUMPAD_DIVIDE\",\n                    //\"12\" : \"NUMPAD_EQUAL\",\n                    //\"106\" : \"NUMPAD_MULTIPLY\",\n                    //\"109\" : \"NUMPAD_SUBTRACT\"\n                },\n                onStateChanged = function (item, that) {\n                    if (item && item.onStateChanged) {\n                        item.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    if (that.state == \"changeValue\") {\n                        if (item && item.onChange) {\n                            item.onChange.call(that, that);\n                        }\n                        else if (this.onChange) {\n                            this.onChange.call(that, that);\n                        }\n                    }\n\n                    item = null;\n                    that = null;\n                    return true;\n                },\n                alignAutocompleteDisplay = function () {\n                    var i = this.queue.length, w;\n\n                    while (i--) {\n                        var item = this.queue[i];\n                        if (item.$display) {\n                            w = Math.max(item.$select.outerWidth(), U.number(item.minWidth));\n                            item.$display.css({\n                                \"min-width\": w\n                            });\n                            if (item.reset) {\n                                item.$display.find(\".addon-icon-reset\").css({\n                                    \"line-height\": this.queue[i].$display.height() + \"px\"\n                                });\n                            }\n\n                            // 높이조절 처리\n                            if (item.multiple) {\n                                var displayTableHeightAdjust = (function () {\n                                    return U.number(item.$display.css(\"border-top-width\")) + U.number(item.$display.css(\"border-bottom-width\"));\n                                }).call(this);\n                                item.$target.height('');\n                                item.$display.height('');\n\n                                var displayTableHeight = item.$displayTable.outerHeight();\n                                if (Math.abs(displayTableHeight - item.$target.height()) > displayTableHeightAdjust) {\n                                    item.$target.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n                                    item.$display.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n                                }\n                            }\n                        }\n                    }\n\n                    i = null;\n                    w = null;\n                    return this;\n                },\n                alignAutocompleteOptionGroup = function (append) {\n                    if (append && !this.activeautocompleteOptionGroup) return this;\n\n                    var item = this.queue[this.activeautocompleteQueueIndex],\n                        pos = {}, positionMargin = 0,\n                        dim = {}, pickerDim = {},\n                        pickerDirection;\n\n                    if (!item) return this;\n                    if (append) jQuery(document.body).append(this.activeautocompleteOptionGroup);\n\n                    pos = item.$target.offset();\n                    dim = {\n                        width: item.$target.outerWidth(),\n                        height: item.$target.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                        winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                        width: this.activeautocompleteOptionGroup.outerWidth(),\n                        height: this.activeautocompleteOptionGroup.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = item.direction;\n                    }\n\n                    if (append) {\n                        this.activeautocompleteOptionGroup\n                            .addClass(\"direction-\" + pickerDirection);\n                    }\n                    this.activeautocompleteOptionGroup\n                        .css((function () {\n                            if (pickerDirection == \"top\") {\n                                if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                                    var newTop = pos.top + pickerDim.height;\n                                    if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                        newTop = 0;\n                                    }\n                                    if (newTop < 0) {\n                                        newTop = 0;\n                                    }\n\n                                    return {\n                                        left: pos.left,\n                                        top: newTop,\n                                        width: dim.width\n                                    }\n                                }\n                                return {\n                                    left: pos.left,\n                                    top: pos.top + dim.height + 1,\n                                    width: dim.width\n                                }\n                            }\n                            else if (pickerDirection == \"bottom\") {\n                                return {\n                                    left: pos.left,\n                                    top: pos.top - pickerDim.height - 1,\n                                    width: dim.width\n                                }\n                            }\n                        }).call(this));\n                },\n                onBodyClick = function (e, target) {\n                    if (!this.activeautocompleteOptionGroup) return this;\n\n                    var\n                        item = this.queue[this.activeautocompleteQueueIndex],\n                        clickEl = \"display\"\n                        ;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-option-value\")) {\n                            clickEl = \"optionItem\";\n                            return true;\n                        }\n                        else if (item.$target.get(0) == target) {\n                            clickEl = \"display\";\n                            return true;\n                        }\n                    });\n\n                    if (!target) {\n                        this.close();\n                        return this;\n                    }\n                    else if (clickEl === \"optionItem\") {\n                        setSelected.call(this, item.id, {\n                            optionIndex: {\n                                index: target.getAttribute(\"data-option-index\")\n                            }\n                        }, undefined, \"optionItemClick\");\n                        alignAutocompleteDisplay.call(this);\n                        alignAutocompleteOptionGroup.call(this);\n                        if (!item.multiple) {\n                            this.close();\n                        }\n                    }\n                    else {\n\n                    }\n\n                    return this;\n                },\n\n                getLabel = function (queIdx) {\n                    var item = this.queue[queIdx];\n\n                    // 템플릿에 전달 해야할 데이터 선언\n                    var data = {};\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5autocomplete-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n                    data.lang = item.lang;\n                    data.options = item.options;\n                    data.selected = item.selected;\n                    data.hasSelected = (data.selected && data.selected.length > 0);\n                    data.removeIcon = item.removeIcon;\n\n                    return AUTOCOMPLETE.tmpl.get.call(this, \"label\", data, item.columnKeys);\n                },\n                syncLabel = function (queIdx) {\n                    var item = this.queue[queIdx];\n\n                    if (!item.multiple && item.selected && item.selected.length > 0) {\n                        item.selected = [].concat(item.selected[item.selected.length - 1]);\n                    }\n\n                    item.selected.forEach(function (n, nindex) {\n                        n[\"@index\"] = nindex;\n                    });\n\n                    item.$select.html(AUTOCOMPLETE.tmpl.get.call(this, \"formSelectOptions\", {\n                        selected: item.selected\n                    }, item.columnKeys));\n                },\n                printLabel = function (queIdx) {\n                    var item = this.queue[queIdx];\n\n                    item.$displayLabel.find('[data-ax5autocomplete-selected-label]').remove();\n                    item.$displayLabelInput.before(getLabel.call(this, queIdx));\n                },\n                focusLabel = function (queIdx) {\n                    if (this.queue[queIdx].disabled) return this;\n\n                    this.queue[queIdx].$displayLabel.trigger(\"focus\");\n                    this.queue[queIdx].$displayLabelInput.focus();\n                },\n                clearLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabelInput.val('');\n                },\n                blurLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabel.trigger(\"blur\");\n                },\n                onSearch = function (queIdx, searchWord) {\n                    if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                    var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n                    searchWord = searchWord.replace(regExp, \"\");\n\n                    this.queue[queIdx].waitOptions = true;\n                    this.queue[queIdx].onSearch.call({\n                        self: this,\n                        item: this.queue[queIdx],\n                        searchWord: searchWord\n                    }, (function (O) {\n\n                        var data = {};\n                        var item = this.queue[this.activeautocompleteQueueIndex];\n                        if (!item) return false;\n\n                        /// 현재 selected 검증후 처리\n                        (function (item, O) {\n                            var optionsMap = {};\n                            O.options.forEach(function (_O, _OIndex) {\n                                _O[\"@index\"] = _OIndex;\n                                _O[\"@findex\"] = _OIndex;\n                                optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                            });\n                            if (U.isArray(item.selected)) {\n                                item.selected.forEach(function (_O) {\n                                    if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                        O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                    }\n                                });\n                            }\n                        })(item, O);\n\n                        item.options = O.options;\n\n                        alignAutocompleteDisplay.call(this);\n\n                        /// 템플릿에 전달할 오브젝트 선언\n                        data.id = item.id;\n                        data.theme = item.theme;\n                        data.size = \"ax5autocomplete-option-group-\" + item.size;\n                        data.multiple = item.multiple;\n                        data.lang = item.lang;\n                        data.options = item.options;\n                        this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n\n                        focusWord.call(this, this.activeautocompleteQueueIndex, searchWord);\n                        alignAutocompleteOptionGroup.call(this);\n\n                        setTimeout((function () {\n                            alignAutocompleteOptionGroup.call(this);\n                        }).bind(this));\n\n\n                    }).bind(this));\n                },\n                focusWord = function (queIdx, searchWord) {\n                    if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                    var collect_options = [], i = -1, l = this.queue[queIdx].options.length - 1, n;\n                    if (searchWord != \"\") {\n                        while (l - i++) {\n                            n = this.queue[queIdx].options[i];\n\n                            if (('' + n.text).toLowerCase() == searchWord.toLowerCase()) {\n                                collect_options = [{'@findex': n['@findex'], optionsSort: 0}];\n                                break;\n                            } else {\n                                var sort = ('' + n.text).toLowerCase().search(searchWord.toLowerCase());\n                                if (sort > -1) {\n                                    collect_options.push({'@findex': n['@findex'], optionsSort: sort});\n                                    if (collect_options.length > 2) break;\n                                }\n                                sort = null;\n                            }\n                        }\n                        collect_options.sort(function (a, b) {\n                            return a.optionsSort - b.optionsSort;\n                        });\n                    }\n\n                    if (collect_options && collect_options.length > 0) {\n                        focusMove.call(this, queIdx, undefined, collect_options[0]['@findex']);\n                    } else {\n                        focusClear.call(this, queIdx);\n                    }\n                },\n                focusClear = function (queIdx) {\n                    if (this.activeautocompleteOptionGroup) {\n                        this.activeautocompleteOptionGroup\n                            .find('[data-option-focus-index]')\n                            .removeClass(\"hover\")\n                            .removeAttr(\"data-option-selected\");\n                    }\n\n                    this.queue[queIdx].optionFocusIndex = -1;\n                },\n                focusMove = function (queIdx, direction, findex) {\n                    var _focusIndex,\n                        _prevFocusIndex,\n                        focusOptionEl,\n                        optionGroupScrollContainer;\n                    var item = this.queue[queIdx];\n\n                    if (this.activeautocompleteOptionGroup && item.options && item.options.length > 0) {\n\n                        if (typeof findex !== \"undefined\") {\n                            _focusIndex = findex\n                        }\n                        else {\n                            _prevFocusIndex = (item.optionFocusIndex == -1) ? item.optionSelectedIndex || -1 : item.optionFocusIndex;\n                            if (_prevFocusIndex == -1) {\n                                _focusIndex = 0;\n                                //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n                            }\n                            else {\n                                _focusIndex = _prevFocusIndex + direction;\n                                if (_focusIndex < 0) _focusIndex = 0;\n                                else if (_focusIndex > item.optionItemLength - 1) _focusIndex = item.optionItemLength - 1;\n                            }\n                        }\n\n                        item.optionFocusIndex = _focusIndex;\n\n                        // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n                        if (item.options[_focusIndex] && item.options[_focusIndex].hide) { // 옵션이 없는 값이 선택된 경우\n                            if (typeof direction === \"undefined\") {\n                                return this;\n                            }\n                            else {\n                                var isStrop = false;\n                                while (item.options[_focusIndex].hide) {\n                                    _focusIndex = _focusIndex + direction;\n                                    if (_focusIndex < 0) {\n                                        _focusIndex = 0;\n                                        break;\n                                    }\n                                    else if (_focusIndex > item.optionItemLength - 1) {\n                                        _focusIndex = item.optionItemLength - 1;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n\n                        if (typeof _focusIndex !== \"undefined\") {\n                            this.activeautocompleteOptionGroup\n                                .find('[data-option-focus-index]')\n                                .removeClass(\"hover\");\n\n                            focusOptionEl = this.activeautocompleteOptionGroup\n                                .find('[data-option-focus-index=\"' + _focusIndex + '\"]')\n                                .addClass(\"hover\");\n\n                            optionGroupScrollContainer = this.activeautocompleteOptionGroup.find('[data-els=\"content\"]');\n\n                            if (focusOptionEl.get(0)) {\n                                let focusOptionElHeight = focusOptionEl.outerHeight(),\n                                    optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                                    optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                                    focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                                if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                                    optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                                }\n                                else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                                    optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                                }\n                                // optionGroup scroll check\n\n                                if (typeof direction !== \"undefined\") {\n                                    item.$displayLabelInput.val(item.options[_focusIndex].text);\n                                }\n                            }\n                        }\n                    }\n                },\n                getQueIdx = function (boundID) {\n                    if (boundID instanceof jQuery) {\n                        boundID = boundID.data(\"data-ax5autocomplete-id\");\n                    } else if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-ax5autocomplete-id\");\n                    }\n                    if (!U.isString(boundID)) {\n                        console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"getQueIdx\"));\n                        return;\n                    }\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                },\n                getSelected = function (_item, o, selected) {\n                    if (typeof selected === \"undefined\") {\n                        return (_item.multiple) ? !o : true;\n                    } else {\n                        return selected;\n                    }\n                },\n                clearSelected = function (queIdx) {\n                    this.queue[queIdx].options.forEach(function (n) {\n                        if (n.optgroup) {\n                            n.options.forEach(function (nn) {\n                                nn.selected = false;\n                            });\n                        }\n                        else {\n                            n.selected = false;\n                        }\n                    });\n\n                    this.queue[queIdx].selected = [];\n                    this.queue[queIdx].$select.html(AUTOCOMPLETE.tmpl.get.call(this, \"formSelectOptions\", {\n                        selected: this.queue[queIdx].selected\n                    }, this.queue[queIdx].columnKeys));\n                },\n                setSelected = (function () {\n                    var processor = {\n                        'selectedIndex': function (queIdx, value, selected, setValueType) {\n\n                        },\n                        'removeSelectedIndex': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx], addOptions = {};\n                            var newSelectedArray = [], optionIndex = 0;\n                            for (var i = 0; i < item.selected.length; i++) {\n                                if (item.selected[i]['@index'] != value.removeSelectedIndex.index) {\n                                    addOptions = {'@index': optionIndex, '@findex': optionIndex};\n                                    addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                    addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                    newSelectedArray.push(addOptions);\n                                    optionIndex++;\n                                }\n                            }\n                            item.selected = newSelectedArray;\n                        },\n                        'optionIndex': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx], addOptions = {};\n                            var optionIndex = item.selected.length;\n                            var pushOk = true;\n\n                            addOptions = {\n                                '@index': optionIndex, '@findex': optionIndex\n                            };\n                            addOptions[item.columnKeys.optionValue] = item.options[value.optionIndex.index][item.columnKeys.optionValue];\n                            addOptions[item.columnKeys.optionText] = item.options[value.optionIndex.index][item.columnKeys.optionText];\n\n                            for (var i = 0; i < item.selected.length; i++) {\n                                if (item.selected[i][item.columnKeys.optionValue] == addOptions[item.columnKeys.optionValue]) {\n                                    pushOk = false;\n                                }\n                            }\n                            if (pushOk) item.selected.push(addOptions);\n                        },\n                        'arr': function (queIdx, values, selected, setValueType) {\n                            values.forEach(function (value) {\n                                if (U.isString(value) || U.isNumber(value)) {\n                                    processor.text.call(self, queIdx, value, selected, \"justSetValue\");\n                                }\n                                else {\n                                    for (var key in processor) {\n                                        if (value[key]) {\n                                            processor[key].call(self, queIdx, value, selected, \"justSetValue\");\n                                            break;\n                                        }\n                                    }\n                                }\n                            });\n                        },\n                        'value': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx];\n                            var addOptions;\n                            var optionIndex = U.search(item.options, function () {\n                                return this[item.columnKeys.optionValue] == value.value[item.columnKeys.optionValue];\n                            });\n\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n                                if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n                                    var appendOk = true;\n                                    for (var i = 0; i < item.selected.length; i++) {\n                                        if (item.selected[i][cfg.columnKeys.optionValue] == item.options[optionIndex][cfg.columnKeys.optionValue]) {\n                                            appendOk = false;\n                                            break;\n                                        }\n                                    }\n                                    if (appendOk) {\n                                        addOptions = {};\n                                        addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n                                        addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n                                        item.selected.push(addOptions);\n                                    }\n                                }\n                                else {\n                                    var newSelectedArray = [];\n                                    for (var i = 0; i < item.selected.length; i++) {\n                                        if (item.selected[i][cfg.columnKeys.optionValue] == item.options[optionIndex][cfg.columnKeys.optionValue]) {\n\n                                        }\n                                        else {\n                                            addOptions = {};\n                                            addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                            addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                            newSelectedArray.push(addOptions);\n                                        }\n                                    }\n                                    item.selected = newSelectedArray;\n                                }\n\n                            }\n                            else {\n                                // 새로운 값 추가\n                                var appendOk = true;\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionValue] == value.value[cfg.columnKeys.optionValue]) {\n                                        appendOk = false;\n                                        break;\n                                    }\n                                }\n\n                                if (appendOk) {\n                                    addOptions = {};\n                                    addOptions[item.columnKeys.optionValue] = value.value[cfg.columnKeys.optionValue];\n                                    addOptions[item.columnKeys.optionText] = value.value[cfg.columnKeys.optionText];\n                                    item.selected.push(addOptions);\n                                }\n                            }\n                        },\n                        'text': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx];\n                            var addOptions;\n                            var optionIndex = U.search(item.options, function () {\n                                return this[item.columnKeys.optionText] == value;\n                            });\n\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n                                if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n                                    var appendOk = true;\n                                    for (var i = 0; i < item.selected.length; i++) {\n                                        if (item.selected[i][cfg.columnKeys.optionText] == item.options[optionIndex][cfg.columnKeys.optionText]) {\n                                            appendOk = false;\n                                            break;\n                                        }\n                                    }\n                                    if (appendOk) {\n                                        addOptions = {};\n                                        addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n                                        addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n                                        item.selected.push(addOptions);\n                                    }\n                                }\n                                else {\n                                    var newSelectedArray = [];\n                                    for (var i = 0; i < item.selected.length; i++) {\n                                        if (item.selected[i][cfg.columnKeys.optionText] == item.options[optionIndex][cfg.columnKeys.optionText]) {\n\n                                        }\n                                        else {\n                                            addOptions = {};\n                                            addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                            addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                            newSelectedArray.push(addOptions);\n                                        }\n                                    }\n                                    item.selected = newSelectedArray;\n                                }\n                            }\n                            else {\n                                // 새로운 값 추가\n                                var appendOk = true;\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionText] == value) {\n                                        appendOk = false;\n                                        break;\n                                    }\n                                }\n\n                                if (appendOk) {\n                                    addOptions = {};\n                                    addOptions[item.columnKeys.optionValue] = value;\n                                    addOptions[item.columnKeys.optionText] = value;\n                                    item.selected.push(addOptions);\n                                }\n                            }\n                        },\n                        'clear': function (queIdx) {\n                            clearSelected.call(this, queIdx);\n                            focusClear.call(this, queIdx);\n\n                            if (this.activeautocompleteOptionGroup) {\n                                this.activeautocompleteOptionGroup\n                                    .find('[data-option-index]')\n                                    .attr(\"data-option-Selected\", \"false\");\n                            }\n                            this.queue[queIdx].optionSelectedIndex = -1;\n                        }\n                    };\n                    return function (boundID, value, selected, _option) {\n\n                        var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                        if (queIdx === -1) {\n                            console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                            return;\n                        }\n\n                        if (typeof value == \"undefined\") {\n                            throw \"error not found value\";\n                        }\n                        else if (U.isArray(value)) {\n                            processor.clear.call(this, queIdx);\n                            processor.arr.call(this, queIdx, (this.queue[queIdx].multiple || value.length == 0) ? value : [value[value.length - 1]], selected);\n                        }\n                        else if (U.isString(value) || U.isNumber(value)) {\n                            if (typeof value !== \"undefined\" && value !== null && !this.queue[queIdx].multiple) {\n                                clearSelected.call(this, queIdx);\n                            }\n                            processor.text.call(this, queIdx, value, selected);\n                        }\n                        else {\n                            if (value === null) {\n                                processor.clear.call(this, queIdx);\n                            }\n                            else {\n                                if (!this.queue[queIdx].multiple) {\n                                    clearSelected.call(this, queIdx);\n                                }\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(this, queIdx, value, selected);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n\n                        syncLabel.call(this, queIdx);\n                        printLabel.call(this, queIdx);\n                        focusLabel.call(this, queIdx);\n                        alignAutocompleteOptionGroup.call(this);\n\n                        if (typeof value !== \"undefined\") {\n                            if (_option && !_option.noStateChange) {\n                                onStateChanged.call(this, this.queue[queIdx], {\n                                    self: this,\n                                    item: this.queue[queIdx],\n                                    state: \"changeValue\",\n                                    value: this.queue[queIdx].selected\n                                });\n                            }\n                        }\n\n                        boundID = null;\n                        return this;\n                    };\n                })();\n\n            /// private end\n\n            /**\n             * Preferences of autocomplete UI\n             * @method ax5autocomplete.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5autocomplete}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n                jQuery(window).bind(\"resize.ax5autocomplete-display-\" + this.instanceId, (function () {\n                    alignAutocompleteDisplay.call(this);\n                }).bind(this));\n            };\n\n            /**\n             * bind autocomplete\n             * @method ax5autocomplete.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @returns {ax5autocomplete}\n             */\n            this.bind = function (item) {\n                var bindAutocompleteTarget = (function () {\n                    var debouncedFocusWord = U.debounce(function (queIdx) {\n                        if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                        onSearch.call(self, queIdx, this.queue[queIdx].$displayLabelInput.val());\n                    }, 150);\n\n                    var blurLabel = function (queIdx) {\n                        clearLabel.call(this, queIdx);\n                    };\n\n                    var autocompleteEvent = {\n                        'click': function (queIdx, e) {\n                            var clickEl;\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-ax5autocomplete-remove\")) {\n                                    clickEl = \"optionItemRemove\";\n                                    return true;\n                                }\n                                else if (target.getAttribute(\"data-selected-clear\")) {\n                                    clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                if (clickEl === \"optionItemRemove\") {\n                                    var removeIndex = target.getAttribute(\"data-ax5autocomplete-remove-index\");\n                                    this.queue[queIdx].selected.splice(removeIndex, 1);\n                                    syncLabel.call(this, queIdx);\n                                    printLabel.call(this, queIdx);\n                                    focusLabel.call(this, queIdx);\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                    return this;\n                                } else if (clickEl === \"clear\") {\n                                    setSelected.call(this, queIdx, {clear: true});\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                }\n                            }\n                            else {\n                                if (self.activeautocompleteQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                }\n                                else {\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyUp': function (queIdx, e) {\n                            /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n                            if (e.which == ax5.info.eventKeys.ESC && self.activeautocompleteQueueIndex === -1) { // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n                                U.stopEvent(e);\n                                return this;\n                            }\n                            if (e.which == ax5.info.eventKeys.TAB) {\n                                // nothing\n\n                                this.close();\n                                return this;\n                            }\n                            if (self.activeautocompleteQueueIndex != queIdx) { // 닫힌 상태 인경우\n                                self.open(queIdx); // open and align\n                            }\n                            if (ctrlKeys[e.which]) {\n                                U.stopEvent(e);\n                            }\n                            else {\n                                // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n                                if (e.which == ax5.info.eventKeys.BACKSPACE && this.queue[queIdx].$displayLabelInput.val() == \"\") {\n                                    // 마지막 아이템을 제거.\n                                    this.queue[queIdx].selected.pop();\n                                    syncLabel.call(this, queIdx);\n                                    printLabel.call(this, queIdx);\n                                    focusLabel.call(this, queIdx);\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                } else {\n                                    debouncedFocusWord.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyDown': function (queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                clearLabel.call(this, queIdx);\n                                this.close();\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.RETURN) {\n                                var inputValue = this.queue[queIdx].$displayLabelInput.val();\n                                if(item.optionFocusIndex > -1) {\n                                    setSelected.call(this, item.id, {\n                                        optionIndex: {\n                                            index: item.optionFocusIndex\n                                        }\n                                    }, undefined, \"optionItemClick\");\n                                }else if(inputValue != \"\"){\n                                    setSelected.call(this, queIdx, inputValue, true);\n                                }\n                                clearLabel.call(this, queIdx);\n                                alignAutocompleteDisplay.call(this);\n                                this.close();\n\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        'focus': function (queIdx, e) {\n                            // console.log(e);\n\n                        },\n                        'blur': function (queIdx, e) {\n                            blurLabel.call(this, queIdx);\n                            U.stopEvent(e);\n                        },\n                        'selectChange': function (queIdx, e) {\n                            setSelected.call(this, queIdx, {value: this.queue[queIdx].$select.val()}, true);\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = (function () {\n                                return (item.size) ? \"input-\" + item.size : \"\";\n                            })();\n\n                            item.$display = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"autocompleteDisplay\", data, item.columnKeys));\n                            item.$displayTable = item.$display.find('[data-els=\"display-table\"]');\n                            item.$displayLabel = item.$display.find('[data-ax5autocomplete-display=\"label\"]');\n                            item.$displayLabelInput = item.$display.find('[data-ax5autocomplete-display=\"input\"]');\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                item.$select\n                                    .attr(\"tabindex\", \"-1\")\n                                    .attr(\"class\", \"form-control \" + data.formSize);\n\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                item.$select.attr(\"multiple\", \"multiple\");\n                            }\n                            else {\n                                item.$select = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"formSelect\", data, item.columnKeys));\n                                item.$target.append(item.$select);\n                            }\n\n                            item.$target.append(item.$display);\n\n                        }\n                        else {\n                            printLabel.call(this, queIdx);\n                        }\n\n                        alignAutocompleteDisplay.call(this);\n\n                        item.$display\n                            .unbind('click.ax5autocomplete')\n                            .bind('click.ax5autocomplete', autocompleteEvent.click.bind(this, queIdx));\n\n                        // autocomplete 태그에 대한 이벤트 감시\n\n                        item.$displayLabelInput\n                            .off(\"focus.ax5autocomplete\")\n                            .on(\"focus.ax5autocomplete\", autocompleteEvent.focus.bind(this, queIdx))\n                            .off(\"blur.ax5autocomplete\")\n                            .on(\"blur.ax5autocomplete\", autocompleteEvent.blur.bind(this, queIdx))\n                            .off(\"keydown.ax5autocomplete\")\n                            .on(\"keydown.ax5autocomplete\", autocompleteEvent.keyUp.bind(this, queIdx))\n                            .off(\"keyup.ax5autocomplete\")\n                            .on(\"keyup.ax5autocomplete\", autocompleteEvent.keyDown.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n\n                        item.$select\n                            .unbind('change.ax5autocomplete')\n                            .bind('change.ax5autocomplete', autocompleteEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                })();\n\n                var\n                    autocompleteConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, autocompleteConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5autocomplete-id\");\n                if (!item.id) {\n                    item.id = 'ax5autocomplete-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5autocomplete-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5autocomplete\");\n\n                item.options = [];\n                item.selected = [];\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5autocomplete-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindAutocompleteTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindAutocompleteTarget.call(this, queIdx);\n                }\n\n                autocompleteConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of autocomplete\n             * @method ax5autocomplete.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5autocomplete}\n             */\n            this.open = (function () {\n\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open autocomplete from the outside\n                     */\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {}, focusTop, selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activeautocompleteOptionGroup) {\n                        if (this.activeautocompleteQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout((function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }).bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5autocomplete-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-autocomplete-option-group-opened\", \"true\");\n\n                    data.waitOptions = true;\n                    data.options = [];\n\n                    this.activeautocompleteOptionGroup = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"optionGroup\", data, item.columnKeys));\n                    this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n                    this.activeautocompleteQueueIndex = queIdx;\n\n                    alignAutocompleteOptionGroup.call(this, \"append\"); // alignAutocompleteOptionGroup 에서 body append\n                    jQuery(window).bind(\"resize.ax5autocomplete-\" + this.instanceId, (function () {\n                        alignAutocompleteOptionGroup.call(this);\n                    }).bind(this));\n\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activeautocompleteOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activeautocompleteOptionGroup.height() / 3;\n                            this.activeautocompleteOptionGroup.find('[data-els=\"content\"]')\n                                .stop().animate({scrollTop: focusTop}, item.animateTime, 'swing', function () {\n                            });\n                        }\n                    }\n\n                    jQuery(window).bind(\"click.ax5autocomplete-\" + this.instanceId, (function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }).bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5autocomplete.setValue\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _value\n             * @return {ax5autocomplete}\n             * @example\n             * ```js\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), {value:\"test\", text:\"test\"});\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), [{value:\"test1\", text:\"test1\"}, {value:\"test2\", text:\"test2\"}]);\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), null);\n             * ```\n             */\n            this.setValue = function (_boundID, _value) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n\n                clearSelected.call(this, queIdx);\n\n                if (U.isArray(_value)) {\n                    var _values = U.map(_value, function () {\n                        return {value: this};\n                    });\n                    setSelected.call(this, queIdx, _values, true, {noStateChange: true});\n                }\n                else if (U.isObject(_value)) {\n                    setSelected.call(this, queIdx, {value: _value}, true, {noStateChange: true});\n                } else {\n                    printLabel.call(this, queIdx);\n                }\n\n                blurLabel.call(this, queIdx);\n                alignAutocompleteDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.setText\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _text\n             * @returns {ax5autocomplete}\n             * @example\n             * ```js\n             * myAutocomplete.setText($('[data-ax5autocomplete=\"autocomplete1\"]'), \"string\");\n             * myAutocomplete.setText($('[data-ax5autocomplete=\"autocomplete1\"]'), [\"substring\", \"search\"]);\n             * ```\n             */\n            this.setText = function (_boundID, _text) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n                this.queue[queIdx].selected = [];\n                clearSelected.call(this, queIdx);\n                setSelected.call(this, queIdx, _text, true, {noStateChange: true});\n                blurLabel.call(this, queIdx);\n                alignAutocompleteDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.getSelectedOption\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {Array}\n             */\n            this.getSelectedOption = function (_boundID) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n                return U.deepCopy(this.queue[queIdx].selected);\n            };\n\n            /**\n             * @method ax5autocomplete.close\n             * @returns {ax5autocomplete}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activeautocompleteOptionGroup) return this;\n\n                item = this.queue[this.activeautocompleteQueueIndex];\n                item.optionFocusIndex = -1;\n                item.$display.removeAttr(\"data-autocomplete-option-group-opened\").trigger(\"focus\");\n\n                this.activeautocompleteOptionGroup.addClass(\"destroy\");\n\n                jQuery(window)\n                    .unbind(\"resize.ax5autocomplete-\" + this.instanceId)\n                    .unbind(\"click.ax5autocomplete-\" + this.instanceId)\n                    .unbind(\"keyup.ax5autocomplete-\" + this.instanceId);\n\n                this.closeTimer = setTimeout((function () {\n                    if (this.activeautocompleteOptionGroup) this.activeautocompleteOptionGroup.remove();\n                    this.activeautocompleteOptionGroup = null;\n                    this.activeautocompleteQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"close\"\n                    });\n\n                }).bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.blur\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.blur = function (_boundID) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n\n                blurLabel.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.enable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.enable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disable = false;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.removeAttr(\"disabled\");\n                        this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.removeAttr(\"disabled\");\n\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"enable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.disable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.disable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disable = true;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                        this.queue[queIdx].$displayLabelInput.attr(\"disabled\", \"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"disable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.align\n             */\n            this.align = function () {\n                alignAutocompleteDisplay.call(this);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5autocomplete;\n    })());\n\n    AUTOCOMPLETE = ax5.ui.autocomplete;\n})();\n\n/**\n * autocomplete jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5autocomplete\n * @param {String} methodName\n * @param [arguments]\n * @param [arguments]\n * @example\n * ```html\n * <div data-ax5autocomplete=\"ax1\" data-ax5autocomplete-config='{\n *  multiple: true,\n *  editable: true,\n *  size: \"\",\n *  theme:\"\"\n *  }'></div>\n * <script>\n * jQuery('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete();\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"getSelectedOption\");\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"setValue\", {value:\"test\", text:\"test\"});\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"enable\");\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"disable\");\n * </script>\n * ```\n */\nax5.ui.autocomplete_instance = new ax5.ui.autocomplete();\njQuery.fn.ax5autocomplete = (function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.autocomplete_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.autocomplete_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.autocomplete_instance.setValue(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"setText\":\n                    return ax5.ui.autocomplete_instance.setText(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"getSelectedOption\":\n                    return ax5.ui.autocomplete_instance.getSelectedOption(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.autocomplete_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.autocomplete_instance.disable(this);\n                    break;\n                case \"blur\":\n                    return ax5.ui.autocomplete_instance.blur(this);\n                default:\n                    return this;\n            }\n        }\n        else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.autocomplete_instance.bind(config);\n            });\n        }\n        return this;\n    }\n})();\n\n\n// todo : editable 지원.\n// 아이템 박스 안에서 제거 할때 디스플레이 정렬","// ax5.ui.autocomplete.tmpl\n(function () {\n    var AUTOCOMPLETE = ax5.ui.autocomplete;\n    var U = ax5.util;\n\n    var optionGroup = function (columnKeys) {\n        return `\n<div class=\"ax5autocomplete-option-group {{theme}} {{size}}\" data-ax5autocomplete-option-group=\"{{id}}\">\n    <div class=\"ax-autocomplete-body\">\n        <div class=\"ax-autocomplete-option-group-content\" data-els=\"content\"></div>\n    </div>\n    <div class=\"ax-autocomplete-arrow\"></div> \n</div>\n`;\n    };\n\n    var autocompleteDisplay = function (columnKeys) {\n        return ` \n<input tabindex=\"-1\" type=\"text\" data-input-dummy=\"\" style=\"display: none;\" />\n<div class=\"form-control {{formSize}} ax5autocomplete-display {{theme}}\" \ndata-ax5autocomplete-display=\"{{id}}\" data-ax5autocomplete-instance=\"{{instanceId}}\">\n    <div class=\"ax5autocomplete-display-table\" data-els=\"display-table\">\n        <div data-ax5autocomplete-display=\"label-holder\"> \n        <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}\n        data-ax5autocomplete-display=\"label\"\n        spellcheck=\"false\"><input type=\"text\"data-ax5autocomplete-display=\"input\" style=\"border:0px none;\" /></a>\n        </div>\n        <div data-ax5autocomplete-display=\"addon\"> \n            {{#multiple}}{{#reset}}\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\n            {{/reset}}{{/multiple}}\n        </div>\n    </div>\n</a>\n`;\n    };\n\n    var formSelect = function (columnKeys) {\n        return `\n<select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" multiple=\"multiple\"></select>\n`;\n    };\n\n    var formSelectOptions = function (columnKeys) {\n        return `\n{{#selected}}\n<option value=\"{{${columnKeys.optionValue}}}\" selected=\"true\">{{${columnKeys.optionText}}}</option>\n{{/selected}}\n`;\n    };\n\n\n    var options = function (columnKeys) {\n        return `\n{{#waitOptions}}\n    <div class=\"ax-autocomplete-option-item\">\n            <div class=\"ax-autocomplete-option-item-holder\">\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\n                    {{{lang.loading}}}\n                </span>\n            </div>\n        </div>\n{{/waitOptions}}\n{{^waitOptions}}\n    {{#options}}\n        {{^hide}}\n        <div class=\"ax-autocomplete-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{${columnKeys.optionValue}}}\" {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n            <div class=\"ax-autocomplete-option-item-holder\">\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">{{${columnKeys.optionText}}}</span>\n            </div>\n        </div>\n        {{/hide}}\n    {{/options}}\n    {{^options}}\n        <div class=\"ax-autocomplete-option-item\">\n            <div class=\"ax-autocomplete-option-item-holder\">\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\n                    {{{lang.noOptions}}}\n                </span>\n            </div>\n        </div>\n    {{/options}}\n{{/waitOptions}}\n`;\n    };\n\n    var label = function (columnKeys) {\n        return `{{#selected}}<div tabindex=\"-1\" data-ax5autocomplete-selected-label=\"{{@i}}\" data-ax5autocomplete-selected-text=\"{{text}}\"><div data-ax5autocomplete-remove=\"true\" data-ax5autocomplete-remove-index=\"{{@i}}\">{{{removeIcon}}}</div><span>{{text}}</span></div>{{/selected}}`;\n    };\n\n    AUTOCOMPLETE.tmpl = {\n        \"autocompleteDisplay\": autocompleteDisplay,\n        \"formSelect\": formSelect,\n        \"formSelectOptions\": formSelectOptions,\n        \"optionGroup\": optionGroup,\n        \"options\": options,\n        \"label\": label,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(AUTOCOMPLETE.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();"]}